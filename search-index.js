var N = null;var searchIndex = {};
searchIndex["Order_and_Chaos"]={"doc":"","items":[[0,"board","Order_and_Chaos","",N,N],[3,"Move","Order_and_Chaos::board","A move consists of a piece and a location in the board.",N,N],[3,"Game","","A game of order and chaos",N,N],[4,"GameStatus","","A game of Order and Chaos may be in progress, or won by…",N,N],[13,"InProgress","","",0,N],[13,"OrderWins","","",0,N],[13,"ChaosWins","","",0,N],[4,"MoveType","","A move in Order and Chaos is either placing an X piece or…",N,N],[13,"X","","",1,N],[13,"O","","",1,N],[4,"BoardDirection","","Defines directions for checking a win state.",N,N],[13,"Row","","",2,N],[13,"Column","","",2,N],[13,"Diagonal","","",2,N],[13,"AntiDiagonal","","",2,N],[11,"new","","Creates a new move with the specified MoveType and location.",3,[[["movetype"],["usize"],["usize"]],["self"]]],[11,"new","","Create a new game",4,[[],["self"]]],[11,"last_move","","Some => Get the coordinates of the last move made. None =>…",4,[[["self"]],["option"]]],[11,"index","","Query the board for the Piece at a given location.",4,[[["self"],["usize"],["usize"]],["option",["movetype"]]]],[11,"size","","Get the size of the board.",4,[[["self"]],["usize"]]],[11,"count_direction","","Counts the number of like pieces in a given direction on…",4,[[["self"],["boarddirection"],["usize"],["usize"]],["usize"]]],[11,"open_indicies","","Get a list of the open spaces in the game.",4,N],[11,"get_status","","Query the status of the game. Has a player won or is the…",4,[[["self"]],["gamestatus"]]],[11,"make_move","","Places a piece with a location specified by the move into…",4,[[["self"],["move"]],["option",["game"]]]],[0,"strategy","Order_and_Chaos","",N,N],[4,"Player","Order_and_Chaos::strategy","A Player is either Order or Chaos",N,N],[13,"Order","","",5,N],[13,"Chaos","","",5,N],[5,"ai_move","","Specified computer player makes a move in the current game.",N,[[["game"],["player"]],["game"]]],[11,"display","","Print out the current player type",5,[[["self"]],["str"]]],[11,"other_player","","Get the type of the other player",5,[[["self"]],["self"]]],[11,"into","Order_and_Chaos::board","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","Order_and_Chaos::strategy","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"partial_cmp","","",5,[[["self"],["player"]],["option",["ordering"]]]],[11,"eq","Order_and_Chaos::board","",0,[[["self"],["gamestatus"]],["bool"]]],[11,"eq","","",1,[[["self"],["movetype"]],["bool"]]],[11,"eq","","",2,[[["self"],["boarddirection"]],["bool"]]],[11,"eq","Order_and_Chaos::strategy","",5,[[["self"],["player"]],["bool"]]],[11,"cmp","","",5,[[["self"],["player"]],["ordering"]]],[11,"clone","Order_and_Chaos::board","",1,[[["self"]],["movetype"]]],[11,"clone","","",3,[[["self"]],["move"]]],[11,"clone","","",2,[[["self"]],["boarddirection"]]],[11,"clone","","",4,[[["self"]],["game"]]],[11,"clone","Order_and_Chaos::strategy","",5,[[["self"]],["player"]]],[11,"fmt","Order_and_Chaos::board","Command line representation of the game. Useful for…",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","Order_and_Chaos::strategy","",5,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"GameStatus"],[4,"MoveType"],[4,"BoardDirection"],[3,"Move"],[3,"Game"],[4,"Player"]]};
searchIndex["adler32"]={"doc":"A minimal implementation of Adler32 for Rust.","items":[[3,"RollingAdler32","adler32","A rolling version of the Adler32 hash, which can 'forget'…",N,N],[5,"adler32","","Consume a Read object and returns the Adler32 hash.",N,[[["r"]],["result",["u32"]]]],[11,"new","","Creates an empty Adler32 context (with hash 1).",0,[[],["rollingadler32"]]],[11,"from_value","","Creates an Adler32 context with the given initial value.",0,[[["u32"]],["rollingadler32"]]],[11,"from_buffer","","Convenience function initializing a context from the hash…",0,N],[11,"hash","","Returns the current hash.",0,[[["self"]],["u32"]]],[11,"remove","","Removes the given `byte` that was fed to the algorithm…",0,[[["self"],["usize"],["u8"]]]],[11,"update","","Feeds a new `byte` to the algorithm to update the hash.",0,[[["self"],["u8"]]]],[11,"update_buffer","","Feeds a vector of bytes to the algorithm to update the hash.",0,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[3,"RollingAdler32"]]};
searchIndex["approx"]={"doc":"A crate that provides facilities for testing the…","items":[[3,"AbsDiff","approx","The requisite parameters for testing for approximate…",N,N],[12,"epsilon","","The tolerance to use when testing values that are close…",0,N],[3,"Relative","","The requisite parameters for testing for approximate…",N,N],[12,"epsilon","","The tolerance to use when testing values that are close…",1,N],[12,"max_relative","","The relative tolerance for testing values that are…",1,N],[3,"Ulps","","The requisite parameters for testing for approximate…",N,N],[12,"epsilon","","The tolerance to use when testing values that are close…",2,N],[12,"max_ulps","","The ULPs to tolerate when testing values that are far-apart.",2,N],[8,"AbsDiffEq","","Equality that is defined using the absolute difference of…",N,N],[16,"Epsilon","","Used for specifying relative comparisons.",3,N],[10,"default_epsilon","","The default tolerance to use when testing values that are…",3,N],[10,"abs_diff_eq","","A test for equality that uses the absolute difference to…",3,N],[11,"abs_diff_ne","","The inverse of `ApproxEq::abs_diff_eq`.",3,N],[8,"RelativeEq","","Equality comparisons between two numbers using both the…",N,N],[10,"default_max_relative","","The default relative tolerance for testing values that are…",4,N],[10,"relative_eq","","A test for equality that uses a relative comparison if the…",4,N],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",4,N],[8,"UlpsEq","","Equality comparisons between two numbers using both the…",N,N],[10,"default_max_ulps","","The default ULPs to tolerate when testing values that are…",5,[[],["u32"]]],[10,"ulps_eq","","A test for equality that uses units in the last place…",5,N],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",5,N],[11,"epsilon","","Replace the epsilon value with the one specified.",0,N],[11,"eq","","Peform the equality comparison",0,[[["self"],["a"],["b"]],["bool"]]],[11,"ne","","Peform the inequality comparison",0,[[["self"],["a"],["b"]],["bool"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",1,N],[11,"max_relative","","Replace the maximum relative value with the one specified.",1,N],[11,"eq","","Peform the equality comparison",1,[[["self"],["a"],["b"]],["bool"]]],[11,"ne","","Peform the inequality comparison",1,[[["self"],["a"],["b"]],["bool"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",2,N],[11,"max_ulps","","Replace the max ulps value with the one specified.",2,[[["self"],["u32"]],["ulps"]]],[11,"eq","","Peform the equality comparison",2,[[["self"],["a"],["b"]],["bool"]]],[11,"ne","","Peform the inequality comparison",2,[[["self"],["a"],["b"]],["bool"]]],[14,"abs_diff_eq","","Approximate equality of using the absolute difference.",N,N],[14,"abs_diff_ne","","Approximate inequality of using the absolute difference.",N,N],[14,"relative_eq","","Approximate equality using both the absolute difference…",N,N],[14,"relative_ne","","Approximate inequality using both the absolute difference…",N,N],[14,"ulps_eq","","Approximate equality using both the absolute difference…",N,N],[14,"ulps_ne","","Approximate inequality using both the absolute difference…",N,N],[14,"assert_abs_diff_eq","","An assertion that delegates to `abs_diff_eq!`, and panics…",N,N],[14,"assert_abs_diff_ne","","An assertion that delegates to `abs_diff_ne!`, and panics…",N,N],[14,"assert_relative_eq","","An assertion that delegates to `relative_eq!`, and panics…",N,N],[14,"assert_relative_ne","","An assertion that delegates to `relative_ne!`, and panics…",N,N],[14,"assert_ulps_eq","","An assertion that delegates to `ulps_eq!`, and panics with…",N,N],[14,"assert_ulps_ne","","An assertion that delegates to `ulps_ne!`, and panics with…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["absdiff"]]],[11,"default","","",1,[[],["relative"]]],[11,"default","","",2,[[],["ulps"]]],[11,"abs_diff_ne","","The inverse of `ApproxEq::abs_diff_eq`.",3,N],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",4,N],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",5,N]],"paths":[[3,"AbsDiff"],[3,"Relative"],[3,"Ulps"],[8,"AbsDiffEq"],[8,"RelativeEq"],[8,"UlpsEq"]]};
searchIndex["arrayvec"]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","items":[[3,"ArrayString","arrayvec","A string with a fixed capacity.",N,N],[3,"CapacityError","","Error value indicating insufficient capacity",N,N],[3,"ArrayVec","","A vector with a fixed capacity.",N,N],[3,"IntoIter","","By-value iterator for `ArrayVec`.",N,N],[3,"Drain","","A draining iterator for `ArrayVec`.",N,N],[11,"new","","Create a new empty `ArrayString`.",0,[[],["arraystring"]]],[11,"from","","Create a new `ArrayString` from a `str`.",0,[[["str"]],["result",["capacityerror"]]]],[11,"from_byte_string","","Create a new `ArrayString` from a byte string literal.",0,[[["a"]],["result",["utf8error"]]]],[11,"capacity","","Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push","","Adds the given char to the end of the string.",0,[[["self"],["char"]]]],[11,"try_push","","Adds the given char to the end of the string.",0,[[["self"],["char"]],["result",["capacityerror"]]]],[11,"push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]]]],[11,"try_push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]],["result",["capacityerror"]]]],[11,"pop","","Removes the last character from the string and returns it.",0,[[["self"]],["option",["char"]]]],[11,"truncate","","Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove","","Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],["usize"]],["char"]]],[11,"clear","","Make the string empty.",0,[[["self"]]]],[11,"set_len","","Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str","","Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new","","Create a new `CapacityError` from `element`.",1,[[["t"]],["capacityerror"]]],[11,"element","","Extract the overflowing element",1,[[["self"]],["t"]]],[11,"simplify","","Convert into a `CapacityError` that does not carry an…",1,[[["self"]],["capacityerror"]]],[8,"Array","","Trait for fixed size arrays.",N,N],[16,"Item","","The array’s element type",2,N],[8,"RangeArgument","","`RangeArgument` is implemented by Rust's built-in range…",N,N],[11,"start","","Start index (inclusive)",3,[[["self"]],["option",["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],["option",["usize"]]]],[11,"new","","Create a new empty `ArrayVec`.",4,[[],["arrayvec"]]],[11,"len","","Return the number of elements in the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"capacity","","Return the capacity of the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push","","Push `element` to the end of the vector.",4,N],[11,"try_push","","Push `element` to the end of the vector.",4,N],[11,"push_unchecked","","Push `element` to the end of the vector without checking…",4,N],[11,"insert","","Insert `element` at position `index`.",4,N],[11,"try_insert","","Insert `element` at position `index`.",4,N],[11,"pop","","Remove the last element in the vector and return it.",4,[[["self"]],["option"]]],[11,"swap_remove","","Remove the element at `index` and swap the last element…",4,N],[11,"swap_pop","","Remove the element at `index` and swap the last element…",4,[[["self"],["usize"]],["option"]]],[11,"remove","","Remove the element at `index` and shift down the following…",4,N],[11,"pop_at","","Remove the element at `index` and shift down the following…",4,[[["self"],["usize"]],["option"]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and…",4,[[["self"],["usize"]]]],[11,"clear","","Remove all elements in the vector.",4,[[["self"]]]],[11,"retain","","Retains only the elements specified by the predicate.",4,[[["self"],["f"]]]],[11,"set_len","","Set the vector’s length without dropping or moving out…",4,[[["self"],["usize"]]]],[11,"drain","","Create a draining iterator that removes the specified…",4,[[["self"],["r"]],["drain"]]],[11,"into_inner","","Return the inner fixed size array, if it is full to its…",4,[[["self"]],["result"]]],[11,"dispose","","Dispose of `self` without the overwriting that is needed…",4,[[["self"]]]],[11,"as_slice","","Return a slice containing all elements of the vector.",4,N],[11,"as_mut_slice","","Return a mutable slice containing all elements of the…",4,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]],["str"]]],[11,"deref","","",4,N],[11,"from","","",4,[[["a"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"eq","","",4,[[["self"],["self"]],["bool"]]],[11,"eq","","",4,N],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["capacityerror"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["arrayvec"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["self"]],["bool"]]],[11,"le","","",0,[[["self"],["self"]],["bool"]]],[11,"gt","","",0,[[["self"],["self"]],["bool"]]],[11,"ge","","",0,[[["self"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["str"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["str"]],["bool"]]],[11,"le","","",0,[[["self"],["str"]],["bool"]]],[11,"gt","","",0,[[["self"],["str"]],["bool"]]],[11,"ge","","",0,[[["self"],["str"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["capacityerror"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"le","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"gt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ge","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["arrayvec"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["self"]],["bool"]]],[11,"le","","",4,[[["self"],["self"]],["bool"]]],[11,"ge","","",4,[[["self"],["self"]],["bool"]]],[11,"gt","","",4,[[["self"],["self"]],["bool"]]],[11,"deref_mut","","",0,[[["self"]],["str"]]],[11,"deref_mut","","",4,N],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"into_iter","","",4,[[["self"]],["intoiter"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"from_iter","","",4,[[["t"]],["self"]]],[11,"extend","","",4,[[["self"],["t"]]]],[11,"write_char","","",0,[[["self"],["char"]],["result"]]],[11,"write_str","","",0,[[["self"],["str"]],["result"]]],[11,"clone","","",0,[[["self"]],["arraystring"]]],[11,"clone_from","","",0,[[["self"],["self"]]]],[11,"clone","","",1,[[["self"]],["capacityerror"]]],[11,"clone","","",5,[[["self"]],["intoiter"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone_from","","",4,[[["self"],["self"]]]],[11,"as_mut","","",4,N],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",4,N],[11,"default","","Return an empty `ArrayString`",0,[[],["arraystring"]]],[11,"default","","Return an empty array",4,[[],["arrayvec"]]],[11,"borrow","","",0,[[["self"]],["str"]]],[11,"borrow","","",4,N],[11,"borrow_mut","","",4,N],[11,"start","","Start index (inclusive)",3,[[["self"]],["option",["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],["option",["usize"]]]]],"paths":[[3,"ArrayString"],[3,"CapacityError"],[8,"Array"],[8,"RangeArgument"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["backtrace"]={"doc":"A library for acquiring a backtrace at runtime","items":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to…",N,N],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",N,N],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic…",N,N],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",N,N],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",N,N],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",N,N],[4,"BytesOrWideString","","A platform independent representation of a string. When…",N,N],[13,"Bytes","","A slice, typically provided on Unix platforms.",0,N],[13,"Wide","","Wide strings typically from Windows.",0,N],[5,"trace_unsynchronized","","Same as `trace`, only unsafe as it's unsynchronized.",N,[[["f"]]]],[5,"resolve_unsynchronized","","Same as `resolve`, only unsafe as it's unsynchronized.",N,N],[5,"resolve_frame_unsynchronized","","Same as `resolve_frame`, only unsafe as it's unsynchronized.",N,[[["frame"],["f"]]]],[5,"trace","","Inspects the current call-stack, passing all active frames…",N,[[["f"]]]],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the…",N,N],[5,"resolve_frame","","Resolve a previously capture frame to a symbol, passing…",N,[[["frame"],["f"]]]],[11,"ip","","Returns the current instruction pointer of this frame.",1,N],[11,"symbol_address","","Returns the starting symbol address of the frame of this…",1,N],[11,"name","","Returns the name of this function.",2,[[["self"]],["option",["symbolname"]]]],[11,"addr","","Returns the starting address of this function.",2,[[["self"]],["option"]]],[11,"filename_raw","","Returns the raw filename as a slice. This is mainly useful…",2,[[["self"]],["option",["bytesorwidestring"]]]],[11,"lineno","","Returns the line number for where this symbol is currently…",2,[[["self"]],["option",["u32"]]]],[11,"filename","","Returns the file name where this function was defined.",2,[[["self"]],["option",["path"]]]],[11,"new","","Creates a new symbol name from the raw underlying bytes.",3,N],[11,"as_str","","Returns the raw (mangled) symbol name as a `str` if the…",3,[[["self"]],["option",["str"]]]],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",3,N],[11,"to_str_lossy","","Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[["self"]],["cow",["str"]]]],[11,"into_path_buf","","Provides a `Path` representation of `BytesOrWideString`.",0,[[["self"]],["pathbuf"]]],[11,"new","","Captures a backtrace at the callsite of this function,…",4,[[],["backtrace"]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any…",4,[[],["backtrace"]]],[11,"frames","","Returns the frames from when this backtrace was captured.",4,N],[11,"resolve","","If this backtrace was created from `new_unresolved` then…",4,[[["self"]]]],[11,"ip","","Same as `Frame::ip`",5,N],[11,"symbol_address","","Same as `Frame::symbol_address`",5,N],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",5,N],[11,"name","","Same as `Symbol::name`",6,[[["self"]],["option",["symbolname"]]]],[11,"addr","","Same as `Symbol::addr`",6,[[["self"]],["option"]]],[11,"filename","","Same as `Symbol::filename`",6,[[["self"]],["option",["path"]]]],[11,"lineno","","Same as `Symbol::lineno`",6,[[["self"]],["option",["u32"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",4,[[["vec",["backtraceframe"]]],["self"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["frame"]]],[11,"clone","","",4,[[["self"]],["backtrace"]]],[11,"clone","","",5,[[["self"]],["backtraceframe"]]],[11,"clone","","",6,[[["self"]],["backtracesymbol"]]],[11,"default","","",4,[[],["backtrace"]]],[11,"into","","",4,[[["self"]],["vec",["backtraceframe"]]]]],"paths":[[4,"BytesOrWideString"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["backtrace_sys"]={"doc":"","items":[[4,"backtrace_state","backtrace_sys","",N,N],[5,"backtrace_create_state","","",N,N],[5,"backtrace_syminfo","","",N,N],[5,"backtrace_pcinfo","","",N,N],[6,"backtrace_syminfo_callback","","",N,N],[6,"backtrace_full_callback","","",N,N],[6,"backtrace_error_callback","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[4,"backtrace_state"]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of…","items":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"paths":[]};
searchIndex["block"]={"doc":"A Rust interface for Objective-C blocks.","items":[[3,"Block","block","An Objective-C block that takes arguments of `A` when…",N,N],[3,"RcBlock","","A reference-counted Objective-C block.",N,N],[3,"ConcreteBlock","","An Objective-C block whose size is known at compile time…",N,N],[8,"BlockArguments","","Types that may be used as the arguments to an Objective-C…",N,N],[10,"call_block","","Calls the given `Block` with self as the arguments.",0,N],[8,"IntoConcreteBlock","","Types that may be converted into a `ConcreteBlock`.",N,N],[16,"Ret","","The return type of the resulting `ConcreteBlock`.",1,N],[10,"into_concrete_block","","Consumes self to create a `ConcreteBlock`.",1,[[["self"]],["concreteblock"]]],[11,"call","","Call self with the given arguments.",2,[[["self"],["a"]],["r"]]],[11,"new","","Construct an `RcBlock` for the given block without copying…",3,N],[11,"copy","","Constructs an `RcBlock` by copying the given block.",3,N],[11,"new","","Constructs a `ConcreteBlock` with the given closure. When…",4,[[["f"]],["self"]]],[11,"copy","","Copy self onto the heap as an `RcBlock`.",4,[[["self"]],["rcblock"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"clone","","",3,[[["self"]],["rcblock"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"drop","","",3,[[["self"]]]],[11,"deref","","",3,[[["self"]],["block"]]],[11,"deref","","",4,[[["self"]],["block"]]],[11,"deref_mut","","",4,[[["self"]],["block"]]]],"paths":[[8,"BlockArguments"],[8,"IntoConcreteBlock"],[3,"Block"],[3,"RcBlock"],[3,"ConcreteBlock"]]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and…","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[6,"BE","","A type alias for [`BigEndian`].",N,N],[6,"LE","","A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian","","Defines network byte order serialization.",N,N],[6,"NativeEndian","","Defines system native-endian serialization.",N,N],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For…",N,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],["result",["u128"]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],["result",["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],["result",["u128"]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,N],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,N],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For…",N,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u128"],["usize"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",N,N],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,N],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,N],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,N],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,N],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,N],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",2,N],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,N],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",2,N],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,N],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,N],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,N],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,N],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,N],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",2,N],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,N],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,N],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,N],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,N],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,N],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,N],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,N],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",2,N],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,N],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",2,N],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,N],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,N],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,N],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,N],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,N],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,N],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",2,N],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,N],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,N],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,N],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,N],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",2,N],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,N],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,N],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,N],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",2,N],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"read_f32_into_unchecked","","DEPRECATED.",2,N],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"read_f64_into_unchecked","","DEPRECATED.",2,N],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,N],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",2,N],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,N],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,N],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,N],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",2,N],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,N],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,N],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,N],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,N],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",2,N],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,N],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,N],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,N],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",2,N],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,N],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,N],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u16","","",3,N],[11,"read_u32","","",3,N],[11,"read_u64","","",3,N],[11,"read_u128","","",3,N],[11,"read_uint","","",3,N],[11,"read_uint128","","",3,N],[11,"write_u16","","",3,N],[11,"write_u32","","",3,N],[11,"write_u64","","",3,N],[11,"write_u128","","",3,N],[11,"write_uint","","",3,N],[11,"write_uint128","","",3,N],[11,"read_u16_into","","",3,N],[11,"read_u32_into","","",3,N],[11,"read_u64_into","","",3,N],[11,"read_u128_into","","",3,N],[11,"write_u16_into","","",3,N],[11,"write_u32_into","","",3,N],[11,"write_u64_into","","",3,N],[11,"write_u128_into","","",3,N],[11,"from_slice_u16","","",3,N],[11,"from_slice_u32","","",3,N],[11,"from_slice_u64","","",3,N],[11,"from_slice_u128","","",3,N],[11,"from_slice_f32","","",3,N],[11,"from_slice_f64","","",3,N],[11,"read_u16","","",4,N],[11,"read_u32","","",4,N],[11,"read_u64","","",4,N],[11,"read_u128","","",4,N],[11,"read_uint","","",4,N],[11,"read_uint128","","",4,N],[11,"write_u16","","",4,N],[11,"write_u32","","",4,N],[11,"write_u64","","",4,N],[11,"write_u128","","",4,N],[11,"write_uint","","",4,N],[11,"write_uint128","","",4,N],[11,"read_u16_into","","",4,N],[11,"read_u32_into","","",4,N],[11,"read_u64_into","","",4,N],[11,"read_u128_into","","",4,N],[11,"write_u16_into","","",4,N],[11,"write_u32_into","","",4,N],[11,"write_u64_into","","",4,N],[11,"write_u128_into","","",4,N],[11,"from_slice_u16","","",4,N],[11,"from_slice_u32","","",4,N],[11,"from_slice_u64","","",4,N],[11,"from_slice_u128","","",4,N],[11,"from_slice_f32","","",4,N],[11,"from_slice_f64","","",4,N],[11,"partial_cmp","","",3,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"eq","","",3,[[["self"],["bigendian"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"cmp","","",3,[[["self"],["bigendian"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],["result",["u128"]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],["result",["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],["result",["u128"]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,N],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,N],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u128"],["usize"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","items":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",N,N]],"paths":[]};
searchIndex["cgl"]={"doc":"","items":[[5,"CGLSetCurrentContext","cgl","",N,N],[5,"CGLGetCurrentContext","","",N,N],[5,"CGLGetShareGroup","","",N,N],[5,"CGLChoosePixelFormat","","",N,N],[5,"CGLDescribePixelFormat","","",N,N],[5,"CGLDestroyPixelFormat","","",N,N],[5,"CGLCreateContext","","",N,N],[5,"CGLDestroyContext","","",N,N],[5,"CGLGetPixelFormat","","",N,N],[5,"CGLEnable","","",N,N],[5,"CGLDisable","","",N,N],[5,"CGLIsEnabled","","",N,N],[5,"CGLSetParameter","","",N,N],[5,"CGLGetParameter","","",N,N],[5,"CGLLockContext","","",N,N],[5,"CGLUnlockContext","","",N,N],[5,"CGLSetOption","","",N,N],[5,"CGLGetOption","","",N,N],[5,"CGLSetGlobalOption","","",N,N],[5,"CGLGetGlobalOption","","",N,N],[5,"CGLGetVersion","","",N,N],[5,"CGLTexImageIOSurface2D","","",N,N],[5,"CGLErrorString","","",N,N],[6,"CGLPixelFormatAttribute","","",N,N],[6,"CGLContextParameter","","",N,N],[6,"CGLContextEnable","","",N,N],[6,"CGLGlobalOption","","",N,N],[6,"CGLError","","",N,N],[6,"CGLPixelFormatObj","","",N,N],[6,"CGLContextObj","","",N,N],[6,"CGLShareGroupObj","","",N,N],[6,"IOSurfaceRef","","",N,N],[17,"kCGLNoError","","",N,N],[17,"kCGLPFAAllRenderers","","",N,N],[17,"kCGLPFADoubleBuffer","","",N,N],[17,"kCGLPFAStereo","","",N,N],[17,"kCGLPFAAuxBuffers","","",N,N],[17,"kCGLPFAColorSize","","",N,N],[17,"kCGLPFAAlphaSize","","",N,N],[17,"kCGLPFADepthSize","","",N,N],[17,"kCGLPFAStencilSize","","",N,N],[17,"kCGLPFAAccumSize","","",N,N],[17,"kCGLPFAMinimumPolicy","","",N,N],[17,"kCGLPFAMaximumPolicy","","",N,N],[17,"kCGLPFAOffScreen","","",N,N],[17,"kCGLPFAFullScreen","","",N,N],[17,"kCGLPFASampleBuffers","","",N,N],[17,"kCGLPFASamples","","",N,N],[17,"kCGLPFAAuxDepthStencil","","",N,N],[17,"kCGLPFAColorFloat","","",N,N],[17,"kCGLPFAMultisample","","",N,N],[17,"kCGLPFASupersample","","",N,N],[17,"kCGLPFASampleAlpha","","",N,N],[17,"kCGLPFARendererID","","",N,N],[17,"kCGLPFASingleRenderer","","",N,N],[17,"kCGLPFANoRecovery","","",N,N],[17,"kCGLPFAAccelerated","","",N,N],[17,"kCGLPFAClosestPolicy","","",N,N],[17,"kCGLPFARobust","","",N,N],[17,"kCGLPFABackingStore","","",N,N],[17,"kCGLPFAMPSafe","","",N,N],[17,"kCGLPFAWindow","","",N,N],[17,"kCGLPFAMultiScreen","","",N,N],[17,"kCGLPFACompliant","","",N,N],[17,"kCGLPFADisplayMask","","",N,N],[17,"kCGLPFAPBuffer","","",N,N],[17,"kCGLPFARemotePBuffer","","",N,N],[17,"kCGLPFAAllowOfflineRenderers","","",N,N],[17,"kCGLPFAAcceleratedCompute","","",N,N],[17,"kCGLPFAOpenGLProfile","","",N,N],[17,"kCGLPFAVirtualScreenCount","","",N,N],[17,"kCGLCESwapRectangle","","",N,N],[17,"kCGLCESwapLimit","","",N,N],[17,"kCGLCERasterization","","",N,N],[17,"kCGLCEStateValidation","","",N,N],[17,"kCGLCESurfaceBackingSize","","",N,N],[17,"kCGLCEDisplayListOptimization","","",N,N],[17,"kCGLCEMPEngine","","",N,N],[17,"kCGLCECrashOnRemovedFunctions","","",N,N],[17,"kCGLCPSwapRectangle","","",N,N],[17,"kCGLCPSwapInterval","","",N,N],[17,"kCGLCPDispatchTableSize","","",N,N],[17,"kCGLCPClientStorage","","",N,N],[17,"kCGLCPSurfaceTexture","","",N,N],[17,"kCGLCPSurfaceOrder","","",N,N],[17,"kCGLCPSurfaceOpacity","","",N,N],[17,"kCGLCPSurfaceBackingSize","","",N,N],[17,"kCGLCPSurfaceSurfaceVolatile","","",N,N],[17,"kCGLCPReclaimResources","","",N,N],[17,"kCGLCPCurrentRendererID","","",N,N],[17,"kCGLCPGPUVertexProcessing","","",N,N],[17,"kCGLCPGPUFragmentProcessing","","",N,N],[17,"kCGLCPHasDrawable","","",N,N],[17,"kCGLCPMPSwapsInFlight","","",N,N],[17,"kCGLGOFormatCacheSize","","",N,N],[17,"kCGLGOClearFormatCache","","",N,N],[17,"kCGLGORetainRenderers","","",N,N],[17,"kCGLGOResetLibrary","","",N,N],[17,"kCGLGOUseErrorHandler","","",N,N],[17,"kCGLGOUseBuildCache","","",N,N],[17,"CORE_BOOLEAN_ATTRIBUTES","","",N,N],[17,"CORE_INTEGER_ATTRIBUTES","","",N,N]],"paths":[]};
searchIndex["cocoa"]={"doc":"","items":[[0,"appkit","cocoa","",N,N],[6,"CGFloat","cocoa::appkit","",N,N],[3,"CGPoint","","",N,N],[12,"x","","",0,N],[12,"y","","",0,N],[3,"NSApplicationPresentationOptions","","",N,N],[3,"NSWindowStyleMask","","",N,N],[3,"NSWindowOrderingMode","","",N,N],[3,"NSAlignmentOptions","","",N,N],[3,"NSWindowCollectionBehavior","","",N,N],[3,"NSWindowOcclusionState","","",N,N],[3,"NSEventSwipeTrackingOptions","","",N,N],[3,"NSEventPhase","","",N,N],[3,"NSTouchPhase","","",N,N],[3,"NSEventMask","","",N,N],[3,"NSEventModifierFlags","","",N,N],[4,"NSApplicationActivationPolicy","","",N,N],[13,"NSApplicationActivationPolicyRegular","","",1,N],[13,"NSApplicationActivationPolicyAccessory","","",1,N],[13,"NSApplicationActivationPolicyProhibited","","",1,N],[13,"NSApplicationActivationPolicyERROR","","",1,N],[4,"NSApplicationActivationOptions","","",N,N],[13,"NSApplicationActivateAllWindows","","",2,N],[13,"NSApplicationActivateIgnoringOtherApps","","",2,N],[4,"NSApplicationTerminateReply","","",N,N],[13,"NSTerminateCancel","","",3,N],[13,"NSTerminateNow","","",3,N],[13,"NSTerminateLater","","",3,N],[4,"NSWindowTitleVisibility","","",N,N],[13,"NSWindowTitleVisible","","",4,N],[13,"NSWindowTitleHidden","","",4,N],[4,"NSBackingStoreType","","",N,N],[13,"NSBackingStoreRetained","","",5,N],[13,"NSBackingStoreNonretained","","",5,N],[13,"NSBackingStoreBuffered","","",5,N],[4,"NSOpenGLPixelFormatAttribute","","",N,N],[13,"NSOpenGLPFAAllRenderers","","",6,N],[13,"NSOpenGLPFATripleBuffer","","",6,N],[13,"NSOpenGLPFADoubleBuffer","","",6,N],[13,"NSOpenGLPFAStereo","","",6,N],[13,"NSOpenGLPFAAuxBuffers","","",6,N],[13,"NSOpenGLPFAColorSize","","",6,N],[13,"NSOpenGLPFAAlphaSize","","",6,N],[13,"NSOpenGLPFADepthSize","","",6,N],[13,"NSOpenGLPFAStencilSize","","",6,N],[13,"NSOpenGLPFAAccumSize","","",6,N],[13,"NSOpenGLPFAMinimumPolicy","","",6,N],[13,"NSOpenGLPFAMaximumPolicy","","",6,N],[13,"NSOpenGLPFAOffScreen","","",6,N],[13,"NSOpenGLPFAFullScreen","","",6,N],[13,"NSOpenGLPFASampleBuffers","","",6,N],[13,"NSOpenGLPFASamples","","",6,N],[13,"NSOpenGLPFAAuxDepthStencil","","",6,N],[13,"NSOpenGLPFAColorFloat","","",6,N],[13,"NSOpenGLPFAMultisample","","",6,N],[13,"NSOpenGLPFASupersample","","",6,N],[13,"NSOpenGLPFASampleAlpha","","",6,N],[13,"NSOpenGLPFARendererID","","",6,N],[13,"NSOpenGLPFASingleRenderer","","",6,N],[13,"NSOpenGLPFANoRecovery","","",6,N],[13,"NSOpenGLPFAAccelerated","","",6,N],[13,"NSOpenGLPFAClosestPolicy","","",6,N],[13,"NSOpenGLPFARobust","","",6,N],[13,"NSOpenGLPFABackingStore","","",6,N],[13,"NSOpenGLPFAMPSafe","","",6,N],[13,"NSOpenGLPFAWindow","","",6,N],[13,"NSOpenGLPFAMultiScreen","","",6,N],[13,"NSOpenGLPFACompliant","","",6,N],[13,"NSOpenGLPFAScreenMask","","",6,N],[13,"NSOpenGLPFAPixelBuffer","","",6,N],[13,"NSOpenGLPFARemotePixelBuffer","","",6,N],[13,"NSOpenGLPFAAllowOfflineRenderers","","",6,N],[13,"NSOpenGLPFAAcceleratedCompute","","",6,N],[13,"NSOpenGLPFAOpenGLProfile","","",6,N],[13,"NSOpenGLPFAVirtualScreenCount","","",6,N],[4,"NSOpenGLPFAOpenGLProfiles","","",N,N],[13,"NSOpenGLProfileVersionLegacy","","",7,N],[13,"NSOpenGLProfileVersion3_2Core","","",7,N],[13,"NSOpenGLProfileVersion4_1Core","","",7,N],[4,"NSOpenGLContextParameter","","",N,N],[13,"NSOpenGLCPSwapInterval","","",8,N],[13,"NSOpenGLCPSurfaceOrder","","",8,N],[13,"NSOpenGLCPSurfaceOpacity","","",8,N],[13,"NSOpenGLCPSurfaceBackingSize","","",8,N],[13,"NSOpenGLCPReclaimResources","","",8,N],[13,"NSOpenGLCPCurrentRendererID","","",8,N],[13,"NSOpenGLCPGPUVertexProcessing","","",8,N],[13,"NSOpenGLCPGPUFragmentProcessing","","",8,N],[13,"NSOpenGLCPHasDrawable","","",8,N],[13,"NSOpenGLCPMPSwapsInFlight","","",8,N],[4,"NSWindowButton","","",N,N],[13,"NSWindowCloseButton","","",9,N],[13,"NSWindowMiniaturizeButton","","",9,N],[13,"NSWindowZoomButton","","",9,N],[13,"NSWindowToolbarButton","","",9,N],[13,"NSWindowDocumentIconButton","","",9,N],[13,"NSWindowDocumentVersionsButton","","",9,N],[13,"NSWindowFullScreenButton","","",9,N],[4,"NSBezelStyle","","",N,N],[13,"NSRoundedBezelStyle","","",10,N],[13,"NSRegularSquareBezelStyle","","",10,N],[13,"NSDisclosureBezelStyle","","",10,N],[13,"NSShadowlessSquareBezelStyle","","",10,N],[13,"NSCircularBezelStyle","","",10,N],[13,"NSTexturedSquareBezelStyle","","",10,N],[13,"NSHelpButtonBezelStyle","","",10,N],[13,"NSSmallSquareBezelStyle","","",10,N],[13,"NSTexturedRoundedBezelStyle","","",10,N],[13,"NSRoundRectBezelStyle","","",10,N],[13,"NSRecessedBezelStyle","","",10,N],[13,"NSRoundedDisclosureBezelStyle","","",10,N],[4,"NSRequestUserAttentionType","","",N,N],[13,"NSCriticalRequest","","",11,N],[13,"NSInformationalRequest","","",11,N],[4,"NSPasteboardReadingOptions","","",N,N],[13,"NSPasteboardReadingAsData","","",12,N],[13,"NSPasteboardReadingAsString","","",12,N],[13,"NSPasteboardReadingAsPropertyList","","",12,N],[13,"NSPasteboardReadingAsKeyedArchive","","",12,N],[4,"NSPasteboardWritingOptions","","",N,N],[13,"NSPasteboardWritingPromised","","",13,N],[4,"NSEventGestureAxis","","",N,N],[13,"NSEventGestureAxisNone","","",14,N],[13,"NSEventGestureAxisHorizontal","","",14,N],[13,"NSEventGestureAxisVertical","","",14,N],[4,"NSEventType","","",N,N],[13,"NSLeftMouseDown","","",15,N],[13,"NSLeftMouseUp","","",15,N],[13,"NSRightMouseDown","","",15,N],[13,"NSRightMouseUp","","",15,N],[13,"NSMouseMoved","","",15,N],[13,"NSLeftMouseDragged","","",15,N],[13,"NSRightMouseDragged","","",15,N],[13,"NSMouseEntered","","",15,N],[13,"NSMouseExited","","",15,N],[13,"NSKeyDown","","",15,N],[13,"NSKeyUp","","",15,N],[13,"NSFlagsChanged","","",15,N],[13,"NSAppKitDefined","","",15,N],[13,"NSSystemDefined","","",15,N],[13,"NSApplicationDefined","","",15,N],[13,"NSPeriodic","","",15,N],[13,"NSCursorUpdate","","",15,N],[13,"NSScrollWheel","","",15,N],[13,"NSTabletPoint","","",15,N],[13,"NSTabletProximity","","",15,N],[13,"NSOtherMouseDown","","",15,N],[13,"NSOtherMouseUp","","",15,N],[13,"NSOtherMouseDragged","","",15,N],[13,"NSEventTypeGesture","","",15,N],[13,"NSEventTypeMagnify","","",15,N],[13,"NSEventTypeSwipe","","",15,N],[13,"NSEventTypeRotate","","",15,N],[13,"NSEventTypeBeginGesture","","",15,N],[13,"NSEventTypeEndGesture","","",15,N],[13,"NSEventTypePressure","","",15,N],[4,"NSPointingDeviceType","","",N,N],[4,"NSEventButtonMask","","",N,N],[4,"NSEventSubtype","","",N,N],[13,"NSWindowExposedEventType","","",16,N],[13,"NSApplicationActivatedEventType","","",16,N],[13,"NSApplicationDeactivatedEventType","","",16,N],[13,"NSWindowMovedEventType","","",16,N],[13,"NSScreenChangedEventType","","",16,N],[13,"NSAWTEventType","","",16,N],[4,"NSCompositingOperation","","",N,N],[13,"NSCompositeClear","","",17,N],[13,"NSCompositeCopy","","",17,N],[13,"NSCompositeSourceOver","","",17,N],[13,"NSCompositeSourceIn","","",17,N],[13,"NSCompositeSourceOut","","",17,N],[13,"NSCompositeSourceAtop","","",17,N],[13,"NSCompositeDestinationOver","","",17,N],[13,"NSCompositeDestinationIn","","",17,N],[13,"NSCompositeDestinationOut","","",17,N],[13,"NSCompositeDestinationAtop","","",17,N],[13,"NSCompositeXOR","","",17,N],[13,"NSCompositePlusDarker","","",17,N],[13,"NSCompositeHighlight","","",17,N],[13,"NSCompositePlusLighter","","",17,N],[4,"NSImageCacheMode","","",N,N],[13,"NSImageCacheDefault","","",18,N],[13,"NSImageCacheAlways","","",18,N],[13,"NSImageCacheBySize","","",18,N],[13,"NSImageCacheNever","","",18,N],[4,"NSTIFFCompression","","",N,N],[13,"NSTIFFCompressionNone","","",19,N],[13,"NSTIFFCompressionCCITTFAX3","","",19,N],[13,"NSTIFFCompressionCCITTFAX4","","",19,N],[13,"NSTIFFCompressionLZW","","",19,N],[13,"NSTIFFCompressionJPEG","","",19,N],[13,"NSTIFFCompressionNEXT","","",19,N],[13,"NSTIFFCompressionPackBits","","",19,N],[13,"NSTIFFCompressionOldJPEG","","",19,N],[4,"NSImageLoadStatus","","",N,N],[13,"NSImageLoadStatusCompleted","","",20,N],[13,"NSImageLoadStatusCancelled","","",20,N],[13,"NSImageLoadStatusInvalidData","","",20,N],[13,"NSImageLoadStatusUnexpectedEOF","","",20,N],[13,"NSImageLoadStatusReadError","","",20,N],[4,"NSTabViewType","","",N,N],[13,"NSTopTabsBezelBorder","","",21,N],[13,"NSLeftTabsBezelBorder","","",21,N],[13,"NSBottomTabsBezelBorder","","",21,N],[13,"NSRightTabsBezelBorder","","",21,N],[13,"NSNoTabsBezelBorder","","",21,N],[13,"NSNoTabsLineBorder","","",21,N],[13,"NSNoTabsNoBorder","","",21,N],[4,"NSTabState","","",N,N],[13,"NSSelectedTab","","",22,N],[13,"NSBackgroundTab","","",22,N],[13,"NSPressedTab","","",22,N],[5,"NSApp","","",N,[[],["id"]]],[7,"NSAppKitVersionNumber","","",N,N],[7,"NSPasteboardTypeString","","",N,N],[7,"NSPasteboardTypePDF","","",N,N],[7,"NSPasteboardTypeTIFF","","",N,N],[7,"NSPasteboardTypePNG","","",N,N],[7,"NSPasteboardTypeRTF","","",N,N],[7,"NSPasteboardTypeRTFD","","",N,N],[7,"NSPasteboardTypeHTML","","",N,N],[7,"NSPasteboardTypeTabularText","","",N,N],[7,"NSPasteboardTypeFont","","",N,N],[7,"NSPasteboardTypeRuler","","",N,N],[7,"NSPasteboardTypeColor","","",N,N],[7,"NSPasteboardTypeSound","","",N,N],[7,"NSPasteboardTypeMultipleTextSelection","","",N,N],[7,"NSPasteboardTypeFindPanelSearchOptions","","",N,N],[7,"NSStringPboardType","","",N,N],[7,"NSFilenamesPboardType","","",N,N],[7,"NSPostScriptPboardType","","",N,N],[7,"NSTIFFPboardType","","",N,N],[7,"NSRTFPboardType","","",N,N],[7,"NSTabularTextPboardType","","",N,N],[7,"NSFontPboardType","","",N,N],[7,"NSRulerPboardType","","",N,N],[7,"NSFileContentsPboardType","","",N,N],[7,"NSColorPboardType","","",N,N],[7,"NSRTFDPboardType","","",N,N],[7,"NSHTMLPboardType","","",N,N],[7,"NSPICTPboardType","","",N,N],[7,"NSURLPboardType","","",N,N],[7,"NSPDFPboardType","","",N,N],[7,"NSVCardPboardType","","",N,N],[7,"NSFilesPromisePboardType","","",N,N],[7,"NSMultipleTextSelectionPboardType","","",N,N],[7,"NSSoundPboardType","","",N,N],[7,"NSGeneralPboard","","",N,N],[7,"NSFontPboard","","",N,N],[7,"NSRulerPboard","","",N,N],[7,"NSFindPboard","","",N,N],[7,"NSDragPboard","","",N,N],[7,"NSPasteboardURLReadingFileURLsOnlyKey","","",N,N],[7,"NSPasteboardURLReadingContentsConformToTypesKey","","",N,N],[7,"NSAppearanceNameVibrantDark","","",N,N],[7,"NSAppearanceNameVibrantLight","","",N,N],[7,"NSFullScreenModeAllScreens","","",N,N],[7,"NSFullScreenModeSetting","","",N,N],[7,"NSFullScreenModeWindowLevel","","",N,N],[7,"NSFullScreenModeApplicationPresentationOptions","","",N,N],[7,"NSImageHintCTM","","",N,N],[7,"NSImageHintInterpolation","","",N,N],[7,"NSImageNameQuickLookTemplate","","",N,N],[7,"NSImageNameBluetoothTemplate","","",N,N],[7,"NSImageNameIChatTheaterTemplate","","",N,N],[7,"NSImageNameSlideshowTemplate","","",N,N],[7,"NSImageNameActionTemplate","","",N,N],[7,"NSImageNameSmartBadgeTemplate","","",N,N],[7,"NSImageNamePathTemplate","","",N,N],[7,"NSImageNameInvalidDataFreestandingTemplate","","",N,N],[7,"NSImageNameLockLockedTemplate","","",N,N],[7,"NSImageNameLockUnlockedTemplate","","",N,N],[7,"NSImageNameGoRightTemplate","","",N,N],[7,"NSImageNameGoLeftTemplate","","",N,N],[7,"NSImageNameRightFacingTriangleTemplate","","",N,N],[7,"NSImageNameLeftFacingTriangleTemplate","","",N,N],[7,"NSImageNameAddTemplate","","",N,N],[7,"NSImageNameRemoveTemplate","","",N,N],[7,"NSImageNameRevealFreestandingTemplate","","",N,N],[7,"NSImageNameFollowLinkFreestandingTemplate","","",N,N],[7,"NSImageNameEnterFullScreenTemplate","","",N,N],[7,"NSImageNameExitFullScreenTemplate","","",N,N],[7,"NSImageNameStopProgressTemplate","","",N,N],[7,"NSImageNameStopProgressFreestandingTemplate","","",N,N],[7,"NSImageNameRefreshTemplate","","",N,N],[7,"NSImageNameRefreshFreestandingTemplate","","",N,N],[7,"NSImageNameMultipleDocuments","","",N,N],[7,"NSImageNameUser","","",N,N],[7,"NSImageNameUserGroup","","",N,N],[7,"NSImageNameEveryone","","",N,N],[7,"NSImageNameUserGuest","","",N,N],[7,"NSImageNameBonjour","","",N,N],[7,"NSImageNameDotMac","","",N,N],[7,"NSImageNameComputer","","",N,N],[7,"NSImageNameFolderBurnable","","",N,N],[7,"NSImageNameFolderSmart","","",N,N],[7,"NSImageNameNetwork","","",N,N],[7,"NSImageNameUserAccounts","","",N,N],[7,"NSImageNamePreferencesGeneral","","",N,N],[7,"NSImageNameAdvanced","","",N,N],[7,"NSImageNameInfo","","",N,N],[7,"NSImageNameFontPanel","","",N,N],[7,"NSImageNameColorPanel","","",N,N],[7,"NSImageNameFolder","","",N,N],[7,"NSImageNameTrashEmpty","","",N,N],[7,"NSImageNameTrashFull","","",N,N],[7,"NSImageNameHomeTemplate","","",N,N],[7,"NSImageNameBookmarksTemplate","","",N,N],[7,"NSImageNameCaution","","",N,N],[7,"NSImageNameStatusAvailable","","",N,N],[7,"NSImageNameStatusPartiallyAvailable","","",N,N],[7,"NSImageNameStatusUnavailable","","",N,N],[7,"NSImageNameStatusNone","","",N,N],[7,"NSImageNameApplicationIcon","","",N,N],[7,"NSImageNameMenuOnStateTemplate","","",N,N],[7,"NSImageNameMenuMixedStateTemplate","","",N,N],[7,"NSImageNameMobileMe","","",N,N],[7,"NSImageNameIconViewTemplate","","",N,N],[7,"NSImageNameListViewTemplate","","",N,N],[7,"NSImageNameColumnViewTemplate","","",N,N],[7,"NSImageNameFlowViewTemplate","","",N,N],[7,"NSImageNameShareTemplate","","",N,N],[5,"NSRectFill","","",N,N],[6,"CGLContextObj","","",N,N],[6,"GLint","","",N,N],[6,"NSWindowDepth","","",N,N],[6,"NSAutoresizingMaskOptions","","",N,N],[7,"NSMainMenuWindowLevel","","",N,N],[17,"NSAppKitVersionNumber10_0","","",N,N],[17,"NSAppKitVersionNumber10_1","","",N,N],[17,"NSAppKitVersionNumber10_2","","",N,N],[17,"NSAppKitVersionNumber10_2_3","","",N,N],[17,"NSAppKitVersionNumber10_3","","",N,N],[17,"NSAppKitVersionNumber10_3_2","","",N,N],[17,"NSAppKitVersionNumber10_3_3","","",N,N],[17,"NSAppKitVersionNumber10_3_5","","",N,N],[17,"NSAppKitVersionNumber10_3_7","","",N,N],[17,"NSAppKitVersionNumber10_3_9","","",N,N],[17,"NSAppKitVersionNumber10_4","","",N,N],[17,"NSAppKitVersionNumber10_4_1","","",N,N],[17,"NSAppKitVersionNumber10_4_3","","",N,N],[17,"NSAppKitVersionNumber10_4_4","","",N,N],[17,"NSAppKitVersionNumber10_4_7","","",N,N],[17,"NSAppKitVersionNumber10_5","","",N,N],[17,"NSAppKitVersionNumber10_5_2","","",N,N],[17,"NSAppKitVersionNumber10_5_3","","",N,N],[17,"NSAppKitVersionNumber10_6","","",N,N],[17,"NSAppKitVersionNumber10_7","","",N,N],[17,"NSAppKitVersionNumber10_7_2","","",N,N],[17,"NSAppKitVersionNumber10_7_3","","",N,N],[17,"NSAppKitVersionNumber10_7_4","","",N,N],[17,"NSAppKitVersionNumber10_8","","",N,N],[17,"NSAppKitVersionNumber10_9","","",N,N],[17,"NSAppKitVersionNumber10_10","","",N,N],[17,"NSAppKitVersionNumber10_10_2","","",N,N],[17,"NSAppKitVersionNumber10_10_3","","",N,N],[17,"NSAppKitVersionNumber10_10_4","","",N,N],[17,"NSAppKitVersionNumber10_10_5","","",N,N],[17,"NSAppKitVersionNumber10_10_Max","","",N,N],[17,"NSAppKitVersionNumber10_11","","",N,N],[17,"NSAppKitVersionNumber10_11_1","","",N,N],[17,"NSAppKitVersionNumber10_11_2","","",N,N],[17,"NSAppKitVersionNumber10_11_3","","",N,N],[17,"NSAppKitVersionNumber10_12","","",N,N],[17,"NSAppKitVersionNumber10_12_1","","",N,N],[17,"NSAppKitVersionNumber10_12_2","","",N,N],[17,"NSAppKitVersionNumber10_13","","",N,N],[17,"NSAppKitVersionNumber10_13_1","","",N,N],[17,"NSAppKitVersionNumber10_13_2","","",N,N],[17,"NSAppKitVersionNumber10_13_4","","",N,N],[17,"NSViewNotSizable","","",N,N],[17,"NSViewMinXMargin","","",N,N],[17,"NSViewWidthSizable","","",N,N],[17,"NSViewMaxXMargin","","",N,N],[17,"NSViewMinYMargin","","",N,N],[17,"NSViewHeightSizable","","",N,N],[17,"NSViewMaxYMargin","","",N,N],[17,"NSUpArrowFunctionKey","","",N,N],[17,"NSDownArrowFunctionKey","","",N,N],[17,"NSLeftArrowFunctionKey","","",N,N],[17,"NSRightArrowFunctionKey","","",N,N],[17,"NSF1FunctionKey","","",N,N],[17,"NSF2FunctionKey","","",N,N],[17,"NSF3FunctionKey","","",N,N],[17,"NSF4FunctionKey","","",N,N],[17,"NSF5FunctionKey","","",N,N],[17,"NSF6FunctionKey","","",N,N],[17,"NSF7FunctionKey","","",N,N],[17,"NSF8FunctionKey","","",N,N],[17,"NSF9FunctionKey","","",N,N],[17,"NSF10FunctionKey","","",N,N],[17,"NSF11FunctionKey","","",N,N],[17,"NSF12FunctionKey","","",N,N],[17,"NSF13FunctionKey","","",N,N],[17,"NSF14FunctionKey","","",N,N],[17,"NSF15FunctionKey","","",N,N],[17,"NSF16FunctionKey","","",N,N],[17,"NSF17FunctionKey","","",N,N],[17,"NSF18FunctionKey","","",N,N],[17,"NSF19FunctionKey","","",N,N],[17,"NSF20FunctionKey","","",N,N],[17,"NSF21FunctionKey","","",N,N],[17,"NSF22FunctionKey","","",N,N],[17,"NSF23FunctionKey","","",N,N],[17,"NSF24FunctionKey","","",N,N],[17,"NSF25FunctionKey","","",N,N],[17,"NSF26FunctionKey","","",N,N],[17,"NSF27FunctionKey","","",N,N],[17,"NSF28FunctionKey","","",N,N],[17,"NSF29FunctionKey","","",N,N],[17,"NSF30FunctionKey","","",N,N],[17,"NSF31FunctionKey","","",N,N],[17,"NSF32FunctionKey","","",N,N],[17,"NSF33FunctionKey","","",N,N],[17,"NSF34FunctionKey","","",N,N],[17,"NSF35FunctionKey","","",N,N],[17,"NSInsertFunctionKey","","",N,N],[17,"NSDeleteFunctionKey","","",N,N],[17,"NSHomeFunctionKey","","",N,N],[17,"NSBeginFunctionKey","","",N,N],[17,"NSEndFunctionKey","","",N,N],[17,"NSPageUpFunctionKey","","",N,N],[17,"NSPageDownFunctionKey","","",N,N],[17,"NSPrintScreenFunctionKey","","",N,N],[17,"NSScrollLockFunctionKey","","",N,N],[17,"NSPauseFunctionKey","","",N,N],[17,"NSSysReqFunctionKey","","",N,N],[17,"NSBreakFunctionKey","","",N,N],[17,"NSResetFunctionKey","","",N,N],[17,"NSStopFunctionKey","","",N,N],[17,"NSMenuFunctionKey","","",N,N],[17,"NSUserFunctionKey","","",N,N],[17,"NSSystemFunctionKey","","",N,N],[17,"NSPrintFunctionKey","","",N,N],[17,"NSClearLineFunctionKey","","",N,N],[17,"NSClearDisplayFunctionKey","","",N,N],[17,"NSInsertLineFunctionKey","","",N,N],[17,"NSDeleteLineFunctionKey","","",N,N],[17,"NSInsertCharFunctionKey","","",N,N],[17,"NSDeleteCharFunctionKey","","",N,N],[17,"NSPrevFunctionKey","","",N,N],[17,"NSNextFunctionKey","","",N,N],[17,"NSSelectFunctionKey","","",N,N],[17,"NSExecuteFunctionKey","","",N,N],[17,"NSUndoFunctionKey","","",N,N],[17,"NSRedoFunctionKey","","",N,N],[17,"NSFindFunctionKey","","",N,N],[17,"NSHelpFunctionKey","","",N,N],[17,"NSModeSwitchFunctionKey","","",N,N],[17,"NSVariableStatusItemLength","","",N,N],[17,"NSSquareStatusItemLength","","",N,N],[8,"NSApplication","","",N,N],[11,"sharedApplication","","",23,[[["self"]],["id"]]],[10,"mainMenu","","",23,[[["self"]],["id"]]],[10,"setActivationPolicy_","","",23,[[["self"],["nsapplicationactivationpolicy"]],["bool"]]],[10,"setPresentationOptions_","","",23,[[["self"],["nsapplicationpresentationoptions"]],["bool"]]],[10,"presentationOptions_","","",23,[[["self"]],["nsapplicationpresentationoptions"]]],[10,"setMainMenu_","","",23,[[["self"],["id"]]]],[10,"setServicesMenu_","","",23,[[["self"],["id"]]]],[10,"setWindowsMenu_","","",23,[[["self"],["id"]]]],[10,"activateIgnoringOtherApps_","","",23,[[["self"],["bool"]]]],[10,"run","","",23,[[["self"]]]],[10,"finishLaunching","","",23,[[["self"]]]],[10,"nextEventMatchingMask_untilDate_inMode_dequeue_","","",23,[[["self"],["nsuinteger"],["id"],["id"],["bool"]],["id"]]],[10,"sendEvent_","","",23,[[["self"],["id"]]]],[10,"postEvent_atStart_","","",23,[[["self"],["id"],["bool"]]]],[10,"stop_","","",23,[[["self"],["id"]]]],[10,"setApplicationIconImage_","","",23,[[["self"],["id"]]]],[10,"requestUserAttention_","","",23,[[["self"],["nsrequestuserattentiontype"]]]],[8,"NSRunningApplication","","",N,N],[11,"currentApplication","","",24,[[["self"]],["id"]]],[10,"activateWithOptions_","","",24,[[["self"],["nsapplicationactivationoptions"]],["bool"]]],[8,"NSPasteboard","","",N,N],[11,"generalPasteboard","","",25,[[["self"]],["id"]]],[11,"pasteboardByFilteringData_ofType","","",25,[[["self"],["id"],["id"]],["id"]]],[11,"pasteboardByFilteringFile","","",25,[[["self"],["id"]],["id"]]],[11,"pasteboardByFilteringTypesInPasteboard","","",25,[[["self"],["id"]],["id"]]],[11,"pasteboardWithName","","",25,[[["self"],["id"]],["id"]]],[11,"pasteboardWithUniqueName","","",25,[[["self"]],["id"]]],[10,"releaseGlobally","","",25,[[["self"]]]],[10,"clearContents","","",25,[[["self"]],["nsinteger"]]],[10,"writeObjects","","",25,[[["self"],["id"]],["bool"]]],[10,"sendData_forType","","",25,[[["self"],["id"],["id"]],["bool"]]],[10,"setPropertyList_forType","","",25,[[["self"],["id"],["id"]],["bool"]]],[10,"setString_forType","","",25,[[["self"],["id"],["id"]],["bool"]]],[10,"readObjectsForClasses_options","","",25,[[["self"],["id"],["id"]],["id"]]],[10,"pasteboardItems","","",25,[[["self"]],["id"]]],[10,"indexOfPasteboardItem","","",25,[[["self"],["id"]],["nsinteger"]]],[10,"dataForType","","",25,[[["self"],["id"]],["id"]]],[10,"propertyListForType","","",25,[[["self"],["id"]],["id"]]],[10,"stringForType","","",25,[[["self"],["id"]],["id"]]],[10,"availableTypeFromArray","","",25,[[["self"],["id"]],["id"]]],[10,"canReadItemWithDataConformingToTypes","","",25,[[["self"],["id"]],["bool"]]],[10,"canReadObjectForClasses_options","","",25,[[["self"],["id"],["id"]],["bool"]]],[10,"types","","",25,[[["self"]],["id"]]],[11,"typesFilterableTo","","",25,[[["self"],["id"]],["id"]]],[10,"name","","",25,[[["self"]],["id"]]],[10,"changeCount","","",25,[[["self"]],["nsinteger"]]],[10,"declareTypes_owner","","",25,[[["self"],["id"],["id"]],["nsinteger"]]],[10,"addTypes_owner","","",25,[[["self"],["id"],["id"]],["nsinteger"]]],[10,"writeFileContents","","",25,[[["self"],["id"]],["bool"]]],[10,"writeFileWrapper","","",25,[[["self"],["id"]],["bool"]]],[10,"readFileContentsType_toFile","","",25,[[["self"],["id"],["id"]],["id"]]],[10,"readFileWrapper","","",25,[[["self"]],["id"]]],[8,"NSPasteboardItem","","",N,N],[10,"types","","",26,[[["self"]],["id"]]],[10,"setDataProvider_forTypes","","",26,[[["self"],["id"],["id"]],["bool"]]],[10,"setData_forType","","",26,[[["self"],["id"],["id"]],["bool"]]],[10,"setString_forType","","",26,[[["self"],["id"],["id"]],["bool"]]],[10,"setPropertyList_forType","","",26,[[["self"],["id"],["id"]],["bool"]]],[10,"dataForType","","",26,[[["self"],["id"]],["id"]]],[10,"stringForType","","",26,[[["self"],["id"]],["id"]]],[10,"propertyListForType","","",26,[[["self"],["id"]],["id"]]],[8,"NSPasteboardItemDataProvider","","",N,N],[10,"pasteboard_item_provideDataForType","","",27,[[["self"],["id"],["id"],["id"]]]],[10,"pasteboardFinishedWithDataProvider","","",27,[[["self"],["id"]]]],[8,"NSPasteboardWriting","","",N,N],[10,"writableTypesForPasteboard","","",28,[[["self"],["id"]],["id"]]],[10,"writingOptionsForType_pasteboard","","",28,[[["self"],["id"],["id"]],["nspasteboardwritingoptions"]]],[10,"pasteboardPropertyListForType","","",28,[[["self"],["id"]],["id"]]],[8,"NSPasteboardReading","","",N,N],[10,"initWithPasteboardPropertyList_ofType","","",29,[[["self"],["id"],["id"]],["id"]]],[10,"readableTypesForPasteboard","","",29,[[["self"],["id"]],["id"]]],[10,"readingOptionsForType_pasteboard","","",29,[[["self"],["id"],["id"]],["nspasteboardreadingoptions"]]],[8,"NSMenu","","",N,N],[11,"alloc","","",30,[[["self"]],["id"]]],[11,"new","","",30,[[["self"]],["id"]]],[10,"initWithTitle_","","",30,[[["self"],["id"]],["id"]]],[10,"setAutoenablesItems","","",30,[[["self"],["bool"]]]],[10,"addItem_","","",30,[[["self"],["id"]]]],[10,"addItemWithTitle_action_keyEquivalent","","",30,[[["self"],["id"],["sel"],["id"]],["id"]]],[10,"itemAtIndex_","","",30,[[["self"],["nsinteger"]],["id"]]],[8,"NSMenuItem","","",N,N],[11,"alloc","","",31,[[["self"]],["id"]]],[11,"new","","",31,[[["self"]],["id"]]],[11,"separatorItem","","",31,[[["self"]],["id"]]],[10,"initWithTitle_action_keyEquivalent_","","",31,[[["self"],["id"],["sel"],["id"]],["id"]]],[10,"setKeyEquivalentModifierMask_","","",31,[[["self"],["nseventmodifierflags"]]]],[10,"setSubmenu_","","",31,[[["self"],["id"]]]],[8,"NSWindow","","",N,N],[11,"alloc","","",32,[[["self"]],["id"]]],[10,"initWithContentRect_styleMask_backing_defer_","","",32,[[["self"],["nsrect"],["nswindowstylemask"],["nsbackingstoretype"],["bool"]],["id"]]],[10,"initWithContentRect_styleMask_backing_defer_screen_","","",32,[[["self"],["nsrect"],["nswindowstylemask"],["nsbackingstoretype"],["bool"],["id"]],["id"]]],[10,"styleMask","","",32,[[["self"]],["nswindowstylemask"]]],[10,"setStyleMask_","","",32,[[["self"],["nswindowstylemask"]]]],[10,"toggleFullScreen_","","",32,[[["self"],["id"]]]],[10,"worksWhenModal","","",32,[[["self"]],["bool"]]],[10,"alphaValue","","",32,[[["self"]],["cgfloat"]]],[10,"setAlphaValue_","","",32,[[["self"],["cgfloat"]]]],[10,"backgroundColor","","",32,[[["self"]],["id"]]],[10,"setBackgroundColor_","","",32,[[["self"],["id"]]]],[10,"colorSpace","","",32,[[["self"]],["id"]]],[10,"setColorSpace_","","",32,[[["self"],["id"]]]],[10,"contentView","","",32,[[["self"]],["id"]]],[10,"setContentView_","","",32,[[["self"],["id"]]]],[10,"canHide","","",32,[[["self"]],["bool"]]],[10,"setCanHide_","","",32,[[["self"],["bool"]]]],[10,"hidesOnDeactivate","","",32,[[["self"]],["bool"]]],[10,"setHidesOnDeactivate_","","",32,[[["self"],["bool"]]]],[10,"collectionBehavior","","",32,[[["self"]],["nswindowcollectionbehavior"]]],[10,"setCollectionBehavior_","","",32,[[["self"],["nswindowcollectionbehavior"]]]],[10,"setOpaque_","","",32,[[["self"],["bool"]]]],[10,"hasShadow","","",32,[[["self"]],["bool"]]],[10,"setHasShadow_","","",32,[[["self"],["bool"]]]],[10,"invalidateShadow","","",32,[[["self"]]]],[10,"autorecalculatesContentBorderThicknessForEdge_","","",32,[[["self"],["nsrectedge"]],["bool"]]],[10,"setAutorecalculatesContentBorderThickness_forEdge_","","",32,[[["self"],["bool"],["nsrectedge"]],["bool"]]],[10,"contentBorderThicknessForEdge_","","",32,[[["self"],["nsrectedge"]],["cgfloat"]]],[10,"setContentBorderThickness_forEdge_","","",32,[[["self"],["cgfloat"],["nsrectedge"]]]],[10,"delegate","","",32,[[["self"]],["id"]]],[10,"setDelegate_","","",32,[[["self"],["id"]]]],[10,"preventsApplicationTerminationWhenModal","","",32,[[["self"]],["bool"]]],[10,"setPreventsApplicationTerminationWhenModal_","","",32,[[["self"],["bool"]]]],[10,"contentRectForFrameRect_styleMask_","","",32,[[["self"],["nsrect"],["nswindowstylemask"]],["nsrect"]]],[10,"frameRectForContentRect_styleMask_","","",32,[[["self"],["nsrect"],["nswindowstylemask"]],["nsrect"]]],[10,"minFrameWidthWithTitle_styleMask_","","",32,[[["self"],["id"],["nswindowstylemask"]],["cgfloat"]]],[10,"contentRectForFrameRect_","","",32,[[["self"],["nsrect"]],["nsrect"]]],[10,"frameRectForContentRect_","","",32,[[["self"],["nsrect"]],["nsrect"]]],[10,"drawers","","",32,[[["self"]],["id"]]],[10,"windowController","","",32,[[["self"]],["id"]]],[10,"setWindowController_","","",32,[[["self"],["id"]]]],[10,"frame","","",32,[[["self"]],["nsrect"]]],[10,"setFrameOrigin_","","",32,[[["self"],["nspoint"]]]],[10,"setFrameTopLeftPoint_","","",32,[[["self"],["nspoint"]]]],[10,"constrainFrameRect_toScreen_","","",32,[[["self"],["nsrect"],["id"]]]],[10,"cascadeTopLeftFromPoint_","","",32,[[["self"],["nspoint"]],["nspoint"]]],[10,"setFrame_display_","","",32,[[["self"],["nsrect"],["bool"]]]],[10,"setFrame_displayViews_","","",32,[[["self"],["nsrect"],["bool"]]]],[10,"aspectRatio","","",32,[[["self"]],["nssize"]]],[10,"setAspectRatio_","","",32,[[["self"],["nssize"]]]],[10,"minSize","","",32,[[["self"]],["nssize"]]],[10,"setMinSize_","","",32,[[["self"],["nssize"]]]],[10,"maxSize","","",32,[[["self"]],["nssize"]]],[10,"setMaxSize_","","",32,[[["self"],["nssize"]]]],[10,"performZoom_","","",32,[[["self"],["id"]]]],[10,"zoom_","","",32,[[["self"],["id"]]]],[10,"resizeFlags","","",32,[[["self"]],["nsinteger"]]],[10,"showsResizeIndicator","","",32,[[["self"]],["bool"]]],[10,"setShowsResizeIndicator_","","",32,[[["self"],["bool"]]]],[10,"resizeIncrements","","",32,[[["self"]],["nssize"]]],[10,"setResizeIncrements_","","",32,[[["self"],["nssize"]]]],[10,"preservesContentDuringLiveResize","","",32,[[["self"]],["bool"]]],[10,"setPreservesContentDuringLiveResize_","","",32,[[["self"],["bool"]]]],[10,"inLiveResize","","",32,[[["self"]],["bool"]]],[10,"contentAspectRatio","","",32,[[["self"]],["nssize"]]],[10,"setContentAspectRatio_","","",32,[[["self"],["nssize"]]]],[10,"contentMinSize","","",32,[[["self"]],["nssize"]]],[10,"setContentMinSize_","","",32,[[["self"],["nssize"]]]],[10,"contentSize","","",32,[[["self"]],["nssize"]]],[10,"setContentSize_","","",32,[[["self"],["nssize"]]]],[10,"contentMaxSize","","",32,[[["self"]],["nssize"]]],[10,"setContentMaxSize_","","",32,[[["self"],["nssize"]]]],[10,"contentResizeIncrements","","",32,[[["self"]],["nssize"]]],[10,"setContentResizeIncrements_","","",32,[[["self"],["nssize"]]]],[10,"isVisible","","",32,[[["self"]],["bool"]]],[10,"occlusionState","","",32,[[["self"]],["nswindowocclusionstate"]]],[10,"orderOut_","","",32,[[["self"],["id"]]]],[10,"orderBack_","","",32,[[["self"],["id"]]]],[10,"orderFront_","","",32,[[["self"],["id"]]]],[10,"orderFrontRegardless","","",32,[[["self"]]]],[10,"orderFrontWindow_relativeTo_","","",32,[[["self"],["nswindoworderingmode"],["nsinteger"]]]],[10,"level","","",32,[[["self"]],["nsinteger"]]],[10,"setLevel_","","",32,[[["self"],["nsinteger"]]]],[10,"canBecomeKeyWindow","","",32,[[["self"]],["bool"]]],[10,"makeKeyWindow","","",32,[[["self"]]]],[10,"makeKeyAndOrderFront_","","",32,[[["self"],["id"]]]],[10,"canBecomeMainWindow","","",32,[[["self"]],["bool"]]],[10,"makeMainWindow","","",32,[[["self"]]]],[10,"toolbar","","",32,[[["self"]],["id"]]],[10,"setToolbar_","","",32,[[["self"],["id"]]]],[10,"runToolbarCustomizationPalette","","",32,[[["self"],["id"]]]],[10,"standardWindowButton_","","",32,[[["self"],["nswindowbutton"]],["id"]]],[10,"initialFirstResponder","","",32,[[["self"]],["id"]]],[10,"firstResponder","","",32,[[["self"]],["id"]]],[10,"setInitialFirstResponder_","","",32,[[["self"],["id"]]]],[10,"makeFirstResponder_","","",32,[[["self"],["id"]],["bool"]]],[10,"keyDown_","","",32,[[["self"],["id"]]]],[10,"acceptsMouseMovedEvents","","",32,[[["self"]],["bool"]]],[10,"ignoresMouseEvents","","",32,[[["self"]],["bool"]]],[10,"setIgnoresMouseEvents_","","",32,[[["self"],["bool"]]]],[10,"mouseLocationOutsideOfEventStream","","",32,[[["self"]],["nspoint"]]],[10,"setAcceptsMouseMovedEvents_","","",32,[[["self"],["bool"]]]],[10,"windowNumberAtPoint_belowWindowWithWindowNumber_","","",32,[[["self"],["nspoint"],["nsinteger"]],["nsinteger"]]],[10,"backingScaleFactor","","",32,[[["self"]],["cgfloat"]]],[10,"backingAlignedRect_options_","","",32,[[["self"],["nsrect"],["nsalignmentoptions"]],["nsrect"]]],[10,"convertRectFromBacking_","","",32,[[["self"],["nsrect"]],["nsrect"]]],[10,"convertRectToBacking_","","",32,[[["self"],["nsrect"]],["nsrect"]]],[10,"convertRectToScreen_","","",32,[[["self"],["nsrect"]],["nsrect"]]],[10,"convertRectFromScreen_","","",32,[[["self"],["nsrect"]],["nsrect"]]],[10,"setDocumentEdited_","","",32,[[["self"],["bool"]]]],[10,"title","","",32,[[["self"]],["id"]]],[10,"setTitle_","","",32,[[["self"],["id"]]]],[10,"setTitleWithRepresentedFilename_","","",32,[[["self"],["id"]]]],[10,"setTitleVisibility_","","",32,[[["self"],["nswindowtitlevisibility"]]]],[10,"setTitlebarAppearsTransparent_","","",32,[[["self"],["bool"]]]],[10,"representedFilename","","",32,[[["self"]],["id"]]],[10,"setRepresentedFilename_","","",32,[[["self"],["id"]]]],[10,"representedURL","","",32,[[["self"]],["id"]]],[10,"setRepresentedURL_","","",32,[[["self"],["id"]]]],[10,"screen","","",32,[[["self"]],["id"]]],[10,"deepestScreen","","",32,[[["self"]],["id"]]],[10,"displaysWhenScreenProfileChanges","","",32,[[["self"]],["bool"]]],[10,"setDisplaysWhenScreenProfileChanges_","","",32,[[["self"],["bool"]]]],[10,"setMovableByWindowBackground_","","",32,[[["self"],["bool"]]]],[10,"setMovable_","","",32,[[["self"],["bool"]]]],[10,"center","","",32,[[["self"]]]],[10,"performClose_","","",32,[[["self"],["id"]]]],[10,"close","","",32,[[["self"]]]],[10,"setReleasedWhenClosed_","","",32,[[["self"],["bool"]]]],[10,"performMiniaturize_","","",32,[[["self"],["id"]]]],[10,"miniaturize_","","",32,[[["self"],["id"]]]],[10,"deminiaturize_","","",32,[[["self"],["id"]]]],[10,"miniwindowImage","","",32,[[["self"]],["id"]]],[10,"setMiniwindowImage_","","",32,[[["self"],["id"]]]],[10,"miniwindowTitle","","",32,[[["self"]],["id"]]],[10,"setMiniwindowTitle_","","",32,[[["self"],["id"]]]],[8,"NSView","","",N,N],[11,"alloc","","",33,[[["self"]],["id"]]],[10,"init","","",33,[[["self"]],["id"]]],[10,"initWithFrame_","","",33,[[["self"],["nsrect"]],["id"]]],[10,"bounds","","",33,[[["self"]],["nsrect"]]],[10,"frame","","",33,[[["self"]],["nsrect"]]],[10,"display_","","",33,[[["self"]]]],[10,"setWantsBestResolutionOpenGLSurface_","","",33,[[["self"],["bool"]]]],[10,"convertPoint_fromView_","","",33,[[["self"],["nspoint"],["id"]],["nspoint"]]],[10,"addSubview_","","",33,[[["self"],["id"]]]],[10,"superview","","",33,[[["self"]],["id"]]],[10,"removeFromSuperview","","",33,[[["self"]]]],[10,"setAutoresizingMask_","","",33,[[["self"],["nsautoresizingmaskoptions"]]]],[10,"wantsLayer","","",33,[[["self"]],["bool"]]],[10,"setWantsLayer","","",33,[[["self"],["bool"]]]],[10,"layer","","",33,[[["self"]],["id"]]],[10,"setLayer","","",33,[[["self"],["id"]]]],[10,"widthAnchor","","",33,[[["self"]],["id"]]],[10,"heightAnchor","","",33,[[["self"]],["id"]]],[10,"convertRectToBacking","","",33,[[["self"],["nsrect"]],["nsrect"]]],[8,"NSOpenGLView","","",N,N],[11,"alloc","","",34,[[["self"]],["id"]]],[10,"initWithFrame_pixelFormat_","","",34,[[["self"],["nsrect"],["id"]],["id"]]],[10,"display_","","",34,[[["self"]]]],[10,"setOpenGLContext_","","",34,[[["self"],["id"]]]],[10,"setPixelFormat_","","",34,[[["self"],["id"]]]],[8,"NSOpenGLPixelFormat","","",N,N],[11,"alloc","","",35,[[["self"]],["id"]]],[10,"initWithAttributes_","","",35,N],[10,"getValues_forAttribute_forVirtualScreen_","","",35,N],[10,"numberOfVirtualScreens","","",35,[[["self"]],["glint"]]],[8,"NSOpenGLContext","","",N,N],[11,"alloc","","",36,[[["self"]],["id"]]],[10,"initWithFormat_shareContext_","","",36,[[["self"],["id"],["id"]],["id"]]],[10,"initWithCGLContextObj_","","",36,[[["self"],["cglcontextobj"]],["id"]]],[10,"clearCurrentContext","","",36,[[["self"]]]],[10,"currentContext","","",36,[[["self"]],["id"]]],[10,"makeCurrentContext","","",36,[[["self"]]]],[10,"setView_","","",36,[[["self"],["id"]]]],[10,"view","","",36,[[["self"]],["id"]]],[10,"clearDrawable","","",36,[[["self"]]]],[10,"update","","",36,[[["self"]]]],[10,"flushBuffer","","",36,[[["self"]]]],[10,"setValues_forParameter_","","",36,N],[10,"getValues_forParameter_","","",36,N],[10,"setCurrentVirtualScreen_","","",36,[[["self"],["glint"]]]],[10,"currentVirtualScreen","","",36,[[["self"]],["glint"]]],[10,"CGLContextObj","","",36,[[["self"]],["cglcontextobj"]]],[8,"NSEvent","","",N,N],[10,"keyEventWithType_location_modifierFlags_timestamp_windowNumber_context_characters_charactersIgnoringModifiers_isARepeat_keyCode_","","",37,[[["self"],["nseventtype"],["nspoint"],["nseventmodifierflags"],["nstimeinterval"],["nsinteger"],["id"],["id"],["id"],["bool"],["c_ushort"]],["id"]]],[10,"mouseEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_clickCount_pressure_","","",37,[[["self"],["nseventtype"],["nspoint"],["nseventmodifierflags"],["nstimeinterval"],["nsinteger"],["id"],["nsinteger"],["nsinteger"],["c_float"]],["id"]]],[10,"enterExitEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_trackingNumber_userData_","","",37,N],[10,"otherEventWithType_location_modifierFlags_timestamp_windowNumber_context_subtype_data1_data2_","","",37,[[["self"],["nseventtype"],["nspoint"],["nseventmodifierflags"],["nstimeinterval"],["nsinteger"],["id"],["nseventsubtype"],["nsinteger"],["nsinteger"]],["id"]]],[10,"eventWithEventRef_","","",37,N],[10,"eventWithCGEvent_","","",37,N],[10,"context","","",37,[[["self"]],["id"]]],[10,"locationInWindow","","",37,[[["self"]],["nspoint"]]],[10,"modifierFlags","","",37,[[["self"]],["nseventmodifierflags"]]],[10,"timestamp","","",37,[[["self"]],["nstimeinterval"]]],[10,"eventType","","",37,[[["self"]],["nseventtype"]]],[10,"window","","",37,[[["self"]],["id"]]],[10,"windowNumber","","",37,[[["self"]],["nsinteger"]]],[10,"eventRef","","",37,N],[10,"CGEvent","","",37,N],[10,"currentModifierFlags","","",37,[[["self"]],["nseventmodifierflags"]]],[10,"keyRepeatDelay","","",37,[[["self"]],["nstimeinterval"]]],[10,"keyRepeatInterval","","",37,[[["self"]],["nstimeinterval"]]],[10,"characters","","",37,[[["self"]],["id"]]],[10,"charactersIgnoringModifiers","","",37,[[["self"]],["id"]]],[10,"keyCode","","",37,[[["self"]],["c_ushort"]]],[10,"pressedMouseButtons","","",37,[[["self"]],["nsuinteger"]]],[10,"doubleClickInterval","","",37,[[["self"]],["nstimeinterval"]]],[10,"mouseLocation","","",37,[[["self"]],["nspoint"]]],[10,"buttonNumber","","",37,[[["self"]],["nsinteger"]]],[10,"clickCount","","",37,[[["self"]],["nsinteger"]]],[10,"pressure","","",37,[[["self"]],["c_float"]]],[10,"stage","","",37,[[["self"]],["nsinteger"]]],[10,"setMouseCoalescingEnabled_","","",37,[[["self"],["bool"]]]],[10,"isMouseCoalescingEnabled","","",37,[[["self"]],["bool"]]],[10,"eventNumber","","",37,[[["self"]],["nsinteger"]]],[10,"trackingNumber","","",37,[[["self"]],["nsinteger"]]],[10,"trackingArea","","",37,[[["self"]],["id"]]],[10,"userData","","",37,N],[10,"data1","","",37,[[["self"]],["nsinteger"]]],[10,"data2","","",37,[[["self"]],["nsinteger"]]],[10,"subtype","","",37,[[["self"]],["nseventsubtype"]]],[10,"deltaX","","",37,[[["self"]],["cgfloat"]]],[10,"deltaY","","",37,[[["self"]],["cgfloat"]]],[10,"deltaZ","","",37,[[["self"]],["cgfloat"]]],[10,"capabilityMask","","",37,[[["self"]],["nsuinteger"]]],[10,"deviceID","","",37,[[["self"]],["nsuinteger"]]],[10,"pointingDeviceID","","",37,[[["self"]],["nsuinteger"]]],[10,"pointingDeviceSerialNumber","","",37,[[["self"]],["nsuinteger"]]],[10,"pointingDeviceType","","",37,[[["self"]],["nspointingdevicetype"]]],[10,"systemTabletID","","",37,[[["self"]],["nsuinteger"]]],[10,"tabletID","","",37,[[["self"]],["nsuinteger"]]],[10,"uniqueID","","",37,[[["self"]],["c_ulonglong"]]],[10,"vendorID","","",37,[[["self"]],["nsuinteger"]]],[10,"vendorPointingDeviceType","","",37,[[["self"]],["nsuinteger"]]],[10,"absoluteX","","",37,[[["self"]],["nsinteger"]]],[10,"absoluteY","","",37,[[["self"]],["nsinteger"]]],[10,"absoluteZ","","",37,[[["self"]],["nsinteger"]]],[10,"buttonMask","","",37,[[["self"]],["nseventbuttonmask"]]],[10,"rotation","","",37,[[["self"]],["c_float"]]],[10,"tangentialPressure","","",37,[[["self"]],["c_float"]]],[10,"tilt","","",37,[[["self"]],["nspoint"]]],[10,"vendorDefined","","",37,[[["self"]],["id"]]],[10,"startPeriodicEventsAfterDelay_withPeriod_","","",37,[[["self"],["nstimeinterval"],["nstimeinterval"]]]],[10,"stopPeriodicEvents","","",37,[[["self"]]]],[10,"magnification","","",37,[[["self"]],["cgfloat"]]],[10,"touchesMatchingPhase_inView_","","",37,[[["self"],["nstouchphase"],["id"]],["id"]]],[10,"isSwipeTrackingFromScrollEventsEnabled","","",37,[[["self"]],["bool"]]],[10,"removeMonitor_","","",37,[[["self"],["id"]]]],[10,"hasPreciseScrollingDeltas","","",37,[[["self"]],["bool"]]],[10,"scrollingDeltaX","","",37,[[["self"]],["cgfloat"]]],[10,"scrollingDeltaY","","",37,[[["self"]],["cgfloat"]]],[10,"momentumPhase","","",37,[[["self"]],["nseventphase"]]],[10,"phase","","",37,[[["self"]],["nseventphase"]]],[10,"locationInNode_","","",37,[[["self"],["id"]],["cgpoint"]]],[8,"NSScreen","","",N,N],[10,"mainScreen","","",38,[[["self"]],["id"]]],[10,"deepestScreen","","",38,[[["self"]],["id"]]],[10,"screens","","",38,[[["self"]],["id"]]],[10,"depth","","",38,[[["self"]],["nswindowdepth"]]],[10,"frame","","",38,[[["self"]],["nsrect"]]],[10,"supportedWindowDepths","","",38,N],[10,"deviceDescription","","",38,[[["self"]],["id"]]],[10,"visibleFrame","","",38,[[["self"]],["nsrect"]]],[10,"colorSpace","","",38,[[["self"]],["id"]]],[10,"screensHaveSeparateSpaces","","",38,[[["self"]],["bool"]]],[10,"backingAlignedRect_options_","","",38,[[["self"],["nsrect"],["nsalignmentoptions"]],["nsrect"]]],[10,"backingScaleFactor","","",38,[[["self"]],["cgfloat"]]],[10,"convertRectFromBacking_","","",38,[[["self"],["nsrect"]],["nsrect"]]],[10,"convertRectToBacking_","","",38,[[["self"],["nsrect"]],["nsrect"]]],[8,"NSButton","","",N,N],[10,"setImage_","","",39,[[["self"],["id"]]]],[10,"setBezelStyle_","","",39,[[["self"],["nsbezelstyle"]]]],[10,"setTitle_","","",39,[[["self"],["id"]]]],[11,"alloc","","",39,[[["self"]],["id"]]],[10,"initWithFrame_","","",39,[[["self"],["nsrect"]],["id"]]],[8,"NSImage","","",N,N],[11,"alloc","","",40,[[["self"]],["id"]]],[10,"initByReferencingFile_","","",40,[[["self"],["id"]],["id"]]],[10,"initWithContentsOfFile_","","",40,[[["self"],["id"]],["id"]]],[10,"initWithData_","","",40,[[["self"],["id"]],["id"]]],[10,"initWithDataIgnoringOrientation_","","",40,[[["self"],["id"]],["id"]]],[10,"initWithPasteboard_","","",40,[[["self"],["id"]],["id"]]],[10,"initWithSize_flipped_drawingHandler_","","",40,N],[10,"initWithSize_","","",40,[[["self"],["nssize"]],["id"]]],[11,"imageNamed_","","",40,[[["self"],["id"]],["id"]]],[10,"name","","",40,[[["self"]],["id"]]],[10,"setName_","","",40,[[["self"],["id"]],["bool"]]],[10,"size","","",40,[[["self"]],["nssize"]]],[10,"template","","",40,[[["self"]],["bool"]]],[10,"canInitWithPasteboard_","","",40,[[["self"],["id"]],["bool"]]],[10,"imageTypes","","",40,[[["self"]],["id"]]],[10,"imageUnfilteredTypes","","",40,[[["self"]],["id"]]],[10,"addRepresentation_","","",40,[[["self"],["id"]]]],[10,"addRepresentations_","","",40,[[["self"],["id"]]]],[10,"representations","","",40,[[["self"]],["id"]]],[10,"removeRepresentation_","","",40,[[["self"],["id"]]]],[10,"bestRepresentationForRect_context_hints_","","",40,[[["self"],["nsrect"],["id"],["id"]],["id"]]],[10,"prefersColorMatch","","",40,[[["self"]],["bool"]]],[10,"usesEPSOnResolutionMismatch","","",40,[[["self"]],["bool"]]],[10,"matchesOnMultipleResolution","","",40,[[["self"]],["bool"]]],[10,"drawInRect_","","",40,[[["self"],["nsrect"]]]],[10,"drawAtPoint_fromRect_operation_fraction_","","",40,[[["self"],["nspoint"],["nsrect"],["nscompositingoperation"],["cgfloat"]]]],[10,"drawInRect_fromRect_operation_fraction_","","",40,[[["self"],["nsrect"],["nsrect"],["nscompositingoperation"],["cgfloat"]]]],[10,"drawInRect_fromRect_operation_fraction_respectFlipped_hints_","","",40,[[["self"],["nsrect"],["nsrect"],["nscompositingoperation"],["cgfloat"],["bool"],["id"]]]],[10,"drawRepresentation_inRect_","","",40,[[["self"],["id"],["nsrect"]]]],[10,"isValid","","",40,[[["self"]],["bool"]]],[10,"backgroundColor","","",40,[[["self"]],["id"]]],[10,"lockFocus","","",40,[[["self"]]]],[10,"lockFocusFlipped_","","",40,[[["self"],["bool"]]]],[10,"unlockFocus","","",40,[[["self"]]]],[10,"alignmentRect","","",40,[[["self"]],["nsrect"]]],[10,"cacheMode","","",40,[[["self"]],["nsimagecachemode"]]],[10,"recache","","",40,[[["self"]]]],[10,"delegate","","",40,[[["self"]],["id"]]],[10,"TIFFRepresentation","","",40,[[["self"]],["id"]]],[10,"TIFFRepresentationUsingCompression_factor_","","",40,[[["self"],["nstiffcompression"],["f32"]],["id"]]],[10,"cancelIncrementalLoad","","",40,[[["self"]]]],[10,"hitTestRect_withImageDestinationRect_context_hints_flipped_","","",40,[[["self"],["nsrect"],["nsrect"],["id"],["id"],["bool"]],["bool"]]],[10,"accessibilityDescription","","",40,[[["self"]],["id"]]],[10,"layerContentsForContentsScale_","","",40,[[["self"],["cgfloat"]],["id"]]],[10,"recommendedLayerContentsScale_","","",40,[[["self"],["cgfloat"]],["cgfloat"]]],[10,"matchesOnlyOnBestFittingAxis","","",40,[[["self"]],["bool"]]],[8,"NSSound","","",N,N],[11,"canInitWithPasteboard_","","",41,[[["self"],["id"]],["bool"]]],[10,"initWithContentsOfFile_withReference_","","",41,[[["self"],["id"],["bool"]],["id"]]],[10,"initWithContentsOfURL_withReference_","","",41,[[["self"],["id"],["bool"]],["id"]]],[10,"initWithData_","","",41,[[["self"],["id"]],["id"]]],[10,"initWithPasteboard_","","",41,[[["self"],["id"]],["id"]]],[10,"name","","",41,[[["self"]],["id"]]],[10,"volume","","",41,[[["self"]],["f32"]]],[10,"currentTime","","",41,[[["self"]],["nstimeinterval"]]],[10,"loops","","",41,[[["self"]],["bool"]]],[10,"playbackDeviceIdentifier","","",41,[[["self"]],["id"]]],[10,"delegate","","",41,[[["self"]],["id"]]],[11,"soundUnfilteredTypes","","",41,[[["self"]],["id"]]],[11,"soundNamed_","","",41,[[["self"],["id"]],["id"]]],[10,"duration","","",41,[[["self"]],["nstimeinterval"]]],[10,"playing","","",41,[[["self"]],["bool"]]],[10,"pause","","",41,[[["self"]],["bool"]]],[10,"play","","",41,[[["self"]],["bool"]]],[10,"resume","","",41,[[["self"]],["bool"]]],[10,"stop","","",41,[[["self"]],["bool"]]],[10,"writeToPasteboard_","","",41,[[["self"],["id"]]]],[8,"NSStatusItem","","",N,N],[10,"statusBar","","",42,[[["self"]],["id"]]],[10,"button","","",42,[[["self"]],["id"]]],[10,"menu","","",42,[[["self"]],["id"]]],[10,"setMenu_","","",42,[[["self"],["id"]]]],[10,"length","","",42,[[["self"]],["cgfloat"]]],[10,"setLength_","","",42,[[["self"],["cgfloat"]]]],[8,"NSStatusBar","","",N,N],[11,"systemStatusBar","","",43,[[["self"]],["id"]]],[10,"statusItemWithLength_","","",43,[[["self"],["cgfloat"]],["id"]]],[10,"removeStatusItem_","","",43,[[["self"],["id"]]]],[10,"isVertical","","",43,[[["self"]],["bool"]]],[8,"NSTextField","","",N,N],[11,"alloc","","",44,[[["self"]],["id"]]],[10,"initWithFrame_","","",44,[[["self"],["nsrect"]],["id"]]],[10,"setEditable_","","",44,[[["self"],["bool"]]]],[10,"setStringValue_","","",44,[[["self"],["id"]]]],[8,"NSTabView","","",N,N],[11,"new","","",45,[[["self"]],["id"]]],[10,"initWithFrame_","","",45,[[["self"],["nsrect"]],["id"]]],[10,"addTabViewItem_","","",45,[[["self"],["id"]]]],[10,"insertTabViewItem_atIndex_","","",45,[[["self"],["id"],["nsinteger"]]]],[10,"removeTabViewItem_","","",45,[[["self"],["id"]]]],[10,"indexOfTabViewItem_","","",45,[[["self"],["id"]],["id"]]],[10,"indexOfTabViewItemWithIdentifier_","","",45,[[["self"],["id"]],["id"]]],[10,"numberOfTabViewItems","","",45,[[["self"]],["id"]]],[10,"tabViewItemAtIndex_","","",45,[[["self"],["id"]],["id"]]],[10,"tabViewItems","","",45,[[["self"]],["id"]]],[10,"selectFirstTabViewItem_","","",45,[[["self"],["id"]]]],[10,"selectLastTabViewItem_","","",45,[[["self"],["id"]]]],[10,"selectNextTabViewItem_","","",45,[[["self"],["id"]]]],[10,"selectPreviousTabViewItem_","","",45,[[["self"],["id"]]]],[10,"selectTabViewItem_","","",45,[[["self"],["id"]]]],[10,"selectTabViewItemAtIndex_","","",45,[[["self"],["id"]]]],[10,"selectTabViewItemWithIdentifier_","","",45,[[["self"],["id"]]]],[10,"selectedTabViewItem","","",45,[[["self"]],["id"]]],[10,"takeSelectedTabViewItemFromSender_","","",45,[[["self"],["id"]]]],[10,"font","","",45,[[["self"]],["id"]]],[10,"setFont_","","",45,[[["self"],["id"]]]],[10,"tabViewType","","",45,[[["self"]],["nstabviewtype"]]],[10,"setTabViewType_","","",45,[[["self"],["nstabviewtype"]]]],[10,"controlTint","","",45,[[["self"]],["id"]]],[10,"setControlTint_","","",45,[[["self"],["id"]]]],[10,"drawsBackground","","",45,[[["self"]],["bool"]]],[10,"setDrawsBackground_","","",45,[[["self"],["bool"]]]],[10,"minimumSize","","",45,[[["self"]],["id"]]],[10,"contentRect","","",45,[[["self"]],["id"]]],[10,"controlSize","","",45,[[["self"]],["id"]]],[10,"setControlSize_","","",45,[[["self"],["id"]]]],[10,"allowsTruncatedLabels","","",45,[[["self"]],["bool"]]],[10,"setAllowsTruncatedLabels_","","",45,[[["self"],["bool"]]]],[10,"setDelegate_","","",45,[[["self"],["id"]]]],[10,"delegate","","",45,[[["self"]],["id"]]],[10,"tabViewAtPoint_","","",45,[[["self"],["id"]],["id"]]],[8,"NSTabViewItem","","",N,N],[11,"alloc","","",46,[[["self"]],["id"]]],[11,"new","","",46,[[["self"]],["id"]]],[10,"initWithIdentifier_","","",46,[[["self"],["id"]],["id"]]],[10,"drawLabel_inRect_","","",46,[[["self"],["bool"],["nsrect"]]]],[10,"label","","",46,[[["self"]],["id"]]],[10,"setLabel_","","",46,[[["self"],["id"]]]],[10,"sizeOfLabel_","","",46,[[["self"],["bool"]]]],[10,"tabState","","",46,[[["self"]],["nstabstate"]]],[10,"identifier","","",46,[[["self"]],["id"]]],[10,"setIdentifier_","","",46,[[["self"],["id"]]]],[10,"color","","",46,[[["self"]],["id"]]],[10,"setColor_","","",46,[[["self"],["id"]]]],[10,"view","","",46,[[["self"]],["id"]]],[10,"setView_","","",46,[[["self"],["id"]]]],[10,"initialFirstResponder","","",46,[[["self"]],["id"]]],[10,"setInitialFirstResponder_","","",46,[[["self"],["id"]]]],[10,"tabView","","",46,[[["self"]],["id"]]],[10,"tooltip","","",46,[[["self"]],["id"]]],[10,"setTooltip_","","",46,[[["self"],["id"]]]],[8,"NSLayoutConstraint","","",N,N],[10,"activateConstraints","","",47,[[["self"],["id"]],["id"]]],[8,"NSLayoutDimension","","",N,N],[10,"constraintEqualToConstant","","",48,[[["self"],["cgfloat"]],["id"]]],[10,"constraintLessThanOrEqualToConstant","","",48,[[["self"],["cgfloat"]],["id"]]],[10,"constraintGreaterThanOrEqualToConstant","","",48,[[["self"],["cgfloat"]],["id"]]],[8,"NSColor","","",N,N],[10,"clearColor","","",49,[[["self"]],["id"]]],[8,"NSToolbar","","",N,N],[11,"alloc","","",50,[[["self"]],["id"]]],[10,"init_","","",50,[[["self"]],["id"]]],[10,"initWithIdentifier_","","",50,[[["self"],["id"]],["id"]]],[10,"showsBaselineSeparator","","",50,[[["self"]],["bool"]]],[10,"setShowsBaselineSeparator_","","",50,[[["self"],["bool"]]]],[18,"NSApplicationPresentationDefault","","",51,N],[18,"NSApplicationPresentationAutoHideDock","","",51,N],[18,"NSApplicationPresentationHideDock","","",51,N],[18,"NSApplicationPresentationAutoHideMenuBar","","",51,N],[18,"NSApplicationPresentationHideMenuBar","","",51,N],[18,"NSApplicationPresentationDisableAppleMenu","","",51,N],[18,"NSApplicationPresentationDisableProcessSwitching","","",51,N],[18,"NSApplicationPresentationDisableForceQuit","","",51,N],[18,"NSApplicationPresentationDisableSessionTermination","","",51,N],[18,"NSApplicationPresentationDisableHideApplication","","",51,N],[18,"NSApplicationPresentationDisableMenuBarTransparency","","",51,N],[18,"NSApplicationPresentationFullScreen","","",51,N],[18,"NSApplicationPresentationAutoHideToolbar","","",51,N],[11,"empty","","Returns an empty set of flags",51,[[],["nsapplicationpresentationoptions"]]],[11,"all","","Returns the set containing all flags.",51,[[],["nsapplicationpresentationoptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",51,[[["self"]],["nsuinteger"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",51,[[["nsuinteger"]],["option",["nsapplicationpresentationoptions"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",51,[[["nsuinteger"]],["nsapplicationpresentationoptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",51,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",51,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",51,[[["self"],["nsapplicationpresentationoptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",51,[[["self"],["nsapplicationpresentationoptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",51,[[["self"],["nsapplicationpresentationoptions"]]]],[11,"remove","","Removes the specified flags in-place.",51,[[["self"],["nsapplicationpresentationoptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",51,[[["self"],["nsapplicationpresentationoptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",51,[[["self"],["nsapplicationpresentationoptions"],["bool"]]]],[18,"NSBorderlessWindowMask","","",52,N],[18,"NSTitledWindowMask","","",52,N],[18,"NSClosableWindowMask","","",52,N],[18,"NSMiniaturizableWindowMask","","",52,N],[18,"NSResizableWindowMask","","",52,N],[18,"NSTexturedBackgroundWindowMask","","",52,N],[18,"NSUnifiedTitleAndToolbarWindowMask","","",52,N],[18,"NSFullScreenWindowMask","","",52,N],[18,"NSFullSizeContentViewWindowMask","","",52,N],[11,"empty","","Returns an empty set of flags",52,[[],["nswindowstylemask"]]],[11,"all","","Returns the set containing all flags.",52,[[],["nswindowstylemask"]]],[11,"bits","","Returns the raw value of the flags currently stored.",52,[[["self"]],["nsuinteger"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",52,[[["nsuinteger"]],["option",["nswindowstylemask"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",52,[[["nsuinteger"]],["nswindowstylemask"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",52,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",52,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",52,[[["self"],["nswindowstylemask"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",52,[[["self"],["nswindowstylemask"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",52,[[["self"],["nswindowstylemask"]]]],[11,"remove","","Removes the specified flags in-place.",52,[[["self"],["nswindowstylemask"]]]],[11,"toggle","","Toggles the specified flags in-place.",52,[[["self"],["nswindowstylemask"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",52,[[["self"],["nswindowstylemask"],["bool"]]]],[18,"NSWindowAbove","","",53,N],[18,"NSWindowBelow","","",53,N],[18,"NSWindowOut","","",53,N],[11,"empty","","Returns an empty set of flags",53,[[],["nswindoworderingmode"]]],[11,"all","","Returns the set containing all flags.",53,[[],["nswindoworderingmode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",53,[[["self"]],["nsinteger"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",53,[[["nsinteger"]],["option",["nswindoworderingmode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",53,[[["nsinteger"]],["nswindoworderingmode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",53,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",53,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",53,[[["self"],["nswindoworderingmode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",53,[[["self"],["nswindoworderingmode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",53,[[["self"],["nswindoworderingmode"]]]],[11,"remove","","Removes the specified flags in-place.",53,[[["self"],["nswindoworderingmode"]]]],[11,"toggle","","Toggles the specified flags in-place.",53,[[["self"],["nswindoworderingmode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",53,[[["self"],["nswindoworderingmode"],["bool"]]]],[18,"NSAlignMinXInward","","",54,N],[18,"NSAlignMinYInward","","",54,N],[18,"NSAlignMaxXInward","","",54,N],[18,"NSAlignMaxYInward","","",54,N],[18,"NSAlignWidthInward","","",54,N],[18,"NSAlignHeightInward","","",54,N],[18,"NSAlignMinXOutward","","",54,N],[18,"NSAlignMinYOutward","","",54,N],[18,"NSAlignMaxXOutward","","",54,N],[18,"NSAlignMaxYOutward","","",54,N],[18,"NSAlignWidthOutward","","",54,N],[18,"NSAlignHeightOutward","","",54,N],[18,"NSAlignMinXNearest","","",54,N],[18,"NSAlignMinYNearest","","",54,N],[18,"NSAlignMaxXNearest","","",54,N],[18,"NSAlignMaxYNearest","","",54,N],[18,"NSAlignWidthNearest","","",54,N],[18,"NSAlignHeightNearest","","",54,N],[18,"NSAlignRectFlipped","","",54,N],[18,"NSAlignAllEdgesInward","","",54,N],[18,"NSAlignAllEdgesOutward","","",54,N],[18,"NSAlignAllEdgesNearest","","",54,N],[11,"empty","","Returns an empty set of flags",54,[[],["nsalignmentoptions"]]],[11,"all","","Returns the set containing all flags.",54,[[],["nsalignmentoptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",54,[[["self"]],["c_ulonglong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",54,[[["c_ulonglong"]],["option",["nsalignmentoptions"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",54,[[["c_ulonglong"]],["nsalignmentoptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",54,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",54,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",54,[[["self"],["nsalignmentoptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",54,[[["self"],["nsalignmentoptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",54,[[["self"],["nsalignmentoptions"]]]],[11,"remove","","Removes the specified flags in-place.",54,[[["self"],["nsalignmentoptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",54,[[["self"],["nsalignmentoptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",54,[[["self"],["nsalignmentoptions"],["bool"]]]],[18,"NSWindowCollectionBehaviorDefault","","",55,N],[18,"NSWindowCollectionBehaviorCanJoinAllSpaces","","",55,N],[18,"NSWindowCollectionBehaviorMoveToActiveSpace","","",55,N],[18,"NSWindowCollectionBehaviorManaged","","",55,N],[18,"NSWindowCollectionBehaviorTransient","","",55,N],[18,"NSWindowCollectionBehaviorStationary","","",55,N],[18,"NSWindowCollectionBehaviorParticipatesInCycle","","",55,N],[18,"NSWindowCollectionBehaviorIgnoresCycle","","",55,N],[18,"NSWindowCollectionBehaviorFullScreenPrimary","","",55,N],[18,"NSWindowCollectionBehaviorFullScreenAuxiliary","","",55,N],[11,"empty","","Returns an empty set of flags",55,[[],["nswindowcollectionbehavior"]]],[11,"all","","Returns the set containing all flags.",55,[[],["nswindowcollectionbehavior"]]],[11,"bits","","Returns the raw value of the flags currently stored.",55,[[["self"]],["nsuinteger"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",55,[[["nsuinteger"]],["option",["nswindowcollectionbehavior"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",55,[[["nsuinteger"]],["nswindowcollectionbehavior"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",55,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",55,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",55,[[["self"],["nswindowcollectionbehavior"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",55,[[["self"],["nswindowcollectionbehavior"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",55,[[["self"],["nswindowcollectionbehavior"]]]],[11,"remove","","Removes the specified flags in-place.",55,[[["self"],["nswindowcollectionbehavior"]]]],[11,"toggle","","Toggles the specified flags in-place.",55,[[["self"],["nswindowcollectionbehavior"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",55,[[["self"],["nswindowcollectionbehavior"],["bool"]]]],[18,"NSWindowOcclusionStateVisible","","",56,N],[11,"empty","","Returns an empty set of flags",56,[[],["nswindowocclusionstate"]]],[11,"all","","Returns the set containing all flags.",56,[[],["nswindowocclusionstate"]]],[11,"bits","","Returns the raw value of the flags currently stored.",56,[[["self"]],["nsuinteger"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",56,[[["nsuinteger"]],["option",["nswindowocclusionstate"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",56,[[["nsuinteger"]],["nswindowocclusionstate"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",56,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",56,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",56,[[["self"],["nswindowocclusionstate"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",56,[[["self"],["nswindowocclusionstate"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",56,[[["self"],["nswindowocclusionstate"]]]],[11,"remove","","Removes the specified flags in-place.",56,[[["self"],["nswindowocclusionstate"]]]],[11,"toggle","","Toggles the specified flags in-place.",56,[[["self"],["nswindowocclusionstate"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",56,[[["self"],["nswindowocclusionstate"],["bool"]]]],[18,"NSEventSwipeTrackingLockDirection","","",57,N],[18,"NSEventSwipeTrackingClampGestureAmount","","",57,N],[11,"empty","","Returns an empty set of flags",57,[[],["nseventswipetrackingoptions"]]],[11,"all","","Returns the set containing all flags.",57,[[],["nseventswipetrackingoptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",57,[[["self"]],["nsuinteger"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",57,[[["nsuinteger"]],["option",["nseventswipetrackingoptions"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",57,[[["nsuinteger"]],["nseventswipetrackingoptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",57,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",57,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",57,[[["self"],["nseventswipetrackingoptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",57,[[["self"],["nseventswipetrackingoptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",57,[[["self"],["nseventswipetrackingoptions"]]]],[11,"remove","","Removes the specified flags in-place.",57,[[["self"],["nseventswipetrackingoptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",57,[[["self"],["nseventswipetrackingoptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",57,[[["self"],["nseventswipetrackingoptions"],["bool"]]]],[18,"NSEventPhaseNone","","",58,N],[18,"NSEventPhaseBegan","","",58,N],[18,"NSEventPhaseStationary","","",58,N],[18,"NSEventPhaseChanged","","",58,N],[18,"NSEventPhaseEnded","","",58,N],[18,"NSEventPhaseCancelled","","",58,N],[18,"NSEventPhaseMayBegin","","",58,N],[11,"empty","","Returns an empty set of flags",58,[[],["nseventphase"]]],[11,"all","","Returns the set containing all flags.",58,[[],["nseventphase"]]],[11,"bits","","Returns the raw value of the flags currently stored.",58,[[["self"]],["nsuinteger"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",58,[[["nsuinteger"]],["option",["nseventphase"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",58,[[["nsuinteger"]],["nseventphase"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",58,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",58,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",58,[[["self"],["nseventphase"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",58,[[["self"],["nseventphase"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",58,[[["self"],["nseventphase"]]]],[11,"remove","","Removes the specified flags in-place.",58,[[["self"],["nseventphase"]]]],[11,"toggle","","Toggles the specified flags in-place.",58,[[["self"],["nseventphase"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",58,[[["self"],["nseventphase"],["bool"]]]],[18,"NSTouchPhaseBegan","","",59,N],[18,"NSTouchPhaseMoved","","",59,N],[18,"NSTouchPhaseStationary","","",59,N],[18,"NSTouchPhaseEnded","","",59,N],[18,"NSTouchPhaseCancelled","","",59,N],[18,"NSTouchPhaseTouching","","",59,N],[18,"NSTouchPhaseAny","","",59,N],[11,"empty","","Returns an empty set of flags",59,[[],["nstouchphase"]]],[11,"all","","Returns the set containing all flags.",59,[[],["nstouchphase"]]],[11,"bits","","Returns the raw value of the flags currently stored.",59,[[["self"]],["nsuinteger"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",59,[[["nsuinteger"]],["option",["nstouchphase"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",59,[[["nsuinteger"]],["nstouchphase"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",59,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",59,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",59,[[["self"],["nstouchphase"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",59,[[["self"],["nstouchphase"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",59,[[["self"],["nstouchphase"]]]],[11,"remove","","Removes the specified flags in-place.",59,[[["self"],["nstouchphase"]]]],[11,"toggle","","Toggles the specified flags in-place.",59,[[["self"],["nstouchphase"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",59,[[["self"],["nstouchphase"],["bool"]]]],[18,"NSLeftMouseDownMask","","",60,N],[18,"NSLeftMouseUpMask","","",60,N],[18,"NSRightMouseDownMask","","",60,N],[18,"NSRightMouseUpMask","","",60,N],[18,"NSMouseMovedMask","","",60,N],[18,"NSLeftMouseDraggedMask","","",60,N],[18,"NSRightMouseDraggedMask","","",60,N],[18,"NSMouseEnteredMask","","",60,N],[18,"NSMouseExitedMask","","",60,N],[18,"NSKeyDownMask","","",60,N],[18,"NSKeyUpMask","","",60,N],[18,"NSFlagsChangedMask","","",60,N],[18,"NSAppKitDefinedMask","","",60,N],[18,"NSSystemDefinedMask","","",60,N],[18,"NSApplicationDefinedMask","","",60,N],[18,"NSPeriodicMask","","",60,N],[18,"NSCursorUpdateMask","","",60,N],[18,"NSScrollWheelMask","","",60,N],[18,"NSTabletPointMask","","",60,N],[18,"NSTabletProximityMask","","",60,N],[18,"NSOtherMouseDownMask","","",60,N],[18,"NSOtherMouseUpMask","","",60,N],[18,"NSOtherMouseDraggedMask","","",60,N],[18,"NSEventMaskGesture","","",60,N],[18,"NSEventMaskSwipe","","",60,N],[18,"NSEventMaskRotate","","",60,N],[18,"NSEventMaskBeginGesture","","",60,N],[18,"NSEventMaskEndGesture","","",60,N],[18,"NSEventMaskPressure","","",60,N],[18,"NSAnyEventMask","","",60,N],[11,"empty","","Returns an empty set of flags",60,[[],["nseventmask"]]],[11,"all","","Returns the set containing all flags.",60,[[],["nseventmask"]]],[11,"bits","","Returns the raw value of the flags currently stored.",60,[[["self"]],["c_ulonglong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",60,[[["c_ulonglong"]],["option",["nseventmask"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",60,[[["c_ulonglong"]],["nseventmask"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",60,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",60,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",60,[[["self"],["nseventmask"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",60,[[["self"],["nseventmask"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",60,[[["self"],["nseventmask"]]]],[11,"remove","","Removes the specified flags in-place.",60,[[["self"],["nseventmask"]]]],[11,"toggle","","Toggles the specified flags in-place.",60,[[["self"],["nseventmask"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",60,[[["self"],["nseventmask"],["bool"]]]],[11,"from_type","","",60,[[["nseventtype"]],["nseventmask"]]],[18,"NSAlphaShiftKeyMask","","",61,N],[18,"NSShiftKeyMask","","",61,N],[18,"NSControlKeyMask","","",61,N],[18,"NSAlternateKeyMask","","",61,N],[18,"NSCommandKeyMask","","",61,N],[18,"NSNumericPadKeyMask","","",61,N],[18,"NSHelpKeyMask","","",61,N],[18,"NSFunctionKeyMask","","",61,N],[18,"NSDeviceIndependentModifierFlagsMask","","",61,N],[11,"empty","","Returns an empty set of flags",61,[[],["nseventmodifierflags"]]],[11,"all","","Returns the set containing all flags.",61,[[],["nseventmodifierflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",61,[[["self"]],["nsuinteger"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",61,[[["nsuinteger"]],["option",["nseventmodifierflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",61,[[["nsuinteger"]],["nseventmodifierflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",61,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",61,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",61,[[["self"],["nseventmodifierflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",61,[[["self"],["nseventmodifierflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",61,[[["self"],["nseventmodifierflags"]]]],[11,"remove","","Removes the specified flags in-place.",61,[[["self"],["nseventmodifierflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",61,[[["self"],["nseventmodifierflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",61,[[["self"],["nseventmodifierflags"],["bool"]]]],[0,"base","cocoa","",N,N],[6,"BOOL","cocoa::base","The Objective-C `BOOL` type.",N,N],[17,"NO","","The equivalent of false for Objective-C's `BOOL` type.",N,N],[17,"YES","","The equivalent of true for Objective-C's `BOOL` type.",N,N],[5,"selector","","A convenience method to convert the name of a selector to…",N,[[["str"]],["sel"]]],[6,"Class","","",N,N],[6,"id","","",N,N],[6,"SEL","","",N,N],[17,"nil","","",N,N],[17,"Nil","","",N,N],[0,"foundation","cocoa","",N,N],[3,"NSPoint","cocoa::foundation","",N,N],[12,"x","","",62,N],[12,"y","","",62,N],[3,"NSSize","","",N,N],[12,"width","","",63,N],[12,"height","","",63,N],[3,"NSRect","","",N,N],[12,"origin","","",64,N],[12,"size","","",64,N],[3,"NSRange","","",N,N],[12,"location","","",65,N],[12,"length","","",65,N],[3,"NSEnumerationOptions","","",N,N],[3,"NSFastIterator","","",N,N],[3,"NSDataReadingOptions","","",N,N],[3,"NSDataBase64EncodingOptions","","",N,N],[3,"NSDataBase64DecodingOptions","","",N,N],[3,"NSDataWritingOptions","","",N,N],[3,"NSDataSearchOptions","","",N,N],[4,"NSRectEdge","","",N,N],[13,"NSRectMinXEdge","","",66,N],[13,"NSRectMinYEdge","","",66,N],[13,"NSRectMaxXEdge","","",66,N],[13,"NSRectMaxYEdge","","",66,N],[4,"NSComparisonResult","","",N,N],[13,"NSOrderedAscending","","",67,N],[13,"NSOrderedSame","","",67,N],[13,"NSOrderedDescending","","",67,N],[7,"NSDefaultRunLoopMode","","",N,N],[11,"new","","",62,[[["f64"],["f64"]],["nspoint"]]],[11,"new","","",63,[[["f64"],["f64"]],["nssize"]]],[11,"new","","",64,[[["nspoint"],["nssize"]],["nsrect"]]],[11,"as_CGRect","","",64,[[["self"]],["cgrect"]]],[11,"inset","","",64,[[["self"],["cgfloat"],["cgfloat"]],["nsrect"]]],[6,"NSInteger","","",N,N],[6,"NSUInteger","","",N,N],[6,"NSTimeInterval","","",N,N],[6,"NSComparator","","",N,N],[8,"NSValue","","",N,N],[11,"valueWithPoint","","",68,[[["self"],["nspoint"]],["id"]]],[11,"valueWithSize","","",68,[[["self"],["nssize"]],["id"]]],[8,"NSAutoreleasePool","","",N,N],[11,"new","","",69,[[["self"]],["id"]]],[10,"autorelease","","",69,[[["self"]],["self"]]],[10,"drain","","",69,[[["self"]]]],[8,"NSProcessInfo","","",N,N],[11,"processInfo","","",70,[[["self"]],["id"]]],[10,"processName","","",70,[[["self"]],["id"]]],[8,"NSArray","","",N,N],[11,"array","","",71,[[["self"]],["id"]]],[11,"arrayWithObjects","","",71,N],[11,"arrayWithObject","","",71,[[["self"],["id"]],["id"]]],[10,"arrayByAddingObjectFromArray","","",71,[[["self"],["id"]],["id"]]],[10,"arrayByAddingObjectsFromArray","","",71,[[["self"],["id"]],["id"]]],[8,"NSDictionary","","",N,N],[11,"dictionary","","",72,[[["self"]],["id"]]],[11,"dictionaryWithContentsOfFile_","","",72,[[["self"],["id"]],["id"]]],[11,"dictionaryWithContentsOfURL_","","",72,[[["self"],["id"]],["id"]]],[11,"dictionaryWithDictionary_","","",72,[[["self"],["id"]],["id"]]],[11,"dictionaryWithObject_forKey_","","",72,[[["self"],["id"],["id"]],["id"]]],[11,"dictionaryWithObjects_forKeys_","","",72,[[["self"],["id"],["id"]],["id"]]],[11,"dictionaryWithObjects_forKeys_count_","","",72,N],[11,"dictionaryWithObjectsAndKeys_","","",72,[[["self"],["id"]],["id"]]],[10,"init","","",72,[[["self"]],["id"]]],[10,"initWithContentsOfFile_","","",72,[[["self"],["id"]],["id"]]],[10,"initWithContentsOfURL_","","",72,[[["self"],["id"]],["id"]]],[10,"initWithDictionary_","","",72,[[["self"],["id"]],["id"]]],[10,"initWithDictionary_copyItems_","","",72,[[["self"],["id"],["bool"]],["id"]]],[10,"initWithObjects_forKeys_","","",72,[[["self"],["id"],["id"]],["id"]]],[10,"initWithObjects_forKeys_count_","","",72,[[["self"],["id"],["id"],["nsuinteger"]],["id"]]],[10,"initWithObjectsAndKeys_","","",72,[[["self"],["id"]],["id"]]],[11,"sharedKeySetForKeys_","","",72,[[["self"],["id"]],["id"]]],[10,"count","","",72,[[["self"]],["nsuinteger"]]],[10,"isEqualToDictionary_","","",72,[[["self"],["id"]],["bool"]]],[10,"allKeys","","",72,[[["self"]],["id"]]],[10,"allKeysForObject_","","",72,[[["self"],["id"]],["id"]]],[10,"allValues","","",72,[[["self"]],["id"]]],[10,"objectForKey_","","",72,[[["self"],["id"]],["id"]]],[10,"objectForKeyedSubscript_","","",72,[[["self"],["id"]],["id"]]],[10,"objectsForKeys_notFoundMarker_","","",72,[[["self"],["id"],["id"]],["id"]]],[10,"valueForKey_","","",72,[[["self"],["id"]],["id"]]],[10,"keyEnumerator","","",72,[[["self"]],["id"]]],[10,"objectEnumerator","","",72,[[["self"]],["id"]]],[10,"enumerateKeysAndObjectsUsingBlock_","","",72,N],[10,"enumerateKeysAndObjectsWithOptions_usingBlock_","","",72,N],[10,"keysSortedByValueUsingSelector_","","",72,[[["self"],["sel"]],["id"]]],[10,"keysSortedByValueUsingComparator_","","",72,[[["self"],["nscomparator"]],["id"]]],[10,"keysSortedByValueWithOptions_usingComparator_","","",72,[[["self"],["nsenumerationoptions"],["nscomparator"]],["id"]]],[10,"keysOfEntriesPassingTest_","","",72,N],[10,"keysOfEntriesWithOptions_PassingTest_","","",72,N],[10,"writeToFile_atomically_","","",72,[[["self"],["id"],["bool"]],["bool"]]],[10,"writeToURL_atomically_","","",72,[[["self"],["id"],["bool"]],["bool"]]],[10,"fileCreationDate","","",72,[[["self"]],["id"]]],[10,"fileExtensionHidden","","",72,[[["self"]],["bool"]]],[10,"fileGroupOwnerAccountID","","",72,[[["self"]],["id"]]],[10,"fileGroupOwnerAccountName","","",72,[[["self"]],["id"]]],[10,"fileIsAppendOnly","","",72,[[["self"]],["bool"]]],[10,"fileIsImmutable","","",72,[[["self"]],["bool"]]],[10,"fileModificationDate","","",72,[[["self"]],["id"]]],[10,"fileOwnerAccountID","","",72,[[["self"]],["id"]]],[10,"fileOwnerAccountName","","",72,[[["self"]],["id"]]],[10,"filePosixPermissions","","",72,[[["self"]],["nsuinteger"]]],[10,"fileSize","","",72,[[["self"]],["c_ulonglong"]]],[10,"fileSystemFileNumber","","",72,[[["self"]],["nsuinteger"]]],[10,"fileSystemNumber","","",72,[[["self"]],["nsinteger"]]],[10,"fileType","","",72,[[["self"]],["id"]]],[10,"description","","",72,[[["self"]],["id"]]],[10,"descriptionInStringsFileFormat","","",72,[[["self"]],["id"]]],[10,"descriptionWithLocale_","","",72,[[["self"],["id"]],["id"]]],[10,"descriptionWithLocale_indent_","","",72,[[["self"],["id"],["nsuinteger"]],["id"]]],[8,"NSString","","",N,N],[11,"alloc","","",73,[[["self"]],["id"]]],[10,"stringByAppendingString_","","",73,[[["self"],["id"]],["id"]]],[10,"init_str","","",73,[[["self"],["str"]],["self"]]],[10,"UTF8String","","",73,N],[10,"len","","",73,[[["self"]],["usize"]]],[10,"isEqualToString","","",73,[[["self"],["str"]],["bool"]]],[8,"NSDate","","",N,N],[11,"distantPast","","",74,[[["self"]],["id"]]],[11,"distantFuture","","",74,[[["self"]],["id"]]],[8,"NSFastEnumeration","","",N,N],[10,"iter","","",75,[[["self"]],["nsfastiterator"]]],[8,"NSRunLoop","","",N,N],[10,"currentRunLoop","","",76,[[],["self"]]],[10,"performSelector_target_argument_order_modes_","","",76,[[["self"],["sel"],["id"],["id"],["nsuinteger"],["id"]]]],[8,"NSData","","",N,N],[11,"data","","",77,[[["self"]],["id"]]],[11,"dataWithBytes_length_","","",77,N],[11,"dataWithBytesNoCopy_length_","","",77,N],[11,"dataWithBytesNoCopy_length_freeWhenDone_","","",77,N],[11,"dataWithContentsOfFile_","","",77,[[["self"],["id"]],["id"]]],[11,"dataWithContentsOfFile_options_error_","","",77,N],[11,"dataWithContentsOfURL_","","",77,[[["self"],["id"]],["id"]]],[11,"dataWithContentsOfURL_options_error_","","",77,N],[11,"dataWithData_","","",77,[[["self"],["id"]],["id"]]],[10,"initWithBase64EncodedData_options_","","",77,[[["self"],["id"],["nsdatabase64decodingoptions"]],["id"]]],[10,"initWithBase64EncodedString_options_","","",77,[[["self"],["id"],["nsdatabase64decodingoptions"]],["id"]]],[10,"initWithBytes_length_","","",77,N],[10,"initWithBytesNoCopy_length_","","",77,N],[10,"initWithBytesNoCopy_length_deallocator_","","",77,N],[10,"initWithBytesNoCopy_length_freeWhenDone_","","",77,N],[10,"initWithContentsOfFile_","","",77,[[["self"],["id"]],["id"]]],[10,"initWithContentsOfFile_options_error","","",77,N],[10,"initWithContentsOfURL_","","",77,[[["self"],["id"]],["id"]]],[10,"initWithContentsOfURL_options_error_","","",77,N],[10,"initWithData_","","",77,[[["self"],["id"]],["id"]]],[10,"bytes","","",77,N],[10,"description","","",77,[[["self"]],["id"]]],[10,"enumerateByteRangesUsingBlock_","","",77,N],[10,"getBytes_length_","","",77,N],[10,"getBytes_range_","","",77,N],[10,"subdataWithRange_","","",77,[[["self"],["nsrange"]],["id"]]],[10,"rangeOfData_options_range_","","",77,[[["self"],["id"],["nsdatasearchoptions"],["nsrange"]],["nsrange"]]],[10,"base64EncodedDataWithOptions_","","",77,[[["self"],["nsdatabase64encodingoptions"]],["id"]]],[10,"base64EncodedStringWithOptions_","","",77,[[["self"],["nsdatabase64encodingoptions"]],["id"]]],[10,"isEqualToData_","","",77,[[["self"],["id"]],["id"]]],[10,"length","","",77,[[["self"]],["nsuinteger"]]],[10,"writeToFile_atomically_","","",77,[[["self"],["id"],["bool"]],["bool"]]],[10,"writeToFile_options_error_","","",77,N],[10,"writeToURL_atomically_","","",77,[[["self"],["id"],["bool"]],["bool"]]],[10,"writeToURL_options_error_","","",77,N],[11,"new","","",65,[[["nsuinteger"],["nsuinteger"]],["nsrange"]]],[18,"NSEnumerationConcurrent","","",78,N],[18,"NSEnumerationReverse","","",78,N],[11,"empty","","Returns an empty set of flags",78,[[],["nsenumerationoptions"]]],[11,"all","","Returns the set containing all flags.",78,[[],["nsenumerationoptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",78,[[["self"]],["c_ulonglong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",78,[[["c_ulonglong"]],["option",["nsenumerationoptions"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",78,[[["c_ulonglong"]],["nsenumerationoptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",78,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",78,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",78,[[["self"],["nsenumerationoptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",78,[[["self"],["nsenumerationoptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",78,[[["self"],["nsenumerationoptions"]]]],[11,"remove","","Removes the specified flags in-place.",78,[[["self"],["nsenumerationoptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",78,[[["self"],["nsenumerationoptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",78,[[["self"],["nsenumerationoptions"],["bool"]]]],[18,"NSDataReadingMappedIfSafe","","",79,N],[18,"NSDataReadingUncached","","",79,N],[18,"NSDataReadingMappedAlways","","",79,N],[11,"empty","","Returns an empty set of flags",79,[[],["nsdatareadingoptions"]]],[11,"all","","Returns the set containing all flags.",79,[[],["nsdatareadingoptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",79,[[["self"]],["c_ulonglong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",79,[[["c_ulonglong"]],["option",["nsdatareadingoptions"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",79,[[["c_ulonglong"]],["nsdatareadingoptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",79,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",79,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",79,[[["self"],["nsdatareadingoptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",79,[[["self"],["nsdatareadingoptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",79,[[["self"],["nsdatareadingoptions"]]]],[11,"remove","","Removes the specified flags in-place.",79,[[["self"],["nsdatareadingoptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",79,[[["self"],["nsdatareadingoptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",79,[[["self"],["nsdatareadingoptions"],["bool"]]]],[18,"NSDataBase64Encoding64CharacterLineLength","","",80,N],[18,"NSDataBase64Encoding76CharacterLineLength","","",80,N],[18,"NSDataBase64EncodingEndLineWithCarriageReturn","","",80,N],[18,"NSDataBase64EncodingEndLineWithLineFeed","","",80,N],[11,"empty","","Returns an empty set of flags",80,[[],["nsdatabase64encodingoptions"]]],[11,"all","","Returns the set containing all flags.",80,[[],["nsdatabase64encodingoptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",80,[[["self"]],["c_ulonglong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",80,[[["c_ulonglong"]],["option",["nsdatabase64encodingoptions"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",80,[[["c_ulonglong"]],["nsdatabase64encodingoptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",80,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",80,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",80,[[["self"],["nsdatabase64encodingoptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",80,[[["self"],["nsdatabase64encodingoptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",80,[[["self"],["nsdatabase64encodingoptions"]]]],[11,"remove","","Removes the specified flags in-place.",80,[[["self"],["nsdatabase64encodingoptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",80,[[["self"],["nsdatabase64encodingoptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",80,[[["self"],["nsdatabase64encodingoptions"],["bool"]]]],[18,"NSDataBase64DecodingIgnoreUnknownCharacters","","",81,N],[11,"empty","","Returns an empty set of flags",81,[[],["nsdatabase64decodingoptions"]]],[11,"all","","Returns the set containing all flags.",81,[[],["nsdatabase64decodingoptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",81,[[["self"]],["c_ulonglong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",81,[[["c_ulonglong"]],["option",["nsdatabase64decodingoptions"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",81,[[["c_ulonglong"]],["nsdatabase64decodingoptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",81,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",81,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",81,[[["self"],["nsdatabase64decodingoptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",81,[[["self"],["nsdatabase64decodingoptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",81,[[["self"],["nsdatabase64decodingoptions"]]]],[11,"remove","","Removes the specified flags in-place.",81,[[["self"],["nsdatabase64decodingoptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",81,[[["self"],["nsdatabase64decodingoptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",81,[[["self"],["nsdatabase64decodingoptions"],["bool"]]]],[18,"NSDataWritingAtomic","","",82,N],[18,"NSDataWritingWithoutOverwriting","","",82,N],[11,"empty","","Returns an empty set of flags",82,[[],["nsdatawritingoptions"]]],[11,"all","","Returns the set containing all flags.",82,[[],["nsdatawritingoptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",82,[[["self"]],["c_ulonglong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",82,[[["c_ulonglong"]],["option",["nsdatawritingoptions"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",82,[[["c_ulonglong"]],["nsdatawritingoptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",82,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",82,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",82,[[["self"],["nsdatawritingoptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",82,[[["self"],["nsdatawritingoptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",82,[[["self"],["nsdatawritingoptions"]]]],[11,"remove","","Removes the specified flags in-place.",82,[[["self"],["nsdatawritingoptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",82,[[["self"],["nsdatawritingoptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",82,[[["self"],["nsdatawritingoptions"],["bool"]]]],[18,"NSDataSearchBackwards","","",83,N],[18,"NSDataSearchAnchored","","",83,N],[11,"empty","","Returns an empty set of flags",83,[[],["nsdatasearchoptions"]]],[11,"all","","Returns the set containing all flags.",83,[[],["nsdatasearchoptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",83,[[["self"]],["c_ulonglong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",83,[[["c_ulonglong"]],["option",["nsdatasearchoptions"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",83,[[["c_ulonglong"]],["nsdatasearchoptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",83,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",83,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",83,[[["self"],["nsdatasearchoptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",83,[[["self"],["nsdatasearchoptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",83,[[["self"],["nsdatasearchoptions"]]]],[11,"remove","","Removes the specified flags in-place.",83,[[["self"],["nsdatasearchoptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",83,[[["self"],["nsdatasearchoptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",83,[[["self"],["nsdatasearchoptions"],["bool"]]]],[0,"quartzcore","cocoa","",N,N],[3,"CALayer","cocoa::quartzcore","",N,N],[3,"EdgeAntialiasingMask","","",N,N],[3,"CornerMask","","",N,N],[3,"AutoresizingMask","","",N,N],[3,"CARenderer","","",N,N],[3,"CATransform3D","","",N,N],[12,"m11","","",84,N],[12,"m12","","",84,N],[12,"m13","","",84,N],[12,"m14","","",84,N],[12,"m21","","",84,N],[12,"m22","","",84,N],[12,"m23","","",84,N],[12,"m24","","",84,N],[12,"m31","","",84,N],[12,"m32","","",84,N],[12,"m33","","",84,N],[12,"m34","","",84,N],[12,"m41","","",84,N],[12,"m42","","",84,N],[12,"m43","","",84,N],[12,"m44","","",84,N],[3,"CVTimeStamp","","",N,N],[12,"version","","",85,N],[12,"videoTimeScale","","",85,N],[12,"videoTime","","",85,N],[12,"hostTime","","",85,N],[12,"rateScalar","","",85,N],[12,"videoRefreshPeriod","","",85,N],[12,"smpteTime","","",85,N],[12,"flags","","",85,N],[12,"reserved","","",85,N],[3,"CVSMPTETime","","",N,N],[12,"subframes","","",86,N],[12,"subframeDivisor","","",86,N],[12,"counter","","",86,N],[12,"time_type","","",86,N],[12,"flags","","",86,N],[12,"hours","","",86,N],[12,"minutes","","",86,N],[12,"seconds","","",86,N],[12,"frames","","",86,N],[4,"ContentsGravity","","",N,N],[13,"Center","","",87,N],[13,"Top","","",87,N],[13,"Bottom","","",87,N],[13,"Left","","",87,N],[13,"Right","","",87,N],[13,"TopLeft","","",87,N],[13,"TopRight","","",87,N],[13,"BottomLeft","","",87,N],[13,"BottomRight","","",87,N],[13,"Resize","","",87,N],[13,"ResizeAspect","","",87,N],[13,"ResizeAspectFill","","",87,N],[13,"Other","","",87,N],[4,"ContentsFormat","","",N,N],[13,"RGBA8Uint","","",88,N],[13,"RGBA16Float","","",88,N],[13,"Gray8Uint","","",88,N],[13,"Other","","",88,N],[4,"Filter","","",N,N],[13,"Nearest","","",89,N],[13,"Linear","","",89,N],[13,"Trilinear","","",89,N],[13,"Other","","",89,N],[5,"current_media_time","","",N,[[],["cftimeinterval"]]],[0,"transaction","","",N,N],[5,"begin","cocoa::quartzcore::transaction","",N,[[]]],[5,"commit","","",N,[[]]],[5,"flush","","",N,[[]]],[5,"lock","","",N,[[]]],[5,"unlock","","",N,[[]]],[5,"animation_duration","","",N,[[],["cftimeinterval"]]],[5,"set_animation_duration","","",N,[[["cftimeinterval"]]]],[5,"animation_timing_function","","",N,[[],["id"]]],[5,"set_animation_timing_function","","",N,[[["id"]]]],[5,"disable_actions","","",N,[[],["bool"]]],[5,"set_disable_actions","","",N,[[["bool"]]]],[5,"completion_block","","",N,[[],["option",["rcblock"]]]],[5,"set_completion_block","","",N,[[["concreteblock"]]]],[5,"value_for_key","","",N,[[["str"]],["id"]]],[5,"set_value_for_key","","",N,[[["id"],["str"]]]],[6,"CVTimeStampFlags","cocoa::quartzcore","",N,N],[6,"CVSMPTETimeType","","",N,N],[6,"CVSMPTETimeFlags","","",N,N],[17,"kCVTimeStampVideoTimeValid","","",N,N],[17,"kCVTimeStampHostTimeValid","","",N,N],[17,"kCVTimeStampSMPTETimeValid","","",N,N],[17,"kCVTimeStampVideoRefreshPeriodValid","","",N,N],[17,"kCVTimeStampRateScalarValid","","",N,N],[17,"kCVTimeStampTopField","","",N,N],[17,"kCVTimeStampBottomField","","",N,N],[17,"kCVTimeStampVideoHostTimeValid","","",N,N],[17,"kCVTimeStampIsInterlaced","","",N,N],[17,"kCVSMPTETimeType24","","",N,N],[17,"kCVSMPTETimeType25","","",N,N],[17,"kCVSMPTETimeType30Drop","","",N,N],[17,"kCVSMPTETimeType30","","",N,N],[17,"kCVSMPTETimeType2997","","",N,N],[17,"kCVSMPTETimeType2997Drop","","",N,N],[17,"kCVSMPTETimeType60","","",N,N],[17,"kCVSMPTETimeType5994","","",N,N],[17,"kCVSMPTETimeValid","","",N,N],[17,"kCVSMPTETimeRunning","","",N,N],[11,"id","","",90,[[["self"]],["id"]]],[11,"new","","",90,[[],["calayer"]]],[11,"from_layer","","",90,[[["calayer"]],["calayer"]]],[11,"presentation_layer","","",90,[[["self"]],["calayer"]]],[11,"model_layer","","",90,[[["self"]],["calayer"]]],[11,"default_value_for_key","","",90,[[["cfstring"]],["id"]]],[11,"needs_display_for_key","","",90,[[["cfstring"]],["bool"]]],[11,"should_archive_value_for_key","","",90,[[["cfstring"]],["bool"]]],[11,"bounds","","",90,[[["self"]],["cgrect"]]],[11,"set_bounds","","",90,[[["self"],["cgrect"]]]],[11,"position","","",90,[[["self"]],["cgpoint"]]],[11,"set_position","","",90,[[["self"],["cgpoint"]]]],[11,"z_position","","",90,[[["self"]],["cgfloat"]]],[11,"set_z_position","","",90,[[["self"],["cgfloat"]]]],[11,"anchor_point","","",90,[[["self"]],["cgpoint"]]],[11,"set_anchor_point","","",90,[[["self"],["cgpoint"]]]],[11,"anchor_point_z","","",90,[[["self"]],["cgfloat"]]],[11,"set_anchor_point_z","","",90,[[["self"],["cgfloat"]]]],[11,"transform","","",90,[[["self"]],["catransform3d"]]],[11,"set_transform","","",90,[[["self"],["catransform3d"]]]],[11,"affine_transform","","",90,[[["self"]],["cgaffinetransform"]]],[11,"set_affine_transform","","",90,[[["self"],["cgaffinetransform"]]]],[11,"frame","","",90,[[["self"]],["cgrect"]]],[11,"set_frame","","",90,[[["self"],["cgrect"]]]],[11,"is_hidden","","",90,[[["self"]],["bool"]]],[11,"set_hidden","","",90,[[["self"],["bool"]]]],[11,"is_double_sided","","",90,[[["self"]],["bool"]]],[11,"set_double_sided","","",90,[[["self"],["bool"]]]],[11,"is_geometry_flipped","","",90,[[["self"]],["bool"]]],[11,"set_geometry_flipped","","",90,[[["self"],["bool"]]]],[11,"contents_are_flipped","","",90,[[["self"]],["bool"]]],[11,"superlayer","","",90,[[["self"]],["option",["calayer"]]]],[11,"remove_from_superlayer","","",90,[[["self"]]]],[11,"sublayers","","",90,[[["self"]],["cfarray",["calayer"]]]],[11,"add_sublayer","","",90,[[["self"],["calayer"]]]],[11,"insert_sublayer_at_index","","",90,[[["self"],["calayer"],["u32"]]]],[11,"insert_sublayer_below","","",90,[[["self"],["calayer"],["calayer"]]]],[11,"insert_sublayer_above","","",90,[[["self"],["calayer"],["calayer"]]]],[11,"replace_sublayer_with","","",90,[[["self"],["calayer"],["calayer"]]]],[11,"sublayer_transform","","",90,[[["self"]],["catransform3d"]]],[11,"set_sublayer_transform","","",90,[[["self"],["catransform3d"]]]],[11,"mask","","",90,[[["self"]],["option",["calayer"]]]],[11,"set_mask","","",90,[[["self"],["option",["calayer"]]]]],[11,"masks_to_bounds","","",90,[[["self"]],["bool"]]],[11,"set_masks_to_bounds","","",90,[[["self"],["bool"]]]],[11,"convert_point_from_layer","","",90,[[["self"],["cgpoint"],["option",["calayer"]]],["cgpoint"]]],[11,"convert_point_to_layer","","",90,[[["self"],["cgpoint"],["option",["calayer"]]],["cgpoint"]]],[11,"convert_rect_from_layer","","",90,[[["self"],["cgrect"],["option",["calayer"]]],["cgrect"]]],[11,"convert_rect_to_layer","","",90,[[["self"],["cgrect"],["option",["calayer"]]],["cgrect"]]],[11,"convert_time_from_layer","","",90,[[["self"],["cftimeinterval"],["option",["calayer"]]],["cftimeinterval"]]],[11,"convert_time_to_layer","","",90,[[["self"],["cftimeinterval"],["option",["calayer"]]],["cftimeinterval"]]],[11,"hit_test","","",90,[[["self"],["cgpoint"]],["option",["calayer"]]]],[11,"contains_point","","",90,[[["self"],["cgpoint"]],["bool"]]],[11,"contents","","",90,[[["self"]],["id"]]],[11,"set_contents","","",90,[[["self"],["id"]]]],[11,"contents_rect","","",90,[[["self"]],["cgrect"]]],[11,"set_contents_rect","","",90,[[["self"],["cgrect"]]]],[11,"contents_gravity","","",90,[[["self"]],["contentsgravity"]]],[11,"set_contents_gravity","","",90,[[["self"],["contentsgravity"]]]],[11,"contents_scale","","",90,[[["self"]],["cgfloat"]]],[11,"set_contents_scale","","",90,[[["self"],["cgfloat"]]]],[11,"contents_center","","",90,[[["self"]],["cgrect"]]],[11,"set_contents_center","","",90,[[["self"],["cgrect"]]]],[11,"contents_format","","",90,[[["self"]],["contentsformat"]]],[11,"set_contents_format","","",90,[[["self"],["contentsformat"]]]],[11,"minification_filter","","",90,[[["self"]],["filter"]]],[11,"set_minification_filter","","",90,[[["self"],["filter"]]]],[11,"magnification_filter","","",90,[[["self"]],["filter"]]],[11,"set_magnification_filter","","",90,[[["self"],["filter"]]]],[11,"minification_filter_bias","","",90,[[["self"]],["f32"]]],[11,"set_minification_filter_bias","","",90,[[["self"],["f32"]]]],[11,"is_opaque","","",90,[[["self"]],["bool"]]],[11,"set_opaque","","",90,[[["self"],["bool"]]]],[11,"display","","",90,[[["self"]]]],[11,"set_needs_display","","",90,[[["self"]]]],[11,"set_needs_display_in_rect","","",90,[[["self"],["cgrect"]]]],[11,"needs_display","","",90,[[["self"]],["bool"]]],[11,"display_if_needed","","",90,[[["self"]]]],[11,"needs_display_on_bounds_change","","",90,[[["self"]],["bool"]]],[11,"set_needs_display_on_bounds_change","","",90,[[["self"],["bool"]]]],[11,"draws_asynchronously","","",90,[[["self"]],["bool"]]],[11,"set_draws_asynchronously","","",90,[[["self"],["bool"]]]],[11,"draw_in_context","","",90,[[["self"],["cgcontext"]]]],[11,"render_in_context","","",90,[[["self"],["cgcontext"]]]],[11,"edge_antialiasing_mask","","",90,[[["self"]],["edgeantialiasingmask"]]],[11,"set_edge_antialiasing_mask","","",90,[[["self"],["edgeantialiasingmask"]]]],[11,"background_color","","",90,[[["self"]],["option",["cgcolor"]]]],[11,"set_background_color","","",90,[[["self"],["option",["cgcolor"]]]]],[11,"corner_radius","","",90,[[["self"]],["cgfloat"]]],[11,"set_corner_radius","","",90,[[["self"],["cgfloat"]]]],[11,"masked_corners","","",90,[[["self"]],["cornermask"]]],[11,"set_masked_corners","","",90,[[["self"],["cornermask"]]]],[11,"border_width","","",90,[[["self"]],["cgfloat"]]],[11,"set_border_width","","",90,[[["self"],["cgfloat"]]]],[11,"border_color","","",90,[[["self"]],["option",["cgcolor"]]]],[11,"set_border_color","","",90,[[["self"],["option",["cgcolor"]]]]],[11,"opacity","","",90,[[["self"]],["f32"]]],[11,"set_opacity","","",90,[[["self"],["f32"]]]],[11,"compositing_filter","","",90,[[["self"]],["id"]]],[11,"set_compositing_filter","","",90,[[["self"],["id"]]]],[11,"filters","","",90,[[["self"]],["option",["cfarray"]]]],[11,"set_filters","","",90,[[["self"],["option",["cfarray"]]]]],[11,"background_filters","","",90,[[["self"]],["option",["cfarray"]]]],[11,"set_background_filters","","",90,[[["self"],["option",["cfarray"]]]]],[11,"should_rasterize","","",90,[[["self"]],["bool"]]],[11,"set_should_rasterize","","",90,[[["self"],["bool"]]]],[11,"rasterization_scale","","",90,[[["self"]],["cgfloat"]]],[11,"set_rasterization_scale","","",90,[[["self"],["cgfloat"]]]],[11,"shadow_color","","",90,[[["self"]],["option",["cgcolor"]]]],[11,"set_shadow_color","","",90,[[["self"],["option",["cgcolor"]]]]],[11,"shadow_opacity","","",90,[[["self"]],["f32"]]],[11,"set_shadow_opacity","","",90,[[["self"],["f32"]]]],[11,"shadow_offset","","",90,[[["self"]],["cgsize"]]],[11,"set_shadow_offset","","",90,[[["self"],["cgsize"]]]],[11,"shadow_radius","","",90,[[["self"]],["cgfloat"]]],[11,"set_shadow_radius","","",90,[[["self"],["cgfloat"]]]],[11,"shadow_path","","",90,[[["self"]],["option",["cgpath"]]]],[11,"set_shadow_path","","",90,[[["self"],["option",["cgpath"]]]]],[11,"autoresizing_mask","","",90,[[["self"]],["autoresizingmask"]]],[11,"set_autoresizing_mask","","",90,[[["self"],["autoresizingmask"]]]],[11,"layout_manager","","",90,[[["self"]],["id"]]],[11,"set_layout_manager","","",90,[[["self"],["id"]]]],[11,"preferred_frame_size","","",90,[[["self"]],["cgsize"]]],[11,"set_needs_layout","","",90,[[["self"]]]],[11,"needs_layout","","",90,[[["self"]],["bool"]]],[11,"layout_if_needed","","",90,[[["self"]]]],[11,"layout_sublayers","","",90,[[["self"]]]],[11,"resize_sublayers_with_old_size","","",90,[[["self"],["cgsize"]]]],[11,"resize_with_old_superlayer_size","","",90,[[["self"],["cgsize"]]]],[11,"default_action_for_key","","",90,[[["str"]],["id"]]],[11,"action_for_key","","",90,[[["self"],["str"]],["id"]]],[11,"actions","","",90,[[["self"]],["cfdictionary",["cfstringref","cftyperef"]]]],[11,"set_actions","","",90,[[["self"],["cfdictionary",["cfstringref","cftyperef"]]]]],[11,"add_animation_for_key","","",90,[[["self"],["id"],["option",["str"]]]]],[11,"remove_all_animation","","",90,[[["self"]]]],[11,"remove_animation_for_key","","",90,[[["self"],["str"]]]],[11,"animation_keys","","",90,[[["self"]],["vec",["string"]]]],[11,"animation_for_key","","",90,[[["self"],["str"]],["id"]]],[11,"name","","",90,[[["self"]],["string"]]],[11,"set_name","","",90,[[["self"],["str"]]]],[11,"delegate","","",90,[[["self"]],["id"]]],[11,"set_delegate","","",90,[[["self"],["id"]]]],[11,"style","","",90,[[["self"]],["option",["cfdictionary"]]]],[11,"set_style","","",90,[[["self"],["option",["cfdictionary"]]]]],[11,"reload_value_for_key_path","","",90,[[["self"],["str"]]]],[11,"set_contents_opaque","","",90,[[["self"],["bool"]]]],[18,"LEFT_EDGE","","",91,N],[18,"RIGHT_EDGE","","",91,N],[18,"BOTTOM_EDGE","","",91,N],[18,"TOP_EDGE","","",91,N],[11,"empty","","Returns an empty set of flags",91,[[],["edgeantialiasingmask"]]],[11,"all","","Returns the set containing all flags.",91,[[],["edgeantialiasingmask"]]],[11,"bits","","Returns the raw value of the flags currently stored.",91,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",91,[[["u32"]],["option",["edgeantialiasingmask"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",91,[[["u32"]],["edgeantialiasingmask"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",91,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",91,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",91,[[["self"],["edgeantialiasingmask"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",91,[[["self"],["edgeantialiasingmask"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",91,[[["self"],["edgeantialiasingmask"]]]],[11,"remove","","Removes the specified flags in-place.",91,[[["self"],["edgeantialiasingmask"]]]],[11,"toggle","","Toggles the specified flags in-place.",91,[[["self"],["edgeantialiasingmask"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",91,[[["self"],["edgeantialiasingmask"],["bool"]]]],[18,"MIN_X_MIN_Y_CORNER","","",92,N],[18,"MAX_X_MIN_Y_CORNER","","",92,N],[18,"MIN_X_MAX_Y_CORNER","","",92,N],[18,"MAX_X_MAX_Y_CORNER","","",92,N],[11,"empty","","Returns an empty set of flags",92,[[],["cornermask"]]],[11,"all","","Returns the set containing all flags.",92,[[],["cornermask"]]],[11,"bits","","Returns the raw value of the flags currently stored.",92,[[["self"]],["nsuinteger"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",92,[[["nsuinteger"]],["option",["cornermask"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",92,[[["nsuinteger"]],["cornermask"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",92,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",92,[[["self"],["cornermask"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",92,[[["self"],["cornermask"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",92,[[["self"],["cornermask"]]]],[11,"remove","","Removes the specified flags in-place.",92,[[["self"],["cornermask"]]]],[11,"toggle","","Toggles the specified flags in-place.",92,[[["self"],["cornermask"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",92,[[["self"],["cornermask"],["bool"]]]],[18,"NOT_SIZABLE","","",93,N],[18,"MIN_X_MARGIN","","",93,N],[18,"WIDTH_SIZABLE","","",93,N],[18,"MAX_X_MARGIN","","",93,N],[18,"MIN_Y_MARGIN","","",93,N],[18,"HEIGHT_SIZABLE","","",93,N],[18,"MAX_Y_MARGIN","","",93,N],[11,"empty","","Returns an empty set of flags",93,[[],["autoresizingmask"]]],[11,"all","","Returns the set containing all flags.",93,[[],["autoresizingmask"]]],[11,"bits","","Returns the raw value of the flags currently stored.",93,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",93,[[["u32"]],["option",["autoresizingmask"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",93,[[["u32"]],["autoresizingmask"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",93,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",93,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",93,[[["self"],["autoresizingmask"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",93,[[["self"],["autoresizingmask"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",93,[[["self"],["autoresizingmask"]]]],[11,"remove","","Removes the specified flags in-place.",93,[[["self"],["autoresizingmask"]]]],[11,"toggle","","Toggles the specified flags in-place.",93,[[["self"],["autoresizingmask"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",93,[[["self"],["autoresizingmask"],["bool"]]]],[11,"id","","",94,[[["self"]],["id"]]],[11,"from_cgl_context","","",94,[[["cglcontextobj"],["option",["cgcolorspace"]]],["carenderer"]]],[11,"from_metal_texture","","",94,[[["id"],["id"],["option",["cgcolorspace"]]],["carenderer"]]],[11,"layer","","",94,[[["self"]],["option",["calayer"]]]],[11,"set_layer","","",94,[[["self"],["option",["calayer"]]]]],[11,"bounds","","",94,[[["self"]],["cgrect"]]],[11,"set_bounds","","",94,[[["self"],["cgrect"]]]],[11,"begin_frame_at","","",94,[[["self"],["cftimeinterval"],["option",["cvtimestamp"]]]]],[11,"update_bounds","","",94,[[["self"]],["cgrect"]]],[11,"add_update_rect","","",94,[[["self"],["cgrect"]]]],[11,"render","","",94,[[["self"]]]],[11,"next_frame_time","","",94,[[["self"]],["cftimeinterval"]]],[11,"end_frame","","",94,[[["self"]]]],[11,"set_destination","","",94,[[["self"],["id"]]]],[18,"IDENTITY","","",84,N],[11,"from_translation","","",84,[[["cgfloat"],["cgfloat"],["cgfloat"]],["catransform3d"]]],[11,"from_scale","","",84,[[["cgfloat"],["cgfloat"],["cgfloat"]],["catransform3d"]]],[11,"from_rotation","","",84,[[["cgfloat"],["cgfloat"],["cgfloat"],["cgfloat"]],["catransform3d"]]],[11,"affine","","",84,[[["cgaffinetransform"]],["catransform3d"]]],[11,"is_identity","","",84,[[["self"]],["bool"]]],[11,"translate","","",84,[[["self"],["cgfloat"],["cgfloat"],["cgfloat"]],["catransform3d"]]],[11,"scale","","",84,[[["self"],["cgfloat"],["cgfloat"],["cgfloat"]],["catransform3d"]]],[11,"rotate","","",84,[[["self"],["cgfloat"],["cgfloat"],["cgfloat"],["cgfloat"]],["catransform3d"]]],[11,"invert","","",84,[[["self"]],["catransform3d"]]],[11,"is_affine","","",84,[[["self"]],["bool"]]],[11,"to_affine","","",84,[[["self"]],["cgaffinetransform"]]],[11,"into","cocoa::appkit","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","cocoa::foundation","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into_iter","","",97,[[["self"]],["i"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into","cocoa::quartzcore","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"default","cocoa::appkit","",0,[[],["cgpoint"]]],[11,"clone","","",0,[[["self"]],["cgpoint"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"mainMenu","cocoa","",98,[[["self"]],["id"]]],[11,"setActivationPolicy_","","",98,[[["self"],["nsapplicationactivationpolicy"]],["bool"]]],[11,"setPresentationOptions_","","",98,[[["self"],["nsapplicationpresentationoptions"]],["bool"]]],[11,"presentationOptions_","","",98,[[["self"]],["nsapplicationpresentationoptions"]]],[11,"setMainMenu_","","",98,[[["self"],["id"]]]],[11,"setServicesMenu_","","",98,[[["self"],["id"]]]],[11,"setWindowsMenu_","","",98,[[["self"],["id"]]]],[11,"activateIgnoringOtherApps_","","",98,[[["self"],["bool"]]]],[11,"run","","",98,[[["self"]]]],[11,"finishLaunching","","",98,[[["self"]]]],[11,"nextEventMatchingMask_untilDate_inMode_dequeue_","","",98,[[["self"],["nsuinteger"],["id"],["id"],["bool"]],["id"]]],[11,"sendEvent_","","",98,[[["self"],["id"]]]],[11,"postEvent_atStart_","","",98,[[["self"],["id"],["bool"]]]],[11,"stop_","","",98,[[["self"],["id"]]]],[11,"setApplicationIconImage_","","",98,[[["self"],["id"]]]],[11,"requestUserAttention_","","",98,[[["self"],["nsrequestuserattentiontype"]]]],[11,"activateWithOptions_","","",98,[[["self"],["nsapplicationactivationoptions"]],["bool"]]],[11,"releaseGlobally","","",98,[[["self"]]]],[11,"clearContents","","",98,[[["self"]],["nsinteger"]]],[11,"writeObjects","","",98,[[["self"],["id"]],["bool"]]],[11,"sendData_forType","","",98,[[["self"],["id"],["id"]],["bool"]]],[11,"setPropertyList_forType","","",98,[[["self"],["id"],["id"]],["bool"]]],[11,"setString_forType","","",98,[[["self"],["id"],["id"]],["bool"]]],[11,"readObjectsForClasses_options","","",98,[[["self"],["id"],["id"]],["id"]]],[11,"pasteboardItems","","",98,[[["self"]],["id"]]],[11,"indexOfPasteboardItem","","",98,[[["self"],["id"]],["nsinteger"]]],[11,"dataForType","","",98,[[["self"],["id"]],["id"]]],[11,"propertyListForType","","",98,[[["self"],["id"]],["id"]]],[11,"stringForType","","",98,[[["self"],["id"]],["id"]]],[11,"availableTypeFromArray","","",98,[[["self"],["id"]],["id"]]],[11,"canReadItemWithDataConformingToTypes","","",98,[[["self"],["id"]],["bool"]]],[11,"canReadObjectForClasses_options","","",98,[[["self"],["id"],["id"]],["bool"]]],[11,"types","","",98,[[["self"]],["id"]]],[11,"name","","",98,[[["self"]],["id"]]],[11,"changeCount","","",98,[[["self"]],["nsinteger"]]],[11,"declareTypes_owner","","",98,[[["self"],["id"],["id"]],["nsinteger"]]],[11,"addTypes_owner","","",98,[[["self"],["id"],["id"]],["nsinteger"]]],[11,"writeFileContents","","",98,[[["self"],["id"]],["bool"]]],[11,"writeFileWrapper","","",98,[[["self"],["id"]],["bool"]]],[11,"readFileContentsType_toFile","","",98,[[["self"],["id"],["id"]],["id"]]],[11,"readFileWrapper","","",98,[[["self"]],["id"]]],[11,"types","","",98,[[["self"]],["id"]]],[11,"setDataProvider_forTypes","","",98,[[["self"],["id"],["id"]],["bool"]]],[11,"setData_forType","","",98,[[["self"],["id"],["id"]],["bool"]]],[11,"setString_forType","","",98,[[["self"],["id"],["id"]],["bool"]]],[11,"setPropertyList_forType","","",98,[[["self"],["id"],["id"]],["bool"]]],[11,"dataForType","","",98,[[["self"],["id"]],["id"]]],[11,"stringForType","","",98,[[["self"],["id"]],["id"]]],[11,"propertyListForType","","",98,[[["self"],["id"]],["id"]]],[11,"pasteboard_item_provideDataForType","","",98,[[["self"],["id"],["id"],["id"]]]],[11,"pasteboardFinishedWithDataProvider","","",98,[[["self"],["id"]]]],[11,"writableTypesForPasteboard","","",98,[[["self"],["id"]],["id"]]],[11,"writingOptionsForType_pasteboard","","",98,[[["self"],["id"],["id"]],["nspasteboardwritingoptions"]]],[11,"pasteboardPropertyListForType","","",98,[[["self"],["id"]],["id"]]],[11,"initWithPasteboardPropertyList_ofType","","",98,[[["self"],["id"],["id"]],["id"]]],[11,"readableTypesForPasteboard","","",98,[[["self"],["id"]],["id"]]],[11,"readingOptionsForType_pasteboard","","",98,[[["self"],["id"],["id"]],["nspasteboardreadingoptions"]]],[11,"initWithTitle_","","",98,[[["self"],["id"]],["id"]]],[11,"setAutoenablesItems","","",98,[[["self"],["bool"]]]],[11,"addItem_","","",98,[[["self"],["id"]]]],[11,"addItemWithTitle_action_keyEquivalent","","",98,[[["self"],["id"],["sel"],["id"]],["id"]]],[11,"itemAtIndex_","","",98,[[["self"],["nsinteger"]],["id"]]],[11,"initWithTitle_action_keyEquivalent_","","",98,[[["self"],["id"],["sel"],["id"]],["id"]]],[11,"setKeyEquivalentModifierMask_","","",98,[[["self"],["nseventmodifierflags"]]]],[11,"setSubmenu_","","",98,[[["self"],["id"]]]],[11,"initWithContentRect_styleMask_backing_defer_","","",98,[[["self"],["nsrect"],["nswindowstylemask"],["nsbackingstoretype"],["bool"]],["id"]]],[11,"initWithContentRect_styleMask_backing_defer_screen_","","",98,[[["self"],["nsrect"],["nswindowstylemask"],["nsbackingstoretype"],["bool"],["id"]],["id"]]],[11,"styleMask","","",98,[[["self"]],["nswindowstylemask"]]],[11,"setStyleMask_","","",98,[[["self"],["nswindowstylemask"]]]],[11,"toggleFullScreen_","","",98,[[["self"],["id"]]]],[11,"worksWhenModal","","",98,[[["self"]],["bool"]]],[11,"alphaValue","","",98,[[["self"]],["cgfloat"]]],[11,"setAlphaValue_","","",98,[[["self"],["cgfloat"]]]],[11,"backgroundColor","","",98,[[["self"]],["id"]]],[11,"setBackgroundColor_","","",98,[[["self"],["id"]]]],[11,"colorSpace","","",98,[[["self"]],["id"]]],[11,"setColorSpace_","","",98,[[["self"],["id"]]]],[11,"contentView","","",98,[[["self"]],["id"]]],[11,"setContentView_","","",98,[[["self"],["id"]]]],[11,"canHide","","",98,[[["self"]],["bool"]]],[11,"setCanHide_","","",98,[[["self"],["bool"]]]],[11,"hidesOnDeactivate","","",98,[[["self"]],["bool"]]],[11,"setHidesOnDeactivate_","","",98,[[["self"],["bool"]]]],[11,"collectionBehavior","","",98,[[["self"]],["nswindowcollectionbehavior"]]],[11,"setCollectionBehavior_","","",98,[[["self"],["nswindowcollectionbehavior"]]]],[11,"setOpaque_","","",98,[[["self"],["bool"]]]],[11,"hasShadow","","",98,[[["self"]],["bool"]]],[11,"setHasShadow_","","",98,[[["self"],["bool"]]]],[11,"invalidateShadow","","",98,[[["self"]]]],[11,"autorecalculatesContentBorderThicknessForEdge_","","",98,[[["self"],["nsrectedge"]],["bool"]]],[11,"setAutorecalculatesContentBorderThickness_forEdge_","","",98,[[["self"],["bool"],["nsrectedge"]],["bool"]]],[11,"contentBorderThicknessForEdge_","","",98,[[["self"],["nsrectedge"]],["cgfloat"]]],[11,"setContentBorderThickness_forEdge_","","",98,[[["self"],["cgfloat"],["nsrectedge"]]]],[11,"delegate","","",98,[[["self"]],["id"]]],[11,"setDelegate_","","",98,[[["self"],["id"]]]],[11,"preventsApplicationTerminationWhenModal","","",98,[[["self"]],["bool"]]],[11,"setPreventsApplicationTerminationWhenModal_","","",98,[[["self"],["bool"]]]],[11,"contentRectForFrameRect_styleMask_","","",98,[[["self"],["nsrect"],["nswindowstylemask"]],["nsrect"]]],[11,"frameRectForContentRect_styleMask_","","",98,[[["self"],["nsrect"],["nswindowstylemask"]],["nsrect"]]],[11,"minFrameWidthWithTitle_styleMask_","","",98,[[["self"],["id"],["nswindowstylemask"]],["cgfloat"]]],[11,"contentRectForFrameRect_","","",98,[[["self"],["nsrect"]],["nsrect"]]],[11,"frameRectForContentRect_","","",98,[[["self"],["nsrect"]],["nsrect"]]],[11,"drawers","","",98,[[["self"]],["id"]]],[11,"windowController","","",98,[[["self"]],["id"]]],[11,"setWindowController_","","",98,[[["self"],["id"]]]],[11,"frame","","",98,[[["self"]],["nsrect"]]],[11,"setFrameOrigin_","","",98,[[["self"],["nspoint"]]]],[11,"setFrameTopLeftPoint_","","",98,[[["self"],["nspoint"]]]],[11,"constrainFrameRect_toScreen_","","",98,[[["self"],["nsrect"],["id"]]]],[11,"cascadeTopLeftFromPoint_","","",98,[[["self"],["nspoint"]],["nspoint"]]],[11,"setFrame_display_","","",98,[[["self"],["nsrect"],["bool"]]]],[11,"setFrame_displayViews_","","",98,[[["self"],["nsrect"],["bool"]]]],[11,"aspectRatio","","",98,[[["self"]],["nssize"]]],[11,"setAspectRatio_","","",98,[[["self"],["nssize"]]]],[11,"minSize","","",98,[[["self"]],["nssize"]]],[11,"setMinSize_","","",98,[[["self"],["nssize"]]]],[11,"maxSize","","",98,[[["self"]],["nssize"]]],[11,"setMaxSize_","","",98,[[["self"],["nssize"]]]],[11,"performZoom_","","",98,[[["self"],["id"]]]],[11,"zoom_","","",98,[[["self"],["id"]]]],[11,"resizeFlags","","",98,[[["self"]],["nsinteger"]]],[11,"showsResizeIndicator","","",98,[[["self"]],["bool"]]],[11,"setShowsResizeIndicator_","","",98,[[["self"],["bool"]]]],[11,"resizeIncrements","","",98,[[["self"]],["nssize"]]],[11,"setResizeIncrements_","","",98,[[["self"],["nssize"]]]],[11,"preservesContentDuringLiveResize","","",98,[[["self"]],["bool"]]],[11,"setPreservesContentDuringLiveResize_","","",98,[[["self"],["bool"]]]],[11,"inLiveResize","","",98,[[["self"]],["bool"]]],[11,"contentAspectRatio","","",98,[[["self"]],["nssize"]]],[11,"setContentAspectRatio_","","",98,[[["self"],["nssize"]]]],[11,"contentMinSize","","",98,[[["self"]],["nssize"]]],[11,"setContentMinSize_","","",98,[[["self"],["nssize"]]]],[11,"contentSize","","",98,[[["self"]],["nssize"]]],[11,"setContentSize_","","",98,[[["self"],["nssize"]]]],[11,"contentMaxSize","","",98,[[["self"]],["nssize"]]],[11,"setContentMaxSize_","","",98,[[["self"],["nssize"]]]],[11,"contentResizeIncrements","","",98,[[["self"]],["nssize"]]],[11,"setContentResizeIncrements_","","",98,[[["self"],["nssize"]]]],[11,"isVisible","","",98,[[["self"]],["bool"]]],[11,"occlusionState","","",98,[[["self"]],["nswindowocclusionstate"]]],[11,"orderOut_","","",98,[[["self"],["id"]]]],[11,"orderBack_","","",98,[[["self"],["id"]]]],[11,"orderFront_","","",98,[[["self"],["id"]]]],[11,"orderFrontRegardless","","",98,[[["self"]]]],[11,"orderFrontWindow_relativeTo_","","",98,[[["self"],["nswindoworderingmode"],["nsinteger"]]]],[11,"level","","",98,[[["self"]],["nsinteger"]]],[11,"setLevel_","","",98,[[["self"],["nsinteger"]]]],[11,"canBecomeKeyWindow","","",98,[[["self"]],["bool"]]],[11,"makeKeyWindow","","",98,[[["self"]]]],[11,"makeKeyAndOrderFront_","","",98,[[["self"],["id"]]]],[11,"canBecomeMainWindow","","",98,[[["self"]],["bool"]]],[11,"makeMainWindow","","",98,[[["self"]]]],[11,"toolbar","","",98,[[["self"]],["id"]]],[11,"setToolbar_","","",98,[[["self"],["id"]]]],[11,"runToolbarCustomizationPalette","","",98,[[["self"],["id"]]]],[11,"standardWindowButton_","","",98,[[["self"],["nswindowbutton"]],["id"]]],[11,"initialFirstResponder","","",98,[[["self"]],["id"]]],[11,"firstResponder","","",98,[[["self"]],["id"]]],[11,"setInitialFirstResponder_","","",98,[[["self"],["id"]]]],[11,"makeFirstResponder_","","",98,[[["self"],["id"]],["bool"]]],[11,"keyDown_","","",98,[[["self"],["id"]]]],[11,"acceptsMouseMovedEvents","","",98,[[["self"]],["bool"]]],[11,"ignoresMouseEvents","","",98,[[["self"]],["bool"]]],[11,"setIgnoresMouseEvents_","","",98,[[["self"],["bool"]]]],[11,"mouseLocationOutsideOfEventStream","","",98,[[["self"]],["nspoint"]]],[11,"setAcceptsMouseMovedEvents_","","",98,[[["self"],["bool"]]]],[11,"windowNumberAtPoint_belowWindowWithWindowNumber_","","",98,[[["self"],["nspoint"],["nsinteger"]],["nsinteger"]]],[11,"backingScaleFactor","","",98,[[["self"]],["cgfloat"]]],[11,"backingAlignedRect_options_","","",98,[[["self"],["nsrect"],["nsalignmentoptions"]],["nsrect"]]],[11,"convertRectFromBacking_","","",98,[[["self"],["nsrect"]],["nsrect"]]],[11,"convertRectToBacking_","","",98,[[["self"],["nsrect"]],["nsrect"]]],[11,"convertRectToScreen_","","",98,[[["self"],["nsrect"]],["nsrect"]]],[11,"convertRectFromScreen_","","",98,[[["self"],["nsrect"]],["nsrect"]]],[11,"setDocumentEdited_","","",98,[[["self"],["bool"]]]],[11,"title","","",98,[[["self"]],["id"]]],[11,"setTitle_","","",98,[[["self"],["id"]]]],[11,"setTitleWithRepresentedFilename_","","",98,[[["self"],["id"]]]],[11,"setTitleVisibility_","","",98,[[["self"],["nswindowtitlevisibility"]]]],[11,"setTitlebarAppearsTransparent_","","",98,[[["self"],["bool"]]]],[11,"representedFilename","","",98,[[["self"]],["id"]]],[11,"setRepresentedFilename_","","",98,[[["self"],["id"]]]],[11,"representedURL","","",98,[[["self"]],["id"]]],[11,"setRepresentedURL_","","",98,[[["self"],["id"]]]],[11,"screen","","",98,[[["self"]],["id"]]],[11,"deepestScreen","","",98,[[["self"]],["id"]]],[11,"displaysWhenScreenProfileChanges","","",98,[[["self"]],["bool"]]],[11,"setDisplaysWhenScreenProfileChanges_","","",98,[[["self"],["bool"]]]],[11,"setMovableByWindowBackground_","","",98,[[["self"],["bool"]]]],[11,"setMovable_","","",98,[[["self"],["bool"]]]],[11,"center","","",98,[[["self"]]]],[11,"performClose_","","",98,[[["self"],["id"]]]],[11,"close","","",98,[[["self"]]]],[11,"setReleasedWhenClosed_","","",98,[[["self"],["bool"]]]],[11,"performMiniaturize_","","",98,[[["self"],["id"]]]],[11,"miniaturize_","","",98,[[["self"],["id"]]]],[11,"deminiaturize_","","",98,[[["self"],["id"]]]],[11,"miniwindowImage","","",98,[[["self"]],["id"]]],[11,"setMiniwindowImage_","","",98,[[["self"],["id"]]]],[11,"miniwindowTitle","","",98,[[["self"]],["id"]]],[11,"setMiniwindowTitle_","","",98,[[["self"],["id"]]]],[11,"init","","",98,[[["self"]],["id"]]],[11,"initWithFrame_","","",98,[[["self"],["nsrect"]],["id"]]],[11,"bounds","","",98,[[["self"]],["nsrect"]]],[11,"frame","","",98,[[["self"]],["nsrect"]]],[11,"display_","","",98,[[["self"]]]],[11,"setWantsBestResolutionOpenGLSurface_","","",98,[[["self"],["bool"]]]],[11,"convertPoint_fromView_","","",98,[[["self"],["nspoint"],["id"]],["nspoint"]]],[11,"addSubview_","","",98,[[["self"],["id"]]]],[11,"superview","","",98,[[["self"]],["id"]]],[11,"removeFromSuperview","","",98,[[["self"]]]],[11,"setAutoresizingMask_","","",98,[[["self"],["nsautoresizingmaskoptions"]]]],[11,"wantsLayer","","",98,[[["self"]],["bool"]]],[11,"setWantsLayer","","",98,[[["self"],["bool"]]]],[11,"layer","","",98,[[["self"]],["id"]]],[11,"setLayer","","",98,[[["self"],["id"]]]],[11,"widthAnchor","","",98,[[["self"]],["id"]]],[11,"heightAnchor","","",98,[[["self"]],["id"]]],[11,"convertRectToBacking","","",98,[[["self"],["nsrect"]],["nsrect"]]],[11,"initWithFrame_pixelFormat_","","",98,[[["self"],["nsrect"],["id"]],["id"]]],[11,"display_","","",98,[[["self"]]]],[11,"setOpenGLContext_","","",98,[[["self"],["id"]]]],[11,"setPixelFormat_","","",98,[[["self"],["id"]]]],[11,"initWithAttributes_","","",98,N],[11,"getValues_forAttribute_forVirtualScreen_","","",98,N],[11,"numberOfVirtualScreens","","",98,[[["self"]],["glint"]]],[11,"initWithFormat_shareContext_","","",98,[[["self"],["id"],["id"]],["id"]]],[11,"initWithCGLContextObj_","","",98,[[["self"],["cglcontextobj"]],["id"]]],[11,"clearCurrentContext","","",98,[[["self"]]]],[11,"currentContext","","",98,[[["self"]],["id"]]],[11,"makeCurrentContext","","",98,[[["self"]]]],[11,"setView_","","",98,[[["self"],["id"]]]],[11,"view","","",98,[[["self"]],["id"]]],[11,"clearDrawable","","",98,[[["self"]]]],[11,"update","","",98,[[["self"]]]],[11,"flushBuffer","","",98,[[["self"]]]],[11,"setValues_forParameter_","","",98,N],[11,"getValues_forParameter_","","",98,N],[11,"setCurrentVirtualScreen_","","",98,[[["self"],["glint"]]]],[11,"currentVirtualScreen","","",98,[[["self"]],["glint"]]],[11,"CGLContextObj","","",98,[[["self"]],["cglcontextobj"]]],[11,"keyEventWithType_location_modifierFlags_timestamp_windowNumber_context_characters_charactersIgnoringModifiers_isARepeat_keyCode_","","",98,[[["self"],["nseventtype"],["nspoint"],["nseventmodifierflags"],["nstimeinterval"],["nsinteger"],["id"],["id"],["id"],["bool"],["c_ushort"]],["id"]]],[11,"mouseEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_clickCount_pressure_","","",98,[[["self"],["nseventtype"],["nspoint"],["nseventmodifierflags"],["nstimeinterval"],["nsinteger"],["id"],["nsinteger"],["nsinteger"],["c_float"]],["id"]]],[11,"enterExitEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_trackingNumber_userData_","","",98,N],[11,"otherEventWithType_location_modifierFlags_timestamp_windowNumber_context_subtype_data1_data2_","","",98,[[["self"],["nseventtype"],["nspoint"],["nseventmodifierflags"],["nstimeinterval"],["nsinteger"],["id"],["nseventsubtype"],["nsinteger"],["nsinteger"]],["id"]]],[11,"eventWithEventRef_","","",98,N],[11,"eventWithCGEvent_","","",98,N],[11,"context","","",98,[[["self"]],["id"]]],[11,"locationInWindow","","",98,[[["self"]],["nspoint"]]],[11,"modifierFlags","","",98,[[["self"]],["nseventmodifierflags"]]],[11,"timestamp","","",98,[[["self"]],["nstimeinterval"]]],[11,"eventType","","",98,[[["self"]],["nseventtype"]]],[11,"window","","",98,[[["self"]],["id"]]],[11,"windowNumber","","",98,[[["self"]],["nsinteger"]]],[11,"eventRef","","",98,N],[11,"CGEvent","","",98,N],[11,"currentModifierFlags","","",98,[[["self"]],["nseventmodifierflags"]]],[11,"keyRepeatDelay","","",98,[[["self"]],["nstimeinterval"]]],[11,"keyRepeatInterval","","",98,[[["self"]],["nstimeinterval"]]],[11,"characters","","",98,[[["self"]],["id"]]],[11,"charactersIgnoringModifiers","","",98,[[["self"]],["id"]]],[11,"keyCode","","",98,[[["self"]],["c_ushort"]]],[11,"pressedMouseButtons","","",98,[[["self"]],["nsuinteger"]]],[11,"doubleClickInterval","","",98,[[["self"]],["nstimeinterval"]]],[11,"mouseLocation","","",98,[[["self"]],["nspoint"]]],[11,"buttonNumber","","",98,[[["self"]],["nsinteger"]]],[11,"clickCount","","",98,[[["self"]],["nsinteger"]]],[11,"pressure","","",98,[[["self"]],["c_float"]]],[11,"stage","","",98,[[["self"]],["nsinteger"]]],[11,"setMouseCoalescingEnabled_","","",98,[[["self"],["bool"]]]],[11,"isMouseCoalescingEnabled","","",98,[[["self"]],["bool"]]],[11,"eventNumber","","",98,[[["self"]],["nsinteger"]]],[11,"trackingNumber","","",98,[[["self"]],["nsinteger"]]],[11,"trackingArea","","",98,[[["self"]],["id"]]],[11,"userData","","",98,N],[11,"data1","","",98,[[["self"]],["nsinteger"]]],[11,"data2","","",98,[[["self"]],["nsinteger"]]],[11,"subtype","","",98,[[["self"]],["nseventsubtype"]]],[11,"deltaX","","",98,[[["self"]],["cgfloat"]]],[11,"deltaY","","",98,[[["self"]],["cgfloat"]]],[11,"deltaZ","","",98,[[["self"]],["cgfloat"]]],[11,"capabilityMask","","",98,[[["self"]],["nsuinteger"]]],[11,"deviceID","","",98,[[["self"]],["nsuinteger"]]],[11,"pointingDeviceID","","",98,[[["self"]],["nsuinteger"]]],[11,"pointingDeviceSerialNumber","","",98,[[["self"]],["nsuinteger"]]],[11,"pointingDeviceType","","",98,[[["self"]],["nspointingdevicetype"]]],[11,"systemTabletID","","",98,[[["self"]],["nsuinteger"]]],[11,"tabletID","","",98,[[["self"]],["nsuinteger"]]],[11,"uniqueID","","",98,[[["self"]],["c_ulonglong"]]],[11,"vendorID","","",98,[[["self"]],["nsuinteger"]]],[11,"vendorPointingDeviceType","","",98,[[["self"]],["nsuinteger"]]],[11,"absoluteX","","",98,[[["self"]],["nsinteger"]]],[11,"absoluteY","","",98,[[["self"]],["nsinteger"]]],[11,"absoluteZ","","",98,[[["self"]],["nsinteger"]]],[11,"buttonMask","","",98,[[["self"]],["nseventbuttonmask"]]],[11,"rotation","","",98,[[["self"]],["c_float"]]],[11,"tangentialPressure","","",98,[[["self"]],["c_float"]]],[11,"tilt","","",98,[[["self"]],["nspoint"]]],[11,"vendorDefined","","",98,[[["self"]],["id"]]],[11,"startPeriodicEventsAfterDelay_withPeriod_","","",98,[[["self"],["nstimeinterval"],["nstimeinterval"]]]],[11,"stopPeriodicEvents","","",98,[[["self"]]]],[11,"magnification","","",98,[[["self"]],["cgfloat"]]],[11,"touchesMatchingPhase_inView_","","",98,[[["self"],["nstouchphase"],["id"]],["id"]]],[11,"isSwipeTrackingFromScrollEventsEnabled","","",98,[[["self"]],["bool"]]],[11,"removeMonitor_","","",98,[[["self"],["id"]]]],[11,"hasPreciseScrollingDeltas","","",98,[[["self"]],["bool"]]],[11,"scrollingDeltaX","","",98,[[["self"]],["cgfloat"]]],[11,"scrollingDeltaY","","",98,[[["self"]],["cgfloat"]]],[11,"momentumPhase","","",98,[[["self"]],["nseventphase"]]],[11,"phase","","",98,[[["self"]],["nseventphase"]]],[11,"locationInNode_","","",98,[[["self"],["id"]],["cgpoint"]]],[11,"mainScreen","","",98,[[["self"]],["id"]]],[11,"deepestScreen","","",98,[[["self"]],["id"]]],[11,"screens","","",98,[[["self"]],["id"]]],[11,"depth","","",98,[[["self"]],["nswindowdepth"]]],[11,"frame","","",98,[[["self"]],["nsrect"]]],[11,"supportedWindowDepths","","",98,N],[11,"deviceDescription","","",98,[[["self"]],["id"]]],[11,"visibleFrame","","",98,[[["self"]],["nsrect"]]],[11,"colorSpace","","",98,[[["self"]],["id"]]],[11,"screensHaveSeparateSpaces","","",98,[[["self"]],["bool"]]],[11,"backingAlignedRect_options_","","",98,[[["self"],["nsrect"],["nsalignmentoptions"]],["nsrect"]]],[11,"backingScaleFactor","","",98,[[["self"]],["cgfloat"]]],[11,"convertRectFromBacking_","","",98,[[["self"],["nsrect"]],["nsrect"]]],[11,"convertRectToBacking_","","",98,[[["self"],["nsrect"]],["nsrect"]]],[11,"initWithFrame_","","",98,[[["self"],["nsrect"]],["id"]]],[11,"setBezelStyle_","","",98,[[["self"],["nsbezelstyle"]]]],[11,"setTitle_","","",98,[[["self"],["id"]]]],[11,"setImage_","","",98,[[["self"],["id"]]]],[11,"initByReferencingFile_","","",98,[[["self"],["id"]],["id"]]],[11,"initWithContentsOfFile_","","",98,[[["self"],["id"]],["id"]]],[11,"initWithData_","","",98,[[["self"],["id"]],["id"]]],[11,"initWithDataIgnoringOrientation_","","",98,[[["self"],["id"]],["id"]]],[11,"initWithPasteboard_","","",98,[[["self"],["id"]],["id"]]],[11,"initWithSize_flipped_drawingHandler_","","",98,N],[11,"initWithSize_","","",98,[[["self"],["nssize"]],["id"]]],[11,"name","","",98,[[["self"]],["id"]]],[11,"setName_","","",98,[[["self"],["id"]],["bool"]]],[11,"size","","",98,[[["self"]],["nssize"]]],[11,"template","","",98,[[["self"]],["bool"]]],[11,"canInitWithPasteboard_","","",98,[[["self"],["id"]],["bool"]]],[11,"imageTypes","","",98,[[["self"]],["id"]]],[11,"imageUnfilteredTypes","","",98,[[["self"]],["id"]]],[11,"addRepresentation_","","",98,[[["self"],["id"]]]],[11,"addRepresentations_","","",98,[[["self"],["id"]]]],[11,"representations","","",98,[[["self"]],["id"]]],[11,"removeRepresentation_","","",98,[[["self"],["id"]]]],[11,"bestRepresentationForRect_context_hints_","","",98,[[["self"],["nsrect"],["id"],["id"]],["id"]]],[11,"prefersColorMatch","","",98,[[["self"]],["bool"]]],[11,"usesEPSOnResolutionMismatch","","",98,[[["self"]],["bool"]]],[11,"matchesOnMultipleResolution","","",98,[[["self"]],["bool"]]],[11,"drawInRect_","","",98,[[["self"],["nsrect"]]]],[11,"drawAtPoint_fromRect_operation_fraction_","","",98,[[["self"],["nspoint"],["nsrect"],["nscompositingoperation"],["cgfloat"]]]],[11,"drawInRect_fromRect_operation_fraction_","","",98,[[["self"],["nsrect"],["nsrect"],["nscompositingoperation"],["cgfloat"]]]],[11,"drawInRect_fromRect_operation_fraction_respectFlipped_hints_","","",98,[[["self"],["nsrect"],["nsrect"],["nscompositingoperation"],["cgfloat"],["bool"],["id"]]]],[11,"drawRepresentation_inRect_","","",98,[[["self"],["id"],["nsrect"]]]],[11,"isValid","","",98,[[["self"]],["bool"]]],[11,"backgroundColor","","",98,[[["self"]],["id"]]],[11,"lockFocus","","",98,[[["self"]]]],[11,"lockFocusFlipped_","","",98,[[["self"],["bool"]]]],[11,"unlockFocus","","",98,[[["self"]]]],[11,"alignmentRect","","",98,[[["self"]],["nsrect"]]],[11,"cacheMode","","",98,[[["self"]],["nsimagecachemode"]]],[11,"recache","","",98,[[["self"]]]],[11,"delegate","","",98,[[["self"]],["id"]]],[11,"TIFFRepresentation","","",98,[[["self"]],["id"]]],[11,"TIFFRepresentationUsingCompression_factor_","","",98,[[["self"],["nstiffcompression"],["f32"]],["id"]]],[11,"cancelIncrementalLoad","","",98,[[["self"]]]],[11,"hitTestRect_withImageDestinationRect_context_hints_flipped_","","",98,[[["self"],["nsrect"],["nsrect"],["id"],["id"],["bool"]],["bool"]]],[11,"accessibilityDescription","","",98,[[["self"]],["id"]]],[11,"layerContentsForContentsScale_","","",98,[[["self"],["cgfloat"]],["id"]]],[11,"recommendedLayerContentsScale_","","",98,[[["self"],["cgfloat"]],["cgfloat"]]],[11,"matchesOnlyOnBestFittingAxis","","",98,[[["self"]],["bool"]]],[11,"initWithContentsOfFile_withReference_","","",98,[[["self"],["id"],["bool"]],["id"]]],[11,"initWithContentsOfURL_withReference_","","",98,[[["self"],["id"],["bool"]],["id"]]],[11,"initWithData_","","",98,[[["self"],["id"]],["id"]]],[11,"initWithPasteboard_","","",98,[[["self"],["id"]],["id"]]],[11,"name","","",98,[[["self"]],["id"]]],[11,"volume","","",98,[[["self"]],["f32"]]],[11,"currentTime","","",98,[[["self"]],["nstimeinterval"]]],[11,"loops","","",98,[[["self"]],["bool"]]],[11,"playbackDeviceIdentifier","","",98,[[["self"]],["id"]]],[11,"delegate","","",98,[[["self"]],["id"]]],[11,"duration","","",98,[[["self"]],["nstimeinterval"]]],[11,"playing","","",98,[[["self"]],["bool"]]],[11,"pause","","",98,[[["self"]],["bool"]]],[11,"play","","",98,[[["self"]],["bool"]]],[11,"resume","","",98,[[["self"]],["bool"]]],[11,"stop","","",98,[[["self"]],["bool"]]],[11,"writeToPasteboard_","","",98,[[["self"],["id"]]]],[11,"statusBar","","",98,[[["self"]],["id"]]],[11,"button","","",98,[[["self"]],["id"]]],[11,"menu","","",98,[[["self"]],["id"]]],[11,"setMenu_","","",98,[[["self"],["id"]]]],[11,"length","","",98,[[["self"]],["cgfloat"]]],[11,"setLength_","","",98,[[["self"],["cgfloat"]]]],[11,"statusItemWithLength_","","",98,[[["self"],["cgfloat"]],["id"]]],[11,"removeStatusItem_","","",98,[[["self"],["id"]]]],[11,"isVertical","","",98,[[["self"]],["bool"]]],[11,"initWithFrame_","","",98,[[["self"],["nsrect"]],["id"]]],[11,"setEditable_","","",98,[[["self"],["bool"]]]],[11,"setStringValue_","","",98,[[["self"],["id"]]]],[11,"initWithFrame_","","",98,[[["self"],["nsrect"]],["id"]]],[11,"addTabViewItem_","","",98,[[["self"],["id"]]]],[11,"insertTabViewItem_atIndex_","","",98,[[["self"],["id"],["nsinteger"]]]],[11,"removeTabViewItem_","","",98,[[["self"],["id"]]]],[11,"indexOfTabViewItem_","","",98,[[["self"],["id"]],["id"]]],[11,"indexOfTabViewItemWithIdentifier_","","",98,[[["self"],["id"]],["id"]]],[11,"numberOfTabViewItems","","",98,[[["self"]],["id"]]],[11,"tabViewItemAtIndex_","","",98,[[["self"],["id"]],["id"]]],[11,"tabViewItems","","",98,[[["self"]],["id"]]],[11,"selectFirstTabViewItem_","","",98,[[["self"],["id"]]]],[11,"selectLastTabViewItem_","","",98,[[["self"],["id"]]]],[11,"selectNextTabViewItem_","","",98,[[["self"],["id"]]]],[11,"selectPreviousTabViewItem_","","",98,[[["self"],["id"]]]],[11,"selectTabViewItem_","","",98,[[["self"],["id"]]]],[11,"selectTabViewItemAtIndex_","","",98,[[["self"],["id"]]]],[11,"selectTabViewItemWithIdentifier_","","",98,[[["self"],["id"]]]],[11,"selectedTabViewItem","","",98,[[["self"]],["id"]]],[11,"takeSelectedTabViewItemFromSender_","","",98,[[["self"],["id"]]]],[11,"font","","",98,[[["self"]],["id"]]],[11,"setFont_","","",98,[[["self"],["id"]]]],[11,"tabViewType","","",98,[[["self"]],["nstabviewtype"]]],[11,"setTabViewType_","","",98,[[["self"],["nstabviewtype"]]]],[11,"controlTint","","",98,[[["self"]],["id"]]],[11,"setControlTint_","","",98,[[["self"],["id"]]]],[11,"drawsBackground","","",98,[[["self"]],["bool"]]],[11,"setDrawsBackground_","","",98,[[["self"],["bool"]]]],[11,"minimumSize","","",98,[[["self"]],["id"]]],[11,"contentRect","","",98,[[["self"]],["id"]]],[11,"controlSize","","",98,[[["self"]],["id"]]],[11,"setControlSize_","","",98,[[["self"],["id"]]]],[11,"allowsTruncatedLabels","","",98,[[["self"]],["bool"]]],[11,"setAllowsTruncatedLabels_","","",98,[[["self"],["bool"]]]],[11,"setDelegate_","","",98,[[["self"],["id"]]]],[11,"delegate","","",98,[[["self"]],["id"]]],[11,"tabViewAtPoint_","","",98,[[["self"],["id"]],["id"]]],[11,"initWithIdentifier_","","",98,[[["self"],["id"]],["id"]]],[11,"drawLabel_inRect_","","",98,[[["self"],["bool"],["nsrect"]]]],[11,"label","","",98,[[["self"]],["id"]]],[11,"setLabel_","","",98,[[["self"],["id"]]]],[11,"sizeOfLabel_","","",98,[[["self"],["bool"]]]],[11,"tabState","","",98,[[["self"]],["nstabstate"]]],[11,"identifier","","",98,[[["self"]],["id"]]],[11,"setIdentifier_","","",98,[[["self"],["id"]]]],[11,"color","","",98,[[["self"]],["id"]]],[11,"setColor_","","",98,[[["self"],["id"]]]],[11,"view","","",98,[[["self"]],["id"]]],[11,"setView_","","",98,[[["self"],["id"]]]],[11,"initialFirstResponder","","",98,[[["self"]],["id"]]],[11,"setInitialFirstResponder_","","",98,[[["self"],["id"]]]],[11,"tabView","","",98,[[["self"]],["id"]]],[11,"tooltip","","",98,[[["self"]],["id"]]],[11,"setTooltip_","","",98,[[["self"],["id"]]]],[11,"activateConstraints","","",98,[[["self"],["id"]],["id"]]],[11,"constraintEqualToConstant","","",98,[[["self"],["cgfloat"]],["id"]]],[11,"constraintLessThanOrEqualToConstant","","",98,[[["self"],["cgfloat"]],["id"]]],[11,"constraintGreaterThanOrEqualToConstant","","",98,[[["self"],["cgfloat"]],["id"]]],[11,"clearColor","","",98,[[["self"]],["id"]]],[11,"init_","","",98,[[["self"]],["id"]]],[11,"initWithIdentifier_","","",98,[[["self"],["id"]],["id"]]],[11,"showsBaselineSeparator","","",98,[[["self"]],["bool"]]],[11,"setShowsBaselineSeparator_","","",98,[[["self"],["bool"]]]],[11,"autorelease","","",98,[[["self"]],["id"]]],[11,"drain","","",98,[[["self"]]]],[11,"processName","","",98,[[["self"]],["id"]]],[11,"arrayByAddingObjectFromArray","","",98,[[["self"],["id"]],["id"]]],[11,"arrayByAddingObjectsFromArray","","",98,[[["self"],["id"]],["id"]]],[11,"init","","",98,[[["self"]],["id"]]],[11,"initWithContentsOfFile_","","",98,[[["self"],["id"]],["id"]]],[11,"initWithContentsOfURL_","","",98,[[["self"],["id"]],["id"]]],[11,"initWithDictionary_","","",98,[[["self"],["id"]],["id"]]],[11,"initWithDictionary_copyItems_","","",98,[[["self"],["id"],["bool"]],["id"]]],[11,"initWithObjects_forKeys_","","",98,[[["self"],["id"],["id"]],["id"]]],[11,"initWithObjects_forKeys_count_","","",98,[[["self"],["id"],["id"],["nsuinteger"]],["id"]]],[11,"initWithObjectsAndKeys_","","",98,[[["self"],["id"]],["id"]]],[11,"count","","",98,[[["self"]],["nsuinteger"]]],[11,"isEqualToDictionary_","","",98,[[["self"],["id"]],["bool"]]],[11,"allKeys","","",98,[[["self"]],["id"]]],[11,"allKeysForObject_","","",98,[[["self"],["id"]],["id"]]],[11,"allValues","","",98,[[["self"]],["id"]]],[11,"objectForKey_","","",98,[[["self"],["id"]],["id"]]],[11,"objectForKeyedSubscript_","","",98,[[["self"],["id"]],["id"]]],[11,"objectsForKeys_notFoundMarker_","","",98,[[["self"],["id"],["id"]],["id"]]],[11,"valueForKey_","","",98,[[["self"],["id"]],["id"]]],[11,"keyEnumerator","","",98,[[["self"]],["id"]]],[11,"objectEnumerator","","",98,[[["self"]],["id"]]],[11,"enumerateKeysAndObjectsUsingBlock_","","",98,N],[11,"enumerateKeysAndObjectsWithOptions_usingBlock_","","",98,N],[11,"keysSortedByValueUsingSelector_","","",98,[[["self"],["sel"]],["id"]]],[11,"keysSortedByValueUsingComparator_","","",98,[[["self"],["nscomparator"]],["id"]]],[11,"keysSortedByValueWithOptions_usingComparator_","","",98,[[["self"],["nsenumerationoptions"],["nscomparator"]],["id"]]],[11,"keysOfEntriesPassingTest_","","",98,N],[11,"keysOfEntriesWithOptions_PassingTest_","","",98,N],[11,"writeToFile_atomically_","","",98,[[["self"],["id"],["bool"]],["bool"]]],[11,"writeToURL_atomically_","","",98,[[["self"],["id"],["bool"]],["bool"]]],[11,"fileCreationDate","","",98,[[["self"]],["id"]]],[11,"fileExtensionHidden","","",98,[[["self"]],["bool"]]],[11,"fileGroupOwnerAccountID","","",98,[[["self"]],["id"]]],[11,"fileGroupOwnerAccountName","","",98,[[["self"]],["id"]]],[11,"fileIsAppendOnly","","",98,[[["self"]],["bool"]]],[11,"fileIsImmutable","","",98,[[["self"]],["bool"]]],[11,"fileModificationDate","","",98,[[["self"]],["id"]]],[11,"fileOwnerAccountID","","",98,[[["self"]],["id"]]],[11,"fileOwnerAccountName","","",98,[[["self"]],["id"]]],[11,"filePosixPermissions","","",98,[[["self"]],["nsuinteger"]]],[11,"fileSize","","",98,[[["self"]],["c_ulonglong"]]],[11,"fileSystemFileNumber","","",98,[[["self"]],["nsuinteger"]]],[11,"fileSystemNumber","","",98,[[["self"]],["nsinteger"]]],[11,"fileType","","",98,[[["self"]],["id"]]],[11,"description","","",98,[[["self"]],["id"]]],[11,"descriptionInStringsFileFormat","","",98,[[["self"]],["id"]]],[11,"descriptionWithLocale_","","",98,[[["self"],["id"]],["id"]]],[11,"descriptionWithLocale_indent_","","",98,[[["self"],["id"],["nsuinteger"]],["id"]]],[11,"isEqualToString","","",98,[[["self"],["str"]],["bool"]]],[11,"stringByAppendingString_","","",98,[[["self"],["id"]],["id"]]],[11,"init_str","","",98,[[["self"],["str"]],["id"]]],[11,"len","","",98,[[["self"]],["usize"]]],[11,"UTF8String","","",98,N],[11,"iter","","",98,[[["self"]],["nsfastiterator"]]],[11,"currentRunLoop","","",98,[[],["id"]]],[11,"performSelector_target_argument_order_modes_","","",98,[[["self"],["sel"],["id"],["id"],["nsuinteger"],["id"]]]],[11,"initWithBase64EncodedData_options_","","",98,[[["self"],["id"],["nsdatabase64decodingoptions"]],["id"]]],[11,"initWithBase64EncodedString_options_","","",98,[[["self"],["id"],["nsdatabase64decodingoptions"]],["id"]]],[11,"initWithBytes_length_","","",98,N],[11,"initWithBytesNoCopy_length_","","",98,N],[11,"initWithBytesNoCopy_length_deallocator_","","",98,N],[11,"initWithBytesNoCopy_length_freeWhenDone_","","",98,N],[11,"initWithContentsOfFile_","","",98,[[["self"],["id"]],["id"]]],[11,"initWithContentsOfFile_options_error","","",98,N],[11,"initWithContentsOfURL_","","",98,[[["self"],["id"]],["id"]]],[11,"initWithContentsOfURL_options_error_","","",98,N],[11,"initWithData_","","",98,[[["self"],["id"]],["id"]]],[11,"bytes","","",98,N],[11,"description","","",98,[[["self"]],["id"]]],[11,"enumerateByteRangesUsingBlock_","","",98,N],[11,"getBytes_length_","","",98,N],[11,"getBytes_range_","","",98,N],[11,"subdataWithRange_","","",98,[[["self"],["nsrange"]],["id"]]],[11,"rangeOfData_options_range_","","",98,[[["self"],["id"],["nsdatasearchoptions"],["nsrange"]],["nsrange"]]],[11,"base64EncodedDataWithOptions_","","",98,[[["self"],["nsdatabase64encodingoptions"]],["id"]]],[11,"base64EncodedStringWithOptions_","","",98,[[["self"],["nsdatabase64encodingoptions"]],["id"]]],[11,"isEqualToData_","","",98,[[["self"],["id"]],["id"]]],[11,"length","","",98,[[["self"]],["nsuinteger"]]],[11,"writeToFile_atomically_","","",98,[[["self"],["id"],["bool"]],["bool"]]],[11,"writeToFile_options_error_","","",98,N],[11,"writeToURL_atomically_","","",98,[[["self"],["id"],["bool"]],["bool"]]],[11,"writeToURL_options_error_","","",98,N],[11,"extend","cocoa::appkit","",51,[[["self"],["t"]]]],[11,"extend","","",52,[[["self"],["t"]]]],[11,"extend","","",53,[[["self"],["t"]]]],[11,"extend","","",54,[[["self"],["t"]]]],[11,"extend","","",55,[[["self"],["t"]]]],[11,"extend","","",56,[[["self"],["t"]]]],[11,"extend","","",57,[[["self"],["t"]]]],[11,"extend","","",58,[[["self"],["t"]]]],[11,"extend","","",59,[[["self"],["t"]]]],[11,"extend","","",60,[[["self"],["t"]]]],[11,"extend","","",61,[[["self"],["t"]]]],[11,"extend","cocoa::foundation","",78,[[["self"],["t"]]]],[11,"extend","","",79,[[["self"],["t"]]]],[11,"extend","","",80,[[["self"],["t"]]]],[11,"extend","","",81,[[["self"],["t"]]]],[11,"extend","","",82,[[["self"],["t"]]]],[11,"extend","","",83,[[["self"],["t"]]]],[11,"extend","cocoa::quartzcore","",91,[[["self"],["t"]]]],[11,"extend","","",92,[[["self"],["t"]]]],[11,"extend","","",93,[[["self"],["t"]]]],[11,"next","cocoa::foundation","",97,[[["self"]],["option",["id"]]]],[11,"partial_cmp","cocoa::appkit","",51,[[["self"],["nsapplicationpresentationoptions"]],["option",["ordering"]]]],[11,"lt","","",51,[[["self"],["nsapplicationpresentationoptions"]],["bool"]]],[11,"le","","",51,[[["self"],["nsapplicationpresentationoptions"]],["bool"]]],[11,"gt","","",51,[[["self"],["nsapplicationpresentationoptions"]],["bool"]]],[11,"ge","","",51,[[["self"],["nsapplicationpresentationoptions"]],["bool"]]],[11,"partial_cmp","","",52,[[["self"],["nswindowstylemask"]],["option",["ordering"]]]],[11,"lt","","",52,[[["self"],["nswindowstylemask"]],["bool"]]],[11,"le","","",52,[[["self"],["nswindowstylemask"]],["bool"]]],[11,"gt","","",52,[[["self"],["nswindowstylemask"]],["bool"]]],[11,"ge","","",52,[[["self"],["nswindowstylemask"]],["bool"]]],[11,"partial_cmp","","",53,[[["self"],["nswindoworderingmode"]],["option",["ordering"]]]],[11,"lt","","",53,[[["self"],["nswindoworderingmode"]],["bool"]]],[11,"le","","",53,[[["self"],["nswindoworderingmode"]],["bool"]]],[11,"gt","","",53,[[["self"],["nswindoworderingmode"]],["bool"]]],[11,"ge","","",53,[[["self"],["nswindoworderingmode"]],["bool"]]],[11,"partial_cmp","","",54,[[["self"],["nsalignmentoptions"]],["option",["ordering"]]]],[11,"lt","","",54,[[["self"],["nsalignmentoptions"]],["bool"]]],[11,"le","","",54,[[["self"],["nsalignmentoptions"]],["bool"]]],[11,"gt","","",54,[[["self"],["nsalignmentoptions"]],["bool"]]],[11,"ge","","",54,[[["self"],["nsalignmentoptions"]],["bool"]]],[11,"partial_cmp","","",55,[[["self"],["nswindowcollectionbehavior"]],["option",["ordering"]]]],[11,"lt","","",55,[[["self"],["nswindowcollectionbehavior"]],["bool"]]],[11,"le","","",55,[[["self"],["nswindowcollectionbehavior"]],["bool"]]],[11,"gt","","",55,[[["self"],["nswindowcollectionbehavior"]],["bool"]]],[11,"ge","","",55,[[["self"],["nswindowcollectionbehavior"]],["bool"]]],[11,"partial_cmp","","",56,[[["self"],["nswindowocclusionstate"]],["option",["ordering"]]]],[11,"lt","","",56,[[["self"],["nswindowocclusionstate"]],["bool"]]],[11,"le","","",56,[[["self"],["nswindowocclusionstate"]],["bool"]]],[11,"gt","","",56,[[["self"],["nswindowocclusionstate"]],["bool"]]],[11,"ge","","",56,[[["self"],["nswindowocclusionstate"]],["bool"]]],[11,"partial_cmp","","",57,[[["self"],["nseventswipetrackingoptions"]],["option",["ordering"]]]],[11,"lt","","",57,[[["self"],["nseventswipetrackingoptions"]],["bool"]]],[11,"le","","",57,[[["self"],["nseventswipetrackingoptions"]],["bool"]]],[11,"gt","","",57,[[["self"],["nseventswipetrackingoptions"]],["bool"]]],[11,"ge","","",57,[[["self"],["nseventswipetrackingoptions"]],["bool"]]],[11,"partial_cmp","","",58,[[["self"],["nseventphase"]],["option",["ordering"]]]],[11,"lt","","",58,[[["self"],["nseventphase"]],["bool"]]],[11,"le","","",58,[[["self"],["nseventphase"]],["bool"]]],[11,"gt","","",58,[[["self"],["nseventphase"]],["bool"]]],[11,"ge","","",58,[[["self"],["nseventphase"]],["bool"]]],[11,"partial_cmp","","",59,[[["self"],["nstouchphase"]],["option",["ordering"]]]],[11,"lt","","",59,[[["self"],["nstouchphase"]],["bool"]]],[11,"le","","",59,[[["self"],["nstouchphase"]],["bool"]]],[11,"gt","","",59,[[["self"],["nstouchphase"]],["bool"]]],[11,"ge","","",59,[[["self"],["nstouchphase"]],["bool"]]],[11,"partial_cmp","","",60,[[["self"],["nseventmask"]],["option",["ordering"]]]],[11,"lt","","",60,[[["self"],["nseventmask"]],["bool"]]],[11,"le","","",60,[[["self"],["nseventmask"]],["bool"]]],[11,"gt","","",60,[[["self"],["nseventmask"]],["bool"]]],[11,"ge","","",60,[[["self"],["nseventmask"]],["bool"]]],[11,"partial_cmp","","",61,[[["self"],["nseventmodifierflags"]],["option",["ordering"]]]],[11,"lt","","",61,[[["self"],["nseventmodifierflags"]],["bool"]]],[11,"le","","",61,[[["self"],["nseventmodifierflags"]],["bool"]]],[11,"gt","","",61,[[["self"],["nseventmodifierflags"]],["bool"]]],[11,"ge","","",61,[[["self"],["nseventmodifierflags"]],["bool"]]],[11,"partial_cmp","cocoa::foundation","",78,[[["self"],["nsenumerationoptions"]],["option",["ordering"]]]],[11,"lt","","",78,[[["self"],["nsenumerationoptions"]],["bool"]]],[11,"le","","",78,[[["self"],["nsenumerationoptions"]],["bool"]]],[11,"gt","","",78,[[["self"],["nsenumerationoptions"]],["bool"]]],[11,"ge","","",78,[[["self"],["nsenumerationoptions"]],["bool"]]],[11,"partial_cmp","","",79,[[["self"],["nsdatareadingoptions"]],["option",["ordering"]]]],[11,"lt","","",79,[[["self"],["nsdatareadingoptions"]],["bool"]]],[11,"le","","",79,[[["self"],["nsdatareadingoptions"]],["bool"]]],[11,"gt","","",79,[[["self"],["nsdatareadingoptions"]],["bool"]]],[11,"ge","","",79,[[["self"],["nsdatareadingoptions"]],["bool"]]],[11,"partial_cmp","","",80,[[["self"],["nsdatabase64encodingoptions"]],["option",["ordering"]]]],[11,"lt","","",80,[[["self"],["nsdatabase64encodingoptions"]],["bool"]]],[11,"le","","",80,[[["self"],["nsdatabase64encodingoptions"]],["bool"]]],[11,"gt","","",80,[[["self"],["nsdatabase64encodingoptions"]],["bool"]]],[11,"ge","","",80,[[["self"],["nsdatabase64encodingoptions"]],["bool"]]],[11,"partial_cmp","","",81,[[["self"],["nsdatabase64decodingoptions"]],["option",["ordering"]]]],[11,"lt","","",81,[[["self"],["nsdatabase64decodingoptions"]],["bool"]]],[11,"le","","",81,[[["self"],["nsdatabase64decodingoptions"]],["bool"]]],[11,"gt","","",81,[[["self"],["nsdatabase64decodingoptions"]],["bool"]]],[11,"ge","","",81,[[["self"],["nsdatabase64decodingoptions"]],["bool"]]],[11,"partial_cmp","","",82,[[["self"],["nsdatawritingoptions"]],["option",["ordering"]]]],[11,"lt","","",82,[[["self"],["nsdatawritingoptions"]],["bool"]]],[11,"le","","",82,[[["self"],["nsdatawritingoptions"]],["bool"]]],[11,"gt","","",82,[[["self"],["nsdatawritingoptions"]],["bool"]]],[11,"ge","","",82,[[["self"],["nsdatawritingoptions"]],["bool"]]],[11,"partial_cmp","","",83,[[["self"],["nsdatasearchoptions"]],["option",["ordering"]]]],[11,"lt","","",83,[[["self"],["nsdatasearchoptions"]],["bool"]]],[11,"le","","",83,[[["self"],["nsdatasearchoptions"]],["bool"]]],[11,"gt","","",83,[[["self"],["nsdatasearchoptions"]],["bool"]]],[11,"ge","","",83,[[["self"],["nsdatasearchoptions"]],["bool"]]],[11,"partial_cmp","cocoa::quartzcore","",91,[[["self"],["edgeantialiasingmask"]],["option",["ordering"]]]],[11,"lt","","",91,[[["self"],["edgeantialiasingmask"]],["bool"]]],[11,"le","","",91,[[["self"],["edgeantialiasingmask"]],["bool"]]],[11,"gt","","",91,[[["self"],["edgeantialiasingmask"]],["bool"]]],[11,"ge","","",91,[[["self"],["edgeantialiasingmask"]],["bool"]]],[11,"partial_cmp","","",92,[[["self"],["cornermask"]],["option",["ordering"]]]],[11,"lt","","",92,[[["self"],["cornermask"]],["bool"]]],[11,"le","","",92,[[["self"],["cornermask"]],["bool"]]],[11,"gt","","",92,[[["self"],["cornermask"]],["bool"]]],[11,"ge","","",92,[[["self"],["cornermask"]],["bool"]]],[11,"partial_cmp","","",93,[[["self"],["autoresizingmask"]],["option",["ordering"]]]],[11,"lt","","",93,[[["self"],["autoresizingmask"]],["bool"]]],[11,"le","","",93,[[["self"],["autoresizingmask"]],["bool"]]],[11,"gt","","",93,[[["self"],["autoresizingmask"]],["bool"]]],[11,"ge","","",93,[[["self"],["autoresizingmask"]],["bool"]]],[11,"eq","cocoa::appkit","",1,[[["self"],["nsapplicationactivationpolicy"]],["bool"]]],[11,"eq","","",2,[[["self"],["nsapplicationactivationoptions"]],["bool"]]],[11,"eq","","",3,[[["self"],["nsapplicationterminatereply"]],["bool"]]],[11,"eq","","",51,[[["self"],["nsapplicationpresentationoptions"]],["bool"]]],[11,"ne","","",51,[[["self"],["nsapplicationpresentationoptions"]],["bool"]]],[11,"eq","","",52,[[["self"],["nswindowstylemask"]],["bool"]]],[11,"ne","","",52,[[["self"],["nswindowstylemask"]],["bool"]]],[11,"eq","","",4,[[["self"],["nswindowtitlevisibility"]],["bool"]]],[11,"eq","","",5,[[["self"],["nsbackingstoretype"]],["bool"]]],[11,"eq","","",53,[[["self"],["nswindoworderingmode"]],["bool"]]],[11,"ne","","",53,[[["self"],["nswindoworderingmode"]],["bool"]]],[11,"eq","","",54,[[["self"],["nsalignmentoptions"]],["bool"]]],[11,"ne","","",54,[[["self"],["nsalignmentoptions"]],["bool"]]],[11,"eq","","",6,[[["self"],["nsopenglpixelformatattribute"]],["bool"]]],[11,"eq","","",7,[[["self"],["nsopenglpfaopenglprofiles"]],["bool"]]],[11,"eq","","",8,[[["self"],["nsopenglcontextparameter"]],["bool"]]],[11,"eq","","",9,[[["self"],["nswindowbutton"]],["bool"]]],[11,"eq","","",10,[[["self"],["nsbezelstyle"]],["bool"]]],[11,"eq","","",11,[[["self"],["nsrequestuserattentiontype"]],["bool"]]],[11,"eq","","",12,[[["self"],["nspasteboardreadingoptions"]],["bool"]]],[11,"eq","","",13,[[["self"],["nspasteboardwritingoptions"]],["bool"]]],[11,"eq","","",55,[[["self"],["nswindowcollectionbehavior"]],["bool"]]],[11,"ne","","",55,[[["self"],["nswindowcollectionbehavior"]],["bool"]]],[11,"eq","","",56,[[["self"],["nswindowocclusionstate"]],["bool"]]],[11,"ne","","",56,[[["self"],["nswindowocclusionstate"]],["bool"]]],[11,"eq","","",57,[[["self"],["nseventswipetrackingoptions"]],["bool"]]],[11,"ne","","",57,[[["self"],["nseventswipetrackingoptions"]],["bool"]]],[11,"eq","","",58,[[["self"],["nseventphase"]],["bool"]]],[11,"ne","","",58,[[["self"],["nseventphase"]],["bool"]]],[11,"eq","","",59,[[["self"],["nstouchphase"]],["bool"]]],[11,"ne","","",59,[[["self"],["nstouchphase"]],["bool"]]],[11,"eq","","",15,[[["self"],["nseventtype"]],["bool"]]],[11,"eq","","",60,[[["self"],["nseventmask"]],["bool"]]],[11,"ne","","",60,[[["self"],["nseventmask"]],["bool"]]],[11,"eq","","",61,[[["self"],["nseventmodifierflags"]],["bool"]]],[11,"ne","","",61,[[["self"],["nseventmodifierflags"]],["bool"]]],[11,"eq","","",17,[[["self"],["nscompositingoperation"]],["bool"]]],[11,"eq","","",18,[[["self"],["nsimagecachemode"]],["bool"]]],[11,"eq","","",19,[[["self"],["nstiffcompression"]],["bool"]]],[11,"eq","","",20,[[["self"],["nsimageloadstatus"]],["bool"]]],[11,"eq","cocoa::foundation","",78,[[["self"],["nsenumerationoptions"]],["bool"]]],[11,"ne","","",78,[[["self"],["nsenumerationoptions"]],["bool"]]],[11,"eq","","",67,[[["self"],["nscomparisonresult"]],["bool"]]],[11,"eq","","",79,[[["self"],["nsdatareadingoptions"]],["bool"]]],[11,"ne","","",79,[[["self"],["nsdatareadingoptions"]],["bool"]]],[11,"eq","","",80,[[["self"],["nsdatabase64encodingoptions"]],["bool"]]],[11,"ne","","",80,[[["self"],["nsdatabase64encodingoptions"]],["bool"]]],[11,"eq","","",81,[[["self"],["nsdatabase64decodingoptions"]],["bool"]]],[11,"ne","","",81,[[["self"],["nsdatabase64decodingoptions"]],["bool"]]],[11,"eq","","",82,[[["self"],["nsdatawritingoptions"]],["bool"]]],[11,"ne","","",82,[[["self"],["nsdatawritingoptions"]],["bool"]]],[11,"eq","","",83,[[["self"],["nsdatasearchoptions"]],["bool"]]],[11,"ne","","",83,[[["self"],["nsdatasearchoptions"]],["bool"]]],[11,"eq","cocoa::quartzcore","",87,[[["self"],["contentsgravity"]],["bool"]]],[11,"ne","","",87,[[["self"],["contentsgravity"]],["bool"]]],[11,"eq","","",88,[[["self"],["contentsformat"]],["bool"]]],[11,"ne","","",88,[[["self"],["contentsformat"]],["bool"]]],[11,"eq","","",89,[[["self"],["filter"]],["bool"]]],[11,"ne","","",89,[[["self"],["filter"]],["bool"]]],[11,"eq","","",91,[[["self"],["edgeantialiasingmask"]],["bool"]]],[11,"ne","","",91,[[["self"],["edgeantialiasingmask"]],["bool"]]],[11,"eq","","",92,[[["self"],["cornermask"]],["bool"]]],[11,"ne","","",92,[[["self"],["cornermask"]],["bool"]]],[11,"eq","","",93,[[["self"],["autoresizingmask"]],["bool"]]],[11,"ne","","",93,[[["self"],["autoresizingmask"]],["bool"]]],[11,"eq","","",84,[[["self"],["catransform3d"]],["bool"]]],[11,"cmp","cocoa::appkit","",51,[[["self"],["nsapplicationpresentationoptions"]],["ordering"]]],[11,"cmp","","",52,[[["self"],["nswindowstylemask"]],["ordering"]]],[11,"cmp","","",53,[[["self"],["nswindoworderingmode"]],["ordering"]]],[11,"cmp","","",54,[[["self"],["nsalignmentoptions"]],["ordering"]]],[11,"cmp","","",55,[[["self"],["nswindowcollectionbehavior"]],["ordering"]]],[11,"cmp","","",56,[[["self"],["nswindowocclusionstate"]],["ordering"]]],[11,"cmp","","",57,[[["self"],["nseventswipetrackingoptions"]],["ordering"]]],[11,"cmp","","",58,[[["self"],["nseventphase"]],["ordering"]]],[11,"cmp","","",59,[[["self"],["nstouchphase"]],["ordering"]]],[11,"cmp","","",60,[[["self"],["nseventmask"]],["ordering"]]],[11,"cmp","","",61,[[["self"],["nseventmodifierflags"]],["ordering"]]],[11,"cmp","cocoa::foundation","",78,[[["self"],["nsenumerationoptions"]],["ordering"]]],[11,"cmp","","",79,[[["self"],["nsdatareadingoptions"]],["ordering"]]],[11,"cmp","","",80,[[["self"],["nsdatabase64encodingoptions"]],["ordering"]]],[11,"cmp","","",81,[[["self"],["nsdatabase64decodingoptions"]],["ordering"]]],[11,"cmp","","",82,[[["self"],["nsdatawritingoptions"]],["ordering"]]],[11,"cmp","","",83,[[["self"],["nsdatasearchoptions"]],["ordering"]]],[11,"cmp","cocoa::quartzcore","",91,[[["self"],["edgeantialiasingmask"]],["ordering"]]],[11,"cmp","","",92,[[["self"],["cornermask"]],["ordering"]]],[11,"cmp","","",93,[[["self"],["autoresizingmask"]],["ordering"]]],[11,"clone","cocoa::appkit","",1,[[["self"]],["nsapplicationactivationpolicy"]]],[11,"clone","","",2,[[["self"]],["nsapplicationactivationoptions"]]],[11,"clone","","",3,[[["self"]],["nsapplicationterminatereply"]]],[11,"clone","","",51,[[["self"]],["nsapplicationpresentationoptions"]]],[11,"clone","","",52,[[["self"]],["nswindowstylemask"]]],[11,"clone","","",4,[[["self"]],["nswindowtitlevisibility"]]],[11,"clone","","",5,[[["self"]],["nsbackingstoretype"]]],[11,"clone","","",53,[[["self"]],["nswindoworderingmode"]]],[11,"clone","","",54,[[["self"]],["nsalignmentoptions"]]],[11,"clone","","",6,[[["self"]],["nsopenglpixelformatattribute"]]],[11,"clone","","",7,[[["self"]],["nsopenglpfaopenglprofiles"]]],[11,"clone","","",8,[[["self"]],["nsopenglcontextparameter"]]],[11,"clone","","",9,[[["self"]],["nswindowbutton"]]],[11,"clone","","",10,[[["self"]],["nsbezelstyle"]]],[11,"clone","","",11,[[["self"]],["nsrequestuserattentiontype"]]],[11,"clone","","",12,[[["self"]],["nspasteboardreadingoptions"]]],[11,"clone","","",13,[[["self"]],["nspasteboardwritingoptions"]]],[11,"clone","","",55,[[["self"]],["nswindowcollectionbehavior"]]],[11,"clone","","",56,[[["self"]],["nswindowocclusionstate"]]],[11,"clone","","",57,[[["self"]],["nseventswipetrackingoptions"]]],[11,"clone","","",58,[[["self"]],["nseventphase"]]],[11,"clone","","",59,[[["self"]],["nstouchphase"]]],[11,"clone","","",15,[[["self"]],["nseventtype"]]],[11,"clone","","",60,[[["self"]],["nseventmask"]]],[11,"clone","","",61,[[["self"]],["nseventmodifierflags"]]],[11,"clone","","",17,[[["self"]],["nscompositingoperation"]]],[11,"clone","","",18,[[["self"]],["nsimagecachemode"]]],[11,"clone","","",19,[[["self"]],["nstiffcompression"]]],[11,"clone","","",20,[[["self"]],["nsimageloadstatus"]]],[11,"clone","cocoa::foundation","",62,[[["self"]],["nspoint"]]],[11,"clone","","",63,[[["self"]],["nssize"]]],[11,"clone","","",64,[[["self"]],["nsrect"]]],[11,"clone","","",78,[[["self"]],["nsenumerationoptions"]]],[11,"clone","","",67,[[["self"]],["nscomparisonresult"]]],[11,"clone","","",79,[[["self"]],["nsdatareadingoptions"]]],[11,"clone","","",80,[[["self"]],["nsdatabase64encodingoptions"]]],[11,"clone","","",81,[[["self"]],["nsdatabase64decodingoptions"]]],[11,"clone","","",82,[[["self"]],["nsdatawritingoptions"]]],[11,"clone","","",83,[[["self"]],["nsdatasearchoptions"]]],[11,"clone","cocoa::quartzcore","",90,[[["self"]],["calayer"]]],[11,"clone","","",87,[[["self"]],["contentsgravity"]]],[11,"clone","","",88,[[["self"]],["contentsformat"]]],[11,"clone","","",89,[[["self"]],["filter"]]],[11,"clone","","",91,[[["self"]],["edgeantialiasingmask"]]],[11,"clone","","",92,[[["self"]],["cornermask"]]],[11,"clone","","",93,[[["self"]],["autoresizingmask"]]],[11,"clone","","",94,[[["self"]],["carenderer"]]],[11,"clone","","",84,[[["self"]],["catransform3d"]]],[11,"clone","","",85,[[["self"]],["cvtimestamp"]]],[11,"clone","","",86,[[["self"]],["cvsmptetime"]]],[11,"drop","","",90,[[["self"]]]],[11,"drop","","",94,[[["self"]]]],[11,"fmt","cocoa::appkit","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","cocoa::foundation","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","cocoa::quartzcore","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"sub","cocoa::appkit","Returns the set difference of the two sets of flags.",51,[[["self"],["nsapplicationpresentationoptions"]],["nsapplicationpresentationoptions"]]],[11,"sub","","Returns the set difference of the two sets of flags.",52,[[["self"],["nswindowstylemask"]],["nswindowstylemask"]]],[11,"sub","","Returns the set difference of the two sets of flags.",53,[[["self"],["nswindoworderingmode"]],["nswindoworderingmode"]]],[11,"sub","","Returns the set difference of the two sets of flags.",54,[[["self"],["nsalignmentoptions"]],["nsalignmentoptions"]]],[11,"sub","","Returns the set difference of the two sets of flags.",55,[[["self"],["nswindowcollectionbehavior"]],["nswindowcollectionbehavior"]]],[11,"sub","","Returns the set difference of the two sets of flags.",56,[[["self"],["nswindowocclusionstate"]],["nswindowocclusionstate"]]],[11,"sub","","Returns the set difference of the two sets of flags.",57,[[["self"],["nseventswipetrackingoptions"]],["nseventswipetrackingoptions"]]],[11,"sub","","Returns the set difference of the two sets of flags.",58,[[["self"],["nseventphase"]],["nseventphase"]]],[11,"sub","","Returns the set difference of the two sets of flags.",59,[[["self"],["nstouchphase"]],["nstouchphase"]]],[11,"sub","","Returns the set difference of the two sets of flags.",60,[[["self"],["nseventmask"]],["nseventmask"]]],[11,"sub","","Returns the set difference of the two sets of flags.",61,[[["self"],["nseventmodifierflags"]],["nseventmodifierflags"]]],[11,"sub","cocoa::foundation","Returns the set difference of the two sets of flags.",78,[[["self"],["nsenumerationoptions"]],["nsenumerationoptions"]]],[11,"sub","","Returns the set difference of the two sets of flags.",79,[[["self"],["nsdatareadingoptions"]],["nsdatareadingoptions"]]],[11,"sub","","Returns the set difference of the two sets of flags.",80,[[["self"],["nsdatabase64encodingoptions"]],["nsdatabase64encodingoptions"]]],[11,"sub","","Returns the set difference of the two sets of flags.",81,[[["self"],["nsdatabase64decodingoptions"]],["nsdatabase64decodingoptions"]]],[11,"sub","","Returns the set difference of the two sets of flags.",82,[[["self"],["nsdatawritingoptions"]],["nsdatawritingoptions"]]],[11,"sub","","Returns the set difference of the two sets of flags.",83,[[["self"],["nsdatasearchoptions"]],["nsdatasearchoptions"]]],[11,"sub","cocoa::quartzcore","Returns the set difference of the two sets of flags.",91,[[["self"],["edgeantialiasingmask"]],["edgeantialiasingmask"]]],[11,"sub","","Returns the set difference of the two sets of flags.",92,[[["self"],["cornermask"]],["cornermask"]]],[11,"sub","","Returns the set difference of the two sets of flags.",93,[[["self"],["autoresizingmask"]],["autoresizingmask"]]],[11,"mul","","",84,[[["self"],["catransform3d"]],["catransform3d"]]],[11,"sub_assign","cocoa::appkit","Disables all flags enabled in the set.",51,[[["self"],["nsapplicationpresentationoptions"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",52,[[["self"],["nswindowstylemask"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",53,[[["self"],["nswindoworderingmode"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",54,[[["self"],["nsalignmentoptions"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",55,[[["self"],["nswindowcollectionbehavior"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",56,[[["self"],["nswindowocclusionstate"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",57,[[["self"],["nseventswipetrackingoptions"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",58,[[["self"],["nseventphase"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",59,[[["self"],["nstouchphase"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",60,[[["self"],["nseventmask"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",61,[[["self"],["nseventmodifierflags"]]]],[11,"sub_assign","cocoa::foundation","Disables all flags enabled in the set.",78,[[["self"],["nsenumerationoptions"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",79,[[["self"],["nsdatareadingoptions"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",80,[[["self"],["nsdatabase64encodingoptions"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",81,[[["self"],["nsdatabase64decodingoptions"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",82,[[["self"],["nsdatawritingoptions"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",83,[[["self"],["nsdatasearchoptions"]]]],[11,"sub_assign","cocoa::quartzcore","Disables all flags enabled in the set.",91,[[["self"],["edgeantialiasingmask"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",92,[[["self"],["cornermask"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",93,[[["self"],["autoresizingmask"]]]],[11,"not","cocoa::appkit","Returns the complement of this set of flags.",51,[[["self"]],["nsapplicationpresentationoptions"]]],[11,"not","","Returns the complement of this set of flags.",52,[[["self"]],["nswindowstylemask"]]],[11,"not","","Returns the complement of this set of flags.",53,[[["self"]],["nswindoworderingmode"]]],[11,"not","","Returns the complement of this set of flags.",54,[[["self"]],["nsalignmentoptions"]]],[11,"not","","Returns the complement of this set of flags.",55,[[["self"]],["nswindowcollectionbehavior"]]],[11,"not","","Returns the complement of this set of flags.",56,[[["self"]],["nswindowocclusionstate"]]],[11,"not","","Returns the complement of this set of flags.",57,[[["self"]],["nseventswipetrackingoptions"]]],[11,"not","","Returns the complement of this set of flags.",58,[[["self"]],["nseventphase"]]],[11,"not","","Returns the complement of this set of flags.",59,[[["self"]],["nstouchphase"]]],[11,"not","","Returns the complement of this set of flags.",60,[[["self"]],["nseventmask"]]],[11,"not","","Returns the complement of this set of flags.",61,[[["self"]],["nseventmodifierflags"]]],[11,"not","cocoa::foundation","Returns the complement of this set of flags.",78,[[["self"]],["nsenumerationoptions"]]],[11,"not","","Returns the complement of this set of flags.",79,[[["self"]],["nsdatareadingoptions"]]],[11,"not","","Returns the complement of this set of flags.",80,[[["self"]],["nsdatabase64encodingoptions"]]],[11,"not","","Returns the complement of this set of flags.",81,[[["self"]],["nsdatabase64decodingoptions"]]],[11,"not","","Returns the complement of this set of flags.",82,[[["self"]],["nsdatawritingoptions"]]],[11,"not","","Returns the complement of this set of flags.",83,[[["self"]],["nsdatasearchoptions"]]],[11,"not","cocoa::quartzcore","Returns the complement of this set of flags.",91,[[["self"]],["edgeantialiasingmask"]]],[11,"not","","Returns the complement of this set of flags.",92,[[["self"]],["cornermask"]]],[11,"not","","Returns the complement of this set of flags.",93,[[["self"]],["autoresizingmask"]]],[11,"bitand","cocoa::appkit","Returns the intersection between the two sets of flags.",51,[[["self"],["nsapplicationpresentationoptions"]],["nsapplicationpresentationoptions"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",52,[[["self"],["nswindowstylemask"]],["nswindowstylemask"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",53,[[["self"],["nswindoworderingmode"]],["nswindoworderingmode"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",54,[[["self"],["nsalignmentoptions"]],["nsalignmentoptions"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",55,[[["self"],["nswindowcollectionbehavior"]],["nswindowcollectionbehavior"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",56,[[["self"],["nswindowocclusionstate"]],["nswindowocclusionstate"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",57,[[["self"],["nseventswipetrackingoptions"]],["nseventswipetrackingoptions"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",58,[[["self"],["nseventphase"]],["nseventphase"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",59,[[["self"],["nstouchphase"]],["nstouchphase"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",60,[[["self"],["nseventmask"]],["nseventmask"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",61,[[["self"],["nseventmodifierflags"]],["nseventmodifierflags"]]],[11,"bitand","cocoa::foundation","Returns the intersection between the two sets of flags.",78,[[["self"],["nsenumerationoptions"]],["nsenumerationoptions"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",79,[[["self"],["nsdatareadingoptions"]],["nsdatareadingoptions"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",80,[[["self"],["nsdatabase64encodingoptions"]],["nsdatabase64encodingoptions"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",81,[[["self"],["nsdatabase64decodingoptions"]],["nsdatabase64decodingoptions"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",82,[[["self"],["nsdatawritingoptions"]],["nsdatawritingoptions"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",83,[[["self"],["nsdatasearchoptions"]],["nsdatasearchoptions"]]],[11,"bitand","cocoa::quartzcore","Returns the intersection between the two sets of flags.",91,[[["self"],["edgeantialiasingmask"]],["edgeantialiasingmask"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",92,[[["self"],["cornermask"]],["cornermask"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",93,[[["self"],["autoresizingmask"]],["autoresizingmask"]]],[11,"bitor","cocoa::appkit","Returns the union of the two sets of flags.",51,[[["self"],["nsapplicationpresentationoptions"]],["nsapplicationpresentationoptions"]]],[11,"bitor","","Returns the union of the two sets of flags.",52,[[["self"],["nswindowstylemask"]],["nswindowstylemask"]]],[11,"bitor","","Returns the union of the two sets of flags.",53,[[["self"],["nswindoworderingmode"]],["nswindoworderingmode"]]],[11,"bitor","","Returns the union of the two sets of flags.",54,[[["self"],["nsalignmentoptions"]],["nsalignmentoptions"]]],[11,"bitor","","Returns the union of the two sets of flags.",55,[[["self"],["nswindowcollectionbehavior"]],["nswindowcollectionbehavior"]]],[11,"bitor","","Returns the union of the two sets of flags.",56,[[["self"],["nswindowocclusionstate"]],["nswindowocclusionstate"]]],[11,"bitor","","Returns the union of the two sets of flags.",57,[[["self"],["nseventswipetrackingoptions"]],["nseventswipetrackingoptions"]]],[11,"bitor","","Returns the union of the two sets of flags.",58,[[["self"],["nseventphase"]],["nseventphase"]]],[11,"bitor","","Returns the union of the two sets of flags.",59,[[["self"],["nstouchphase"]],["nstouchphase"]]],[11,"bitor","","Returns the union of the two sets of flags.",60,[[["self"],["nseventmask"]],["nseventmask"]]],[11,"bitor","","Returns the union of the two sets of flags.",61,[[["self"],["nseventmodifierflags"]],["nseventmodifierflags"]]],[11,"bitor","cocoa::foundation","Returns the union of the two sets of flags.",78,[[["self"],["nsenumerationoptions"]],["nsenumerationoptions"]]],[11,"bitor","","Returns the union of the two sets of flags.",79,[[["self"],["nsdatareadingoptions"]],["nsdatareadingoptions"]]],[11,"bitor","","Returns the union of the two sets of flags.",80,[[["self"],["nsdatabase64encodingoptions"]],["nsdatabase64encodingoptions"]]],[11,"bitor","","Returns the union of the two sets of flags.",81,[[["self"],["nsdatabase64decodingoptions"]],["nsdatabase64decodingoptions"]]],[11,"bitor","","Returns the union of the two sets of flags.",82,[[["self"],["nsdatawritingoptions"]],["nsdatawritingoptions"]]],[11,"bitor","","Returns the union of the two sets of flags.",83,[[["self"],["nsdatasearchoptions"]],["nsdatasearchoptions"]]],[11,"bitor","cocoa::quartzcore","Returns the union of the two sets of flags.",91,[[["self"],["edgeantialiasingmask"]],["edgeantialiasingmask"]]],[11,"bitor","","Returns the union of the two sets of flags.",92,[[["self"],["cornermask"]],["cornermask"]]],[11,"bitor","","Returns the union of the two sets of flags.",93,[[["self"],["autoresizingmask"]],["autoresizingmask"]]],[11,"bitxor","cocoa::appkit","Returns the left flags, but with all the right flags…",51,[[["self"],["nsapplicationpresentationoptions"]],["nsapplicationpresentationoptions"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",52,[[["self"],["nswindowstylemask"]],["nswindowstylemask"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",53,[[["self"],["nswindoworderingmode"]],["nswindoworderingmode"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",54,[[["self"],["nsalignmentoptions"]],["nsalignmentoptions"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",55,[[["self"],["nswindowcollectionbehavior"]],["nswindowcollectionbehavior"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",56,[[["self"],["nswindowocclusionstate"]],["nswindowocclusionstate"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",57,[[["self"],["nseventswipetrackingoptions"]],["nseventswipetrackingoptions"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",58,[[["self"],["nseventphase"]],["nseventphase"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",59,[[["self"],["nstouchphase"]],["nstouchphase"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",60,[[["self"],["nseventmask"]],["nseventmask"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",61,[[["self"],["nseventmodifierflags"]],["nseventmodifierflags"]]],[11,"bitxor","cocoa::foundation","Returns the left flags, but with all the right flags…",78,[[["self"],["nsenumerationoptions"]],["nsenumerationoptions"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",79,[[["self"],["nsdatareadingoptions"]],["nsdatareadingoptions"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",80,[[["self"],["nsdatabase64encodingoptions"]],["nsdatabase64encodingoptions"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",81,[[["self"],["nsdatabase64decodingoptions"]],["nsdatabase64decodingoptions"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",82,[[["self"],["nsdatawritingoptions"]],["nsdatawritingoptions"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",83,[[["self"],["nsdatasearchoptions"]],["nsdatasearchoptions"]]],[11,"bitxor","cocoa::quartzcore","Returns the left flags, but with all the right flags…",91,[[["self"],["edgeantialiasingmask"]],["edgeantialiasingmask"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",92,[[["self"],["cornermask"]],["cornermask"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",93,[[["self"],["autoresizingmask"]],["autoresizingmask"]]],[11,"bitand_assign","cocoa::appkit","Disables all flags disabled in the set.",51,[[["self"],["nsapplicationpresentationoptions"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",52,[[["self"],["nswindowstylemask"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",53,[[["self"],["nswindoworderingmode"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",54,[[["self"],["nsalignmentoptions"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",55,[[["self"],["nswindowcollectionbehavior"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",56,[[["self"],["nswindowocclusionstate"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",57,[[["self"],["nseventswipetrackingoptions"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",58,[[["self"],["nseventphase"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",59,[[["self"],["nstouchphase"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",60,[[["self"],["nseventmask"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",61,[[["self"],["nseventmodifierflags"]]]],[11,"bitand_assign","cocoa::foundation","Disables all flags disabled in the set.",78,[[["self"],["nsenumerationoptions"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",79,[[["self"],["nsdatareadingoptions"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",80,[[["self"],["nsdatabase64encodingoptions"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",81,[[["self"],["nsdatabase64decodingoptions"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",82,[[["self"],["nsdatawritingoptions"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",83,[[["self"],["nsdatasearchoptions"]]]],[11,"bitand_assign","cocoa::quartzcore","Disables all flags disabled in the set.",91,[[["self"],["edgeantialiasingmask"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",92,[[["self"],["cornermask"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",93,[[["self"],["autoresizingmask"]]]],[11,"bitor_assign","cocoa::appkit","Adds the set of flags.",51,[[["self"],["nsapplicationpresentationoptions"]]]],[11,"bitor_assign","","Adds the set of flags.",52,[[["self"],["nswindowstylemask"]]]],[11,"bitor_assign","","Adds the set of flags.",53,[[["self"],["nswindoworderingmode"]]]],[11,"bitor_assign","","Adds the set of flags.",54,[[["self"],["nsalignmentoptions"]]]],[11,"bitor_assign","","Adds the set of flags.",55,[[["self"],["nswindowcollectionbehavior"]]]],[11,"bitor_assign","","Adds the set of flags.",56,[[["self"],["nswindowocclusionstate"]]]],[11,"bitor_assign","","Adds the set of flags.",57,[[["self"],["nseventswipetrackingoptions"]]]],[11,"bitor_assign","","Adds the set of flags.",58,[[["self"],["nseventphase"]]]],[11,"bitor_assign","","Adds the set of flags.",59,[[["self"],["nstouchphase"]]]],[11,"bitor_assign","","Adds the set of flags.",60,[[["self"],["nseventmask"]]]],[11,"bitor_assign","","Adds the set of flags.",61,[[["self"],["nseventmodifierflags"]]]],[11,"bitor_assign","cocoa::foundation","Adds the set of flags.",78,[[["self"],["nsenumerationoptions"]]]],[11,"bitor_assign","","Adds the set of flags.",79,[[["self"],["nsdatareadingoptions"]]]],[11,"bitor_assign","","Adds the set of flags.",80,[[["self"],["nsdatabase64encodingoptions"]]]],[11,"bitor_assign","","Adds the set of flags.",81,[[["self"],["nsdatabase64decodingoptions"]]]],[11,"bitor_assign","","Adds the set of flags.",82,[[["self"],["nsdatawritingoptions"]]]],[11,"bitor_assign","","Adds the set of flags.",83,[[["self"],["nsdatasearchoptions"]]]],[11,"bitor_assign","cocoa::quartzcore","Adds the set of flags.",91,[[["self"],["edgeantialiasingmask"]]]],[11,"bitor_assign","","Adds the set of flags.",92,[[["self"],["cornermask"]]]],[11,"bitor_assign","","Adds the set of flags.",93,[[["self"],["autoresizingmask"]]]],[11,"bitxor_assign","cocoa::appkit","Toggles the set of flags.",51,[[["self"],["nsapplicationpresentationoptions"]]]],[11,"bitxor_assign","","Toggles the set of flags.",52,[[["self"],["nswindowstylemask"]]]],[11,"bitxor_assign","","Toggles the set of flags.",53,[[["self"],["nswindoworderingmode"]]]],[11,"bitxor_assign","","Toggles the set of flags.",54,[[["self"],["nsalignmentoptions"]]]],[11,"bitxor_assign","","Toggles the set of flags.",55,[[["self"],["nswindowcollectionbehavior"]]]],[11,"bitxor_assign","","Toggles the set of flags.",56,[[["self"],["nswindowocclusionstate"]]]],[11,"bitxor_assign","","Toggles the set of flags.",57,[[["self"],["nseventswipetrackingoptions"]]]],[11,"bitxor_assign","","Toggles the set of flags.",58,[[["self"],["nseventphase"]]]],[11,"bitxor_assign","","Toggles the set of flags.",59,[[["self"],["nstouchphase"]]]],[11,"bitxor_assign","","Toggles the set of flags.",60,[[["self"],["nseventmask"]]]],[11,"bitxor_assign","","Toggles the set of flags.",61,[[["self"],["nseventmodifierflags"]]]],[11,"bitxor_assign","cocoa::foundation","Toggles the set of flags.",78,[[["self"],["nsenumerationoptions"]]]],[11,"bitxor_assign","","Toggles the set of flags.",79,[[["self"],["nsdatareadingoptions"]]]],[11,"bitxor_assign","","Toggles the set of flags.",80,[[["self"],["nsdatabase64encodingoptions"]]]],[11,"bitxor_assign","","Toggles the set of flags.",81,[[["self"],["nsdatabase64decodingoptions"]]]],[11,"bitxor_assign","","Toggles the set of flags.",82,[[["self"],["nsdatawritingoptions"]]]],[11,"bitxor_assign","","Toggles the set of flags.",83,[[["self"],["nsdatasearchoptions"]]]],[11,"bitxor_assign","cocoa::quartzcore","Toggles the set of flags.",91,[[["self"],["edgeantialiasingmask"]]]],[11,"bitxor_assign","","Toggles the set of flags.",92,[[["self"],["cornermask"]]]],[11,"bitxor_assign","","Toggles the set of flags.",93,[[["self"],["autoresizingmask"]]]],[11,"hash","cocoa::appkit","",51,N],[11,"hash","","",52,N],[11,"hash","","",53,N],[11,"hash","","",54,N],[11,"hash","","",55,N],[11,"hash","","",56,N],[11,"hash","","",57,N],[11,"hash","","",58,N],[11,"hash","","",59,N],[11,"hash","","",60,N],[11,"hash","","",61,N],[11,"hash","cocoa::foundation","",78,N],[11,"hash","","",79,N],[11,"hash","","",80,N],[11,"hash","","",81,N],[11,"hash","","",82,N],[11,"hash","","",83,N],[11,"hash","cocoa::quartzcore","",91,N],[11,"hash","","",92,N],[11,"hash","","",93,N],[11,"from_iter","cocoa::appkit","",51,[[["t"]],["nsapplicationpresentationoptions"]]],[11,"from_iter","","",52,[[["t"]],["nswindowstylemask"]]],[11,"from_iter","","",53,[[["t"]],["nswindoworderingmode"]]],[11,"from_iter","","",54,[[["t"]],["nsalignmentoptions"]]],[11,"from_iter","","",55,[[["t"]],["nswindowcollectionbehavior"]]],[11,"from_iter","","",56,[[["t"]],["nswindowocclusionstate"]]],[11,"from_iter","","",57,[[["t"]],["nseventswipetrackingoptions"]]],[11,"from_iter","","",58,[[["t"]],["nseventphase"]]],[11,"from_iter","","",59,[[["t"]],["nstouchphase"]]],[11,"from_iter","","",60,[[["t"]],["nseventmask"]]],[11,"from_iter","","",61,[[["t"]],["nseventmodifierflags"]]],[11,"from_iter","cocoa::foundation","",78,[[["t"]],["nsenumerationoptions"]]],[11,"from_iter","","",79,[[["t"]],["nsdatareadingoptions"]]],[11,"from_iter","","",80,[[["t"]],["nsdatabase64encodingoptions"]]],[11,"from_iter","","",81,[[["t"]],["nsdatabase64decodingoptions"]]],[11,"from_iter","","",82,[[["t"]],["nsdatawritingoptions"]]],[11,"from_iter","","",83,[[["t"]],["nsdatasearchoptions"]]],[11,"from_iter","cocoa::quartzcore","",91,[[["t"]],["edgeantialiasingmask"]]],[11,"from_iter","","",92,[[["t"]],["cornermask"]]],[11,"from_iter","","",93,[[["t"]],["autoresizingmask"]]],[11,"fmt","cocoa::appkit","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","cocoa::foundation","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","cocoa::quartzcore","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","cocoa::appkit","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","cocoa::foundation","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","cocoa::quartzcore","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","cocoa::appkit","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","cocoa::foundation","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","cocoa::quartzcore","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","cocoa::appkit","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","cocoa::foundation","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","cocoa::quartzcore","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"encode","cocoa::foundation","",62,[[],["encoding"]]],[11,"encode","","",63,[[],["encoding"]]],[11,"encode","","",64,[[],["encoding"]]],[11,"new","cocoa::appkit","",0,[[["f64"],["f64"]],["cgpoint"]]],[11,"apply_transform","","",0,[[["self"],["cgaffinetransform"]],["cgpoint"]]],[11,"valueWithPoint","cocoa::foundation","",68,[[["self"],["nspoint"]],["id"]]],[11,"valueWithSize","","",68,[[["self"],["nssize"]],["id"]]]],"paths":[[3,"CGPoint"],[4,"NSApplicationActivationPolicy"],[4,"NSApplicationActivationOptions"],[4,"NSApplicationTerminateReply"],[4,"NSWindowTitleVisibility"],[4,"NSBackingStoreType"],[4,"NSOpenGLPixelFormatAttribute"],[4,"NSOpenGLPFAOpenGLProfiles"],[4,"NSOpenGLContextParameter"],[4,"NSWindowButton"],[4,"NSBezelStyle"],[4,"NSRequestUserAttentionType"],[4,"NSPasteboardReadingOptions"],[4,"NSPasteboardWritingOptions"],[4,"NSEventGestureAxis"],[4,"NSEventType"],[4,"NSEventSubtype"],[4,"NSCompositingOperation"],[4,"NSImageCacheMode"],[4,"NSTIFFCompression"],[4,"NSImageLoadStatus"],[4,"NSTabViewType"],[4,"NSTabState"],[8,"NSApplication"],[8,"NSRunningApplication"],[8,"NSPasteboard"],[8,"NSPasteboardItem"],[8,"NSPasteboardItemDataProvider"],[8,"NSPasteboardWriting"],[8,"NSPasteboardReading"],[8,"NSMenu"],[8,"NSMenuItem"],[8,"NSWindow"],[8,"NSView"],[8,"NSOpenGLView"],[8,"NSOpenGLPixelFormat"],[8,"NSOpenGLContext"],[8,"NSEvent"],[8,"NSScreen"],[8,"NSButton"],[8,"NSImage"],[8,"NSSound"],[8,"NSStatusItem"],[8,"NSStatusBar"],[8,"NSTextField"],[8,"NSTabView"],[8,"NSTabViewItem"],[8,"NSLayoutConstraint"],[8,"NSLayoutDimension"],[8,"NSColor"],[8,"NSToolbar"],[3,"NSApplicationPresentationOptions"],[3,"NSWindowStyleMask"],[3,"NSWindowOrderingMode"],[3,"NSAlignmentOptions"],[3,"NSWindowCollectionBehavior"],[3,"NSWindowOcclusionState"],[3,"NSEventSwipeTrackingOptions"],[3,"NSEventPhase"],[3,"NSTouchPhase"],[3,"NSEventMask"],[3,"NSEventModifierFlags"],[3,"NSPoint"],[3,"NSSize"],[3,"NSRect"],[3,"NSRange"],[4,"NSRectEdge"],[4,"NSComparisonResult"],[8,"NSValue"],[8,"NSAutoreleasePool"],[8,"NSProcessInfo"],[8,"NSArray"],[8,"NSDictionary"],[8,"NSString"],[8,"NSDate"],[8,"NSFastEnumeration"],[8,"NSRunLoop"],[8,"NSData"],[3,"NSEnumerationOptions"],[3,"NSDataReadingOptions"],[3,"NSDataBase64EncodingOptions"],[3,"NSDataBase64DecodingOptions"],[3,"NSDataWritingOptions"],[3,"NSDataSearchOptions"],[3,"CATransform3D"],[3,"CVTimeStamp"],[3,"CVSMPTETime"],[4,"ContentsGravity"],[4,"ContentsFormat"],[4,"Filter"],[3,"CALayer"],[3,"EdgeAntialiasingMask"],[3,"CornerMask"],[3,"AutoresizingMask"],[3,"CARenderer"],[4,"NSPointingDeviceType"],[4,"NSEventButtonMask"],[3,"NSFastIterator"],[6,"id"]]};
searchIndex["color_quant"]={"doc":"Color quantization library This library provides a color…","items":[[3,"NeuQuant","color_quant","Neural network based color quantizer.",N,N],[11,"new","","Creates a new neuronal network and trains it with the…",0,N],[11,"init","","Initializes the neuronal network and trains it with the…",0,N],[11,"map_pixel","","Maps the rgba-pixel in-place to the best-matching color in…",0,N],[11,"index_of","","Finds the best-matching index in the color map.",0,N],[11,"color_map_rgba","","Returns the RGBA color map calculated from the sample. ",0,[[["self"]],["vec",["u8"]]]],[11,"color_map_rgb","","Returns the RGBA color map calculated from the sample. ",0,[[["self"]],["vec",["u8"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[3,"NeuQuant"]]};
searchIndex["conrod_core"]={"doc":"Conrod","items":[[3,"Ui","conrod_core","`Ui` is the most important type within Conrod and is…",N,N],[12,"theme","","The theme used to set default styling for widgets.",0,N],[12,"window","","An index into the root widget of the graph, representing…",0,N],[12,"fonts","","Manages all fonts that have been loaded by the user.",0,N],[12,"win_w","","Window width.",0,N],[12,"win_h","","Window height.",0,N],[3,"UiCell","","A wrapper around the `Ui` that restricts the user from…",N,N],[3,"UiBuilder","","A constructor type for building a `Ui` instance with a set…",N,N],[12,"window_dimensions","","The initial dimensions of the window in which the `Ui`…",1,N],[12,"maybe_theme","","The theme used to set default styling for widgets.",1,N],[12,"maybe_widgets_capacity","","An estimation of the maximum number of widgets that will…",1,N],[4,"Bordering","","To be used as a parameter for defining the aesthetic of…",N,N],[13,"Border","","Border width and color.",2,N],[13,"NoBorder","","No border.",2,N],[0,"color","","A library providing simple `Color` and `Gradient` types…",N,N],[3,"Hsla","conrod_core::color","The parts of HSL along with an alpha for transparency.",N,N],[12,"0","","",3,N],[12,"1","","",3,N],[12,"2","","",3,N],[12,"3","","",3,N],[3,"Rgba","","The parts of RGB along with an alpha for transparency.",N,N],[12,"0","","",4,N],[12,"1","","",4,N],[12,"2","","",4,N],[12,"3","","",4,N],[4,"Color","","Color supporting RGB and HSL variants.",N,N],[13,"Rgba","","Red, Green, Blue, Alpha - All values' scales represented…",5,N],[13,"Hsla","","Hue, Saturation, Lightness, Alpha - all valuess scales…",5,N],[4,"Gradient","","Linear or Radial Gradient.",N,N],[13,"Linear","","Takes a start and end point and then a series of color…",6,N],[13,"Radial","","First takes a start point and inner radius. Then takes an…",6,N],[5,"rgba","","Create RGB colors with an alpha component for…",N,[[["f32"],["f32"],["f32"],["f32"]],["color"]]],[5,"rgb","","Create RGB colors from numbers between 0.0 and 1.0.",N,[[["f32"],["f32"],["f32"]],["color"]]],[5,"rgba_bytes","","Create RGB colors from numbers between 0 and 255…",N,[[["u8"],["u8"],["u8"],["f32"]],["color"]]],[5,"rgb_bytes","","Create RGB colors from numbers between 0 and 255 inclusive.",N,[[["u8"],["u8"],["u8"]],["color"]]],[5,"hsla","","Create HSL colors with an alpha component for transparency.",N,[[["f32"],["f32"],["f32"],["f32"]],["color"]]],[5,"hsl","","Create HSL colors. This gives you access to colors more…",N,[[["f32"],["f32"],["f32"]],["color"]]],[5,"grayscale","","Produce a gray based on the input. 0.0 is white, 1.0 is…",N,[[["f32"]],["color"]]],[5,"greyscale","","Produce a gray based on the input. 0.0 is white, 1.0 is…",N,[[["f32"]],["color"]]],[5,"f32_to_byte","","Convert an f32 color to a byte.",N,[[["f32"]],["u8"]]],[5,"rgb_to_hsl","","Pure function for converting rgb to hsl.",N,N],[5,"hsl_to_rgb","","Pure function for converting hsl to rgb.",N,N],[5,"linear","","Create a linear gradient.",N,N],[5,"radial","","Create a radial gradient. ",N,N],[6,"Colour","","Regional spelling alias.",N,N],[17,"LIGHT_RED","","Scarlet Red - Light - #EF2929                         ",N,N],[17,"RED","","Scarlet Red - Regular - #CC0000                       ",N,N],[17,"DARK_RED","","Scarlet Red - Dark - #A30000                          ",N,N],[17,"LIGHT_ORANGE","","Orange - Light - #FCAF3E                              ",N,N],[17,"ORANGE","","Orange - Regular - #F57900                            ",N,N],[17,"DARK_ORANGE","","Orange - Dark - #CE5C00                               ",N,N],[17,"LIGHT_YELLOW","","Butter - Light - #FCE94F                              ",N,N],[17,"YELLOW","","Butter - Regular - #EDD400                            ",N,N],[17,"DARK_YELLOW","","Butter - Dark - #C4A000                               ",N,N],[17,"LIGHT_GREEN","","Chameleon - Light - #8AE234                           ",N,N],[17,"GREEN","","Chameleon - Regular - #73D216                         ",N,N],[17,"DARK_GREEN","","Chameleon - Dark - #4E9A06                            ",N,N],[17,"LIGHT_BLUE","","Sky Blue - Light - #729FCF                            ",N,N],[17,"BLUE","","Sky Blue - Regular - #3465A4                          ",N,N],[17,"DARK_BLUE","","Sky Blue - Dark - #204A87                             ",N,N],[17,"LIGHT_PURPLE","","Plum - Light - #AD7FA8                                ",N,N],[17,"PURPLE","","Plum - Regular - #75507B                              ",N,N],[17,"DARK_PURPLE","","Plum - Dark - #5C3566                                 ",N,N],[17,"LIGHT_BROWN","","Chocolate - Light - #E9B96E                           ",N,N],[17,"BROWN","","Chocolate - Regular - #C17D11                         ",N,N],[17,"DARK_BROWN","","Chocolate - Dark - #8F5902                            ",N,N],[17,"BLACK","","Straight Black.                                       ",N,N],[17,"WHITE","","Straight White.                                       ",N,N],[17,"LIGHT_GRAY","","Alluminium - Light                                    ",N,N],[17,"GRAY","","Alluminium - Regular                                  ",N,N],[17,"DARK_GRAY","","Alluminium - Dark                                     ",N,N],[17,"LIGHT_GREY","","Aluminium - Light - #EEEEEC                           ",N,N],[17,"GREY","","Aluminium - Regular - #D3D7CF                         ",N,N],[17,"DARK_GREY","","Aluminium - Dark - #BABDB6                            ",N,N],[17,"LIGHT_CHARCOAL","","Charcoal - Light - #888A85                            ",N,N],[17,"CHARCOAL","","Charcoal - Regular - #555753                          ",N,N],[17,"DARK_CHARCOAL","","Charcoal - Dark - #2E3436                             ",N,N],[17,"TRANSPARENT","","Transparent",N,N],[8,"Colorable","","Types that can be colored.",N,N],[10,"color","","Set the color of the widget.",7,[[["self"],["color"]],["self"]]],[11,"rgba","","Set the color of the widget from rgba values.",7,[[["self"],["f32"],["f32"],["f32"],["f32"]],["self"]]],[11,"rgb","","Set the color of the widget from rgb values.",7,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[11,"hsla","","Set the color of the widget from hsla values.",7,[[["self"],["f32"],["f32"],["f32"],["f32"]],["self"]]],[11,"hsl","","Set the color of the widget from hsl values.",7,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[11,"complement","","Produce a complementary color. The two colors will accent…",5,[[["self"]],["color"]]],[11,"luminance","","Calculate and return the luminance of the Color.",5,[[["self"]],["f32"]]],[11,"plain_contrast","","Return either black or white, depending which contrasts…",5,[[["self"]],["color"]]],[11,"to_hsl","","Extract the components of a color in the HSL format.",5,[[["self"]],["hsla"]]],[11,"to_rgb","","Extract the components of a color in the RGB format.",5,[[["self"]],["rgba"]]],[11,"to_fsa","","Extract the components of a color in the RGB format within…",5,N],[11,"to_byte_fsa","","Same as `to_fsa`, except r, g, b and a are represented in…",5,N],[11,"with_luminance","","Return the same color but with the given luminance.",5,[[["self"],["f32"]],["color"]]],[11,"alpha","","Return the same color but with the alpha multiplied by the…",5,[[["self"],["f32"]],["color"]]],[11,"with_alpha","","Return the same color but with the given alpha.",5,[[["self"],["f32"]],["color"]]],[11,"highlighted","","Return a highlighted version of the current Color.",5,[[["self"]],["color"]]],[11,"clicked","","Return a clicked version of the current Color.",5,[[["self"]],["color"]]],[11,"invert","","Return the Color's invert.",5,[[["self"]],["color"]]],[11,"red","","Return the red value.",5,[[["self"]],["f32"]]],[11,"green","","Return the green value.",5,[[["self"]],["f32"]]],[11,"blue","","Return the blue value.",5,[[["self"]],["f32"]]],[11,"set_red","","Set the red value.",5,[[["self"],["f32"]]]],[11,"set_green","","Set the green value.",5,[[["self"],["f32"]]]],[11,"set_blue","","Set the blue value.",5,[[["self"],["f32"]]]],[0,"event","conrod_core","Contains all types used to describe the input events that…",N,N],[3,"Text","conrod_core::event","Contains all relevant information for a Text event.",N,N],[12,"string","","All text that was entered as a part of the event.",8,N],[12,"modifiers","","The modifier keys that were down at the time.",8,N],[3,"Motion","","Contains all relevant information for a Motion event.",N,N],[12,"motion","","The type of `Motion` that occurred.",9,N],[12,"modifiers","","The modifier keys that were down at the time.",9,N],[3,"Press","","Contains all relevant information for a Press event.",N,N],[12,"button","","The `Button` that was pressed.",10,N],[12,"modifiers","","The modifier keys that were down at the time.",10,N],[3,"MousePress","","Contains all relevant information for the event where a…",N,N],[12,"button","","The mouse button that was pressed.",11,N],[12,"xy","","The location at which the mouse was pressed.",11,N],[12,"modifiers","","The modifier keys that were down at the time.",11,N],[3,"KeyPress","","Contains all relevant information for the event where a…",N,N],[12,"key","","The key that was pressed.",12,N],[12,"modifiers","","The modifier keys that were down at the time.",12,N],[3,"Release","","Contains all relevant information for a Release event.",N,N],[12,"button","","The `Button` that was released.",13,N],[12,"modifiers","","The modifier keys that were down at the time.",13,N],[3,"MouseRelease","","Contains all relevant information for the event where a…",N,N],[12,"button","","The mouse button that was released.",14,N],[12,"xy","","The location at which the mouse was released.",14,N],[12,"modifiers","","The modifier keys that were down at the time.",14,N],[3,"KeyRelease","","Contains all relevant information for the event where a…",N,N],[12,"key","","The key that was release.",15,N],[12,"modifiers","","The modifier keys that were down at the time.",15,N],[3,"Drag","","Contains all the relevant information for a mouse drag.",N,N],[12,"button","","Which mouse button was being held during the drag",16,N],[12,"origin","","The point from which the current series of drag events…",16,N],[12,"from","","The point from which this drag event began.",16,N],[12,"to","","The point at which this drag event ended.",16,N],[12,"delta_xy","","The magnitude of the vector between `from` and `to`.",16,N],[12,"total_delta_xy","","The magnitude of the vector between `origin` and `to`.",16,N],[12,"modifiers","","Which modifier keys are being held during the mouse drag.",16,N],[3,"Click","","Contains all the relevant information for a mouse click.",N,N],[12,"button","","Which mouse button was clicked",17,N],[12,"xy","","The position at which the mouse was released.",17,N],[12,"modifiers","","Which modifier keys, if any, that were being held down…",17,N],[3,"DoubleClick","","Contains all the relevant information for a double click.",N,N],[12,"button","","Which mouse button was clicked",18,N],[12,"xy","","The position at which the mouse was released.",18,N],[12,"modifiers","","Which modifier keys, if any, that were being held down…",18,N],[3,"Tap","","All relevant information for a touch-screen tap event.",N,N],[12,"id","","The unique identifier of the source of the touch.",19,N],[12,"xy","","The position at which the finger left the screen.",19,N],[3,"Scroll","","Holds all the relevant information about a scroll event",N,N],[12,"x","","The amount of scroll along the x axis.",20,N],[12,"y","","The amount of scroll along the y axis.",20,N],[12,"modifiers","","Which modifier keys, if any, that were being held down…",20,N],[4,"Input","","The event type that is used by conrod to track inputs from…",N,N],[13,"Press","","A button on some input device was pressed.",21,N],[13,"Release","","A button on some input device was released.",21,N],[13,"Resize","","The window was received to the given dimensions.",21,N],[13,"Motion","","Some motion input was received (e.g. moving mouse or…",21,N],[13,"Touch","","Input from a touch surface/screen.",21,N],[13,"Text","","Text input was received, usually via the keyboard.",21,N],[13,"Focus","","The window was focused or lost focus.",21,N],[13,"Redraw","","The backed requested to redraw.",21,N],[4,"Event","","Enum containing all the events that the `Ui` may provide.",N,N],[13,"Raw","","Represents a raw `input::Input` event.",22,N],[13,"Ui","","Events that have been interpreted from…",22,N],[4,"Ui","","Represents all events interpreted by the `Ui`.",N,N],[13,"Text","","Entered text, along with the widget that was capturing the…",23,N],[13,"Press","","Some button was pressed, along with the widget that was…",23,N],[13,"Release","","Some button was released, along with the widget that was…",23,N],[13,"Motion","","Represents all forms of motion input, alongside with the…",23,N],[13,"Touch","","Interaction with a touch screen/surface.",23,N],[13,"WindowResized","","The window's dimensions were resized.",23,N],[13,"Click","","Represents a pointing device being pressed and…",23,N],[13,"DoubleClick","","Two `Click` events with the same `button` and `xy`…",23,N],[13,"Tap","","A user tapped a touch screen/surface.",23,N],[13,"Drag","","Represents a pointing device button being pressed and a…",23,N],[13,"Scroll","","A generic scroll event.",23,N],[13,"WidgetCapturesInputSource","","Indicates that the given widget has captured the given…",23,N],[13,"WidgetUncapturesInputSource","","Indicates that the given widget has released the given…",23,N],[4,"Widget","","Events that apply to a specific widget.",N,N],[13,"Text","","Entered text.",24,N],[13,"Motion","","Represents all forms of motion input.",24,N],[13,"Touch","","Interaction with a touch screen.",24,N],[13,"Press","","Some button was pressed.",24,N],[13,"Release","","Some button was released.",24,N],[13,"Click","","Represents a pointing device being pressed and…",24,N],[13,"DoubleClick","","Two `Click` events with the same `button` and `xy`…",24,N],[13,"Tap","","A user tapped the widget on a touch screen/surface.",24,N],[13,"Drag","","Represents a pointing device button being pressed and a…",24,N],[13,"Scroll","","Represents the amount of scroll that has been applied to…",24,N],[13,"WindowResized","","The window's dimensions were resized.",24,N],[13,"CapturesInputSource","","The widget has captured the given input source.",24,N],[13,"UncapturesInputSource","","The widget has released the input source from capturing.",24,N],[4,"Button","","The different kinds of `Button`s that may be `Press`ed or…",N,N],[13,"Keyboard","","A keyboard button.",25,N],[13,"Mouse","","A mouse button along with the location at which it was…",25,N],[13,"Controller","","A controller button.",25,N],[11,"relative_to","","Returns a copy of the `Motion` relative to the given `xy`",9,[[["self"],["point"]],["motion"]]],[11,"relative_to","","Returns a copy of the Button relative to the given `xy`",25,[[["self"],["point"]],["button"]]],[11,"relative_to","","Returns a copy of the Press relative to the given `xy`",10,[[["self"],["point"]],["press"]]],[11,"mouse","","If the `Press` event represents the pressing of a mouse…",10,[[["self"]],["option",["mousepress"]]]],[11,"key","","If the `Press` event represents the pressing of keyboard…",10,[[["self"]],["option",["keypress"]]]],[11,"relative_to","","Returns a copy of the Release relative to the given `xy`",13,[[["self"],["point"]],["release"]]],[11,"mouse","","If the `Release` event represents the releasing of a mouse…",13,[[["self"]],["option",["mouserelease"]]]],[11,"key","","If the `Release` event represents the release of keyboard…",13,[[["self"]],["option",["keyrelease"]]]],[11,"relative_to","","Returns a copy of the `Tap` relative to the given `xy`",19,[[["self"],["point"]],["self"]]],[11,"relative_to","","Returns a copy of the Click relative to the given `xy`",17,[[["self"],["point"]],["click"]]],[11,"relative_to","","Returns a copy of the DoubleClick relative to the given `xy`",18,[[["self"],["point"]],["doubleclick"]]],[11,"relative_to","","Returns a copy of the Drag relative to the given `xy`",16,[[["self"],["point"]],["drag"]]],[0,"graph","conrod_core","Conrod uses a directed acyclic graph to manage both…",N,N],[8,"Walker","conrod_core::graph","A trait providing a variety of useful methods for…",N,N],[16,"Index","","The unsigned integer type used for node and edge indices.",26,N],[10,"next","","Fetch the `EdgeIndex` and `NodeIndex` to the next…",26,[[["self"],["g"]],["option"]]],[11,"next_edge","","The next edge in our walk for the given Graph.",26,[[["self"],["g"]],["option",["edgeindex"]]]],[11,"next_node","","The next node in our walk for the given Graph.",26,[[["self"],["g"]],["option",["nodeindex"]]]],[11,"count","","Counts all the steps in the entire walk of the given graph.",26,[[["self"],["g"]],["usize"]]],[11,"last","","Walks the whole walk until reaching and returning the last…",26,[[["self"],["g"]],["option"]]],[11,"last_edge","","Walks the whole walk until reaching and returning the last…",26,[[["self"],["g"]],["option",["edgeindex"]]]],[11,"last_node","","Walks the whole walk until reaching and returning the last…",26,[[["self"],["g"]],["option",["nodeindex"]]]],[11,"nth","","Walks \"n\" number of steps and produces the resulting edge…",26,[[["self"],["g"],["usize"]],["option"]]],[11,"nth_edge","","Walks \"n\" number of steps and produces the resulting edge.",26,[[["self"],["g"],["usize"]],["option",["edgeindex"]]]],[11,"nth_node","","Walks \"n\" number of steps and produces the resulting node.",26,[[["self"],["g"],["usize"]],["option",["nodeindex"]]]],[11,"chain","","Produces a walker that will walk the entirey of `self`…",26,[[["self"],["o"]],["chain"]]],[11,"filter","","Creates a walker that applies the predicate to each…",26,[[["self"],["p"]],["filter"]]],[11,"peekable","","Creates a walker that has a `.peek(&graph)` method that…",26,[[["self"]],["peekable"]]],[11,"skip_while","","Creates a walker that invokes the predicate on elements…",26,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Creates a walker that yields elements so long as the…",26,[[["self"],["p"]],["takewhile"]]],[11,"skip","","Creates a walker that skips the first n steps of this…",26,[[["self"],["usize"]],["skip"]]],[11,"take","","Creates a walker that yields the first n steps of this walk.",26,[[["self"],["usize"]],["take"]]],[11,"all","","Tests whether the predicate holds true for all steps in…",26,[[["self"],["g"],["p"]],["bool"]]],[11,"any","","Tests whether any step in the walk satisfies the given…",26,[[["self"],["g"],["p"]],["bool"]]],[11,"find","","Returns the first edge node index pair satisfying the…",26,[[["self"],["g"],["p"]],["option"]]],[11,"find_edge","","Returns the edge index satisfying the specified predicate.",26,[[["self"],["g"],["p"]],["option",["edgeindex"]]]],[11,"find_node","","Returns the node index satisfying the specified predicate.",26,[[["self"],["g"],["p"]],["option",["nodeindex"]]]],[11,"cycle","","Repeats the walker endlessly.",26,[[["self"]],["cycle"]]],[11,"fold","","Performs a fold operation over the entire walker,…",26,[[["self"],["b"],["g"],["f"]],["b"]]],[11,"inspect","","Creates a walker that calls a function with a reference to…",26,[[["self"],["f"]],["inspect"]]],[11,"iter","","Converts the walker into an iterator yielding index pairs.",26,[[["self"],["g"]],["iter"]]],[11,"iter_weights","","Converts the walker into an iterator yielding `(&e, &n)`,…",26,[[["self"],["g"]],["iterweights"]]],[3,"UniqueWidgetState","","The state type that we'll dynamically cast to and from…",N,N],[12,"state","","A Widget's unique \"State\".",27,N],[12,"style","","A Widget's unique \"Style\".",27,N],[3,"Container","","A container for caching a Widget's state inside a Graph…",N,N],[12,"maybe_state","","Dynamically stored widget state.",28,N],[12,"type_id","","The unique `TypeId` associated with the `Widget::State`.",28,N],[12,"rect","","The rectangle describing the Widget's area.",28,N],[12,"depth","","The depth at which the widget will be rendered…",28,N],[12,"kid_area","","The area in which child widgets are placed.",28,N],[12,"maybe_dragged_from","","If widget is draggable and is being dragged, this is where…",28,N],[12,"maybe_floating","","Whether or not the widget is a \"Floating\" widget.",28,N],[12,"crop_kids","","Whether or not children widgets should be cropped to the…",28,N],[12,"maybe_x_scroll_state","","Scroll related state (is only `Some` if this axis is…",28,N],[12,"maybe_y_scroll_state","","Scroll related state (is only `Some` if this axis is…",28,N],[12,"instantiation_order_idx","","Represents the Widget's position within the overall…",28,N],[12,"is_over","","A function specified by the widget to use when determining…",28,N],[3,"IsOverFn","","A wrapper around a `widget::IsOverFn` to make implementing…",N,N],[12,"0","","",29,N],[3,"Graph","","Stores the dynamic state of a UI tree of Widgets.",N,N],[4,"Node","","A node for use within the Graph.",N,N],[13,"Widget","","A widget constructed by a user.",30,N],[13,"Placeholder","","A placeholder node - used when reserving a place for a…",30,N],[4,"Edge","","An edge between nodes within the UI Graph.",N,N],[13,"Position","","Describes the relative positioning of widgets.",31,N],[13,"Depth","","Describes the rendering order of the widgets.",31,N],[13,"Graphic","","Describes when a widget is used solely as a graphical…",31,N],[0,"algo","","This module was created in order to keep the `graph`…",N,N],[3,"PickWidgets","conrod_core::graph::algo","A node \"walker\" that yields all widgets under the given…",N,N],[3,"PickScrollableWidgets","","A node \"walker\" that yields all scrollable widgets under…",N,N],[5,"pick_widgets","","Produces a graph node \"walker\" that yields all widgets…",N,N],[5,"pick_scrollable_widgets","","Produces a graph node \"walker\" that yields all scrollable…",N,N],[5,"cropped_area_of_widget","","The rectangle that represents the maximum visible area for…",N,[[["graph"],["id"]],["option",["rect"]]]],[5,"cropped_area_of_widget_within_depth","","The rectangle that represents the maximum visible area for…",N,[[["graph"],["id"],["id"]],["option",["rect"]]]],[5,"kids_bounding_box","","Find the absolute `Rect` that bounds all widgets that are…",N,[[["graph"],["fnvhashset"],["id"]],["option",["rect"]]]],[5,"scroll_offset","","Return the `scroll_offset` for the widget at the given…",N,[[["graph"],["id"]],["point"]]],[11,"next_including_graphics_children","","The next `widget::Id` under the `xy` location.",32,N],[11,"next","","The `widget::Id` of the next `Widget` under the `xy`…",32,N],[11,"next","","The `widget::Id` of the next scrollable `Widget` under the…",33,N],[0,"depth_order","conrod_core::graph","Types and functionality related to the calculation of a…",N,N],[3,"DepthOrder","conrod_core::graph::depth_order","Contains Node indices in order of depth, starting with the…",N,N],[12,"indices","","The primary Vec storing the DepthOrder's ordered indices.",34,N],[11,"new","","Construct a new empty DepthOrder.",34,[[],["depthorder"]]],[11,"with_node_capacity","","Construct a new empty DepthOrder.",34,[[["usize"]],["depthorder"]]],[11,"update","","Update the DepthOrder (starting with the deepest) for all…",34,[[["self"],["graph"],["id"],["fnvhashset"]]]],[6,"EdgeIndex","conrod_core::graph","An alias for our Graph's Edge Index.",N,N],[6,"IndexPair","","An alias for a tuple containing an associated…",N,N],[6,"Parents","","A Walker over some node's parent nodes.",N,N],[6,"Children","","A Walker over some node's child nodes.",N,N],[6,"PositionParents","","An alias for the iterator yielding both X and Y Position…",N,N],[6,"FilteredChildren","","An alias for some filtered children walker.",N,N],[6,"DepthChildren","","An alias for a Walker over a node's Depth children.",N,N],[6,"XPositionChildren","","An alias for a Walker over a node's X Position children.",N,N],[6,"YPositionChildren","","An alias for a Walker over a node's Y Position children.",N,N],[6,"PositionChildren","","An alias for a Walker over a node's X and Y Position…",N,N],[6,"GraphicChildren","","An alias for a Walker over a node's Graphic children.",N,N],[6,"RecursiveWalk","","An alias for our Graph's recursive walker.",N,N],[6,"WouldCycle","","An alias for our Graph's WouldCycle error type.",N,N],[17,"NUM_EDGE_VARIANTS","","The number of different variants within the Edge enum.",N,N],[11,"state_and_style","","Borrow the Container's unique widget State and Style if…",28,[[["self"]],["option",["uniquewidgetstate"]]]],[11,"unique_widget_state","","Same as Container::state_and_style but accessed using a…",28,[[["self"]],["option",["uniquewidgetstate"]]]],[11,"is_widget","","Whether or not the Node is of the Widget variant.",30,[[["self"]],["bool"]]],[11,"new","","A new empty Graph.",35,[[],["self"]]],[11,"with_node_capacity","","A new Graph with the given node capacity.",35,[[["usize"]],["self"]]],[11,"clear","","Removes all Nodes and Edges from the Graph.",35,[[["self"]]]],[11,"node_count","","The total number of Nodes in the Graph.",35,[[["self"]],["usize"]]],[11,"widget_count","","The total number of Node::Widgets in the Graph.",35,[[["self"]],["usize"]]],[11,"edge_count","","The total number of Edges in the Graph.",35,[[["self"]],["usize"]]],[11,"node_capacity","","The current capacity for the Graph's internal node `Vec`.",35,[[["self"]],["usize"]]],[11,"add_placeholder","","Add a new placeholder node and return it's `widget::Id`…",35,[[["self"]],["id"]]],[11,"node","","Borrow the node at the given widget::Id if there is one.",35,[[["self"],["id"]],["option",["node"]]]],[11,"node_mut","","Mutably borrow the node at the given widget::Id if there…",35,[[["self"],["id"]],["option",["node"]]]],[11,"edge","","Borrow the edge at the given EdgeIndex if there is one.",35,[[["self"],["edgeindex"]],["option",["edge"]]]],[11,"edge_mut","","Mutably borrow the edge at the given EdgeIndex if there is…",35,[[["self"],["edgeindex"]],["option",["edge"]]]],[11,"edge_endpoints","","Return the parent and child nodes on either end of the…",35,[[["self"],["edgeindex"]],["option"]]],[11,"widget","","If there is a Widget for the given index, return a…",35,[[["self"],["id"]],["option",["container"]]]],[11,"widget_mut","","If there is a Widget for the given Id, return a mutable…",35,[[["self"],["id"]],["option",["container"]]]],[11,"parents","","A Walker type that may be used to step through the parents…",35,[[["self"],["id"]],["parents"]]],[11,"recursive_walk","","A Walker type that recursively walks the Graph using the…",35,[[["self"],["id"],["f"]],["recursivewalk"]]],[11,"edge_parent","","If the widget at the given index has some parent along an…",35,[[["self"],["id"],["edge"]],["option",["id"]]]],[11,"depth_parent","","Return the index of the parent along the given widget's…",35,[[["self"],["id"]],["option",["id"]]]],[11,"x_position_parent","","Return the index of the parent along the given widget's…",35,[[["self"],["id"]],["option",["id"]]]],[11,"y_position_parent","","Return the index of the parent along the given widget's…",35,[[["self"],["id"]],["option",["id"]]]],[11,"position_parents","","Produces an iterator yielding the parents along both the X…",35,[[["self"],["id"]],["positionparents"]]],[11,"graphic_parent","","Return the index of the parent along the given widget's…",35,[[["self"],["id"]],["option",["id"]]]],[11,"depth_parent_recursion","","A Walker type that recursively walks Depth parents…",35,[[["self"],["id"]],["recursivewalk"]]],[11,"x_position_parent_recursion","","A Walker type that recursively walks X Position parents…",35,[[["self"],["id"]],["recursivewalk"]]],[11,"y_position_parent_recursion","","A Walker type that recursively walks Y Position parents…",35,[[["self"],["id"]],["recursivewalk"]]],[11,"graphic_parent_recursion","","A Walker type that recursively walks Graphic parents…",35,[[["self"],["id"]],["recursivewalk"]]],[11,"scrollable_y_parent_recursion","","A Walker type that recursively walks Depth parents that…",35,[[["self"],["id"]],["recursivewalk"]]],[11,"scrollable_x_parent_recursion","","A Walker type that recursively walks Depth parents that…",35,[[["self"],["id"]],["recursivewalk"]]],[11,"children","","A Walker type that may be used to step through the…",35,[[["self"],["id"]],["children"]]],[11,"depth_children","","For walking the Depth children of the given parent node.",35,[[["self"],["id"]],["depthchildren"]]],[11,"x_position_children","","For walking the Position(X) children of the given parent…",35,[[["self"],["id"]],["xpositionchildren"]]],[11,"y_position_children","","For walking the Position(Y) children of the given parent…",35,[[["self"],["id"]],["ypositionchildren"]]],[11,"position_children","","For walking the Position children of the given parent node.",35,[[["self"],["id"]],["positionchildren"]]],[11,"graphic_children","","For walking the Graphic children of the given parent node.",35,[[["self"],["id"]],["graphicchildren"]]],[11,"does_edge_exist","","Does the given edge type exist between the nodes `parent`…",35,[[["self"],["id"],["id"],["f"]],["bool"]]],[11,"does_depth_edge_exist","","Does a Edge::Depth exist between the nodes `parent` ->…",35,[[["self"],["id"],["id"]],["bool"]]],[11,"does_position_edge_exist","","Does a Edge::Position exist between the nodes `parent` ->…",35,[[["self"],["id"],["id"]],["bool"]]],[11,"does_graphic_edge_exist","","Does a Edge::Graphic exist between the nodes `parent` ->…",35,[[["self"],["id"],["id"]],["bool"]]],[11,"does_recursive_edge_exist","","Are the given `parent` and `child` nodes connected by a…",35,[[["self"],["id"],["id"],["f"]],["bool"]]],[11,"does_recursive_depth_edge_exist","","Are the given `parent` and `child` nodes connected by a…",35,[[["self"],["id"],["id"]],["bool"]]],[11,"does_recursive_graphic_edge_exist","","Are the given `parent` and `child` nodes connected by a…",35,[[["self"],["id"],["id"]],["bool"]]],[11,"pre_update_cache","","Cache some `PreUpdateCache` widget data into the graph.",35,[[["self"],["id"],["preupdatecache"],["usize"]]]],[11,"post_update_cache","","Cache some `PostUpdateCache` widget data into the graph.",35,[[["self"],["postupdatecache"]]]],[0,"guide","conrod_core","The Conrod Guide",N,N],[0,"chapter_1","conrod_core::guide","What is Conrod?",N,N],[0,"chapter_2","","Getting Started",N,N],[0,"chapter_3","","Setting up a basic window using glium and winit",N,N],[0,"image","conrod_core","A type used to manage a user's image data and map them to…",N,N],[3,"Id","conrod_core::image","Unique image identifier.",N,N],[3,"Map","","A type used to map the `widget::Id` of `Image` widgets to…",N,N],[12,"trigger_redraw","","Whether or not the `image::Map` will trigger a redraw the…",36,N],[3,"NewIds","","An iterator yielding an `Id` for each new `Img` inserted…",N,N],[6,"HashMap","","The type of `std::collections::HashMap` with…",N,N],[11,"new","","Construct a new, empty `image::Map`.",36,[[],["self"]]],[11,"get_mut","","Uniquely borrow the `Img` associated with the given widget.",36,[[["self"],["id"]],["option"]]],[11,"insert","","Inserts the given image into the map, returning its…",36,[[["self"],["img"]],["id"]]],[11,"replace","","Replaces the given image in the map if it exists. Returns…",36,[[["self"],["id"],["img"]],["option"]]],[11,"remove","","Removes the given image from the map if it exists. Returns…",36,[[["self"],["id"]],["option"]]],[11,"extend","","Insert each of the images yielded by the given iterator…",36,[[["self"],["i"]],["newids"]]],[0,"input","conrod_core","This module contains all the logic for handling input…",N,N],[3,"ModifierKey","conrod_core::input","",N,N],[4,"Button","","Models different kinds of buttons.",N,N],[13,"Keyboard","","A keyboard button.",37,N],[13,"Mouse","","A mouse button.",37,N],[13,"Controller","","A controller button.",37,N],[13,"Hat","","A controller hat (d-Pad)",37,N],[3,"ControllerButton","","Components of a controller button event. Not guaranteed…",N,N],[12,"id","","Which controller was the button on.",38,N],[12,"button","","Which button was pressed.",38,N],[3,"ControllerAxisArgs","","Components of a controller axis move event. Not guaranteed…",N,N],[12,"id","","Which controller moved.",39,N],[12,"axis","","The axis that moved.",39,N],[12,"position","","Position of the controller. Usually [-1.0, 1.0], though…",39,N],[0,"keyboard","","Back-end agnostic keyboard keys.",N,N],[3,"ModifierKey","conrod_core::input::keyboard","",N,N],[4,"Key","","Represent a keyboard key. Keycodes follows SDL…",N,N],[13,"Unknown","","",40,N],[13,"Backspace","","",40,N],[13,"Tab","","",40,N],[13,"Return","","",40,N],[13,"Escape","","",40,N],[13,"Space","","",40,N],[13,"Exclaim","","",40,N],[13,"Quotedbl","","",40,N],[13,"Hash","","",40,N],[13,"Dollar","","",40,N],[13,"Percent","","",40,N],[13,"Ampersand","","",40,N],[13,"Quote","","",40,N],[13,"LeftParen","","",40,N],[13,"RightParen","","",40,N],[13,"Asterisk","","",40,N],[13,"Plus","","",40,N],[13,"Comma","","",40,N],[13,"Minus","","",40,N],[13,"Period","","",40,N],[13,"Slash","","",40,N],[13,"D0","","",40,N],[13,"D1","","",40,N],[13,"D2","","",40,N],[13,"D3","","",40,N],[13,"D4","","",40,N],[13,"D5","","",40,N],[13,"D6","","",40,N],[13,"D7","","",40,N],[13,"D8","","",40,N],[13,"D9","","",40,N],[13,"Colon","","",40,N],[13,"Semicolon","","",40,N],[13,"Less","","",40,N],[13,"Equals","","",40,N],[13,"Greater","","",40,N],[13,"Question","","",40,N],[13,"At","","",40,N],[13,"LeftBracket","","",40,N],[13,"Backslash","","",40,N],[13,"RightBracket","","",40,N],[13,"Caret","","",40,N],[13,"Underscore","","",40,N],[13,"Backquote","","",40,N],[13,"A","","",40,N],[13,"B","","",40,N],[13,"C","","",40,N],[13,"D","","",40,N],[13,"E","","",40,N],[13,"F","","",40,N],[13,"G","","",40,N],[13,"H","","",40,N],[13,"I","","",40,N],[13,"J","","",40,N],[13,"K","","",40,N],[13,"L","","",40,N],[13,"M","","",40,N],[13,"N","","",40,N],[13,"O","","",40,N],[13,"P","","",40,N],[13,"Q","","",40,N],[13,"R","","",40,N],[13,"S","","",40,N],[13,"T","","",40,N],[13,"U","","",40,N],[13,"V","","",40,N],[13,"W","","",40,N],[13,"X","","",40,N],[13,"Y","","",40,N],[13,"Z","","",40,N],[13,"Delete","","",40,N],[13,"CapsLock","","",40,N],[13,"F1","","",40,N],[13,"F2","","",40,N],[13,"F3","","",40,N],[13,"F4","","",40,N],[13,"F5","","",40,N],[13,"F6","","",40,N],[13,"F7","","",40,N],[13,"F8","","",40,N],[13,"F9","","",40,N],[13,"F10","","",40,N],[13,"F11","","",40,N],[13,"F12","","",40,N],[13,"PrintScreen","","",40,N],[13,"ScrollLock","","",40,N],[13,"Pause","","",40,N],[13,"Insert","","",40,N],[13,"Home","","",40,N],[13,"PageUp","","",40,N],[13,"End","","",40,N],[13,"PageDown","","",40,N],[13,"Right","","",40,N],[13,"Left","","",40,N],[13,"Down","","",40,N],[13,"Up","","",40,N],[13,"NumLockClear","","",40,N],[13,"NumPadDivide","","",40,N],[13,"NumPadMultiply","","",40,N],[13,"NumPadMinus","","",40,N],[13,"NumPadPlus","","",40,N],[13,"NumPadEnter","","",40,N],[13,"NumPad1","","",40,N],[13,"NumPad2","","",40,N],[13,"NumPad3","","",40,N],[13,"NumPad4","","",40,N],[13,"NumPad5","","",40,N],[13,"NumPad6","","",40,N],[13,"NumPad7","","",40,N],[13,"NumPad8","","",40,N],[13,"NumPad9","","",40,N],[13,"NumPad0","","",40,N],[13,"NumPadPeriod","","",40,N],[13,"Application","","",40,N],[13,"Power","","",40,N],[13,"NumPadEquals","","",40,N],[13,"F13","","",40,N],[13,"F14","","",40,N],[13,"F15","","",40,N],[13,"F16","","",40,N],[13,"F17","","",40,N],[13,"F18","","",40,N],[13,"F19","","",40,N],[13,"F20","","",40,N],[13,"F21","","",40,N],[13,"F22","","",40,N],[13,"F23","","",40,N],[13,"F24","","",40,N],[13,"Execute","","",40,N],[13,"Help","","",40,N],[13,"Menu","","",40,N],[13,"Select","","",40,N],[13,"Stop","","",40,N],[13,"Again","","",40,N],[13,"Undo","","",40,N],[13,"Cut","","",40,N],[13,"Copy","","",40,N],[13,"Paste","","",40,N],[13,"Find","","",40,N],[13,"Mute","","",40,N],[13,"VolumeUp","","",40,N],[13,"VolumeDown","","",40,N],[13,"NumPadComma","","",40,N],[13,"NumPadEqualsAS400","","",40,N],[13,"AltErase","","",40,N],[13,"Sysreq","","",40,N],[13,"Cancel","","",40,N],[13,"Clear","","",40,N],[13,"Prior","","",40,N],[13,"Return2","","",40,N],[13,"Separator","","",40,N],[13,"Out","","",40,N],[13,"Oper","","",40,N],[13,"ClearAgain","","",40,N],[13,"CrSel","","",40,N],[13,"ExSel","","",40,N],[13,"NumPad00","","",40,N],[13,"NumPad000","","",40,N],[13,"ThousandsSeparator","","",40,N],[13,"DecimalSeparator","","",40,N],[13,"CurrencyUnit","","",40,N],[13,"CurrencySubUnit","","",40,N],[13,"NumPadLeftParen","","",40,N],[13,"NumPadRightParen","","",40,N],[13,"NumPadLeftBrace","","",40,N],[13,"NumPadRightBrace","","",40,N],[13,"NumPadTab","","",40,N],[13,"NumPadBackspace","","",40,N],[13,"NumPadA","","",40,N],[13,"NumPadB","","",40,N],[13,"NumPadC","","",40,N],[13,"NumPadD","","",40,N],[13,"NumPadE","","",40,N],[13,"NumPadF","","",40,N],[13,"NumPadXor","","",40,N],[13,"NumPadPower","","",40,N],[13,"NumPadPercent","","",40,N],[13,"NumPadLess","","",40,N],[13,"NumPadGreater","","",40,N],[13,"NumPadAmpersand","","",40,N],[13,"NumPadDblAmpersand","","",40,N],[13,"NumPadVerticalBar","","",40,N],[13,"NumPadDblVerticalBar","","",40,N],[13,"NumPadColon","","",40,N],[13,"NumPadHash","","",40,N],[13,"NumPadSpace","","",40,N],[13,"NumPadAt","","",40,N],[13,"NumPadExclam","","",40,N],[13,"NumPadMemStore","","",40,N],[13,"NumPadMemRecall","","",40,N],[13,"NumPadMemClear","","",40,N],[13,"NumPadMemAdd","","",40,N],[13,"NumPadMemSubtract","","",40,N],[13,"NumPadMemMultiply","","",40,N],[13,"NumPadMemDivide","","",40,N],[13,"NumPadPlusMinus","","",40,N],[13,"NumPadClear","","",40,N],[13,"NumPadClearEntry","","",40,N],[13,"NumPadBinary","","",40,N],[13,"NumPadOctal","","",40,N],[13,"NumPadDecimal","","",40,N],[13,"NumPadHexadecimal","","",40,N],[13,"LCtrl","","",40,N],[13,"LShift","","",40,N],[13,"LAlt","","",40,N],[13,"LGui","","",40,N],[13,"RCtrl","","",40,N],[13,"RShift","","",40,N],[13,"RAlt","","",40,N],[13,"RGui","","",40,N],[13,"Mode","","",40,N],[13,"AudioNext","","",40,N],[13,"AudioPrev","","",40,N],[13,"AudioStop","","",40,N],[13,"AudioPlay","","",40,N],[13,"AudioMute","","",40,N],[13,"MediaSelect","","",40,N],[13,"Www","","",40,N],[13,"Mail","","",40,N],[13,"Calculator","","",40,N],[13,"Computer","","",40,N],[13,"AcSearch","","",40,N],[13,"AcHome","","",40,N],[13,"AcBack","","",40,N],[13,"AcForward","","",40,N],[13,"AcStop","","",40,N],[13,"AcRefresh","","",40,N],[13,"AcBookmarks","","",40,N],[13,"BrightnessDown","","",40,N],[13,"BrightnessUp","","",40,N],[13,"DisplaySwitch","","",40,N],[13,"KbdIllumToggle","","",40,N],[13,"KbdIllumDown","","",40,N],[13,"KbdIllumUp","","",40,N],[13,"Eject","","",40,N],[13,"Sleep","","",40,N],[4,"Key","conrod_core::input","Represent a keyboard key. Keycodes follows SDL…",N,N],[13,"Unknown","","",40,N],[13,"Backspace","","",40,N],[13,"Tab","","",40,N],[13,"Return","","",40,N],[13,"Escape","","",40,N],[13,"Space","","",40,N],[13,"Exclaim","","",40,N],[13,"Quotedbl","","",40,N],[13,"Hash","","",40,N],[13,"Dollar","","",40,N],[13,"Percent","","",40,N],[13,"Ampersand","","",40,N],[13,"Quote","","",40,N],[13,"LeftParen","","",40,N],[13,"RightParen","","",40,N],[13,"Asterisk","","",40,N],[13,"Plus","","",40,N],[13,"Comma","","",40,N],[13,"Minus","","",40,N],[13,"Period","","",40,N],[13,"Slash","","",40,N],[13,"D0","","",40,N],[13,"D1","","",40,N],[13,"D2","","",40,N],[13,"D3","","",40,N],[13,"D4","","",40,N],[13,"D5","","",40,N],[13,"D6","","",40,N],[13,"D7","","",40,N],[13,"D8","","",40,N],[13,"D9","","",40,N],[13,"Colon","","",40,N],[13,"Semicolon","","",40,N],[13,"Less","","",40,N],[13,"Equals","","",40,N],[13,"Greater","","",40,N],[13,"Question","","",40,N],[13,"At","","",40,N],[13,"LeftBracket","","",40,N],[13,"Backslash","","",40,N],[13,"RightBracket","","",40,N],[13,"Caret","","",40,N],[13,"Underscore","","",40,N],[13,"Backquote","","",40,N],[13,"A","","",40,N],[13,"B","","",40,N],[13,"C","","",40,N],[13,"D","","",40,N],[13,"E","","",40,N],[13,"F","","",40,N],[13,"G","","",40,N],[13,"H","","",40,N],[13,"I","","",40,N],[13,"J","","",40,N],[13,"K","","",40,N],[13,"L","","",40,N],[13,"M","","",40,N],[13,"N","","",40,N],[13,"O","","",40,N],[13,"P","","",40,N],[13,"Q","","",40,N],[13,"R","","",40,N],[13,"S","","",40,N],[13,"T","","",40,N],[13,"U","","",40,N],[13,"V","","",40,N],[13,"W","","",40,N],[13,"X","","",40,N],[13,"Y","","",40,N],[13,"Z","","",40,N],[13,"Delete","","",40,N],[13,"CapsLock","","",40,N],[13,"F1","","",40,N],[13,"F2","","",40,N],[13,"F3","","",40,N],[13,"F4","","",40,N],[13,"F5","","",40,N],[13,"F6","","",40,N],[13,"F7","","",40,N],[13,"F8","","",40,N],[13,"F9","","",40,N],[13,"F10","","",40,N],[13,"F11","","",40,N],[13,"F12","","",40,N],[13,"PrintScreen","","",40,N],[13,"ScrollLock","","",40,N],[13,"Pause","","",40,N],[13,"Insert","","",40,N],[13,"Home","","",40,N],[13,"PageUp","","",40,N],[13,"End","","",40,N],[13,"PageDown","","",40,N],[13,"Right","","",40,N],[13,"Left","","",40,N],[13,"Down","","",40,N],[13,"Up","","",40,N],[13,"NumLockClear","","",40,N],[13,"NumPadDivide","","",40,N],[13,"NumPadMultiply","","",40,N],[13,"NumPadMinus","","",40,N],[13,"NumPadPlus","","",40,N],[13,"NumPadEnter","","",40,N],[13,"NumPad1","","",40,N],[13,"NumPad2","","",40,N],[13,"NumPad3","","",40,N],[13,"NumPad4","","",40,N],[13,"NumPad5","","",40,N],[13,"NumPad6","","",40,N],[13,"NumPad7","","",40,N],[13,"NumPad8","","",40,N],[13,"NumPad9","","",40,N],[13,"NumPad0","","",40,N],[13,"NumPadPeriod","","",40,N],[13,"Application","","",40,N],[13,"Power","","",40,N],[13,"NumPadEquals","","",40,N],[13,"F13","","",40,N],[13,"F14","","",40,N],[13,"F15","","",40,N],[13,"F16","","",40,N],[13,"F17","","",40,N],[13,"F18","","",40,N],[13,"F19","","",40,N],[13,"F20","","",40,N],[13,"F21","","",40,N],[13,"F22","","",40,N],[13,"F23","","",40,N],[13,"F24","","",40,N],[13,"Execute","","",40,N],[13,"Help","","",40,N],[13,"Menu","","",40,N],[13,"Select","","",40,N],[13,"Stop","","",40,N],[13,"Again","","",40,N],[13,"Undo","","",40,N],[13,"Cut","","",40,N],[13,"Copy","","",40,N],[13,"Paste","","",40,N],[13,"Find","","",40,N],[13,"Mute","","",40,N],[13,"VolumeUp","","",40,N],[13,"VolumeDown","","",40,N],[13,"NumPadComma","","",40,N],[13,"NumPadEqualsAS400","","",40,N],[13,"AltErase","","",40,N],[13,"Sysreq","","",40,N],[13,"Cancel","","",40,N],[13,"Clear","","",40,N],[13,"Prior","","",40,N],[13,"Return2","","",40,N],[13,"Separator","","",40,N],[13,"Out","","",40,N],[13,"Oper","","",40,N],[13,"ClearAgain","","",40,N],[13,"CrSel","","",40,N],[13,"ExSel","","",40,N],[13,"NumPad00","","",40,N],[13,"NumPad000","","",40,N],[13,"ThousandsSeparator","","",40,N],[13,"DecimalSeparator","","",40,N],[13,"CurrencyUnit","","",40,N],[13,"CurrencySubUnit","","",40,N],[13,"NumPadLeftParen","","",40,N],[13,"NumPadRightParen","","",40,N],[13,"NumPadLeftBrace","","",40,N],[13,"NumPadRightBrace","","",40,N],[13,"NumPadTab","","",40,N],[13,"NumPadBackspace","","",40,N],[13,"NumPadA","","",40,N],[13,"NumPadB","","",40,N],[13,"NumPadC","","",40,N],[13,"NumPadD","","",40,N],[13,"NumPadE","","",40,N],[13,"NumPadF","","",40,N],[13,"NumPadXor","","",40,N],[13,"NumPadPower","","",40,N],[13,"NumPadPercent","","",40,N],[13,"NumPadLess","","",40,N],[13,"NumPadGreater","","",40,N],[13,"NumPadAmpersand","","",40,N],[13,"NumPadDblAmpersand","","",40,N],[13,"NumPadVerticalBar","","",40,N],[13,"NumPadDblVerticalBar","","",40,N],[13,"NumPadColon","","",40,N],[13,"NumPadHash","","",40,N],[13,"NumPadSpace","","",40,N],[13,"NumPadAt","","",40,N],[13,"NumPadExclam","","",40,N],[13,"NumPadMemStore","","",40,N],[13,"NumPadMemRecall","","",40,N],[13,"NumPadMemClear","","",40,N],[13,"NumPadMemAdd","","",40,N],[13,"NumPadMemSubtract","","",40,N],[13,"NumPadMemMultiply","","",40,N],[13,"NumPadMemDivide","","",40,N],[13,"NumPadPlusMinus","","",40,N],[13,"NumPadClear","","",40,N],[13,"NumPadClearEntry","","",40,N],[13,"NumPadBinary","","",40,N],[13,"NumPadOctal","","",40,N],[13,"NumPadDecimal","","",40,N],[13,"NumPadHexadecimal","","",40,N],[13,"LCtrl","","",40,N],[13,"LShift","","",40,N],[13,"LAlt","","",40,N],[13,"LGui","","",40,N],[13,"RCtrl","","",40,N],[13,"RShift","","",40,N],[13,"RAlt","","",40,N],[13,"RGui","","",40,N],[13,"Mode","","",40,N],[13,"AudioNext","","",40,N],[13,"AudioPrev","","",40,N],[13,"AudioStop","","",40,N],[13,"AudioPlay","","",40,N],[13,"AudioMute","","",40,N],[13,"MediaSelect","","",40,N],[13,"Www","","",40,N],[13,"Mail","","",40,N],[13,"Calculator","","",40,N],[13,"Computer","","",40,N],[13,"AcSearch","","",40,N],[13,"AcHome","","",40,N],[13,"AcBack","","",40,N],[13,"AcForward","","",40,N],[13,"AcStop","","",40,N],[13,"AcRefresh","","",40,N],[13,"AcBookmarks","","",40,N],[13,"BrightnessDown","","",40,N],[13,"BrightnessUp","","",40,N],[13,"DisplaySwitch","","",40,N],[13,"KbdIllumToggle","","",40,N],[13,"KbdIllumDown","","",40,N],[13,"KbdIllumUp","","",40,N],[13,"Eject","","",40,N],[13,"Sleep","","",40,N],[4,"MouseButton","","Represent a mouse button.",N,N],[13,"Unknown","","Unknown mouse button.",41,N],[13,"Left","","Left mouse button.",41,N],[13,"Right","","Right mouse button.",41,N],[13,"Middle","","Middle mouse button.",41,N],[13,"X1","","Extra mouse button number 1.",41,N],[13,"X2","","Extra mouse button number 2.",41,N],[13,"Button6","","Mouse button number 6.",41,N],[13,"Button7","","Mouse button number 7.",41,N],[13,"Button8","","Mouse button number 8.",41,N],[3,"RenderArgs","","Render arguments",N,N],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",42,N],[12,"width","","The width of rendered area in points.",42,N],[12,"height","","The height of rendered area in points.",42,N],[12,"draw_width","","The width of rendered area in pixels.",42,N],[12,"draw_height","","The height of rendered area in pixels.",42,N],[4,"Source","","Sources from which user input may be received.",N,N],[13,"Mouse","","Mouse input (i.e. movement, buttons).",43,N],[13,"Keyboard","","Keyboard input.",43,N],[13,"Touch","","Input from a finger on a touch screen/surface.",43,N],[4,"Motion","","Different kinds of motion input.",N,N],[13,"MouseCursor","","Absolute cursor position within the window.",44,N],[12,"x","conrod_core::input::Motion","",44,N],[12,"y","","",44,N],[13,"MouseRelative","conrod_core::input","Relative mouse movement.",44,N],[12,"x","conrod_core::input::Motion","",44,N],[12,"y","","",44,N],[13,"Scroll","conrod_core::input","x and y in scroll ticks.",44,N],[12,"x","conrod_core::input::Motion","",44,N],[12,"y","","",44,N],[13,"ControllerAxis","conrod_core::input","controller axis move event.",44,N],[0,"state","","Everything related to storing the state of user input.",N,N],[3,"State","conrod_core::input::state","Holds the current state of user input.",N,N],[12,"mouse","","Mouse position and button state.",45,N],[12,"touch","","All in-progress touch interactions.",45,N],[12,"widget_capturing_keyboard","","Which widget, if any, is currently capturing the keyboard",45,N],[12,"widget_capturing_mouse","","Which widget, if any, is currently capturing the mouse",45,N],[12,"widget_under_mouse","","The widget that is currently under the mouse cursor.",45,N],[12,"modifiers","","Which modifier keys are being held down.",45,N],[0,"touch","","Touch specific state.",N,N],[3,"Start","conrod_core::input::state::touch","State stored about the start of a `Touch` interaction.",N,N],[12,"time","","The time at which the `Touch` began.",46,N],[12,"xy","","The position at which the touch began.",46,N],[12,"widget","","The widget under the beginning of the touch if there was…",46,N],[3,"Touch","","All state stored for a `Touch` interaction in progress.",N,N],[12,"start","","The `Start` of the touch interaction.",47,N],[12,"xy","","The last recorded position of the finger on the window.",47,N],[12,"widget","","The widget currently being touched.",47,N],[0,"mouse","conrod_core::input::state","Mouse specific state.",N,N],[4,"Button","conrod_core::input::state::mouse","Represent a mouse button.",N,N],[13,"Unknown","","Unknown mouse button.",41,N],[13,"Left","","Left mouse button.",41,N],[13,"Right","","Right mouse button.",41,N],[13,"Middle","","Middle mouse button.",41,N],[13,"X1","","Extra mouse button number 1.",41,N],[13,"X2","","Extra mouse button number 2.",41,N],[13,"Button6","","Mouse button number 6.",41,N],[13,"Button7","","Mouse button number 7.",41,N],[13,"Button8","","Mouse button number 8.",41,N],[3,"Mouse","","The state of the `Mouse`, including it's position and…",N,N],[12,"buttons","","A map that stores the up/down state of each button.",48,N],[12,"xy","","The current position of the mouse.",48,N],[3,"ButtonMap","","Stores the state of all mouse buttons.",N,N],[3,"PressedButtons","","An iterator yielding all pressed buttons.",N,N],[4,"ButtonPosition","","Whether the button is up or down.",N,N],[13,"Up","","The button is up (i.e. pressed).",49,N],[13,"Down","","The button is down and was originally pressed down at the…",49,N],[17,"NUM_BUTTONS","","The max total number of buttons on a mouse.",N,N],[11,"new","","Construct a new default `Mouse`.",48,[[],["self"]]],[11,"relative_to","","If the mouse button is down, return a new one with…",49,[[["self"],["point"]],["self"]]],[11,"is_down","","Is the `ButtonPosition` down.",49,[[["self"]],["bool"]]],[11,"is_up","","Is the `ButtonPosition` up.",49,[[["self"]],["bool"]]],[11,"if_down","","Returns the position at which the button was pressed along…",49,[[["self"]],["option"]]],[11,"xy_if_down","","Returns the position at which the button was pressed if…",49,[[["self"]],["option",["point"]]]],[11,"new","","Returns a new button map with all states set to `None`",50,[[],["self"]]],[11,"relative_to","","Returns a copy of the ButtonMap relative to the given…",50,[[["self"],["point"]],["self"]]],[11,"left","","The state of the left mouse button.",50,[[["self"]],["buttonposition"]]],[11,"middle","","The state of the middle mouse button.",50,[[["self"]],["buttonposition"]]],[11,"right","","The state of the right mouse button.",50,[[["self"]],["buttonposition"]]],[11,"press","","Sets the `Button` in the `Down` position.",50,[[["self"],["button"],["point"],["option",["id"]]]]],[11,"release","","Set's the `Button` in the `Up` position.",50,[[["self"],["button"]]]],[11,"pressed","","An iterator yielding all pressed mouse buttons along with…",50,[[["self"]],["pressedbuttons"]]],[11,"new","conrod_core::input::state","Returns a fresh new input state",45,[[],["state"]]],[11,"relative_to","","Returns a copy of the input::State relative to the given…",45,[[["self"],["point"]],["state"]]],[0,"widget","conrod_core::input","Contains all the logic for filtering input events and…",N,N],[3,"Widget","conrod_core::input::widget","Provides only events and input state that are relevant to…",N,N],[3,"Mouse","","A view of the `input::state::Mouse` that is specific to a…",N,N],[12,"buttons","","The state of each `MouseButton`.",51,N],[3,"Events","","An iterator yielding all events that are relevant to a…",N,N],[3,"Presses","","An `Iterator` yielding all button presses occuring within…",N,N],[3,"MousePresses","","An `Iterator` yielding all mouse button presses occuring…",N,N],[3,"MouseButtonPresses","","An `Iterator` yielding all mouse button presses occuring…",N,N],[3,"KeyPresses","","An `Iterator` yielding all keyboard button presses…",N,N],[3,"Releases","","An `Iterator` yielding all button releases occuring within…",N,N],[3,"MouseButtonReleases","","An `Iterator` yielding all mouse button releases occuring…",N,N],[3,"MouseReleases","","An `Iterator` yielding all mouse button releases occuring…",N,N],[3,"KeyReleases","","An `Iterator` yielding all keyboard button releases…",N,N],[3,"Clicks","","An `Iterator` yielding all mouse clicks occuring within…",N,N],[3,"ButtonClicks","","An `Iterator` yielding all mouse `button` clicks occuring…",N,N],[3,"Taps","","An `Iterator` yielding all touch screen taps occuring…",N,N],[3,"Drags","","An iterator that yields all `event::Drag` events yielded…",N,N],[3,"ButtonDrags","","An `Iterator` yielding all mouse `button` drags occuring…",N,N],[3,"Texts","","An iterator that yields all `Input::Text` events yielded…",N,N],[3,"Scrolls","","An iterator that yields all `Scroll` events yielded by the…",N,N],[11,"for_widget","","Returns a `Widget` with events specifically for the given…",52,[[["id"],["rect"],["global"]],["self"]]],[11,"mouse","","If the widget is currently capturing the mouse, this…",52,[[["self"]],["option",["mouse"]]]],[11,"events","","Produces an iterator yielding all events that are relevant…",52,[[["self"]],["events"]]],[11,"presses","","Filters all events yielded by `Self::events` other than…",52,[[["self"]],["presses"]]],[11,"releases","","Filters all events yielded by `Self::events` other than…",52,[[["self"]],["releases"]]],[11,"clicks","","Filters all events yielded by `Self::events` for all…",52,[[["self"]],["clicks"]]],[11,"taps","","Filters all events yielded by `Self::events` for all…",52,[[["self"]],["taps"]]],[11,"drags","","Produces an iterator that yields all `event::Drag` events…",52,[[["self"]],["drags"]]],[11,"texts","","Produces an iterator that yields all `Input::Text` events…",52,[[["self"]],["texts"]]],[11,"scrolls","","Produce an iterator that yields only the `Scroll` events…",52,[[["self"]],["scrolls"]]],[11,"abs_xy","","The absolute position of the mouse within the window.",51,[[["self"]],["point"]]],[11,"rel_xy","","The position of the mouse relative to the middle of the…",51,[[["self"]],["point"]]],[11,"is_over","","Is the mouse currently over the widget.",51,[[["self"]],["bool"]]],[11,"mouse","","Produces an `Iterator` that yields only the press events…",53,[[["self"]],["mousepresses"]]],[11,"key","","Produces an `Iterator` that yields only the press events…",53,[[["self"]],["keypresses"]]],[11,"button","","Produces an `Iterator` that yields only events associated…",54,[[["self"],["mousebutton"]],["mousebuttonpresses"]]],[11,"left","","Produces an `Iterator` that yields only the left mouse…",54,[[["self"]],["mousebuttonpresses"]]],[11,"middle","","Produces an `Iterator` that yields only the middle mouse…",54,[[["self"]],["mousebuttonpresses"]]],[11,"right","","Produces an `Iterator` that yields only the right mouse…",54,[[["self"]],["mousebuttonpresses"]]],[11,"mouse","","Produces an `Iterator` that yields only the release events…",55,[[["self"]],["mousereleases"]]],[11,"key","","Produces an `Iterator` that yields only the release events…",55,[[["self"]],["keyreleases"]]],[11,"button","","Produces an `Iterator` that yields only events associated…",56,[[["self"],["mousebutton"]],["mousebuttonreleases"]]],[11,"left","","Produces an `Iterator` that yields only the left mouse…",56,[[["self"]],["mousebuttonreleases"]]],[11,"middle","","Produces an `Iterator` that yields only the middle mouse…",56,[[["self"]],["mousebuttonreleases"]]],[11,"right","","Produces an `Iterator` that yields only the right mouse…",56,[[["self"]],["mousebuttonreleases"]]],[11,"button","","Yield only the `Click`s that occurred from the given button.",57,[[["self"],["mousebutton"]],["buttonclicks"]]],[11,"left","","Yield only left mouse button `Click`s.",57,[[["self"]],["buttonclicks"]]],[11,"middle","","Yields only middle mouse button `Click`s.",57,[[["self"]],["buttonclicks"]]],[11,"right","","Yield only right mouse button `Click`s.",57,[[["self"]],["buttonclicks"]]],[11,"button","","Yield only the `Drag`s that occurred from the given button.",58,[[["self"],["mousebutton"]],["buttondrags"]]],[11,"left","","Yield only left mouse button `Drag`s.",58,[[["self"]],["buttondrags"]]],[11,"middle","","Yields only middle mouse button `Drag`s.",58,[[["self"]],["buttondrags"]]],[11,"right","","Yield only right mouse button `Drag`s.",58,[[["self"]],["buttondrags"]]],[0,"global","conrod_core::input","Handles all of the global input events and state. The core…",N,N],[3,"Global","conrod_core::input::global","Global input event handler that also implements…",N,N],[12,"start","","The `input::State` as it was at the end of the last update…",59,N],[12,"current","","The most recent `input::State`, with updates from handling…",59,N],[12,"last_click","","Tracks the last click that occurred and the time at which…",59,N],[3,"Events","","Iterator over all global `event::Event`s that have…",N,N],[3,"UiEvents","","An iterator yielding all `event::Ui`s that have occurred…",N,N],[11,"new","","Returns a fresh new `Global`",59,[[],["global"]]],[11,"events","","Returns an iterator yielding all events that have occurred…",59,[[["self"]],["events"]]],[11,"push_event","","Add the new event to the stack.",59,[[["self"],["event"]]]],[11,"clear_events_and_update_start_state","","Called at the end of every update cycle in order to…",59,[[["self"]]]],[11,"ui","","Converts the `Events` into a `UiEvents`, yielding only the…",60,[[["self"]],["uievents"]]],[0,"touch","conrod_core::input","Touch-related items.",N,N],[3,"Id","conrod_core::input::touch","A type for uniquely identifying the source of a touch…",N,N],[3,"Touch","","Represents a touch interaction.",N,N],[12,"phase","","The stage of the touch interaction.",61,N],[12,"id","","A unique identifier associated with the source of the…",61,N],[12,"xy","","The location of the touch on the surface/screen. See…",61,N],[4,"Phase","","The stage of the touch interaction.",N,N],[13,"Start","","The start of a touch interaction.",62,N],[13,"Move","","A touch moving across a surface.",62,N],[13,"Cancel","","The touch interaction was cancelled.",62,N],[13,"End","","The end of a touch interaction.",62,N],[11,"new","","Construct a new identifier.",63,[[["u64"]],["self"]]],[11,"relative_to","","Returns a copy of the `Touch` relative to the given `xy`.",61,[[["self"],["point"]],["self"]]],[0,"position","conrod_core","Items related to 2D positioning, used throughout conrod.",N,N],[3,"Padding","conrod_core::position","The distance between the inner edge of a border and the…",N,N],[12,"x","","Padding on the start and end of the x axis.",64,N],[12,"y","","Padding on the start and end of the y axis.",64,N],[4,"Axis","","Represents either Axis in the 2-dimensional plane.",N,N],[13,"X","","The horizontal plane's Axis.",65,N],[13,"Y","","The vertical plane's Axis.",65,N],[4,"Position","","Some Position of some Widget along a single axis.",N,N],[13,"Absolute","","A specific position.",66,N],[13,"Relative","","A position relative to some other Widget.",66,N],[4,"Relative","","Positions that are described as Relative to some other…",N,N],[13,"Scalar","","A relative scalar distance.",67,N],[13,"Align","","Aligned to either the `Start`, `Middle` or `End`.",67,N],[13,"Direction","","A distance as a `Scalar` value over the given `Direction`.",67,N],[13,"Place","","Some place on top of another widget.",67,N],[4,"Direction","","Directionally positioned, normally relative to some other…",N,N],[13,"Forwards","","Positioned forwards (positive Scalar) along some Axis.",68,N],[13,"Backwards","","Positioned backwards (negative Scalar) along some Axis.",68,N],[4,"Align","","The orientation of Alignment along some Axis.",N,N],[13,"Start","","Align our Start with the Start of some other widget along…",69,N],[13,"Middle","","Align our Middle with the Middle of some other widget…",69,N],[13,"End","","Align our End with the End of some other widget along the…",69,N],[4,"Place","","Place the widget at a position on some other widget.",N,N],[13,"Start","","Place upon the Start of the Widget's `kid_area`.",70,N],[13,"Middle","","Place upon the Middle of the Widget's `kid_area`.",70,N],[13,"End","","Place upon the End of the Widget's `kid_area`.",70,N],[4,"Dimension","","The length of a Widget over either the x or y axes.",N,N],[13,"Absolute","","Some specific length has been given.",71,N],[13,"Of","","The dimension should match that of the widget at the given…",71,N],[13,"KidAreaOf","","The dimension should match that of the `kid_area` of the…",71,N],[0,"range","","A type for working one-dimensional ranges.",N,N],[3,"Range","conrod_core::position::range","Some start and end position along a single axis.",N,N],[12,"start","","The start of some `Range` along an axis.",72,N],[12,"end","","The end of some `Range` along an axis.",72,N],[4,"Edge","","Represents either the Start or End Edge of a Range.",N,N],[13,"Start","","The beginning of a Range.",73,N],[13,"End","","The end of a Range.",73,N],[11,"new","","Construct a new `Range` from a given range, i.e.…",72,[[["scalar"],["scalar"]],["range"]]],[11,"from_pos_and_len","","Construct a new `Range` from a given length and its…",72,[[["scalar"],["scalar"]],["range"]]],[11,"magnitude","","The `start` value subtracted from the `end` value.",72,[[["self"]],["scalar"]]],[11,"len","","The absolute length of the Range aka the absolute magnitude.",72,[[["self"]],["scalar"]]],[11,"middle","","Return the value directly between the start and end values.",72,[[["self"]],["scalar"]]],[11,"invert","","The current range with its start and end values swapped.",72,[[["self"]],["range"]]],[11,"map_value_to","","Map the given Scalar from `Self` to some other given…",72,[[["self"],["scalar"],["range"]],["scalar"]]],[11,"shift","","Shift the `Range` start and end points by a given `Scalar`.",72,[[["self"],["scalar"]],["range"]]],[11,"direction","","The direction of the Range represented as a normalised…",72,[[["self"]],["scalar"]]],[11,"undirected","","Converts the Range to an undirected Range. By ensuring…",72,[[["self"]],["range"]]],[11,"max","","The Range that encompasses both self and the given Range.",72,[[["self"],["self"]],["range"]]],[11,"overlap","","The Range that represents the range of the overlap between…",72,[[["self"],["self"]],["option",["range"]]]],[11,"max_directed","","The Range that encompasses both self and the given Range.",72,[[["self"],["self"]],["range"]]],[11,"is_over","","Is the given scalar within our range.",72,[[["self"],["scalar"]],["bool"]]],[11,"round","","Round the values at both ends of the Range and return the…",72,[[["self"]],["range"]]],[11,"floor","","Floor the values at both ends of the Range and return the…",72,[[["self"]],["range"]]],[11,"pad_start","","The Range with some padding given to the `start` value.",72,[[["self"],["scalar"]],["range"]]],[11,"pad_end","","The Range with some padding given to the `end` value.",72,[[["self"],["scalar"]],["range"]]],[11,"pad","","The Range with some given padding to be applied to each end.",72,[[["self"],["scalar"]],["range"]]],[11,"pad_ends","","The Range with some padding given for each end.",72,[[["self"],["scalar"],["scalar"]],["range"]]],[11,"clamp_value","","Clamp the given value to the range.",72,[[["self"],["scalar"]],["scalar"]]],[11,"stretch_to_value","","Stretch the end that is closest to the given value only if…",72,[[["self"],["scalar"]],["range"]]],[11,"has_same_direction","","Does `self` have the same direction as `other`.",72,[[["self"],["self"]],["bool"]]],[11,"align_start_of","","Align the `start` of `self` to the `start` of the `other`…",72,[[["self"],["self"]],["self"]]],[11,"align_end_of","","Align the `end` of `self` to the `end` of the `other` Range.",72,[[["self"],["self"]],["self"]]],[11,"align_middle_of","","Align the middle of `self` to the middle of the `other`…",72,[[["self"],["self"]],["self"]]],[11,"align_after","","Aligns the `start` of `self` with the `end` of `other`.",72,[[["self"],["self"]],["self"]]],[11,"align_before","","Aligns the `end` of `self` with the `start` of `other`.",72,[[["self"],["self"]],["self"]]],[11,"align_to","","Align `self` to `other` along the x axis in accordance…",72,[[["self"],["align"],["self"]],["self"]]],[11,"closest_edge","","The closest Edge of `self` to the given `scalar`.",72,[[["self"],["scalar"]],["edge"]]],[0,"rect","conrod_core::position","Defines the scalar `Rect` type used throughout conrod.",N,N],[3,"Rect","conrod_core::position::rect","Defines a Rectangle's bounds across the x and y axes.",N,N],[12,"x","","The start and end positions of the Rectangle on the x axis.",74,N],[12,"y","","The start and end positions of the Rectangle on the y axis.",74,N],[4,"Corner","","Either of the four corners of a Rect.",N,N],[13,"TopLeft","","The top left corner of a Rect.",75,N],[13,"TopRight","","The top right corner of a Rect.",75,N],[13,"BottomLeft","","The bottom left corner of a Rect.",75,N],[13,"BottomRight","","The bottom right corner of a Rect.",75,N],[11,"from_xy_dim","","Construct a Rect from a given `Point` and `Dimensions`.",74,[[["point"],["dimensions"]],["self"]]],[11,"from_corners","","Construct a Rect from the coordinates of two points.",74,[[["point"],["point"]],["self"]]],[11,"overlap","","The Rect representing the area in which two Rects overlap.",74,[[["self"],["self"]],["option"]]],[11,"max","","The Rect that encompass the two given sets of Rect.",74,[[["self"],["self"]],["self"]]],[11,"x","","The position in the middle of the x bounds.",74,[[["self"]],["scalar"]]],[11,"y","","The position in the middle of the y bounds.",74,[[["self"]],["scalar"]]],[11,"xy","","The xy position in the middle of the bounds.",74,[[["self"]],["point"]]],[11,"x_y","","The centered x and y coordinates as a tuple.",74,N],[11,"w","","The width of the Rect.",74,[[["self"]],["scalar"]]],[11,"h","","The height of the Rect.",74,[[["self"]],["scalar"]]],[11,"dim","","The total dimensions of the Rect.",74,[[["self"]],["dimensions"]]],[11,"w_h","","The width and height of the Rect as a tuple.",74,N],[11,"xy_dim","","Convert the Rect to a `Point` and `Dimensions`.",74,N],[11,"x_y_w_h","","The Rect's centered coordinates and dimensions in a tuple.",74,N],[11,"len","","The length of the longest side of the rectangle.",74,[[["self"]],["scalar"]]],[11,"bottom","","The Rect's lowest y value.",74,[[["self"]],["scalar"]]],[11,"top","","The Rect's highest y value.",74,[[["self"]],["scalar"]]],[11,"left","","The Rect's lowest x value.",74,[[["self"]],["scalar"]]],[11,"right","","The Rect's highest x value.",74,[[["self"]],["scalar"]]],[11,"top_left","","The top left corner Point.",74,[[["self"]],["point"]]],[11,"bottom_left","","The bottom left corner Point.",74,[[["self"]],["point"]]],[11,"top_right","","The top right corner Point.",74,[[["self"]],["point"]]],[11,"bottom_right","","The bottom right corner Point.",74,[[["self"]],["point"]]],[11,"l_r_b_t","","The edges of the Rect in a tuple (top, bottom, left, right).",74,N],[11,"l_t_w_h","","The left and top edges of the Rect along with the width…",74,N],[11,"l_b_w_h","","The left and bottom edges of the Rect along with the width…",74,N],[11,"shift_x","","Shift the Rect along the x axis.",74,[[["self"],["scalar"]],["self"]]],[11,"shift_y","","Shift the Rect along the y axis.",74,[[["self"],["scalar"]],["self"]]],[11,"shift","","Shift the Rect by the given Point.",74,[[["self"],["point"]],["self"]]],[11,"relative_to_x","","Returns a `Rect` with a position relative to the given…",74,[[["self"],["scalar"]],["self"]]],[11,"relative_to_y","","Returns a `Rect` with a position relative to the given…",74,[[["self"],["scalar"]],["self"]]],[11,"relative_to","","Returns a `Rect` with a position relative to the given…",74,[[["self"],["point"]],["self"]]],[11,"is_over","","Does the given point touch the Rectangle.",74,[[["self"],["point"]],["bool"]]],[11,"pad_left","","The Rect with some padding applied to the left edge.",74,[[["self"],["scalar"]],["self"]]],[11,"pad_right","","The Rect with some padding applied to the right edge.",74,[[["self"],["scalar"]],["self"]]],[11,"pad_bottom","","The rect with some padding applied to the bottom edge.",74,[[["self"],["scalar"]],["self"]]],[11,"pad_top","","The Rect with some padding applied to the top edge.",74,[[["self"],["scalar"]],["self"]]],[11,"pad","","The Rect with some padding amount applied to each edge.",74,[[["self"],["scalar"]],["self"]]],[11,"padding","","The Rect with some padding applied.",74,[[["self"],["padding"]],["self"]]],[11,"stretch_to_point","","Stretches the closest edge(s) to the given point if the…",74,[[["self"],["point"]],["self"]]],[11,"left_of","","Align `self`'s right edge with the left edge of the…",74,[[["self"],["self"]],["self"]]],[11,"right_of","","Align `self`'s left edge with the right dge of the `other`…",74,[[["self"],["self"]],["self"]]],[11,"below","","Align `self`'s top edge with the bottom edge of the…",74,[[["self"],["self"]],["self"]]],[11,"above","","Align `self`'s bottom edge with the top edge of the…",74,[[["self"],["self"]],["self"]]],[11,"align_x_of","","Align `self` to `other` along the x axis in accordance…",74,[[["self"],["align"],["self"]],["self"]]],[11,"align_y_of","","Align `self` to `other` along the y axis in accordance…",74,[[["self"],["align"],["self"]],["self"]]],[11,"align_left_of","","Align `self`'s left edge with the left edge of the `other`…",74,[[["self"],["self"]],["self"]]],[11,"align_middle_x_of","","Align the middle of `self` with the middle of the `other`…",74,[[["self"],["self"]],["self"]]],[11,"align_right_of","","Align `self`'s right edge with the right edge of the…",74,[[["self"],["self"]],["self"]]],[11,"align_bottom_of","","Align `self`'s bottom edge with the bottom edge of the…",74,[[["self"],["self"]],["self"]]],[11,"align_middle_y_of","","Align the middle of `self` with the middle of the `other`…",74,[[["self"],["self"]],["self"]]],[11,"align_top_of","","Align `self`'s top edge with the top edge of the `other`…",74,[[["self"],["self"]],["self"]]],[11,"top_left_of","","Place `self` along the top left edges of the `other` Rect.",74,[[["self"],["self"]],["self"]]],[11,"top_right_of","","Place `self` along the top right edges of the `other` Rect.",74,[[["self"],["self"]],["self"]]],[11,"bottom_left_of","","Place `self` along the bottom left edges of the `other`…",74,[[["self"],["self"]],["self"]]],[11,"bottom_right_of","","Place `self` along the bottom right edges of the `other`…",74,[[["self"],["self"]],["self"]]],[11,"mid_top_of","","Place `self` in the middle of the top edge of the `other`…",74,[[["self"],["self"]],["self"]]],[11,"mid_bottom_of","","Place `self` in the middle of the bottom edge of the…",74,[[["self"],["self"]],["self"]]],[11,"mid_left_of","","Place `self` in the middle of the left edge of the `other`…",74,[[["self"],["self"]],["self"]]],[11,"mid_right_of","","Place `self` in the middle of the right edge of the…",74,[[["self"],["self"]],["self"]]],[11,"middle_of","","Place `self` directly in the middle of the `other` Rect.",74,[[["self"],["self"]],["self"]]],[11,"closest_corner","","Return the Corner of `self` that is closest to the given…",74,[[["self"],["point"]],["corner"]]],[6,"Scalar","conrod_core::position","An alias over the Scalar type used throughout Conrod.",N,N],[6,"Depth","","The depth at which the widget will be rendered.",N,N],[6,"Dimensions","","General use 2D spatial dimensions.",N,N],[6,"Point","","General use 2D spatial point.",N,N],[6,"Margin","","The margin for some `Place`ment on either end of an axis.",N,N],[8,"Positionable","","Widgets that are positionable.",N,N],[10,"x_position","","Build with the given Position along the x axis.",76,[[["self"],["position"]],["self"]]],[10,"y_position","","Build with the given Position along the y axis.",76,[[["self"],["position"]],["self"]]],[10,"get_x_position","","Get the Position along the x axis.",76,[[["self"],["ui"]],["position"]]],[10,"get_y_position","","Get the Position along the y axis.",76,[[["self"],["ui"]],["position"]]],[11,"x","","Build with the given Absolute Position along the x axis.",76,[[["self"],["scalar"]],["self"]]],[11,"y","","Build with the given Absolute Position along the y axis.",76,[[["self"],["scalar"]],["self"]]],[11,"xy","","Set the Position with some Point.",76,[[["self"],["point"]],["self"]]],[11,"x_y","","Set the Position with x y coordinates.",76,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"x_position_relative","","Set the x Position Relative to the previous widget.",76,[[["self"],["relative"]],["self"]]],[11,"y_position_relative","","Set the y Position Relative to the previous widget.",76,[[["self"],["relative"]],["self"]]],[11,"x_y_position_relative","","Set the x and y Positions Relative to the previous widget.",76,[[["self"],["relative"],["relative"]],["self"]]],[11,"x_position_relative_to","","Set the x Position Relative to the given widget.",76,[[["self"],["id"],["relative"]],["self"]]],[11,"y_position_relative_to","","Set the y Position Relative to the given widget.",76,[[["self"],["id"],["relative"]],["self"]]],[11,"x_y_position_relative_to","","Set the x and y Positions Relative to the given widget.",76,[[["self"],["id"],["relative"],["relative"]],["self"]]],[11,"x_relative","","Set the Position as a Scalar along the x axis Relative to…",76,[[["self"],["scalar"]],["self"]]],[11,"y_relative","","Set the Position as a Scalar along the y axis Relative to…",76,[[["self"],["scalar"]],["self"]]],[11,"xy_relative","","Set the Position as a Point Relative to the middle of the…",76,[[["self"],["point"]],["self"]]],[11,"x_y_relative","","Set the Position as Scalars along the x and y axes…",76,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"x_relative_to","","Set the position relative to the widget with the given…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"y_relative_to","","Set the position relative to the widget with the given…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"xy_relative_to","","Set the position relative to the widget with the given…",76,[[["self"],["id"],["point"]],["self"]]],[11,"x_y_relative_to","","Set the position relative to the widget with the given…",76,[[["self"],["id"],["scalar"],["scalar"]],["self"]]],[11,"x_direction","","Build with the Position along the x axis as some distance…",76,[[["self"],["direction"],["scalar"]],["self"]]],[11,"y_direction","","Build with the Position along the y axis as some distance…",76,[[["self"],["direction"],["scalar"]],["self"]]],[11,"down","","Build with the Position as some distance below another…",76,[[["self"],["scalar"]],["self"]]],[11,"up","","Build with the Position as some distance above another…",76,[[["self"],["scalar"]],["self"]]],[11,"left","","Build with the Position as some distance to the left of…",76,[[["self"],["scalar"]],["self"]]],[11,"right","","Build with the Position as some distance to the right of…",76,[[["self"],["scalar"]],["self"]]],[11,"x_direction_from","","Build with the Position along the x axis as some distance…",76,[[["self"],["id"],["direction"],["scalar"]],["self"]]],[11,"y_direction_from","","Build with the Position along the y axis as some distance…",76,[[["self"],["id"],["direction"],["scalar"]],["self"]]],[11,"down_from","","Build with the Position as some distance below the given…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"up_from","","Build with the Position as some distance above the given…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"left_from","","Build with the Position as some distance to the left of…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"right_from","","Build with the Position as some distance to the right of…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"x_align","","Align the Position of the widget along the x axis.",76,[[["self"],["align"]],["self"]]],[11,"y_align","","Align the Position of the widget along the y axis.",76,[[["self"],["align"]],["self"]]],[11,"align_left","","Align the position to the left (only effective for Up or…",76,[[["self"]],["self"]]],[11,"align_middle_x","","Align the position to the middle (only effective for Up or…",76,[[["self"]],["self"]]],[11,"align_right","","Align the position to the right (only effective for Up or…",76,[[["self"]],["self"]]],[11,"align_top","","Align the position to the top (only effective for Left or…",76,[[["self"]],["self"]]],[11,"align_middle_y","","Align the position to the middle (only effective for Left…",76,[[["self"]],["self"]]],[11,"align_bottom","","Align the position to the bottom (only effective for Left…",76,[[["self"]],["self"]]],[11,"x_align_to","","Align the Position of the widget with the given widget…",76,[[["self"],["id"],["align"]],["self"]]],[11,"y_align_to","","Align the Position of the widget with the given widget…",76,[[["self"],["id"],["align"]],["self"]]],[11,"align_left_of","","Align the position to the left (only effective for Up or…",76,[[["self"],["id"]],["self"]]],[11,"align_middle_x_of","","Align the position to the middle (only effective for Up or…",76,[[["self"],["id"]],["self"]]],[11,"align_right_of","","Align the position to the right (only effective for Up or…",76,[[["self"],["id"]],["self"]]],[11,"align_top_of","","Align the position to the top (only effective for Left or…",76,[[["self"],["id"]],["self"]]],[11,"align_middle_y_of","","Align the position to the middle (only effective for Left…",76,[[["self"],["id"]],["self"]]],[11,"align_bottom_of","","Align the position to the bottom (only effective for Left…",76,[[["self"],["id"]],["self"]]],[11,"x_place_on","","Place the widget at some position on the `other` Widget…",76,[[["self"],["id"],["place"]],["self"]]],[11,"y_place_on","","Place the widget at some position on the `other` Widget…",76,[[["self"],["id"],["place"]],["self"]]],[11,"middle_of","","Place the widget in the middle of the given Widget.",76,[[["self"],["id"]],["self"]]],[11,"top_left_of","","Place the widget in the top left corner of the given Widget.",76,[[["self"],["id"]],["self"]]],[11,"top_left_with_margin_on","","Place the widget in the top left corner of the given…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"top_left_with_margins_on","","Place the widget in the top left corner of the given…",76,[[["self"],["id"],["scalar"],["scalar"]],["self"]]],[11,"top_right_of","","Place the widget in the top right corner of the given…",76,[[["self"],["id"]],["self"]]],[11,"top_right_with_margin_on","","Place the widget in the top right corner of the given…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"top_right_with_margins_on","","Place the widget in the top right corner of the given…",76,[[["self"],["id"],["scalar"],["scalar"]],["self"]]],[11,"bottom_left_of","","Place the widget in the bottom left corner of the given…",76,[[["self"],["id"]],["self"]]],[11,"bottom_left_with_margin_on","","Place the widget in the bottom left corner of the given…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"bottom_left_with_margins_on","","Place the widget in the bottom left corner of the given…",76,[[["self"],["id"],["scalar"],["scalar"]],["self"]]],[11,"bottom_right_of","","Place the widget in the bottom right corner of the given…",76,[[["self"],["id"]],["self"]]],[11,"bottom_right_with_margin_on","","Place the widget in the bottom right corner of the given…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"bottom_right_with_margins_on","","Place the widget in the bottom right corner of the given…",76,[[["self"],["id"],["scalar"],["scalar"]],["self"]]],[11,"mid_top_of","","Place the widget in the middle of the top edge of the…",76,[[["self"],["id"]],["self"]]],[11,"mid_top_with_margin_on","","Place the widget in the middle of the top edge of the…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"mid_bottom_of","","Place the widget in the middle of the bottom edge of the…",76,[[["self"],["id"]],["self"]]],[11,"mid_bottom_with_margin_on","","Place the widget in the middle of the bottom edge of the…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"mid_left_of","","Place the widget in the middle of the left edge of the…",76,[[["self"],["id"]],["self"]]],[11,"mid_left_with_margin_on","","Place the widget in the middle of the left edge of the…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"mid_right_of","","Place the widget in the middle of the right edge of the…",76,[[["self"],["id"]],["self"]]],[11,"mid_right_with_margin_on","","Place the widget in the middle of the right edge of the…",76,[[["self"],["id"],["scalar"]],["self"]]],[11,"x_place","","Place the widget at some position on the Widget along the…",76,[[["self"],["place"]],["self"]]],[11,"y_place","","Place the widget at some position on the Widget along the…",76,[[["self"],["place"]],["self"]]],[11,"middle","","Place the widget in the middle of the current parent Widget.",76,[[["self"]],["self"]]],[11,"top_left","","Place the widget in the top left corner of the current…",76,[[["self"]],["self"]]],[11,"top_left_with_margin","","Place the widget in the top left corner of the current…",76,[[["self"],["scalar"]],["self"]]],[11,"top_left_with_margins","","Place the widget in the top left corner of the current…",76,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"top_right","","Place the widget in the top right corner of the current…",76,[[["self"]],["self"]]],[11,"top_right_with_margin","","Place the widget in the top right corner of the current…",76,[[["self"],["scalar"]],["self"]]],[11,"top_right_with_margins","","Place the widget in the top right corner of the current…",76,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"bottom_left","","Place the widget in the bottom left corner of the current…",76,[[["self"]],["self"]]],[11,"bottom_left_with_margin","","Place the widget in the bottom left corner of the current…",76,[[["self"],["scalar"]],["self"]]],[11,"bottom_left_with_margins","","Place the widget in the bottom left corner of the current…",76,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"bottom_right","","Place the widget in the bottom right corner of the current…",76,[[["self"]],["self"]]],[11,"bottom_right_with_margin","","Place the widget in the bottom right corner of the current…",76,[[["self"],["scalar"]],["self"]]],[11,"bottom_right_with_margins","","Place the widget in the bottom right corner of the current…",76,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"mid_top","","Place the widget in the middle of the top edge of the…",76,[[["self"]],["self"]]],[11,"mid_top_with_margin","","Place the widget in the middle of the top edge of the…",76,[[["self"],["scalar"]],["self"]]],[11,"mid_bottom","","Place the widget in the middle of the bottom edge of the…",76,[[["self"]],["self"]]],[11,"mid_bottom_with_margin","","Place the widget in the middle of the bottom edge of the…",76,[[["self"],["scalar"]],["self"]]],[11,"mid_left","","Place the widget in the middle of the left edge of the…",76,[[["self"]],["self"]]],[11,"mid_left_with_margin","","Place the widget in the middle of the left edge of the…",76,[[["self"],["scalar"]],["self"]]],[11,"mid_right","","Place the widget in the middle of the right edge of the…",76,[[["self"]],["self"]]],[11,"mid_right_with_margin","","Place the widget in the middle of the right edge of the…",76,[[["self"],["scalar"]],["self"]]],[10,"depth","","The depth at which the widget should be rendered…",76,[[["self"],["depth"]],["self"]]],[10,"get_depth","","Return the depth.",76,[[["self"]],["depth"]]],[8,"Sizeable","","Widgets that support different dimensions.",N,N],[10,"x_dimension","","Set the length along the x axis.",77,[[["self"],["dimension"]],["self"]]],[10,"y_dimension","","Set the length along the y axis.",77,[[["self"],["dimension"]],["self"]]],[10,"get_x_dimension","","The widget's length along the x axis as a Dimension.",77,[[["self"],["ui"]],["dimension"]]],[10,"get_y_dimension","","The widget's length along the y axis as a Dimension.",77,[[["self"],["ui"]],["dimension"]]],[11,"w","","Set the absolute width for the widget.",77,[[["self"],["scalar"]],["self"]]],[11,"h","","Set the absolute height for the widget.",77,[[["self"],["scalar"]],["self"]]],[11,"wh","","Set the dimensions for the widget.",77,[[["self"],["dimensions"]],["self"]]],[11,"w_h","","Set the width and height for the widget.",77,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"w_of","","Set the width as the width of the widget at the given index.",77,[[["self"],["id"]],["self"]]],[11,"padded_w_of","","Set the width as the width of the widget at the given…",77,[[["self"],["id"],["scalar"]],["self"]]],[11,"h_of","","Set the height as the height of the widget at the given…",77,[[["self"],["id"]],["self"]]],[11,"padded_h_of","","Set the height as the height of the widget at the given…",77,[[["self"],["id"],["scalar"]],["self"]]],[11,"wh_of","","Set the dimensions as the dimensions of the widget at the…",77,[[["self"],["id"]],["self"]]],[11,"padded_wh_of","","Set the dimensions as the dimensions of the widget at the…",77,[[["self"],["id"],["scalar"]],["self"]]],[11,"kid_area_w_of","","Set the width as the width of the padded area of the…",77,[[["self"],["id"]],["self"]]],[11,"padded_kid_area_w_of","","Set the width as the `KidArea` width for the widget at the…",77,[[["self"],["id"],["scalar"]],["self"]]],[11,"kid_area_h_of","","Set the height as the `KidArea` height of the widget at…",77,[[["self"],["id"]],["self"]]],[11,"padded_kid_area_h_of","","Set the height as the `KidArea` height of the widget at…",77,[[["self"],["id"],["scalar"]],["self"]]],[11,"kid_area_wh_of","","Set the dimensions as the `KidArea` dimensions of the…",77,[[["self"],["id"]],["self"]]],[11,"padded_kid_area_wh_of","","Set the dimensions as the `KidArea` dimensions of the…",77,[[["self"],["id"],["scalar"]],["self"]]],[11,"get_w","","Get the absolute width of the widget as a Scalar value.",77,[[["self"],["ui"]],["option",["scalar"]]]],[11,"get_h","","Get the height of the widget.",77,[[["self"],["ui"]],["option",["scalar"]]]],[11,"get_wh","","The dimensions for the widget.",77,[[["self"],["ui"]],["option",["dimensions"]]]],[11,"none","","No padding.",64,[[],["padding"]]],[0,"render","conrod_core","Conrod's generic graphics backend.",N,N],[3,"Primitives","conrod_core::render","An iterator-like type that yields a reference to each…",N,N],[3,"OwnedPrimitives","","An owned alternative to the `Primitives` type.",N,N],[3,"Primitive","","Data required for rendering a single primitive widget.",N,N],[12,"id","","The id of the widget within the widget graph.",78,N],[12,"kind","","State and style for this primitive widget.",78,N],[12,"scizzor","","The Rect to which the primitive widget should be cropped.",78,N],[12,"rect","","The bounding rectangle for the `Primitive`.",78,N],[3,"Text","","A type used for producing a `PositionedGlyph` iterator.",N,N],[3,"WalkOwnedPrimitives","","An iterator-like type for yielding `Primitive`s from an…",N,N],[4,"PrimitiveKind","","The unique kind for each primitive element in the Ui.",N,N],[13,"Rectangle","","A filled `Rectangle`.",79,N],[12,"color","conrod_core::render::PrimitiveKind","The fill colour for the rectangle. ",79,N],[13,"TrianglesSingleColor","conrod_core::render","A series of consecutive `Triangles` that are all the same…",79,N],[12,"color","conrod_core::render::PrimitiveKind","The color of all triangles.",79,N],[12,"triangles","","An ordered slice of triangles.",79,N],[13,"TrianglesMultiColor","conrod_core::render","A series of consecutive `Triangles` with unique colors per…",79,N],[12,"triangles","conrod_core::render::PrimitiveKind","An ordered slice of multicolored triangles.",79,N],[13,"Image","conrod_core::render","A single `Image`, produced by the primitive `Image` widget.",79,N],[12,"image_id","conrod_core::render::PrimitiveKind","The unique identifier of the image that will be drawn.",79,N],[12,"color","","When `Some`, colours the `Image`. When `None`, the `Image`…",79,N],[12,"source_rect","","The area of the texture that will be drawn to the…",79,N],[13,"Text","conrod_core::render","A single block of `Text`, produced by the primitive `Text`…",79,N],[12,"color","conrod_core::render::PrimitiveKind","The colour of the `Text`.",79,N],[12,"text","","All glyphs within the `Text` laid out in their correct…",79,N],[12,"font_id","","The unique identifier for the font, useful for the…",79,N],[13,"Other","conrod_core::render","An `Other` variant will be yielded for every non-primitive…",79,N],[8,"PrimitiveWalker","","A trait that allows the user to remain generic over types…",N,N],[10,"next_primitive","","Yield the next `Primitive` in order of depth, bottom to top.",80,[[["self"]],["option",["primitive"]]]],[11,"positioned_glyphs","","Produces a list of `PositionedGlyph`s which may be used to…",81,N],[11,"new","","Constructor for the `Primitives` iterator.",82,N],[11,"next","","Yield the next `Primitive` for rendering.",82,[[["self"]],["option",["primitive"]]]],[11,"owned","","Collect the `Primitives` list into an owned collection.",82,[[["self"]],["ownedprimitives"]]],[11,"walk","","Produce an iterator-like type for yielding `Primitive`s.",83,[[["self"]],["walkownedprimitives"]]],[11,"next","","Yield the next `Primitive` in order or rendering depth,…",84,[[["self"]],["option",["primitive"]]]],[0,"text","conrod_core","Text layout logic.",N,N],[3,"Glyph","conrod_core::text","A single glyph of a font. this may either be a thin…",N,N],[3,"GlyphId","","Represents a glyph identifier for a particular font. This…",N,N],[12,"0","","",85,N],[3,"GlyphIter","","",N,N],[3,"LayoutIter","","",N,N],[3,"Scale","","Defines the size of a rendered face of a font, in pixels,…",N,N],[12,"x","","Horizontal scale, in pixels.",86,N],[12,"y","","Vertical scale, in pixels.",86,N],[3,"GlyphCache","","An implementation of a dynamic GPU glyph cache. See the…",N,N],[3,"Lines","","An iterator yielding each line within the given `text` as…",N,N],[4,"Justify","","A type used for referring to typographic alignment of…",N,N],[13,"Left","","Align text to the start of the bounding `Rect`'s x axis.",87,N],[13,"Center","","Symmetrically align text along the y axis.",87,N],[13,"Right","","Align text to the end of the bounding `Rect`'s x axis.",87,N],[5,"height","","Determine the total height of a block of text with the…",N,[[["usize"],["fontsize"],["scalar"]],["scalar"]]],[5,"lines","","Produce an iterator yielding each line within the given…",N,[[["str"],["i"]],["lines"]]],[5,"f32_pt_to_px","","Converts the given font size in \"points\" to its font size…",N,[[["f32"]],["f32"]]],[5,"f32_pt_to_scale","","Converts the given font size in \"points\" to a uniform…",N,[[["f32"]],["scale"]]],[5,"pt_to_px","","Converts the given font size in \"points\" to its font size…",N,[[["fontsize"]],["f32"]]],[5,"pt_to_scale","","Converts the given font size in \"points\" to a uniform…",N,[[["fontsize"]],["scale"]]],[0,"rt","","Re-exported RustType geometrical types.",N,N],[3,"Point","conrod_core::text::rt","A point in 2-dimensional space, with each dimension of…",N,N],[12,"x","","",88,N],[12,"y","","",88,N],[3,"Rect","","A rectangle, with top-left corner at `min`, and…",N,N],[12,"min","","",89,N],[12,"max","","",89,N],[3,"Vector","","A vector in 2-dimensional space, with each dimension of…",N,N],[12,"x","","",90,N],[12,"y","","",90,N],[0,"gpu_cache","","This module provides capabilities for managing a cache of…",N,N],[6,"TextureCoords","conrod_core::text::rt::gpu_cache","Texture coordinates (floating point) of the quad for a…",N,N],[3,"Cache","","An implementation of a dynamic GPU glyph cache. See the…",N,N],[3,"CacheBuilder","","Builder & rebuilder for `Cache`.",N,N],[4,"CacheReadErr","","Returned from `Cache::rect_for`.",N,N],[13,"GlyphNotCached","","Indicates that the requested glyph is not present in the…",91,N],[4,"CacheWriteErr","","Returned from `Cache::cache_queued`.",N,N],[13,"GlyphTooLarge","","At least one of the queued glyphs is too big to fit into…",92,N],[13,"NoRoomForWholeQueue","","Not all of the requested glyphs can fit into the cache,…",92,N],[4,"CachedBy","","Successful method of caching of the queue.",N,N],[13,"Adding","","Added any additional glyphs into the texture without…",93,N],[13,"Reordering","","Fit the glyph queue by re-ordering all glyph texture…",93,N],[5,"point","conrod_core::text::rt","A convenience function for generating `Point`s.",N,[[["n"],["n"]],["point"]]],[5,"vector","","A convenience function for generating `Vector`s.",N,[[["n"],["n"]],["vector"]]],[0,"font","conrod_core::text","The `font::Id` and `font::Map` types.",N,N],[3,"Id","conrod_core::text::font","A type-safe wrapper around the `FontId`.",N,N],[3,"Map","","A collection of mappings from `font::Id`s to…",N,N],[3,"NewIds","","An iterator yielding an `Id` for each new `rusttype::Font`…",N,N],[3,"Ids","","Yields the `Id` for each `Font` within the `Map`.",N,N],[4,"Error","","Returned when loading new fonts from file or bytes.",N,N],[13,"IO","","Some error occurred while loading a `FontCollection` from…",94,N],[13,"NoFont","","No `Font`s could be yielded from the `FontCollection`.",94,N],[5,"collection_from_file","","Load a `super::FontCollection` from a file at a given path.",N,[[["p"]],["result",["fontcollection","error"]]]],[5,"from_file","","Load a single `Font` from a file at the given path.",N,[[["p"]],["result",["font","error"]]]],[11,"index","","Returns the inner `usize` from the `Id`.",95,[[["self"]],["usize"]]],[11,"new","","Construct the new, empty `Map`.",96,[[],["self"]]],[11,"get","","Borrow the `rusttype::Font` associated with the given…",96,[[["self"],["id"]],["option",["font"]]]],[11,"insert","","Adds the given `rusttype::Font` to the `Map` and returns a…",96,[[["self"],["font"]],["id"]]],[11,"insert_from_file","","Insert a single `Font` into the map by loading it from the…",96,[[["self"],["p"]],["result",["id","error"]]]],[11,"ids","","Produces an iterator yielding the `Id` for each `Font`…",96,[[["self"]],["ids"]]],[0,"glyph","conrod_core::text","Logic and types specific to individual glyph layout.",N,N],[3,"Rects","conrod_core::text::glyph","An iterator yielding the `Rect` for each `char`'s `Glyph`…",N,N],[3,"RectsPerLine","","An iterator that, for every `(line, line_rect)` pair…",N,N],[3,"SelectedRectsPerLine","","Yields an iteraor yielding `Rect`s for each selected…",N,N],[3,"SelectedRects","","Yields a `Rect` for each selected character in a single…",N,N],[5,"index_after_cursor","","Find the index of the character that directly follows the…",N,[[["i"],["index"]],["option",["usize"]]]],[5,"rects_per_line","","Produce an iterator that, for every `(line, line_rect)`…",N,[[["i"],["font"],["fontsize"]],["rectsperline"]]],[5,"selected_rects_per_line","","Produces an iterator that yields iteraors yielding `Rect`s…",N,[[["i"],["font"],["fontsize"],["index"],["index"]],["selectedrectsperline"]]],[6,"X","","Some position along the X axis (used within `CharXs`).",N,N],[6,"HalfW","","The half of the width of some character (used within…",N,N],[0,"cursor","conrod_core::text","Logic related to the positioning of the cursor within text.",N,N],[3,"XysPerLine","conrod_core::text::cursor","Every possible cursor position within each line of text…",N,N],[3,"XysPerLineFromText","","Similarly to `XysPerLine`, yields every possible cursor…",N,N],[3,"Xs","","Each possible cursor position along the x axis within a…",N,N],[3,"Index","","An index representing the position of a cursor within some…",N,N],[12,"line","","The index of the line upon which the cursor is situated.",97,N],[12,"char","","The index within all possible cursor positions for the line.",97,N],[5,"xys_per_line","","Every possible cursor position within each line of text…",N,[[["i"],["font"],["str"],["fontsize"]],["xysperline"]]],[5,"xys_per_line_from_text","","Similarly to `xys_per_line`, this produces an iterator…",N,N],[5,"index_before_char","","Convert the given character index into a cursor `Index`.",N,[[["i"],["usize"]],["option",["index"]]]],[5,"xy_at","","Determine the xy location of the cursor at the given…",N,[[["i"],["index"]],["option"]]],[5,"closest_line","","Find the closest line for the given `y` position, and…",N,[[["scalar"],["i"]],["option"]]],[5,"closest_cursor_index_and_xy","","Find the closest cursor index to the given `xy` position,…",N,[[["point"],["i"]],["option"]]],[5,"closest_cursor_index_on_line","","Find the closest cursor index to the given `x` position on…",N,N],[11,"previous_word_start","","The cursor index of the beginning of the word (block of…",97,[[["self"],["str"],["i"]],["option"]]],[11,"next_word_end","","The cursor index of the end of the first word (block of…",97,[[["self"],["str"],["i"]],["option"]]],[11,"previous","","The cursor index that comes before `self`.",97,[[["self"],["i"]],["option"]]],[11,"next","","The cursor index that follows `self`.",97,[[["self"],["i"]],["option"]]],[11,"clamp_to_lines","","Clamps `self` to the given lines.",97,[[["self"],["i"]],["self"]]],[0,"line","conrod_core::text","Text handling logic related to individual lines of text.",N,N],[3,"Info","conrod_core::text::line","Information about a single line of text within a `&str`.",N,N],[12,"start_byte","","The index into the `&str` that represents the first…",98,N],[12,"start_char","","The character index of the first character in the line.",98,N],[12,"end_break","","The index within the `&str` at which this line breaks into…",98,N],[12,"width","","The total width of all characters within the line.",98,N],[3,"Infos","","An iterator yielding an `Info` struct for each line in the…",N,N],[3,"Rects","","An iterator yielding a `Rect` for each line in ",N,N],[3,"SelectedRects","","An iterator yielding a `Rect` for each selected line in a…",N,N],[4,"Break","","The two types of Break indices returned by the…",N,N],[13,"Wrap","","A break caused by the text exceeding some maximum width.",99,N],[12,"byte","conrod_core::text::line::Break","The byte index at which the break occurs.",99,N],[12,"char","","The char index at which the string should wrap due to…",99,N],[12,"len_bytes","","The byte length which should be skipped in order to reach…",99,N],[13,"Newline","conrod_core::text::line","A break caused by a newline character.",99,N],[12,"byte","conrod_core::text::line::Break","The byte index at which the string should wrap due to…",99,N],[12,"char","","The char index at which the string should wrap due to…",99,N],[12,"len_bytes","","The width of the \"newline\" token in bytes.",99,N],[13,"End","conrod_core::text::line","The end of the string has been reached, with the given…",99,N],[12,"byte","conrod_core::text::line::Break","The ending byte index.",99,N],[12,"char","","The ending char index.",99,N],[5,"width","conrod_core::text::line","Produce the width of the given line of text including…",N,[[["str"],["font"],["fontsize"]],["scalar"]]],[5,"infos_wrapped_by","","Produce an `Infos` iterator wrapped by the given…",N,[[["str"],["font"],["fontsize"],["scalar"],["f"]],["infos"]]],[5,"infos","","Produce an `Infos` iterator that yields an `Info` for…",N,[[["str"],["font"],["fontsize"]],["infos",["nextbreakfnptr"]]]],[5,"rects","","Produce an iterator yielding the bounding `Rect` for each…",N,[[["i"],["fontsize"],["rect"],["justify"],["align"],["scalar"]],["rects"]]],[5,"selected_rects","","Produces an iterator yielding a `Rect` for the selected…",N,[[["i"],["font"],["fontsize"],["index"],["index"]],["selectedrects"]]],[6,"NextBreakFnPtr","","An alias for function pointers that are compatible with…",N,N],[11,"byte_index","","Return the index at which the break occurs.",99,[[["self"]],["usize"]]],[11,"char_index","","Return the index of the `char` at which the break occurs.",99,[[["self"]],["usize"]]],[11,"end_byte","","The end of the byte index range for indexing into the slice.",98,[[["self"]],["usize"]]],[11,"end_char","","The end of the index range for indexing into the slice.",98,[[["self"]],["usize"]]],[11,"byte_range","","The index range for indexing (via bytes) into the original…",98,[[["self"]],["range",["usize"]]]],[11,"char_range","","The index range for indexing into a `char` iterator over…",98,[[["self"]],["range",["usize"]]]],[11,"wrap_by_character","","Converts `Self` into an `Infos` whose lines are wrapped at…",100,[[["self"],["scalar"]],["self"]]],[11,"wrap_by_whitespace","","Converts `Self` into an `Infos` whose lines are wrapped at…",100,[[["self"],["scalar"]],["self"]]],[6,"FontCollection","conrod_core::text","The RustType `FontCollection` type used by conrod.",N,N],[6,"Font","","The RustType `Font` type used by conrod.",N,N],[6,"PositionedGlyph","","The RustType `PositionedGlyph` type used by conrod.",N,N],[0,"theme","conrod_core","Types a functionality for handling Canvas and Widget…",N,N],[3,"Theme","conrod_core::theme","A serializable collection of canvas and widget styling…",N,N],[12,"name","","A name for the theme used for identification.",101,N],[12,"padding","","Padding for Canvas layout and positioning.",101,N],[12,"x_position","","A default widget position along the x axis.",101,N],[12,"y_position","","A default widget position along the y axis.",101,N],[12,"background_color","","A default background for the theme.",101,N],[12,"shape_color","","A default color for widget shapes.",101,N],[12,"border_color","","A default color for widget borders.",101,N],[12,"border_width","","A default width for widget borders.",101,N],[12,"label_color","","A default color for widget labels.",101,N],[12,"font_id","","The `Id` of the default font used for text widgets when…",101,N],[12,"font_size_large","","A default \"large\" font size.",101,N],[12,"font_size_medium","","A default \"medium\" font size.",101,N],[12,"font_size_small","","A default \"small\" font size.",101,N],[12,"widget_styling","","`StyleMap` for unique styling of each widget, index-able…",101,N],[12,"mouse_drag_threshold","","Mouse Drag distance threshold determines the minimum…",101,N],[12,"double_click_threshold","","Once the `Duration` that separates two consecutive…",101,N],[3,"WidgetDefault","","The defaults for a specific widget.",N,N],[12,"style","","The unique style of a widget.",102,N],[12,"common","","The attributes commonly shared between widgets.",102,N],[3,"UniqueDefault","","A WidgetDefault downcast to a Widget's unique Style type.",N,N],[12,"style","","The unique style for the widget.",103,N],[12,"common","","Attributes that are common to all widgets.",103,N],[6,"StyleMap","","`std::collections::HashMap` with `fnv::FnvHasher` for…",N,N],[11,"new","","Constructor for a WidgetDefault.",102,[[["box",["any"]]],["widgetdefault"]]],[11,"default","","The default theme if not loading from file.",101,[[],["theme"]]],[11,"widget_style","","Retrieve the unique default styling for a widget.",101,[[["self"]],["option",["uniquedefault"]]]],[11,"new","conrod_core","Begin building a new `Ui` instance.",1,[[["dimensions"]],["self"]]],[11,"theme","","The theme used to set default styling for widgets.",1,[[["self"],["theme"]],["self"]]],[11,"widgets_capacity","","An estimation of the maximum number of widgets that will…",1,[[["self"],["usize"]],["self"]]],[11,"build","","Build Ui from the given builder",1,[[["self"]],["ui"]]],[11,"widget_input","","Returns a `input::Widget` for the given widget",0,[[["self"],["id"]],["widget"]]],[11,"rect_of","","The Rect for the widget at the given index.",0,[[["self"],["id"]],["option",["rect"]]]],[11,"w_of","","The absolute width of the widget at the given index.",0,[[["self"],["id"]],["option",["scalar"]]]],[11,"h_of","","The absolute height of the widget at the given index.",0,[[["self"],["id"]],["option",["scalar"]]]],[11,"wh_of","","The absolute dimensions for the widget at the given index.",0,[[["self"],["id"]],["option",["dimensions"]]]],[11,"xy_of","","The coordinates for the widget at the given index.",0,[[["self"],["id"]],["option",["point"]]]],[11,"kid_area_of","","The `kid_area` of the widget at the given index.",0,[[["self"],["id"]],["option",["rect"]]]],[11,"maybe_prev_widget","","An index to the previously updated widget if there is one.",0,[[["self"]],["option",["id"]]]],[11,"widget_graph","","Borrow the Ui's `widget_graph`.",0,[[["self"]],["graph"]]],[11,"updated_widgets","","Borrow the Ui's set of updated widgets.",0,[[["self"]],["fnvhashset"]]],[11,"prev_updated_widgets","","Borrow the Ui's set of updated widgets.",0,[[["self"]],["fnvhashset"]]],[11,"widget_id_generator","","Produces a type that may be used to generate new unique…",0,[[["self"]],["generator"]]],[11,"scroll_widget","","Scroll the widget at the given index by the given offset…",0,N],[11,"handle_event","","Handle raw window events and update the `Ui` state…",0,[[["self"],["input"]]]],[11,"global_input","","Get an immutable reference to global input. Handles…",0,[[["self"]],["global"]]],[11,"keyboard_capture","","Set keyboard capturing widget",0,[[["self"],["id"]]]],[11,"calc_xy","","Get the centred xy coords for some given `Dimension`s,…",0,[[["self"],["option",["id"]],["option",["id"]],["position"],["position"],["dimensions"],["bool"]],["point"]]],[11,"set_widgets","","A function within which all widgets are instantiated by…",0,[[["self"]],["uicell"]]],[11,"set_num_redraw_frames","","Set the number of frames that the `Ui` should draw in the…",0,[[["self"],["u8"]]]],[11,"needs_redraw","","Tells the `Ui` that it needs to re-draw everything. It…",0,[[["self"]]]],[11,"clear_with","","The first of the `Primitives` yielded by `Ui::draw` or…",0,[[["self"],["color"]]]],[11,"draw","","Draw the `Ui` in it's current state.",0,[[["self"]],["primitives"]]],[11,"draw_if_changed","","Same as the `Ui::draw` method, but only draws if the…",0,[[["self"]],["option",["primitives"]]]],[11,"kids_bounding_box","","The Rect that bounds the kids of the widget with the given…",0,[[["self"],["id"]],["option",["rect"]]]],[11,"visible_area","","The Rect that represents the maximum fully visible area…",0,[[["self"],["id"]],["option",["rect"]]]],[11,"mouse_cursor","","Get mouse cursor state.",0,[[["self"]],["mousecursor"]]],[11,"theme","","A reference to the `Theme` that is currently active within…",104,[[["self"]],["theme"]]],[11,"font","","A convenience method for borrowing the `Font` for the…",104,[[["self"],["id"]],["option",["font"]]]],[11,"window_dim","","Returns the dimensions of the window",104,[[["self"]],["dimensions"]]],[11,"global_input","","Returns an immutable reference to the `input::Global` of…",104,[[["self"]],["global"]]],[11,"widget_input","","Returns a `input::Widget` with input events for the widget.",104,[[["self"],["id"]],["widget"]]],[11,"widget_id_generator","","Produces a type that may be used to generate new unique…",104,[[["self"]],["generator"]]],[11,"kids_bounding_box","","The Rect that bounds the kids of the widget with the given…",104,[[["self"],["id"]],["option",["rect"]]]],[11,"scroll_widget","","Scroll the widget at the given index by the given offset…",104,N],[11,"set_mouse_cursor","","Sets the mouse cursor",104,[[["self"],["mousecursor"]]]],[0,"utils","","Various utility functions used throughout Conrod.",N,N],[4,"IterDiff","conrod_core::utils","A type returned by the `iter_diff` function.",N,N],[13,"FirstMismatch","","The index of the first non-matching element along with the…",105,N],[13,"Longer","","The remaining elements of the iterator.",105,N],[13,"Shorter","","The total number of elements that were in the iterator.",105,N],[5,"partial_min","","Compare to PartialOrd values and return the min.",N,[[["t"],["t"]],["t"]]],[5,"partial_max","","Compare to PartialOrd values and return the max.",N,[[["t"],["t"]],["t"]]],[5,"clamp","","Clamp a value between some range.",N,[[["t"],["t"],["t"]],["t"]]],[5,"degrees","","Convert degrees to radians.",N,[[["f"]],["f"]]],[5,"fmod","","Modulo float.",N,[[["f32"],["i32"]],["f32"]]],[5,"modulo","","The modulo function.",N,[[["i"],["i"]],["i"]]],[5,"map_range","","Map a value from a given range to a new given range.",N,[[["x"],["x"],["x"],["y"],["y"]],["y"]]],[5,"percentage","","Get value percentage between max and min.",N,[[["t"],["t"],["t"]],["f32"]]],[5,"turns","","Convert turns to radians.",N,[[["f"]],["f"]]],[5,"value_from_perc","","Adjust the value to the given percentage.",N,[[["f32"],["t"],["t"]],["t"]]],[5,"val_to_string","","Get a suitable string from the value, its max and the…",N,[[["t"],["t"],["t"],["usize"]],["string"]]],[5,"vec2_add","","Add `a` and `b`.",N,N],[5,"vec2_sub","","Subtract `b` from `a`.",N,N],[5,"bounding_box_for_points","","Find the bounding rect for the given series of points.",N,[[["i"]],["rect"]]],[5,"iter_diff","","Compares every element yielded by both elems and new_elems…",N,[[["a"],["b"]],["option",["iterdiff"]]]],[5,"write_if_different","","Returns `Borrowed` `elems` if `elems` contains the same…",N,N],[5,"iter_eq","","Compares two iterators to see if they yield the same thing.",N,[[["a"],["b"]],["bool"]]],[0,"widget","conrod_core","Widgets are the core building blocks for every conrod user…",N,N],[3,"UpdateArgs","conrod_core::widget","Arguments for the Widget::update method in a struct to…",N,N],[12,"id","","The Widget's unique index.",106,N],[12,"maybe_parent_id","","The Widget's parent unique index, if there is one.",106,N],[12,"prev","","The Widget's previous state. Specifically, the state that…",106,N],[12,"state","","A wrapper around the Widget's unique state, providing…",106,N],[12,"rect","","The rectangle describing the Widget's area.",106,N],[12,"style","","The Widget's current Widget::Style.",106,N],[12,"ui","","Restricted access to the `Ui`.",106,N],[3,"KidAreaArgs","","Arguments to the Widget::kid_area method in a struct to…",N,N],[12,"rect","","The Rect describing the Widget's position and dimensions.",107,N],[12,"style","","Current Widget::Style of the Widget.",107,N],[12,"theme","","The active Theme within the Ui.",107,N],[12,"fonts","","The Font (for determining text width).",107,N],[3,"KidArea","","The area upon which a Widget's child widgets will be placed.",N,N],[12,"rect","","The Rect bounds describing the position and area.",108,N],[12,"pad","","The distance between the edge of the area and where the…",108,N],[3,"Floating","","State necessary for \"floating\" (pop-up style) widgets.",N,N],[12,"time_last_clicked","","The time the Widget was last clicked (used for depth…",109,N],[3,"CommonBuilder","","A struct containing builder data common to all Widget types.",N,N],[12,"style","","Styling and positioning data that is common between all…",110,N],[12,"maybe_parent_id","","The parent widget of the Widget.",110,N],[12,"is_floating","","Whether or not the Widget is a \"floating\" Widget.",110,N],[12,"crop_kids","","Whether or not the children of this Widget should be…",110,N],[12,"maybe_x_scroll","","Arguments to the scrolling of the widget's x axis.",110,N],[12,"maybe_y_scroll","","Arguments to the scrolling of the widget's y axis.",110,N],[12,"place_on_kid_area","","Whether or not the Widget should be placed on the kid_area.",110,N],[12,"maybe_graphics_for","","Describes whether or not the Widget is instantiated as a…",110,N],[3,"CommonStyle","","Styling and positioning data that is common between all…",N,N],[12,"maybe_x_dimension","","The width of a Widget.",111,N],[12,"maybe_y_dimension","","The height of a Widget.",111,N],[12,"maybe_x_position","","The position of a Widget along the x axis.",111,N],[12,"maybe_y_position","","The position of a Widget along the y axis.",111,N],[12,"maybe_depth","","The rendering Depth of the Widget.",111,N],[3,"State","","A wrapper around a Widget's unique Widget::State.",N,N],[3,"CommonState","","A wrapper around state that is common to all Widget types.",N,N],[12,"rect","","The rectangle describing the `Widget`'s area.",112,N],[12,"depth","","The rendering depth for the Widget (the default is 0.0).",112,N],[12,"maybe_dragged_from","","If widget is draggable and is being dragged, this is where…",112,N],[12,"maybe_floating","","Floating state for the widget if it is floating.",112,N],[12,"kid_area","","The area of the widget upon which kid widgets are placed.",112,N],[12,"maybe_x_scroll_state","","If the widget is scrollable across the x axis.",112,N],[12,"maybe_y_scroll_state","","If the widget is scrollable across the y axis.",112,N],[3,"PreUpdateCache","","",N,N],[12,"type_id","","The Widget's unique type identifier.",113,N],[12,"id","","The Widget's unique Id.",113,N],[12,"maybe_parent_id","","The Widget's parent's unique index (if it has a parent).",113,N],[12,"maybe_x_positioned_relatively_id","","If this Widget is relatively positioned to another Widget,…",113,N],[12,"maybe_y_positioned_relatively_id","","If this Widget is relatively positioned to another Widget,…",113,N],[12,"rect","","The Rect describing the Widget's position and dimensions.",113,N],[12,"depth","","The z-axis depth - affects the render order of sibling…",113,N],[12,"kid_area","","The area upon which the Widget's children widgets will be…",113,N],[12,"maybe_dragged_from","","If Widget is draggable and is being dragged, this is where…",113,N],[12,"maybe_floating","","Floating data for the Widget if there is some.",113,N],[12,"crop_kids","","Whether or not the children of the Widget should be…",113,N],[12,"maybe_x_scroll_state","","Scrolling data for the Widget's x axis if there is some.",113,N],[12,"maybe_y_scroll_state","","Scrolling data for the Widget's y axis if there is some.",113,N],[12,"maybe_graphics_for","","Whether or not the Widget has been instantiated as a…",113,N],[12,"is_over","","A function describing whether or not a given point is over…",113,N],[3,"PostUpdateCache","","",N,N],[12,"id","","The Widget's unique Id.",114,N],[12,"maybe_parent_id","","The Widget's parent's unique Id (if it has a parent).",114,N],[12,"state","","The newly produced unique Widget::State associated with…",114,N],[12,"style","","The newly produced unique Widget::Style associated with…",114,N],[4,"MaybeParent","","The builder argument for the Widget's parent.",N,N],[13,"None","","The user specified the widget should not have any parents,…",115,N],[13,"Some","","The user gave a specific parent widget.",115,N],[13,"Unspecified","","No parent widget was specified, so we will assume they…",115,N],[4,"IsOver","","Returned by the `Widget::is_over` method.",N,N],[13,"Bool","","Whether or not the point was over the widget.",116,N],[13,"Widget","","Check whether or not the point is over the widget at the…",116,N],[5,"is_over_rect","","The default `IsOverFn` used if the `Widget::is_over`…",N,[[["container"],["point"],["theme"]],["isover"]]],[5,"default_x_dimension","","Determines the default Dimension for a Widget.",N,[[["w"],["ui"]],["dimension"]]],[5,"default_y_dimension","","Determines the default Dimension for a Widget.",N,[[["w"],["ui"]],["dimension"]]],[0,"id","","The widget identifier type used throughout conrod, along…",N,N],[3,"Generator","conrod_core::widget::id","Used for generating new unique `widget::Id`s.",N,N],[3,"List","","A list of lazily generated `widget::Id`s.",N,N],[3,"ListWalk","","An iterator-like type for producing indices from a `List`.",N,N],[6,"Id","","Unique widget identifier.",N,N],[11,"new","","Constructor for a new `widget::Id` generator.",117,[[["graph"]],["self"]]],[11,"next","","Generate a new, unique `widget::Id` into a Placeholder…",117,[[["self"]],["id"]]],[11,"new","","Construct a cache for multiple indices.",118,[[],["self"]]],[11,"walk","","Produce a walker for producing the `List`'s indices.",118,[[["self"]],["listwalk"]]],[11,"resize","","Resizes the `List`'s inner `Vec` to the given target…",118,[[["self"],["usize"],["generator"]]]],[11,"next","","Yield the next index, generating one if it does not yet…",119,[[["self"],["list"],["generator"]],["id"]]],[0,"scroll","conrod_core::widget","Scroll related types and logic.",N,N],[3,"Scroll","conrod_core::widget::scroll","Arguments given via a scrollable `Widget`'s builder…",N,N],[3,"State","","Scroll state calculated for a single axis.",N,N],[12,"offset","","The distance that has been scrolled from the origin.",120,N],[12,"offset_bounds","","The start and end bounds for the offset along the axis.",120,N],[12,"scrollable_range_len","","The total range which may be \"offset\" from the \"root\"…",120,N],[12,"is_scrolling","","Whether or not the this axis is currently scrolling.",120,N],[4,"X","","Behaviour for scrolling across the `X` axis.",N,N],[4,"Y","","Behaviour for scrolling across the `Y` axis.",N,N],[6,"StateX","","State for scrolling along the X axis.",N,N],[6,"StateY","","State for scrolling along the Y axis.",N,N],[8,"Axis","","Methods for distinguishing behaviour between both scroll…",N,N],[10,"parallel_range","","The range of the given `Rect` that is parallel with this…",121,[[["rect"]],["range"]]],[10,"perpendicular_range","","The range of the given `Rect` that is perpendicular with…",121,[[["rect"]],["range"]]],[10,"padding_range","","Given some rectangular `Padding`, return the `Range` that…",121,[[["padding"]],["range"]]],[10,"mouse_scalar","","The coordinate of the given mouse position that…",121,[[["point"]],["scalar"]]],[10,"offset_direction","","A `Scalar` multiplier representing the direction in which…",121,[[],["scalar"]]],[11,"new","","The default `Scroll` args.",122,[[],["self"]]],[11,"update","","Calculate the new scroll state for the single axis of a…",120,[[["ui"],["id"],["kidarea"],["option"],["scalar"]],["self"]]],[0,"primitive","conrod_core::widget","Primitive widgets are special in that they are built into…",N,N],[5,"bounding_box_for_points","conrod_core::widget::primitive","Find the bounding rect for the given series of points.",N,[[["i"]],["rect"]]],[0,"line","","A simple, non-interactive widget for drawing a single…",N,N],[3,"Line","conrod_core::widget::primitive::line","A simple, non-interactive widget for drawing a single…",N,N],[12,"common","","Data necessary and common for all widget builder types.",123,N],[12,"start","","The start of the line.",123,N],[12,"end","","The end of the line.",123,N],[12,"style","","Unique styling.",123,N],[12,"should_centre_points","","Whether or not the line should be automatically centred to…",123,N],[3,"State","","Unique state for the Line widget.",N,N],[12,"start","","The start of the line.",124,N],[12,"end","","The end of the line.",124,N],[3,"Style","","Unique styling for a Line widget.",N,N],[12,"maybe_pattern","","The patter for the line.",125,N],[12,"maybe_color","","Color of the Button's pressable area.",125,N],[12,"maybe_thickness","","The thickness of the line.",125,N],[12,"maybe_cap","","The style with which the ends of the line are drawn.",125,N],[4,"Pattern","","The pattern used to draw the line.",N,N],[13,"Solid","","A single continuous stroke.",126,N],[13,"Dashed","","A series of line strokes.",126,N],[13,"Dotted","","A series of circles.",126,N],[4,"Cap","","Whether the end of the Line should be flat or rounded.",N,N],[13,"Flat","","The line is capped with a flat edge.",127,N],[13,"Round","","The line is capped with a semi-circle.",127,N],[5,"rect_corners","","Given two points and half the line thickness, return the…",N,N],[5,"triangles","","Given two points and half the line thickness, return the…",N,N],[5,"is_over","","Describes whether or not the given point touches the line…",N,[[["point"],["point"],["scalar"],["point"]],["bool"]]],[5,"is_over_widget","","The function to use for picking whether a given point is…",N,[[["container"],["point"],["theme"]],["isover"]]],[11,"styled","","Build a new Line widget with the given style.",123,[[["point"],["point"],["style"]],["self"]]],[11,"new","","Build a new default Line widget.",123,[[["point"],["point"]],["self"]]],[11,"abs","","Build a new Line whose bounding box is fit to the absolute…",123,[[["point"],["point"]],["self"]]],[11,"abs_styled","","The same as Line::abs but with the given style.",123,[[["point"],["point"],["style"]],["self"]]],[11,"centred","","Build a new Line and shift the location of the start and…",123,[[["point"],["point"]],["self"]]],[11,"centred_styled","","The same as Line::centred but with the given style.",123,[[["point"],["point"],["style"]],["self"]]],[11,"thickness","","The thickness or width of the Line.",123,[[["self"],["scalar"]],["self"]]],[11,"solid","","Make a solid line.",123,[[["self"]],["self"]]],[11,"dashed","","Make a line with a Dashed pattern.",123,[[["self"]],["self"]]],[11,"dotted","","Make a line with a Dotted pattern.",123,[[["self"]],["self"]]],[11,"new","","Constructor for a default Line Style.",125,[[],["self"]]],[11,"solid","","Make a solid line.",125,[[],["self"]]],[11,"dashed","","Make a line with a Dashed pattern.",125,[[],["self"]]],[11,"dotted","","Make a line with a Dotted pattern.",125,[[],["self"]]],[11,"pattern","","The style with some given pattern.",125,[[["self"],["pattern"]],["self"]]],[11,"color","","The style with some given color.",125,[[["self"],["color"]],["self"]]],[11,"thickness","","The style with some given thickness.",125,[[["self"],["scalar"]],["self"]]],[11,"cap","","The style for the ends of the Line.",125,[[["self"],["cap"]],["self"]]],[11,"set_pattern","","Set the pattern for the line.",125,[[["self"],["pattern"]]]],[11,"set_color","","Set the color for the line.",125,[[["self"],["color"]]]],[11,"set_thickness","","Set the thickness for the line.",125,[[["self"],["scalar"]]]],[11,"set_cap","","Set the Cap for the line.",125,[[["self"],["cap"]]]],[11,"get_pattern","","The Pattern for the Line.",125,[[["self"],["theme"]],["pattern"]]],[11,"get_color","","The Color for the Line.",125,[[["self"],["theme"]],["color"]]],[11,"get_thickness","","The width or thickness of the Line.",125,[[["self"],["theme"]],["scalar"]]],[11,"get_cap","","The styling for the ends of the Line.",125,[[["self"],["theme"]],["cap"]]],[0,"image","conrod_core::widget::primitive","A simple, non-interactive widget for drawing an `Image`.",N,N],[3,"Image","conrod_core::widget::primitive::image","A primitive and basic widget for drawing an `Image`.",N,N],[12,"common","","Data necessary and common for all widget builder types.",128,N],[12,"image_id","","The unique identifier for the image that will be drawn.",128,N],[12,"src_rect","","The rectangle area of the original source image that…",128,N],[12,"style","","Unique styling.",128,N],[3,"State","","Unique `State` to be stored between updates for the `Image`.",N,N],[12,"src_rect","","The rectangular area of the image that we wish to display.",129,N],[12,"image_id","","The unique identifier for the image's associated data that…",129,N],[3,"Style","","Unique styling for the `Image` widget.",N,N],[12,"maybe_color","","Optionally specify a single color to use for the image.",130,N],[11,"new","","Construct a new `Image`.",128,[[["id"]],["self"]]],[11,"source_rectangle","","The rectangular area of the image that we wish to display.",128,[[["self"],["rect"]],["self"]]],[11,"color","","Build the type's self.$($assignee).+ with the given $Type.",128,[[["self"],["option",["color"]]],["self"]]],[0,"point_path","conrod_core::widget::primitive","A simple, non-interactive widget for drawing a series of…",N,N],[3,"PointPath","conrod_core::widget::primitive::point_path","A simple, non-interactive widget for drawing a series of…",N,N],[12,"points","","Some iterator yielding a series of Points.",131,N],[12,"common","","Data necessary and common for all widget builder types.",131,N],[12,"style","","Unique styling for the PointPath.",131,N],[12,"maybe_shift_to_centre_from","","Whether or not the points should be automatically centred…",131,N],[3,"State","","State that is unique to the PointPath.",N,N],[12,"points","","An owned version of the list of points.",132,N],[3,"Triangles","","An iterator that triangulates a point path.",N,N],[5,"triangles","","Triangulate a point path.",N,[[["i"],["cap"],["scalar"]],["option",["triangles"]]]],[5,"is_over","","Returns whether or not the given point `p` lies over the…",N,[[["i"],["cap"],["scalar"],["point"]],["bool"]]],[5,"is_over_widget","","The function to use for picking whether a given point is…",N,[[["container"],["point"],["theme"]],["isover"]]],[11,"styled","","The same as PointPath::new but with th given style.",131,[[["i"],["style"]],["self"]]],[11,"new","","Build a new default PointPath widget.",131,[[["i"]],["self"]]],[11,"abs","","Build a new PointPath whose bounding box is fit to the…",131,[[["i"]],["self"]]],[11,"abs_styled","","The same as PointPath::abs but constructs the PointPath…",131,[[["i"],["style"]],["self"]]],[11,"centred","","Build a new PointPath and shift the location of the points…",131,[[["i"]],["self"]]],[11,"centred_styled","","The same as PointPath::centred but constructs the…",131,[[["i"],["style"]],["self"]]],[11,"thickness","","The thickness or width of the PointPath's lines.",131,[[["self"],["scalar"]],["self"]]],[11,"solid","","Make a Solid line.",131,[[["self"]],["self"]]],[11,"dashed","","Make a line with a Dashed pattern.",131,[[["self"]],["self"]]],[11,"dotted","","Make a line with a Dotted pattern.",131,[[["self"]],["self"]]],[0,"shape","conrod_core::widget::primitive","A module encompassing the primitive 2D shape widgets.",N,N],[4,"Style","conrod_core::widget::primitive::shape","The style for some 2D shape.",N,N],[13,"Outline","","The outline of the shape with this style.",133,N],[13,"Fill","","A rectangle filled with this color.",133,N],[0,"circle","","An adaptation of the Oval type where the width and height…",N,N],[3,"Circle","conrod_core::widget::primitive::shape::circle","A tiny wrapper around the Oval widget type.",N,N],[11,"styled","","Build a circular Oval with the given dimensions and style.",134,[[["scalar"],["style"]],["oval",["full"]]]],[11,"fill","","Build a new Filled circular Oval.",134,[[["scalar"]],["oval",["full"]]]],[11,"fill_with","","Build a new circular Oval Filled with the given color.",134,[[["scalar"],["color"]],["oval",["full"]]]],[11,"outline","","Build a new circular Outlined Oval widget.",134,[[["scalar"]],["oval",["full"]]]],[11,"outline_styled","","Build a new circular Oval Outlined with the given style.",134,[[["scalar"],["style"]],["oval",["full"]]]],[0,"oval","conrod_core::widget::primitive::shape","A simple, non-interactive widget for drawing a single Oval.",N,N],[3,"Oval","conrod_core::widget::primitive::shape::oval","A simple, non-interactive widget for drawing a single Oval.",N,N],[12,"common","","Data necessary and common for all widget builder types.",135,N],[12,"style","","Unique styling.",135,N],[12,"resolution","","The number of lines used to draw the edge.",135,N],[12,"section","","A type describing the section of the `Oval` that is to be…",135,N],[3,"Full","","The entire `Oval` will be drawn.",N,N],[3,"Section","","A section of the oval will be drawn where the section is…",N,N],[12,"radians","","The angle occuppied by the section's circumference.",136,N],[12,"offset_radians","","The radians at which the section will begin.",136,N],[3,"State","","Unique state for the Oval.",N,N],[12,"resolution","","The number of lines used to draw the edge.",137,N],[12,"section","","A type describing the section of the `Oval` that is to be…",137,N],[3,"Circumference","","An iterator yielding the edges of an `Oval` (or some…",N,N],[3,"Triangles","","An iterator yielding triangles that describe an oval or…",N,N],[5,"circumference","","An iterator yielding the `Oval`'s edges as a circumference…",N,[[["rect"],["usize"]],["circumference"]]],[5,"triangles","","An iterator yielding the triangles that describe the given…",N,[[["rect"],["usize"]],["triangles"]]],[5,"is_over","","Returns `true` if the given `Point` is over an oval at the…",N,[[["rect"],["point"]],["bool"]]],[5,"is_over_widget","","The function to use for picking whether a given point is…",N,[[["container"],["point"],["theme"]],["isover"]]],[5,"is_over_section","","Returns whether or not the given point is over the section…",N,[[["circumference"],["point"]],["bool"]]],[5,"is_over_section_widget","","The function to use for picking whether a given point is…",N,[[["container"],["point"],["theme"]],["isover"]]],[17,"DEFAULT_RESOLUTION","","The default circle resolution if none is specified.",N,N],[8,"OvalSection","","Types that may be used to describe the visible section of…",N,N],[18,"IS_OVER","","The function used to determine if a point is over the oval…",138,N],[11,"styled","","Build an Oval with the given dimensions and style.",135,[[["dimensions"],["style"]],["self"]]],[11,"fill","","Build a new Filled Oval.",135,[[["dimensions"]],["self"]]],[11,"fill_with","","Build a new Oval Filled with the given color.",135,[[["dimensions"],["color"]],["self"]]],[11,"outline","","Build a new Outlined Oval widget.",135,[[["dimensions"]],["self"]]],[11,"outline_styled","","Build a new Oval Outlined with the given style.",135,[[["dimensions"],["style"]],["self"]]],[11,"resolution","","The number of lines used to draw the edge.",135,[[["self"],["usize"]],["self"]]],[11,"section","","Produces an `Oval` where only a section is drawn.",135,[[["self"],["scalar"]],["oval",["section"]]]],[11,"offset_radians","","The radians at which the section will begin.",135,[[["self"],["scalar"]],["self"]]],[11,"new","","An iterator yielding the `Oval`'s edges as a circumference…",139,[[["rect"],["usize"]],["self"]]],[11,"new_section","","Produces a new iterator that yields only a section of the…",139,[[["rect"],["usize"],["scalar"]],["self"]]],[11,"section","","Produces a new iterator that yields only a section of the…",139,[[["self"],["scalar"]],["self"]]],[11,"offset_radians","","Rotates the position at which the iterator starts yielding…",139,[[["self"],["scalar"]],["self"]]],[11,"triangles","","Produces an `Iterator` yielding `Triangle`s.",139,[[["self"]],["triangles"]]],[0,"polygon","conrod_core::widget::primitive::shape","A simple, non-interactive Polygon widget for drawing…",N,N],[3,"Polygon","conrod_core::widget::primitive::shape::polygon","A basic, non-interactive, arbitrary Polygon widget.",N,N],[12,"common","","Data necessary and common for all widget builder types.",140,N],[12,"points","","The points describing the corners of the Polygon.",140,N],[12,"style","","Unique styling for the Polygon.",140,N],[12,"maybe_shift_to_centre_from","","Whether or not the points should be automatically centred…",140,N],[3,"State","","Unique state for the Polygon.",N,N],[12,"points","","An owned version of the points yielded by the Polygon's…",141,N],[3,"Triangles","","An iterator that triangulates a polygon represented by a…",N,N],[4,"Kind","","Whether the rectangle is drawn as an outline or a filled…",N,N],[13,"Outline","","Only the outline of the rectangle is drawn.",142,N],[13,"Fill","","The rectangle area is filled with some color.",142,N],[5,"triangles","","Triangulate the polygon given as a list of `Point`s…",N,[[["i"]],["option",["triangles"]]]],[5,"is_over","","Returns `true` if the given `Point` is over the polygon…",N,[[["i"],["point"]],["bool"]]],[5,"is_over_widget","","The function to use for picking whether a given point is…",N,[[["container"],["point"],["theme"]],["isover"]]],[11,"styled","","Build a polygon with the given points and style.",140,[[["i"],["style"]],["self"]]],[11,"fill","","Build a Polygon with the default Fill style.",140,[[["i"]],["self"]]],[11,"fill_with","","Build a Polygon Filled with the given Color.",140,[[["i"],["color"]],["self"]]],[11,"outline","","Build a Polygon with the default Outline style.",140,[[["i"]],["self"]]],[11,"outline_styled","","Build a Polygon Outlineed with the given line style.",140,[[["i"],["style"]],["self"]]],[11,"abs_styled","","Build a new filled Polygon whose bounding box is fit to…",140,[[["i"],["style"]],["self"]]],[11,"abs_fill","","The same as Polygon::abs_styled but builds the Polygon…",140,[[["i"]],["self"]]],[11,"abs_fill_with","","The same as Polygon::abs_styled but builds the Polygon…",140,[[["i"],["color"]],["self"]]],[11,"abs_outline","","The same as Polygon::abs_styled but builds the Polygon…",140,[[["i"]],["self"]]],[11,"abs_outline_styled","","The same as Polygon::abs_styled but builds the Polygon…",140,[[["i"],["style"]],["self"]]],[11,"centred_styled","","Build a new Polygon and shift the location of the points…",140,[[["i"],["style"]],["self"]]],[11,"centred_fill","","The same as Polygon::centred_styled but constructs the…",140,[[["i"]],["self"]]],[11,"centred_fill_with","","The same as Polygon::centred_styled but constructs the…",140,[[["i"],["color"]],["self"]]],[11,"centred_outline","","The same as Polygon::centred_styled but constructs the…",140,[[["i"]],["self"]]],[11,"centred_outline_styled","","The same as Polygon::centred_styled but constructs the…",140,[[["i"],["style"]],["self"]]],[0,"rectangle","conrod_core::widget::primitive::shape","A simple, non-interactive rectangle shape widget.",N,N],[3,"Rectangle","conrod_core::widget::primitive::shape::rectangle","A basic, non-interactive rectangle shape widget.",N,N],[12,"common","","Data necessary and common for all widget builder types.",143,N],[12,"style","","Unique styling for the Rectangle.",143,N],[3,"State","","Unique state for the Rectangle.",N,N],[4,"Kind","","Whether the rectangle is drawn as an outline or a filled…",N,N],[13,"Outline","","Only the outline of the rectangle is drawn.",144,N],[13,"Fill","","The rectangle area is filled with some color.",144,N],[5,"triangles","","The two triangles that describe the given `Rect`.",N,N],[11,"styled","","Build a rectangle with the dimensions and style.",143,[[["dimensions"],["style"]],["self"]]],[11,"fill","","Build a new filled rectangle.",143,[[["dimensions"]],["self"]]],[11,"fill_with","","Build a new filled rectangle widget filled with the given…",143,[[["dimensions"],["color"]],["self"]]],[11,"outline","","Build a new outlined rectangle widget.",143,[[["dimensions"]],["self"]]],[11,"outline_styled","","Build an outlined rectangle rather than a filled one.",143,[[["dimensions"],["style"]],["self"]]],[0,"triangles","conrod_core::widget::primitive::shape","A primitive widget that allows for drawing using a list of…",N,N],[3,"Triangles","conrod_core::widget::primitive::shape::triangles","A widget that allows for drawing a list of triangles.",N,N],[12,"common","","Data necessary and common for all widget builder types.",145,N],[12,"style","","Unique styling for the Triangles.",145,N],[12,"triangles","","All the point in the triangle list.",145,N],[12,"maybe_shift_to_centre_from","","Whether or not the triangles should be automatically…",145,N],[3,"SingleColor","","All triangles colored with a single `Color`.",N,N],[12,"0","","",146,N],[3,"MultiColor","","Each triangle is colored per vertex.",N,N],[3,"Triangle","","A single triangle described by three vertices.",N,N],[12,"0","","",147,N],[3,"State","","Unique state stored between updates for a `Triangles`.",N,N],[12,"triangles","","The triangles that make up the triangles.",148,N],[3,"TrianglesUnpositioned","","When beginning to build `Triangles` they are initially…",N,N],[5,"from_quad","","Triangulates the given quad, represented by four points…",N,N],[5,"is_over_triangle","","Returns `true` if the given `Point` is over the given…",N,[[["triangle"],["point"]],["bool"]]],[5,"is_over","","Returns `true` if the given `Point` is over any of the…",N,[[["i"],["point"]],["bool"]]],[5,"is_over_widget","","The function to use for picking whether a given point is…",N,[[["container"],["point"],["theme"]],["isover"]]],[6,"ColoredPoint","","A point with an associated color.",N,N],[8,"Vertex","","Types used as vertices that make up a list of triangles.",N,N],[10,"point","","The x y location of the vertex.",149,[[["self"]],["point"]]],[10,"add","","Add the given vector onto the position of self and return…",149,[[["self"],["point"]],["self"]]],[8,"Style","","Unique styling types for `Triangles`.",N,N],[16,"Vertex","","The type of vertices that make up the list of triangles…",150,N],[11,"add","","Shift the triangle by the given amount by adding it onto…",147,[[["self"],["point"]],["self"]]],[11,"points","","The three points that make up the triangle.",147,N],[11,"color","","Convert the `Triangle<Point>` to a `Triangle<ColoredPoint>`.",147,[[["self"],["rgba"],["rgba"],["rgba"]],["triangle",["coloredpoint"]]]],[11,"color_all","","Convert the `Triangle<Point>` to a…",147,[[["self"],["rgba"]],["triangle",["coloredpoint"]]]],[11,"single_color","","A list of triangles described by the given points.",145,[[["c"],["i"]],["trianglesunpositioned",["singlecolor"]]]],[11,"multi_color","","A list of triangles described by the given points.",145,[[["i"]],["trianglesunpositioned",["multicolor"]]]],[11,"with_bounding_rect","","Specify the bounding rectangle for the Triangles.",151,[[["self"],["rect"]],["triangles"]]],[11,"calc_bounding_rect","","Calculate the position and size of the bounding rectangle…",151,[[["self"]],["triangles"]]],[11,"centre_points_to_bounding_rect","","Shift the location of the Triangles points so that the…",151,[[["self"]],["triangles"]]],[11,"fill","conrod_core::widget::primitive::shape","A default `Fill` style.",133,[[],["self"]]],[11,"fill_with","","A `Fill` style with some given `Color`.",133,[[["color"]],["self"]]],[11,"outline","","A default `Outline` style.",133,[[],["self"]]],[11,"outline_styled","","A default `Outline` style.",133,[[["style"]],["self"]]],[11,"color","","The style with some given Color.",133,[[["self"],["color"]],["self"]]],[11,"set_color","","Set the color for the style.",133,[[["self"],["color"]]]],[11,"get_color","","Get the color of the Rectangle.",133,[[["self"],["theme"]],["color"]]],[0,"text","conrod_core::widget::primitive","The primitive widget used for displaying text.",N,N],[3,"Text","conrod_core::widget::primitive::text","Displays some given text centered within a rectangular area.",N,N],[12,"common","","Data necessary and common for all widget builder types.",152,N],[12,"text","","The text to be drawn by the Text.",152,N],[12,"style","","Unique styling for the Text.",152,N],[3,"Style","","The styling for a Text's graphics.",N,N],[12,"font_size","","The font size for the Text.",153,N],[12,"color","","The color of the Text.",153,N],[12,"maybe_wrap","","Whether or not the text should wrap around the width.",153,N],[12,"line_spacing","","The spacing between consecutive lines.",153,N],[12,"justify","","Alignment of the text along the x axis.",153,N],[12,"font_id","","The id of the font to use for rendering and layout.",153,N],[3,"State","","The state to be stored between updates for the Text.",N,N],[12,"string","","An owned version of the string.",154,N],[12,"line_infos","","The indices and width for each line of text within the…",154,N],[4,"Wrap","","The way in which text should wrap around the width.",N,N],[13,"Character","","Wrap at the first character that exceeds the width.",155,N],[13,"Whitespace","","Wrap at the first word that exceeds the width.",155,N],[11,"new","","Build a new Text widget.",152,[[["str"]],["self"]]],[11,"no_line_wrap","","Specify that the Text should not wrap lines around the…",152,[[["self"]],["self"]]],[11,"wrap_by_word","","Line wrap the Text at the beginning of the first word that…",152,[[["self"]],["self"]]],[11,"wrap_by_character","","Line wrap the Text at the beginning of the first character…",152,[[["self"]],["self"]]],[11,"font_id","","A method for specifying the `Font` used for displaying the…",152,[[["self"],["id"]],["self"]]],[11,"with_style","","Build the Text with the given Style.",152,[[["self"],["style"]],["self"]]],[11,"left_justify","","Align the text to the left of its bounding Rect's x axis…",152,[[["self"]],["self"]]],[11,"center_justify","","Align the text to the middle of its bounding Rect's x axis…",152,[[["self"]],["self"]]],[11,"right_justify","","Align the text to the right of its bounding Rect's x axis…",152,[[["self"]],["self"]]],[11,"font_size","","Build the type's self.$($assignee).+ with the given $Type.",152,[[["self"],["fontsize"]],["self"]]],[11,"justify","","Build the type's self.$($assignee).+ with the given $Type.",152,[[["self"],["justify"]],["self"]]],[11,"line_spacing","","Build the type's self.$($assignee).+ with the given $Type.",152,[[["self"],["scalar"]],["self"]]],[0,"bordered_rectangle","conrod_core::widget","The `BorderedRectangle` widget and related items.",N,N],[3,"BorderedRectangle","conrod_core::widget::bordered_rectangle","A filled rectangle widget that may or may not have some…",N,N],[12,"common","","Data necessary and common for all widget builder types.",156,N],[12,"style","","Unique styling for the BorderedRectangle.",156,N],[3,"Style","","Unique styling for the BorderedRectangle widget.",N,N],[12,"color","","Shape styling for the inner rectangle.",157,N],[12,"border","","The thickness of the border.",157,N],[12,"border_color","","The color of the border.",157,N],[3,"State","","Unique state for the `BorderedRectangle`.",N,N],[3,"RoundedBorderTriangles","","An iterator yielding triangles for a rounded border.",N,N],[5,"border_triangles","","The eight triangles that describe a rectangular border.",N,[[["rect"],["scalar"]],["option"]]],[5,"rounded_border_triangles","","An iterator yielding triangles for a rounded border.",N,[[["rect"],["scalar"],["scalar"],["usize"]],["roundedbordertriangles"]]],[11,"new","","Build a new BorderedRectangle.",156,[[["dimensions"]],["self"]]],[11,"with_style","","Build the type's self.$($assignee).+ with the given $Type.",156,[[["self"],["style"]],["self"]]],[11,"new","","Constructor for an iterator yielding triangles for a…",158,[[["rect"],["scalar"],["scalar"],["usize"]],["self"]]],[0,"button","conrod_core::widget","The `Button` widget and related items.",N,N],[3,"Button","conrod_core::widget::button","A pressable button widget whose reaction is triggered upon…",N,N],[12,"show","","Whether the `Button` is a `Flat` color or an `Image`.",159,N],[12,"style","","Unique styling parameters for the Button.",159,N],[3,"Style","","Unique styling for the Button.",N,N],[12,"color","","Color of the Button's pressable area.",160,N],[12,"border","","Width of the border surrounding the button",160,N],[12,"border_color","","The color of the border.",160,N],[12,"label_color","","The color of the Button's label.",160,N],[12,"label_font_size","","The font size of the Button's label.",160,N],[12,"label_font_id","","The ID of the font used to display the label.",160,N],[12,"label_justify","","The label's typographic alignment over the x axis.",160,N],[12,"label_x","","The position of the title bar's `Label` widget over the x…",160,N],[12,"label_y","","The position of the title bar's `Label` widget over the y…",160,N],[3,"FlatIds","","Identifiers for a \"flat\" button.",N,N],[12,"rectangle","","",161,N],[12,"label","","",161,N],[3,"ImageIds","","Identifiers for an image button.",N,N],[12,"image","","",162,N],[12,"label","","",162,N],[3,"Flat","","The `Button` simply displays a flat color.",N,N],[12,"hover_color","","Allows specifying a color to use when the mouse hovers…",163,N],[12,"press_color","","Allows specifying a color to use when the mouse presses…",163,N],[3,"Image","","The `Button` displays an `Image` on top.",N,N],[12,"image_id","","The id of the `Image` to be used.",164,N],[12,"hover_image_id","","The image displayed when the mouse hovers over the button.",164,N],[12,"press_image_id","","The image displayed when the mouse has captured and is…",164,N],[12,"color","","If `Some`, maps the image's luminance to this `Color`.",164,N],[12,"src_rect","","The rectangular area of the original source image that…",164,N],[3,"TimesClicked","","The `Event` type yielded by the `Button` widget.",N,N],[12,"0","","",165,N],[4,"ImageColor","","The coloring of the `Image`.",N,N],[13,"Normal","","The image's luminance will be mapped to this color.",166,N],[13,"WithFeedback","","The image's luminance will be mapped to this color.",166,N],[13,"None","","The image's regular color will be used.",166,N],[11,"new","","Construct a new `widget::Id` container.",161,[[["generator"]],["self"]]],[11,"new","","Construct a new `widget::Id` container.",162,[[["generator"]],["self"]]],[11,"was_clicked","","`true` if the `Button` was clicked one or more times.",165,[[["self"]],["bool"]]],[11,"image","","Begin building a button displaying the given `Image` on top.",159,[[["id"]],["self"]]],[11,"source_rectangle","","The rectangular area of the image that we wish to display.",159,[[["self"],["rect"]],["self"]]],[11,"image_color","","Map the `Image`'s luminance to the given color.",159,[[["self"],["color"]],["self"]]],[11,"image_color_with_feedback","","Map the `Image`'s luminance to the given color.",159,[[["self"],["color"]],["self"]]],[11,"hover_image","","The image displayed while the mouse hovers over the…",159,[[["self"],["id"]],["self"]]],[11,"press_image","","The image displayed while the `Button` is pressed.",159,[[["self"],["id"]],["self"]]],[11,"new","","Begin building a flat-colored `Button` widget.",159,[[],["self"]]],[11,"with_style","","Override the default button style",159,[[["self"],["style"]],["self"]]],[11,"hover_color","","Specify a color to use when the mouse hovers over the…",159,[[["self"],["color"]],["self"]]],[11,"press_color","","Specify a color to use when the mouse presses the button.",159,[[["self"],["color"]],["self"]]],[11,"label_font_id","","Specify the font used for displaying the label.",159,[[["self"],["id"]],["self"]]],[11,"left_justify_label","","Align the label to the left of the `Button`'s surface.",159,[[["self"]],["self"]]],[11,"center_justify_label","","Align the label to the mid-left of the `Button`'s surface.",159,[[["self"]],["self"]]],[11,"right_justify_label","","Align the label to the mid-left of the `Button`'s surface.",159,[[["self"]],["self"]]],[11,"label_x","","Specify the label's position relatively to `Button` along…",159,[[["self"],["relative"]],["self"]]],[11,"label_y","","Specify the label's position relatively to `Button` along…",159,[[["self"],["relative"]],["self"]]],[11,"enabled","","Build the type's self.$($assignee).+ with the given $Type.",159,[[["self"],["bool"]],["self"]]],[0,"canvas","conrod_core::widget","The `Canvas` widget and related items.",N,N],[3,"Canvas","conrod_core::widget::canvas","Canvas is designed to be a \"container\"-like \"parent\"…",N,N],[12,"common","","Data necessary and common for all widget builder types.",167,N],[12,"style","","The builder data related to the style of the Canvas.",167,N],[12,"maybe_title_bar_label","","The label for the Canvas' TitleBar if there is one.",167,N],[12,"maybe_splits","","A list of child Canvasses as splits of this Canvas flowing…",167,N],[3,"State","","Canvas state to be cached.",N,N],[3,"Style","","Unique styling for the Canvas.",N,N],[12,"color","","The color of the Canvas' rectangle surface.",168,N],[12,"border","","The width of the border surrounding the Canvas' rectangle.",168,N],[12,"border_color","","The color of the Canvas' border.",168,N],[12,"length","","If this Canvas is a split of some parent Canvas, this is…",168,N],[12,"pad_left","","Padding for the left edge of the Canvas' kid area.",168,N],[12,"pad_right","","Padding for the right edge of the Canvas' kid area.",168,N],[12,"pad_bottom","","Padding for the bottom edge of the Canvas' kid area.",168,N],[12,"pad_top","","Padding for the top edge of the Canvas' kid area.",168,N],[12,"title_bar_color","","The color of the title bar. Defaults to the color of the…",168,N],[12,"title_bar_text_color","","The color of the title bar's text.",168,N],[12,"title_bar_font_size","","The font size for the title bar's text.",168,N],[12,"title_bar_maybe_wrap","","The way in which the title bar's text should wrap.",168,N],[12,"title_bar_line_spacing","","The distance between lines for multi-line title bar text.",168,N],[12,"title_bar_justify","","The label's typographic alignment over the x axis.",168,N],[4,"Length","","Used to describe the desired length for a `Split`.",N,N],[13,"Absolute","","The length as an absolute scalar.",169,N],[13,"Weight","","The length as a weight of the non-absolute length of the…",169,N],[4,"Direction","","The direction in which a sequence of canvas splits will be…",N,N],[13,"X","","Lay splits along the x axis.",170,N],[13,"Y","","Lay splits along the y axis.",170,N],[6,"ListOfSplits","","A series of Canvas splits along with their unique…",N,N],[6,"FlowOfSplits","","A series of Canvas splits flowing in the specified…",N,N],[6,"Weight","","The length of a `Split` given as a weight.",N,N],[11,"new","","Construct a new Canvas builder.",167,[[],["self"]]],[11,"title_bar","","Build the type's self.$($assignee).+ with the given $Type.",167,[[["self"],["str"]],["self"]]],[11,"pad_left","","Build the type's self.$($assignee).+ with the given $Type.",167,[[["self"],["scalar"]],["self"]]],[11,"pad_right","","Build the type's self.$($assignee).+ with the given $Type.",167,[[["self"],["scalar"]],["self"]]],[11,"pad_bottom","","Build the type's self.$($assignee).+ with the given $Type.",167,[[["self"],["scalar"]],["self"]]],[11,"pad_top","","Build the type's self.$($assignee).+ with the given $Type.",167,[[["self"],["scalar"]],["self"]]],[11,"with_style","","Build the type's self.$($assignee).+ with the given $Type.",167,[[["self"],["style"]],["self"]]],[11,"length","","Set the length of the Split as an absolute scalar.",167,[[["self"],["scalar"]],["self"]]],[11,"length_weight","","Set the length of the Split as a weight.",167,[[["self"],["weight"]],["self"]]],[11,"flow_right","","Set the child Canvasses flowing to the right.",167,[[["self"],["listofsplits"]],["self"]]],[11,"flow_left","","Set the child Canvasses flowing to the left.",167,[[["self"],["listofsplits"]],["self"]]],[11,"flow_up","","Set the child Canvasses flowing upwards.",167,[[["self"],["listofsplits"]],["self"]]],[11,"flow_down","","Set the child Canvasses flowing downwards.",167,[[["self"],["listofsplits"]],["self"]]],[11,"pad","","Set the padding for all edges of the area where child…",167,[[["self"],["scalar"]],["self"]]],[11,"padding","","Set the padding of the area where child widgets will be…",167,[[["self"],["padding"]],["self"]]],[11,"title_bar_color","","Set the color of the `Canvas`' `TitleBar` if it is visible.",167,[[["self"],["color"]],["self"]]],[11,"padding","","Get the Padding for the Canvas' kid area.",168,[[["self"],["theme"]],["padding"]]],[0,"collapsible_area","conrod_core::widget","The `CollapsibleArea` widget and related items.",N,N],[3,"CollapsibleArea","conrod_core::widget::collapsible_area","A vertically collapsible area.",N,N],[3,"Ids","","The unique identifiers for the `CollapsibleArea`'s child…",N,N],[12,"button","","",171,N],[12,"triangle","","",171,N],[12,"area","","",171,N],[3,"State","","The unique state cached within the widget graph for the…",N,N],[3,"Style","","Unique styling for the CollapsibleArea.",N,N],[12,"color","","Color of the Button's pressable area.",172,N],[12,"border","","Width of the border surrounding the button",172,N],[12,"border_color","","The color of the border.",172,N],[12,"label_color","","The color of the Button's label.",172,N],[12,"label_font_size","","The font size of the Button's label.",172,N],[12,"label_font_id","","The ID of the font used to display the label.",172,N],[3,"Area","","The area returned by the widget when the `CollapsibleArea`…",N,N],[12,"id","","A unique identifier for the user's widget.",173,N],[12,"collapsible_area_id","","The widget::Id for the collapsible area that produced this…",173,N],[12,"width","","The width of the `CollapsibleArea` that produced this…",173,N],[4,"Event","","The event returned when the text bar or triangle is pressed.",N,N],[13,"Open","","The collapsible area was opened.",174,N],[13,"Close","","The collapsible area was closed.",174,N],[11,"new","","Construct a new `widget::Id` container.",171,[[["generator"]],["self"]]],[11,"new","","Begin building the `CollapsibleArea` widget.",175,[[["bool"],["str"]],["self"]]],[11,"label_color","","Specify the color of the `CollapsibleArea`'s label.",175,[[["self"],["color"]],["self"]]],[11,"label_font_size","","Specify the font size for the `CollapsibleArea`'s label.",175,[[["self"],["fontsize"]],["self"]]],[11,"label_font_id","","Specify the font for the `CollapsibleArea`'s label.",175,[[["self"],["id"]],["self"]]],[11,"is_open","","Returns whether or not the `Event` results in an open…",174,[[["self"]],["bool"]]],[11,"set","","Set the user's given widget directly under the…",173,N],[0,"drop_down_list","conrod_core::widget","The `DropDownList` and related items.",N,N],[3,"DropDownList","conrod_core::widget::drop_down_list","Displays a given `Vec<String>` as a selectable drop down…",N,N],[3,"Style","","Styling for the DropDownList, necessary for constructing…",N,N],[12,"color","","Color of the widget.",176,N],[12,"border","","Width of the widget's border.",176,N],[12,"border_color","","Color of the widget's border.",176,N],[12,"label_color","","Color of the item labels.",176,N],[12,"label_font_size","","Font size for the item labels.",176,N],[12,"label_justify","","The label's typographic alignment over the x axis.",176,N],[12,"label_x","","The label's position relative to its `Button` along the x…",176,N],[12,"label_y","","The label's position relative to its `Button` along the y…",176,N],[12,"maybe_max_visible_height","","Maximum height of the Open menu before the scrollbar…",176,N],[12,"scrollbar_position","","The position of the scrollbar in the case that the list is…",176,N],[12,"scrollbar_width","","The width of the scrollbar in the case that the list is…",176,N],[12,"label_font_id","","The ID of the font used to display the labels.",176,N],[3,"State","","Represents the state of the DropDownList.",N,N],[4,"MaxHeight","","Representations of the max height of the visible area of…",N,N],[13,"Items","","Specify the max height as a number of items.",177,N],[13,"Scalar","","Specify the max height as an absolute scalar distance.",177,N],[6,"Idx","","The index of a selected item.",N,N],[6,"Len","","The number of items in a list.",N,N],[11,"new","","Construct a new DropDownList.",178,N],[11,"enabled","","Build the type's self.$($assignee).+ with the given $Type.",178,[[["self"],["bool"]],["self"]]],[11,"max_visible_items","","Set the maximum height of the DropDownList (before the…",178,[[["self"],["usize"]],["self"]]],[11,"max_visible_height","","Set the maximum height of the DropDownList (before the…",178,[[["self"],["f64"]],["self"]]],[11,"scrollbar_next_to","","Specifies that the list should be scrollable and should…",178,[[["self"]],["self"]]],[11,"scrollbar_on_top","","Specifies that the list should be scrollable and should…",178,[[["self"]],["self"]]],[11,"no_scrollbar","","Even in the case that the list is scrollable, do not…",178,[[["self"]],["self"]]],[11,"scrollbar_width","","Specify the width of the scrollbar.",178,[[["self"],["scalar"]],["self"]]],[11,"label_font_id","","Specify the font used for displaying the label.",178,[[["self"],["id"]],["self"]]],[11,"left_justify_label","","Align the labels to the left of their `Button`s' surface.",178,[[["self"]],["self"]]],[11,"right_justify_label","","Align the labels to the right of their `Button`s' surface.",178,[[["self"]],["self"]]],[11,"center_justify_label","","Center the labels to the their `Button`s' surface.",178,[[["self"]],["self"]]],[11,"label_x","","Specify the label's position relatively to `Button` along…",178,[[["self"],["relative"]],["self"]]],[11,"label_y","","Specify the label's position relatively to `Button` along…",178,[[["self"],["relative"]],["self"]]],[11,"button_style","","Style for a `Button` given this `Style`'s current state.",176,[[["self"],["bool"]],["style"]]],[0,"envelope_editor","conrod_core::widget","The `EnvelopeEditor` widget and related items.",N,N],[3,"EnvelopeEditor","conrod_core::widget::envelope_editor","Used for editing a series of 2D Points on a cartesian (X,…",N,N],[12,"skew_y_range","","The value skewing for the envelope's y-axis. This is…",179,N],[3,"Style","","Styling for the EnvelopeEditor, necessary for constructing…",N,N],[12,"color","","Coloring for the EnvelopeEditor's BorderedRectangle.",180,N],[12,"border","","Thickness of the BorderedRectangle's border.",180,N],[12,"border_color","","Color of the border.",180,N],[12,"label_color","","Color of the label.",180,N],[12,"label_font_size","","The font size of the EnvelopeEditor's label if one was…",180,N],[12,"value_font_size","","The font size of the value label.",180,N],[12,"point_radius","","The radius of the envelope points.",180,N],[12,"line_thickness","","The thickness of the envelope lines.",180,N],[12,"label_font_id","","The ID of the font used to display the label.",180,N],[3,"State","","Represents the state of the EnvelopeEditor widget.",N,N],[4,"Event","","The kinds of events that may be yielded by the…",N,N],[13,"AddPoint","","Insert a new point.",181,N],[12,"i","conrod_core::widget::envelope_editor::Event","The index at which the point should be inserted.",181,N],[12,"point","","The new point.",181,N],[13,"RemovePoint","conrod_core::widget::envelope_editor","Remove a point.",181,N],[12,"i","conrod_core::widget::envelope_editor::Event","The index of the point that should be removed.",181,N],[13,"MovePoint","conrod_core::widget::envelope_editor","Move a point.",181,N],[12,"i","conrod_core::widget::envelope_editor::Event","The index of the point that should be moved.",181,N],[12,"x","","The point's new x value.",181,N],[12,"y","","The point's new y value.",181,N],[8,"EnvelopePoint","conrod_core::widget::envelope_editor","`EnvPoint` must be implemented for any type that is used…",N,N],[16,"X","","A value on the X-axis of the envelope.",182,N],[16,"Y","","A value on the Y-axis of the envelope.",182,N],[10,"get_x","","Return the X value.",182,N],[10,"get_y","","Return the Y value.",182,N],[10,"set_x","","Set the X value.",182,N],[10,"set_y","","Set the Y value.",182,N],[11,"get_curve","","Return the bezier curve depth (-1. to 1.) for the next…",182,[[["self"]],["f32"]]],[11,"set_curve","","Set the bezier curve depth (-1. to 1.) for the next…",182,[[["self"],["f32"]]]],[10,"new","","Create a new EnvPoint.",182,N],[11,"new","","Construct an EnvelopeEditor widget.",179,N],[11,"label_font_id","","Specify the font used for displaying the label.",179,[[["self"],["id"]],["self"]]],[11,"point_radius","","Build the type's self.$($assignee).+ with the given $Type.",179,[[["self"],["scalar"]],["self"]]],[11,"line_thickness","","Build the type's self.$($assignee).+ with the given $Type.",179,[[["self"],["scalar"]],["self"]]],[11,"value_font_size","","Build the type's self.$($assignee).+ with the given $Type.",179,[[["self"],["fontsize"]],["self"]]],[11,"skew_y","","Build the type's self.$($assignee).+ with the given $Type.",179,[[["self"],["f32"]],["self"]]],[11,"enabled","","Build the type's self.$($assignee).+ with the given $Type.",179,[[["self"],["bool"]],["self"]]],[11,"update","","Update the given `envelope` in accordance with the `Event`.",181,[[["self"],["vec"]]]],[0,"file_navigator","conrod_core::widget","A widget for navigating through through a file system.…",N,N],[3,"FileNavigator","conrod_core::widget::file_navigator","A widget for navigating and interacting with a file system.",N,N],[12,"style","","Unique styling for the widget.",183,N],[12,"starting_directory","","The first directory shown for the `FileNavigator`.",183,N],[12,"types","","Only display files of the given type.",183,N],[3,"State","","Unique state stored within the widget graph for each…",N,N],[3,"Directory","","Represents the state for a single directory.",N,N],[3,"Style","","Unique styling for the widget.",N,N],[12,"color","","Color of the selected entries.",184,N],[12,"unselected_color","","The color of the unselected entries.",184,N],[12,"text_color","","The color of the directory and file names.",184,N],[12,"font_size","","The font size for the directory and file names.",184,N],[12,"column_width","","The default width of a single directory view.",184,N],[12,"resize_handle_width","","The width of the bar that separates each directory in the…",184,N],[4,"Types","","A type for specifying the types of files to be shown by a…",N,N],[13,"All","","Indicates that files of all types should be shown.",185,N],[13,"WithExtension","","A list of types of files that are accepted by the…",185,N],[13,"Directories","","Indicates only directories should be shown",185,N],[4,"Event","","The kinds of events that the `FileNavigator` may produce.",N,N],[13,"ChangeDirectory","","The directory at the top of the stack has changed.",186,N],[13,"ChangeSelection","","The selection of files in the top of the stack has changed.",186,N],[13,"Click","","A `Click` event occurred over a selection of entries.",186,N],[13,"DoubleClick","","A file was double clicked.",186,N],[13,"Press","","A `Press` event occurred over a selection of entries.",186,N],[13,"Release","","A `Release` event occurred over a selection of entries.",186,N],[0,"directory_view","","Lists the contents of a single directory.",N,N],[3,"DirectoryView","conrod_core::widget::file_navigator::directory_view","For viewing, selecting, double-clicking, etc the contents…",N,N],[12,"style","","Unique styling for the widget.",187,N],[12,"directory","","The path of the directory to display.",187,N],[12,"types","","Only display files of the given type.",187,N],[3,"State","","Unique state stored within the widget graph for each…",N,N],[3,"Entry","","Data stored for each `File` in the `State`.",N,N],[3,"Style","","Unique styling for the widget.",N,N],[12,"color","","Color of the selected entries.",188,N],[12,"unselected_color","","The color of the unselected entries.",188,N],[12,"text_color","","The color of the directory and file names.",188,N],[12,"font_size","","The font size for the directory and file names.",188,N],[4,"Event","","The kinds of `Event`s produced by the `DirectoryView`.",N,N],[13,"Selection","","Some change in the `Selection` occurred. This represents…",189,N],[13,"Click","","One or more entries have been double clicked.",189,N],[13,"DoubleClick","","One or more entries have been double clicked.",189,N],[13,"Press","","A `Press` event occurred while the given entries were…",189,N],[13,"Release","","A `Release` event occurred while the given entries were…",189,N],[11,"new","","Begin building a `DirectoryNavigator` widget that displays…",187,[[["path"],["types"]],["self"]]],[11,"unselected_color","","The color of the unselected entries within each…",187,[[["self"],["color"]],["self"]]],[11,"text_color","","The color of the `Text` used to display the file names.",187,[[["self"],["color"]],["self"]]],[11,"show_hidden_files","","Whether to show hidden files and directories",187,[[["self"],["bool"]],["self"]]],[11,"font_size","","Build the type's self.$($assignee).+ with the given $Type.",187,[[["self"],["fontsize"]],["self"]]],[11,"new","conrod_core::widget::file_navigator","Begin building a `FileNavigator` widget that displays only…",183,[[["path"],["types"]],["self"]]],[11,"all","","Begin building a `FileNavigator` that will display all…",183,[[["path"]],["self"]]],[11,"with_extension","","Begin building a `FileNavigator` that will only display…",183,N],[11,"directories","","Begin building a `FileNavigator` that only displays…",183,[[["path"]],["self"]]],[11,"unselected_color","","The color of the unselected entries within each…",183,[[["self"],["color"]],["self"]]],[11,"text_color","","The color of the `Text` used to display the file names.",183,[[["self"],["color"]],["self"]]],[11,"show_hidden_files","","Whether to show hidden files and directories.",183,[[["self"],["bool"]],["self"]]],[11,"font_size","","Build the type's self.$($assignee).+ with the given $Type.",183,[[["self"],["fontsize"]],["self"]]],[0,"grid","conrod_core::widget","A widget for displaying a grid of lines across two axes.",N,N],[3,"Grid","conrod_core::widget::grid","A widget for displaying a grid of lines across two axes.",N,N],[12,"common","","Builder parameters that are common to all `Widget`s.",190,N],[12,"style","","Unique styling parameters for the `Grid` widget.",190,N],[12,"min_x","","The minimum visible bound along the x axis.",190,N],[12,"max_x","","The maximum visible bound along the x axis.",190,N],[12,"min_y","","The minimum visible bound along the y axis.",190,N],[12,"max_y","","The maximum visible bound along the y axis.",190,N],[12,"x_offset","","An offset for all vertical lines distributed across the x…",190,N],[12,"y_offset","","An offset for all horizontal lines distributed across the…",190,N],[12,"lines","","An iterator yielding each sequence of lines to be…",190,N],[3,"Style","","Unique styling parameters for the `Grid` widget.",N,N],[12,"color","","The color of the grid lines.",191,N],[12,"thickness","","The thickness of the grid lines.",191,N],[3,"Lines","","A series of lines distributed across an axis.",N,N],[12,"step","","The distance that separates each line.",192,N],[12,"offset","","An optional offset for the lines along they're axis.",192,N],[12,"thickness","","The thickness of each of the lines drawn.",192,N],[12,"color","","The color of each of the lines drawn.",192,N],[3,"State","","Unique state for the `Grid` retained between updates.",N,N],[4,"Axis","","A series of lines distributed over an axis.",N,N],[13,"X","","Vertical lines that are spread across the x axis.",193,N],[13,"Y","","Horizontal lines that are spread across the y axis.",193,N],[11,"step","","Begin building a new set of lines for the grid `step`…",192,[[["t"]],["self"]]],[11,"offset","","Specify an offset for the grid.",192,[[["self"],["t"]],["self"]]],[11,"thickness","","Specify a unique thickness for these lines.",192,[[["self"],["scalar"]],["self"]]],[11,"color","","Use the specified color to uniquely color the this set of…",192,[[["self"],["color"]],["self"]]],[11,"x","","Move the lines over the X axis.",192,[[["self"]],["axis"]]],[11,"y","","Move the lines over the Y axis.",192,[[["self"]],["axis"]]],[11,"new","","Begin building a new `PlotPath` widget instance.",190,[[["x"],["x"],["y"],["y"],["i"]],["grid"]]],[11,"x_offset","","Specify an offset for all vertical lines placed along the…",190,[[["self"],["x"]],["self"]]],[11,"y_offset","","Specify an offset for all horizontal lines placed along…",190,[[["self"],["y"]],["self"]]],[0,"list","conrod_core::widget","A helper widget, useful for instantiating a sequence of…",N,N],[3,"List","conrod_core::widget::list","A helper widget, useful for instantiating a sequence of…",N,N],[12,"common","","Common widget building params for the `List`.",194,N],[12,"style","","Unique styling for the `List`.",194,N],[12,"item_instantiation","","Whether all or only visible items should be instantiated.",194,N],[3,"Fixed","","A type that implements `ItemSize` for `List`s whose…",N,N],[12,"length","","The length of each item in the direction that the list…",195,N],[3,"Dynamic","","A type that implements `ItemSize` for `List`s whose…",N,N],[3,"Style","","Unique styling for the `List`.",N,N],[12,"scrollbar_thickness","","The width of the scrollbar if it is visible.",196,N],[12,"scrollbar_color","","The color of the scrollbar if it is visible.",196,N],[12,"scrollbar_position","","The location of the `List`'s scrollbar.",196,N],[3,"State","","Represents the state of the List widget.",N,N],[3,"Item","","The data necessary for instantiating a single item within…",N,N],[12,"i","","The index of the item within the list.",197,N],[12,"widget_id","","The id generated for the widget.",197,N],[12,"last_id","","The id used for the previous item's widget.",197,N],[3,"Scrollbar","","A wrapper around a `List`'s `Scrollbar` and its…",N,N],[3,"Items","","An `Iterator` yielding each `Item` in the list.",N,N],[4,"Up","","Items flow from bottom to top.",N,N],[4,"Down","","Items flow from top to bottom.",N,N],[4,"Left","","Items flow from right to left.",N,N],[4,"Right","","Items flow from left to right.",N,N],[4,"ItemInstantiation","","The way in which a `List` should instantiate its `Item`s.",N,N],[13,"All","","Instantiate an `Item` for every element, regardless of…",198,N],[13,"OnlyVisible","","Only instantiate visible `Item`s.",198,N],[4,"ScrollbarPosition","","If the `List` is scrollable, this describes how th…",N,N],[13,"NextTo","","To the right of the items (reduces the item width to fit).",199,N],[13,"OnTop","","On top of the right edge of the items with auto_hide…",199,N],[8,"Direction","","The direction in which the list is laid out.",N,N],[16,"Axis","","The direction along which the `Scrollbar` is laid out.",200,N],[10,"ranges","","For some given `Rect`, returns the parallel and…",200,N],[10,"scrollbar","","Begin building the scrollbar for the `List`.",200,[[["id"]],["scrollbar"]]],[10,"common_scroll","","Borrow the scroll state associated with this `Direction`'s…",200,[[["commonbuilder"]],["option",["scroll"]]]],[10,"position_item","","Positions the given widget.",200,[[["w"],["option",["id"]],["id"],["scalar"]],["w"]]],[10,"position_scroll_trigger","","Position the `Rectangle` used for scrolling `List`s with…",200,[[["w"],["id"]],["w"]]],[10,"scroll_list_kids","","Calls the suitable `scroll_kids_<axis>` method on the…",200,[[["list"]],["list"]]],[10,"size_breadth","","Size the widget given its breadth.",200,[[["w"],["scalar"]],["w"]]],[10,"size_length","","Size the widget given its length.",200,[[["w"],["scalar"]],["w"]]],[8,"ItemSize","","The way in which the `List`'s items are sized. E.g.…",N,N],[10,"update_list","","Update the `List` widget.",201,N],[10,"size_item","","Set the size for the given item `widget` and return it.",201,[[["self"],["w"],["scalar"]],["w"]]],[11,"new","","Begin building a new `List`.",194,[[["usize"]],["self"]]],[11,"flow_left","","Begin building a new `List` flowing from right to left.",194,[[["usize"]],["self"]]],[11,"flow_right","","Begin building a new `List` flowing from left to right.",194,[[["usize"]],["self"]]],[11,"flow_up","","Begin building a new `List` flowing from bottom to top.",194,[[["usize"]],["self"]]],[11,"flow_down","","Begin building a new `List` flowing from top to bottom.",194,[[["usize"]],["self"]]],[11,"from_item_size","","Begin building a new `List` given some direction and item…",194,[[["usize"],["s"]],["self"]]],[11,"item_size","","Specify a fixed item size, where size is a `Scalar` in the…",194,[[["self"],["scalar"]],["list",["fixed"]]]],[11,"instantiate_all_items","","Indicates that an `Item` should be instantiated for every…",194,[[["self"]],["self"]]],[11,"instantiate_only_visible_items","","Indicates that only `Item`s that are visible should be…",194,[[["self"]],["self"]]],[11,"scrollbar_next_to","","Specifies that the `List` should be scrollable and should…",194,[[["self"]],["self"]]],[11,"scrollbar_on_top","","Specifies that the `List` should be scrollable and should…",194,[[["self"]],["self"]]],[11,"scrollbar_thickness","","The width of the `Scrollbar`.",194,[[["self"],["scalar"]],["self"]]],[11,"scrollbar_color","","The color of the `Scrollbar`.",194,[[["self"],["color"]],["self"]]],[11,"next","","Yield the next `Item` in the list.",202,[[["self"],["ui"]],["option",["item"]]]],[11,"set","","Sets the given widget as the widget to use for the item.",197,N],[11,"width","","The width of the `Item`.",197,[[["self"]],["scalar"]]],[11,"height","","The height of the `Item`.",197,[[["self"]],["scalar"]]],[11,"width","","The width of the `Item`.",197,[[["self"]],["scalar"]]],[11,"height","","The height of the `Item`.",197,[[["self"]],["scalar"]]],[11,"height","","The height of the `Item`.",197,[[["self"]],["scalar"]]],[11,"width","","The width of the `Item`.",197,[[["self"]],["scalar"]]],[11,"height","","The height of the `Item`.",197,[[["self"]],["scalar"]]],[11,"width","","The width of the `Item`.",197,[[["self"]],["scalar"]]],[11,"set","","Set the `Scrollbar` within the given `Ui`.",203,[[["self"],["uicell"]]]],[0,"list_select","conrod_core::widget","A wrapper around the `List` widget providing the ability…",N,N],[3,"ListSelect","conrod_core::widget::list_select","A wrapper around the `List` widget that handles single and…",N,N],[3,"State","","Represents the state of the ListSelect.",N,N],[3,"Events","","An iterator-like type for yielding `ListSelect` `Event`s.",N,N],[3,"Single","","A single item selection `Mode` for the `ListSelect`.",N,N],[3,"Multiple","","A selection `Mode` for the `ListSelect` that allows…",N,N],[4,"ListDirection","","The direction in which the list flows.",N,N],[13,"Forward","","The direction flowing from the start of the list to the…",204,N],[13,"Backward","","The direction flowing from the end of the list to the…",204,N],[4,"Event","","The kind of events that the `ListSelect` may `react` to.…",N,N],[13,"Item","","The next `Item` is ready for instantiation.",205,N],[13,"Selection","","A change in selection has occurred.",205,N],[13,"Press","","A button press occurred while the widget was capturing the…",205,N],[13,"Release","","A button release occurred while the widget was capturing…",205,N],[13,"Click","","A click occurred while the widget was capturing the mouse.",205,N],[13,"DoubleClick","","A double click occurred while the widget was capturing the…",205,N],[4,"Selection","","Represents some change in item selection for a…",N,N],[13,"Add","","Items which have been added to the selection.",206,N],[13,"Remove","","Items which have been removed from the selection.",206,N],[6,"PendingEvents","","Buffer used for storing events that have been produced but…",N,N],[8,"Direction","","A trait that extends the `List` `Direction` trait with…",N,N],[10,"key_direction","","Maps a given `key` to a direction along the list.",207,[[["key"]],["option",["listdirection"]]]],[8,"Mode","","Allows the `ListSelect` to be generic over `Single` and…",N,N],[16,"Selection","","The data associated with the `Mode`s `Event::Selection`.",208,N],[10,"click_selection","","Update the `PendingEvents` in accordance with the given…",208,[[["self"],["click"],["usize"],["usize"],["state"],["f"],["pendingevents"]]]],[10,"key_selection","","Update the `PendingEvents` in accordance with the given…",208,[[["self"],["keypress"],["usize"],["usize"],["state"],["f"],["pendingevents"]]]],[11,"update_bool_slice","","Update the given slice of `bool`s with this `Selection`.",206,N],[11,"update_index_set","","Update the given set of selected indices with this…",206,[[["self"],["hashset"]]]],[11,"single","","Construct a new ListSelect, allowing one selected item at…",209,[[["usize"]],["self"]]],[11,"multiple","","Construct a new ListSelect, allowing multiple selected…",209,[[["usize"]],["self"]]],[11,"flow_down","","Flows items from top to bottom.",209,[[["self"]],["listselect",["down"]]]],[11,"flow_right","","Flows items from left to right.",209,[[["self"]],["listselect",["right"]]]],[11,"flow_left","","Flows items from right to left.",209,[[["self"]],["listselect",["left"]]]],[11,"flow_up","","Flows items from bottom to top.",209,[[["self"]],["listselect",["up"]]]],[11,"item_size","","Specify a fixed item size, where size is a `Scalar` in the…",209,[[["self"],["scalar"]],["listselect",["fixed"]]]],[11,"new","","Begin building a new `ListSelect` with the given mode.",209,[[["usize"],["m"]],["self"]]],[11,"scrollbar_next_to","","Specifies that the `List` should be scrollable and should…",209,[[["self"]],["self"]]],[11,"scrollbar_on_top","","Specifies that the `List` should be scrollable and should…",209,[[["self"]],["self"]]],[11,"scrollbar_thickness","","The width of the `Scrollbar`.",209,[[["self"],["scalar"]],["self"]]],[11,"scrollbar_color","","The color of the `Scrollbar`.",209,[[["self"],["color"]],["self"]]],[11,"instantiate_all_items","","Indicates that an `Item` should be instatiated for every…",209,[[["self"]],["self"]]],[11,"instantiate_only_visible_items","","Indicates that only `Item`s that are visible should be…",209,[[["self"]],["self"]]],[11,"next","","Yield the next `Event`.",210,[[["self"],["ui"],["f"]],["option",["event"]]]],[0,"matrix","conrod_core::widget","A helper widget for laying out child widgets in the form…",N,N],[3,"Matrix","conrod_core::widget::matrix","Draw a matrix of any rectangular widget type, where the…",N,N],[3,"State","","The state of the Matrix, to be cached within the `Ui`'s…",N,N],[3,"Style","","Unique styling for the `Matrix`.",N,N],[12,"cell_pad_w","","The width of the padding for each matrix element's \"cell\".",211,N],[12,"cell_pad_h","","The height of the padding for each matrix element's \"cell\".",211,N],[3,"Elements","","The event type yielded by the `Matrix`.",N,N],[3,"Element","","Data necessary for instantiating a widget for a single…",N,N],[12,"widget_id","","The id generated for the widget.",212,N],[12,"row","","The row number for the `Element`.",212,N],[12,"col","","The column number for the `Element`.",212,N],[12,"w","","The width of the element.",212,N],[12,"h","","The height of the element.",212,N],[12,"rel_x","","The x position of the element relative to the centre of…",212,N],[12,"rel_y","","The y position of the element relative to the centre of…",212,N],[6,"WidgetNum","","The number of the widget.",N,N],[6,"ColNum","","A column index.",N,N],[6,"RowNum","","A row index.",N,N],[6,"Width","","The width of an element.",N,N],[6,"Height","","The height of an element.",N,N],[6,"PosX","","The position of an element along the x axis.",N,N],[6,"PosY","","The position of an element along the y axis.",N,N],[11,"new","","Create a widget matrix context.",213,[[["usize"],["usize"]],["self"]]],[11,"cell_padding","","A builder method for adding padding to the cell.",213,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"next","","Yield the next `Element`.",214,[[["self"],["ui"]],["option",["element"]]]],[11,"set","","Sets the given widget as the widget to use for the item.",212,N],[0,"graph","conrod_core::widget","A widget for viewing and controlling graph structures.",N,N],[3,"Layout","conrod_core::widget::graph","Stores the layout of all nodes within the graph.",N,N],[3,"Graph","","A widget used for visualising and manipulating Graph types.",N,N],[12,"common","","Data necessary and common for all widget builder types.",215,N],[12,"style","","Unique styling for the Graph.",215,N],[12,"nodes","","All nodes within the graph that the widget is to represent.",215,N],[12,"edges","","All edges within the graph.",215,N],[12,"layout","","The position of each node within the graph.",215,N],[3,"Style","","Unique styling for the BorderedRectangle widget.",N,N],[12,"background_color","","Shape styling for the inner rectangle.",216,N],[3,"State","","Unique state for the `Graph`.",N,N],[3,"NodeSocket","","Represents a socket connection on a node.",N,N],[12,"id","","The unique identifier for the node.",217,N],[12,"socket_index","","The index of the socket on one side of the node.",217,N],[3,"Camera","","The camera used to view the graph.",N,N],[3,"Session","","A context for moving through the modes of graph widget…",N,N],[3,"SessionEvents","","The first stage of the graph's Session event.",N,N],[3,"SessionNodes","","The second stage of the graph's Session event.",N,N],[3,"SessionEdges","","The third stage of the graph's Session event.",N,N],[3,"Events","","An iterator yielding all pending events.",N,N],[3,"Nodes","","An iterator-like type yielding a `NodeContext` for every…",N,N],[3,"NodeContext","","A context for a node yielded during the node instantiation…",N,N],[3,"NodeWidget","","Returned when a `NodeContext` is assigned a widget.",N,N],[3,"Edges","","An iterator-like type yielding a `NodeContext` for every…",N,N],[3,"Edge","","A context for an edge yielded during the edge…",N,N],[3,"EdgeWidget","","Returned when an `Edge` is assigned a widget.",N,N],[4,"Event","","An interaction has caused some event to occur.",N,N],[13,"Node","","Events associated with nodes.",218,N],[13,"Edge","","Events associated with edges.",218,N],[4,"NodeEvent","","Events related to adding and removing nodes.",N,N],[13,"Remove","","The user attempted to remove the node with the given…",219,N],[13,"Dragged","","The widget used to represent this `Node` has been dragged.",219,N],[12,"node_id","conrod_core::widget::graph::NodeEvent","Unique identifier of the node being dragged.",219,N],[12,"from","","The origin of the drag relative to the `Graph` widget…",219,N],[12,"to","","The end of the drag relative to the `Graph` widget position.",219,N],[4,"EdgeEvent","conrod_core::widget::graph","Events related to adding and removing edges.",N,N],[13,"AddStart","","The user has pressed the given node socket with the left…",220,N],[13,"Add","","The user has attempted to create an edge between the two…",220,N],[12,"start","conrod_core::widget::graph::EdgeEvent","",220,N],[12,"end","","",220,N],[13,"Cancelled","conrod_core::widget::graph","The user has cancelled creating an edge from the given…",220,N],[13,"Remove","","The user has attempted to remove the edge connecting the…",220,N],[12,"start","conrod_core::widget::graph::EdgeEvent","",220,N],[12,"end","","",220,N],[5,"node_widget_id","conrod_core::widget::graph","Returns the `widget::Id` for a node if one exists.",N,[[["ni"],["id"],["ui"]],["option",["id"]]]],[5,"edge_node_widget_ids","","Returns the `widget::Id`s for the start and end nodes.",N,N],[0,"node","","A default container widget to use for nodes that exist…",N,N],[3,"Node","conrod_core::widget::graph::node","A widget that acts as a convenience container for some…",N,N],[12,"common","","Data necessary and common for all widget builder types.",221,N],[12,"style","","Unique styling for the Node.",221,N],[12,"widget","","The widget wrapped by this node container.",221,N],[12,"inputs","","The number of input sockets on the node.",221,N],[12,"outputs","","The number of output sockets on the node.",221,N],[3,"Style","","Unique styling for the BorderedRectangle widget.",N,N],[12,"color","","Shape color for the inner rectangle.",222,N],[12,"socket_length","","The length of each rectangle along its `SocketSide`.",222,N],[12,"border","","The widget of the border around the widget.",222,N],[12,"border_radius","","The radius of the rounded corners of the border.",222,N],[12,"border_color","","Color of the border.",222,N],[12,"socket_color","","Color of the sockets.",222,N],[12,"input_socket_layout","","Default layout for input sockets.",222,N],[12,"output_socket_layout","","Default layout for node output sockets.",222,N],[3,"SocketLayout","","Describes the layout of either input or output sockets.",N,N],[12,"side","","Represents the side of a node widget's bounding rectangle.",223,N],[12,"direction","","The direction in which sockets will be laid out over the…",223,N],[3,"State","","Unique state for the `Node`.",N,N],[3,"Event","","The event produced by the `Node` widget.",N,N],[12,"widget_event","","The event produced by the inner widget `W`.",224,N],[3,"SocketRects","","The rectangle for each socket (either inputs or outputs…",N,N],[4,"SocketSide","","Represents the side of a node widget's bounding rectangle.",N,N],[13,"Left","","",225,N],[13,"Right","","",225,N],[13,"Top","","",225,N],[13,"Bottom","","",225,N],[4,"SocketType","","Describes whether a socket is associated with a node's…",N,N],[13,"Input","","",226,N],[13,"Output","","",226,N],[5,"socket_rect","","Retrieve the `Rect` for the given socket on the given node.",N,[[["id"],["sockettype"],["usize"],["ui"]],["option",["rect"]]]],[5,"edge_socket_rects","","Returns a `Rect` for an edge's start and end nodes.",N,N],[5,"socket_rects","","Produces an iterator yielding a `Rect` for each socket for…",N,[[["id"],["ui"]],["option"]]],[17,"DEFAULT_BORDER_THICKNESS","","",N,N],[17,"DEFAULT_SOCKET_LENGTH","","",N,N],[11,"new","","Begin building a new `Node` widget.",221,[[["w"]],["self"]]],[11,"inputs","","Specify the number of input sockets for the node.",221,[[["self"],["usize"]],["self"]]],[11,"outputs","","Specify the number of output sockets for the node.",221,[[["self"],["usize"]],["self"]]],[11,"color","","Specify the color for the node's inner rectangle.",221,[[["self"],["color"]],["self"]]],[11,"border_thickness","","The thickness of the border around the inner widget.",221,[[["self"],["scalar"]],["self"]]],[11,"border_color","","Specify the color for the node's border.",221,[[["self"],["color"]],["self"]]],[11,"border_radius","","Specify the radius for the node's border.",221,[[["self"],["scalar"]],["self"]]],[11,"socket_color","","Specify the color for the node's sockets.",221,[[["self"],["color"]],["self"]]],[11,"input_socket_layout","","Specify the layout of the input sockets.",221,[[["self"],["socketlayout"]],["self"]]],[11,"output_socket_layout","","Specify the layout of the input sockets.",221,[[["self"],["socketlayout"]],["self"]]],[8,"NodeId","conrod_core::widget::graph","Traits required by types that may be used as a graph node…",N,N],[11,"events","","All events that have occurred since the last ",227,[[["self"]],["events"]]],[11,"next","","Transition from the SessionEvents into SessionNodes for…",227,[[["self"]],["sessionnodes"]]],[11,"nodes","","Produce an iterator yielding a `NodeContext` for each node…",228,[[["self"]],["nodes"]]],[11,"next","","Transition from the SessionNodes into SessionEdges for…",228,[[["self"]],["sessionedges"]]],[11,"edges","","Produce an iterator yielding an `Edge` for each node…",229,[[["self"]],["edges"]]],[11,"node_id","","The unique identifier associated with this node.",230,[[["self"]],["ni"]]],[11,"point","","The location of the node.",230,[[["self"]],["point"]]],[11,"widget","","Specify the widget to use ",230,[[["self"],["w"]],["nodewidget"]]],[11,"widget_id","","Retrieve the `widget::Id` that will be used to instantiate…",231,[[["self"],["uicell"]],["id"]]],[11,"map","","Map over the inner widget.",231,[[["self"],["m"]],["self"]]],[11,"set","","Set the given widget for the node at `node_id()`.",231,N],[11,"start","","The start (or \"input\") for the edge.",232,[[["self"]],["nodesocket"]]],[11,"end","","The end (or \"output\") for the edge.",232,[[["self"]],["nodesocket"]]],[11,"sockets","","The start and end sockets.",232,N],[11,"widget","","Specify the widget to use ",232,[[["self"],["w"]],["edgewidget"]]],[11,"widget_id","","Retrieve the `widget::Id` that will be used to instantiate…",233,[[["self"],["uicell"]],["id"]]],[11,"map","","Apply the given function to the inner widget.",233,[[["self"],["m"]],["self"]]],[11,"set","","Set the given widget for the edge.",233,N],[11,"new","","Begin building a new Graph widget.",215,[[["ni"],["ei"],["layout"]],["self"]]],[11,"background_color","","Color the Graph's rectangular area with the given color.",215,[[["self"],["color"]],["self"]]],[0,"number_dialer","conrod_core::widget","A widget for precision control over any base-10 digit…",N,N],[3,"NumberDialer","conrod_core::widget::number_dialer","A widget for precision control over any digit within a…",N,N],[3,"Style","","Unique graphical styling for the NumberDialer.",N,N],[12,"color","","Color of the NumberDialer's rectangle.",234,N],[12,"border","","The color of the rectangle border.",234,N],[12,"border_color","","The color of the rectangle border.",234,N],[12,"label_color","","The color of the NumberDialer's label.",234,N],[12,"label_font_size","","The font size for the NumberDialer's label.",234,N],[12,"font_id","","The `Id` associated with the font to use for the…",234,N],[3,"State","","The state of the NumberDialer.",N,N],[3,"GlyphSlot","","Each digit in the adjustable value has its own Rectangle…",N,N],[11,"new","","Construct a new NumberDialer widget.",235,[[["t"],["t"],["t"],["u8"]],["self"]]],[11,"font_id","","Specify the font used for displaying the label.",235,[[["self"],["id"]],["self"]]],[11,"enabled","","Build the type's self.$($assignee).+ with the given $Type.",235,[[["self"],["bool"]],["self"]]],[0,"plot_path","conrod_core::widget","A widget for plotting a series of lines using the given…",N,N],[3,"PlotPath","conrod_core::widget::plot_path","A widget that plots a series of lines using the given…",N,N],[3,"Style","","Unique styling parameters for the `PlotPath` widget.",N,N],[12,"thickness","","The thickness of the plotted line.",236,N],[12,"color","","The color of the line.",236,N],[3,"State","","Unique state stored between updates for the `PlotPath`…",N,N],[11,"new","","Begin building a new `PlotPath` widget instance.",237,[[["x"],["x"],["y"],["y"],["f"]],["self"]]],[11,"thickness","","The thickness of the point path used to draw the plot.",237,[[["self"],["scalar"]],["self"]]],[0,"range_slider","conrod_core::widget","A widget for specifying start and end values for some…",N,N],[3,"RangeSlider","conrod_core::widget::range_slider","Linear range selection.",N,N],[12,"skew","","The amount in which the slider's display should be skewed.",238,N],[3,"Style","","Graphical styling unique to the RangeSlider widget.",N,N],[12,"color","","The color of the slidable rectangle.",239,N],[12,"border","","The length of the border around the edges of the slidable…",239,N],[12,"border_color","","The color of the Slider's border.",239,N],[12,"label_color","","The color of the Slider's label.",239,N],[12,"label_font_size","","The font-size for the Slider's label.",239,N],[12,"label_font_id","","The ID of the font used to display the label.",239,N],[3,"State","","Represents the state of the Slider widget.",N,N],[3,"Event","","The `Event` type produced by the `RangeSlider`.",N,N],[4,"Drag","","The part of the `RangeSlider` that is in the process of…",N,N],[13,"Edge","","One of the edges is being dragged.",240,N],[13,"Handle","","The whole range is being dragged.",240,N],[4,"Edge","","Either the `Start` or `End` `Edge` of the `RangeSlider`'s…",N,N],[13,"Start","","The start edge of the scrollbar handle.",241,N],[13,"End","","The end edge of the scrollbar handle.",241,N],[11,"new","","Construct a new RangeSlider widget.",238,[[["t"],["t"],["t"],["t"]],["self"]]],[11,"label_font_id","","Specify the font used for displaying the label.",238,[[["self"],["id"]],["self"]]],[11,"skew","","The amount in which the slider's display should be skewed.",238,[[["self"],["f32"]],["self"]]],[0,"rounded_rectangle","conrod_core::widget","Similar to the `Rectangle` widget however is drawn with…",N,N],[3,"RoundedRectangle","conrod_core::widget::rounded_rectangle","Draws a rectangle with corners rounded via the given radius.",N,N],[12,"common","","Data necessary and common for all widget builder types.",242,N],[12,"style","","Unique styling for the RoundedRectangle.",242,N],[12,"radius","","The radius of the circle used to round each corner of the…",242,N],[12,"corner_resolution","","The number of points in each corner of the circle used to…",242,N],[3,"State","","Unique state for the `RoundedRectangle`.",N,N],[3,"Points","","An iterator yielding the outer points of a…",N,N],[5,"points","","Produce an iterator yielding the outer points of a rounded…",N,[[["rect"],["scalar"],["usize"]],["points"]]],[5,"is_over_widget","","The function to use for picking whether a given point is…",N,[[["container"],["point"],["theme"]],["isover"]]],[6,"Triangles","","An iterator yielding triangles for a `RoundedRectangle`.",N,N],[17,"DEFAULT_CORNER_RESOLUTION","","The default resolution of the circle used to draw the…",N,N],[11,"styled","","Build a rounded rectangle with the given dimensions and…",242,[[["dimensions"],["scalar"],["style"]],["self"]]],[11,"fill","","Build a new filled rounded rectangle.",242,[[["dimensions"],["scalar"]],["self"]]],[11,"fill_with","","Build a new filled rounded rectangle widget filled with…",242,[[["dimensions"],["scalar"],["color"]],["self"]]],[11,"outline","","Build a new outlined rounded rectangle widget.",242,[[["dimensions"],["scalar"]],["self"]]],[11,"outline_styled","","Build an outlined rounded rectangle rather than a filled…",242,[[["dimensions"],["scalar"],["style"]],["self"]]],[11,"corner_resolution","","The number of points in each corner of the circle used to…",242,[[["self"],["usize"]],["self"]]],[0,"scrollbar","conrod_core::widget","A widget that allows for manually scrolling via dragging…",N,N],[3,"Scrollbar","conrod_core::widget::scrollbar","A widget that allows for scrolling via dragging the mouse.",N,N],[3,"Style","","Styling for the DropDownList, necessary for constructing…",N,N],[12,"color","","Color of the widget.",243,N],[12,"thickness","","The \"thickness\" of the scrollbar's track and handle `Rect`s.",243,N],[12,"auto_hide","","When true, the `Scrollbar` will only be visible when:",243,N],[3,"State","","The state of the `Scrollbar`.",N,N],[8,"Axis","","The axis that is scrolled by the `Scrollbar`.",N,N],[10,"track_rect","","The `Rect` for a scroll \"track\" with the given `thickness`…",244,[[["rect"],["scalar"]],["rect"]]],[10,"handle_rect","","The `Rect` for a scroll handle given both `Range`s.",244,[[["range"],["range"]],["rect"]]],[10,"scroll_state","","Retrieve the related `scroll::State` for the axis from a…",244,[[["container"]],["option",["state"]]]],[10,"default_x_dimension","","Determine a default x dimension for the scrollbar in the…",244,[[["scrollbar"],["ui"]],["dimension"]]],[10,"default_y_dimension","","Determine a default y dimension for the scrollbar in the…",244,[[["scrollbar"],["ui"]],["dimension"]]],[10,"to_2d","","Convert a given `Scalar` along the axis into two dimensions.",244,N],[11,"auto_hide","","By default, this is set to `false`.",245,[[["self"],["bool"]],["self"]]],[11,"thickness","","Build the widget with the given `thickness`.",245,[[["self"],["scalar"]],["self"]]],[11,"x_axis","","Begin building a new scrollbar widget that scrolls along…",245,[[["id"]],["self"]]],[11,"y_axis","","Begin building a new scrollbar widget that scrolls along…",245,[[["id"]],["self"]]],[0,"slider","conrod_core::widget","A widget for selecting a single value along some linear…",N,N],[3,"Slider","conrod_core::widget::slider","Linear value selection.",N,N],[12,"skew","","The amount in which the slider's display should be skewed.",246,N],[12,"enabled","","Whether or not user input is enabled for the Slider.",246,N],[3,"Style","","Graphical styling unique to the Slider widget.",N,N],[12,"color","","The color of the slidable rectangle.",247,N],[12,"border","","The length of the border around the edges of the slidable…",247,N],[12,"border_color","","The color of the Slider's border.",247,N],[12,"label_color","","The color of the Slider's label.",247,N],[12,"label_font_size","","The font-size for the Slider's label.",247,N],[12,"label_font_id","","The ID of the font used to display the label.",247,N],[3,"State","","Represents the state of the Slider widget.",N,N],[11,"new","","Construct a new Slider widget.",246,[[["t"],["t"],["t"]],["self"]]],[11,"label_font_id","","Specify the font used for displaying the label.",246,[[["self"],["id"]],["self"]]],[11,"skew","","Build the type's self.$($assignee).+ with the given $Type.",246,[[["self"],["f32"]],["self"]]],[11,"enabled","","Build the type's self.$($assignee).+ with the given $Type.",246,[[["self"],["bool"]],["self"]]],[0,"tabs","conrod_core::widget","A wrapper around a list of `Canvas`ses that displays them…",N,N],[3,"Tabs","conrod_core::widget::tabs","A wrapper around a list of `Canvas`ses that displays them…",N,N],[3,"State","","The state to be cached within the Canvas.",N,N],[3,"Tab","","A single Tab in the list owned by the Tabs State.",N,N],[3,"Style","","Unique styling for the `Tabs` widget.",N,N],[12,"layout","","Layout for the tab selection bar.",248,N],[12,"bar_thickness","","The thickness of the tab selection bar (width for…",248,N],[12,"label_color","","Color of the number dialer's label.",248,N],[12,"label_font_size","","Font size of the number dialer's label.",248,N],[12,"font_id","","The `font::Id` of the number dialer's font.",248,N],[12,"canvas","","The styling for each `Canvas`.",248,N],[3,"TabRects","","An iterator yielding the Rect for each Tab in the given…",N,N],[4,"Layout","","The direction in which the tabs will be laid out.",N,N],[13,"Horizontal","","Tabs will be laid out horizontally (left to right).",249,N],[13,"Vertical","","Tabs will be laid out vertically (top to bottom).",249,N],[11,"new","","Construct some new Canvas Tabs.",250,N],[11,"starting_canvas","","Set the initially selected tab with a Canvas via its…",250,[[["self"],["id"]],["self"]]],[11,"pad","","Set the padding for all edges.",250,[[["self"],["scalar"]],["tabs"]]],[11,"layout_horizontally","","Layout the tabs horizontally.",250,[[["self"]],["self"]]],[11,"layout_vertically","","Layout the tabs vertically.",250,[[["self"]],["self"]]],[11,"canvas_style","","Build the `Tabs` widget with the given styling for its…",250,[[["self"],["style"]],["self"]]],[11,"pad_left","","If the `Tabs` has some `widget::canvas::Style`, assign the…",250,[[["self"],["scalar"]],["self"]]],[11,"pad_right","","If the `Tabs` has some `widget::canvas::Style`, assign the…",250,[[["self"],["scalar"]],["self"]]],[11,"pad_bottom","","If the `Tabs` has some `widget::canvas::Style`, assign the…",250,[[["self"],["scalar"]],["self"]]],[11,"pad_top","","If the `Tabs` has some `widget::canvas::Style`, assign the…",250,[[["self"],["scalar"]],["self"]]],[11,"bar_thickness","","The width of a vertical `Tabs` selection bar, or the…",250,[[["self"],["scalar"]],["self"]]],[11,"starting_tab_idx","","Build the type's self.$($assignee).+ with the given $Type.",250,[[["self"],["usize"]],["self"]]],[11,"label_color","","Build the type's self.$($assignee).+ with the given $Type.",250,[[["self"],["color"]],["self"]]],[11,"label_font_size","","Build the type's self.$($assignee).+ with the given $Type.",250,[[["self"],["fontsize"]],["self"]]],[11,"new","","Construct a new TabRects iterator.",251,N],[11,"next_with_id_and_label","","Yield the next Tab Rect, along with the associated ID and…",251,[[["self"]],["option"]]],[0,"text_box","conrod_core::widget","A widget for displaying and mutating a one-line field of…",N,N],[3,"TextBox","conrod_core::widget::text_box","A widget for displaying and mutating a small, one-line…",N,N],[3,"Style","","Unique graphical styling for the TextBox.",N,N],[12,"text_padding","","The length of the gap between the bounding rectangle's…",252,N],[12,"color","","Color of the rectangle behind the text.",252,N],[12,"border","","The width of the bounding `BorderedRectangle` border.",252,N],[12,"border_color","","The color of the `BorderedRecangle`'s border.",252,N],[12,"text_color","","The color of the `TextEdit` widget.",252,N],[12,"font_size","","The font size for the text.",252,N],[12,"justify","","The typographic alignment of the text.",252,N],[12,"font_id","","The font used for the `Text`.",252,N],[3,"State","","The `State` of the `TextBox` widget that will be cached…",N,N],[4,"Event","","Events produced by the `TextBox`.",N,N],[13,"Update","","The `String` was updated.",253,N],[13,"Enter","","The `Return` or `Enter` key was pressed.",253,N],[11,"new","","Construct a TextBox widget.",254,[[["str"]],["self"]]],[11,"left_justify","","Align the text to the left of its bounding Rect's x axis…",254,[[["self"]],["self"]]],[11,"center_justify","","Align the text to the middle of its bounding Rect's x axis…",254,[[["self"]],["self"]]],[11,"right_justify","","Align the text to the right of its bounding Rect's x axis…",254,[[["self"]],["self"]]],[11,"font_id","","Specify the font used for displaying the text.",254,[[["self"],["id"]],["self"]]],[11,"text_color","","Build the type's self.$($assignee).+ with the given $Type.",254,[[["self"],["color"]],["self"]]],[11,"font_size","","Build the type's self.$($assignee).+ with the given $Type.",254,[[["self"],["fontsize"]],["self"]]],[11,"justify","","Build the type's self.$($assignee).+ with the given $Type.",254,[[["self"],["justify"]],["self"]]],[11,"pad_text","","Build the type's self.$($assignee).+ with the given $Type.",254,[[["self"],["scalar"]],["self"]]],[0,"text_edit","conrod_core::widget","A widget for displaying and mutating multi-line text,…",N,N],[3,"TextEdit","conrod_core::widget::text_edit","A widget for displaying and mutating multi-line text,…",N,N],[3,"Style","","Unique graphical styling for the TextEdit.",N,N],[12,"color","","The color of the text (this includes cursor and selection…",255,N],[12,"font_size","","The font size for the text.",255,N],[12,"justify","","The horizontal alignment of the text.",255,N],[12,"y_align","","The vertical alignment of the text.",255,N],[12,"line_spacing","","The vertical space between each line of text.",255,N],[12,"line_wrap","","The way in which text is wrapped at the end of a line.",255,N],[12,"restrict_to_height","","Do not allow to enter text that would exceed the bounds of…",255,N],[12,"font_id","","The font used for the `Text`.",255,N],[3,"State","","The State of the TextEdit widget that will be cached…",N,N],[4,"Drag","","Track whether some sort of dragging is currently occurring.",N,N],[13,"Selecting","","The drag is currently selecting a range of text.",256,N],[13,"MoveSelection","","The drag is moving a selection of text.",256,N],[4,"Cursor","","The position of the `Cursor` over the text.",N,N],[13,"Idx","","The cursor is at the given character index.",257,N],[13,"Selection","","The cursor is a selection between these two indices.",257,N],[12,"start","conrod_core::widget::text_edit::Cursor","The `start` is always the \"anchor\" point.",257,N],[12,"end","","The `end` may be either greater or less than the `start`.",257,N],[11,"new","conrod_core::widget::text_edit","Construct a TextEdit widget.",258,[[["str"]],["self"]]],[11,"wrap_by_whitespace","","The `TextEdit` will wrap text via the whitespace that…",258,[[["self"]],["self"]]],[11,"wrap_by_character","","By default, the `TextEdit` will wrap text via the…",258,[[["self"]],["self"]]],[11,"left_justify","","Align the text to the left of its bounding Rect's x axis…",258,[[["self"]],["self"]]],[11,"center_justify","","Align the text to the middle of its bounding Rect's x axis…",258,[[["self"]],["self"]]],[11,"right_justify","","Align the text to the right of its bounding Rect's x axis…",258,[[["self"]],["self"]]],[11,"align_text_bottom","","Align the text to the left of its bounding Rect's y axis…",258,[[["self"]],["self"]]],[11,"align_text_y_middle","","Align the text to the middle of its bounding Rect's y axis…",258,[[["self"]],["self"]]],[11,"align_text_top","","Align the text to the right of its bounding Rect's y axis…",258,[[["self"]],["self"]]],[11,"align_text_middle","","Align the text to the middle of its bounding Rect.",258,[[["self"]],["self"]]],[11,"font_id","","Specify the font used for displaying the text.",258,[[["self"],["id"]],["self"]]],[11,"font_size","","Build the type's self.$($assignee).+ with the given $Type.",258,[[["self"],["fontsize"]],["self"]]],[11,"justify","","Build the type's self.$($assignee).+ with the given $Type.",258,[[["self"],["justify"]],["self"]]],[11,"y_align_text","","Build the type's self.$($assignee).+ with the given $Type.",258,[[["self"],["align"]],["self"]]],[11,"line_wrap","","Build the type's self.$($assignee).+ with the given $Type.",258,[[["self"],["wrap"]],["self"]]],[11,"line_spacing","","Build the type's self.$($assignee).+ with the given $Type.",258,[[["self"],["scalar"]],["self"]]],[11,"restrict_to_height","","Build the type's self.$($assignee).+ with the given $Type.",258,[[["self"],["bool"]],["self"]]],[0,"title_bar","conrod_core::widget","A simple title bar widget that automatically sizes itself…",N,N],[3,"TitleBar","conrod_core::widget::title_bar","A simple title bar widget that automatically sizes itself…",N,N],[12,"common","","Data necessary and common for all widget builder types.",259,N],[12,"style","","Unique styling for the BorderedRectangle.",259,N],[12,"label","","A label displayed in the middle of the TitleBar.",259,N],[3,"State","","Unique state for the TitleBar widget.",N,N],[3,"Style","","Unique styling for the TitleBar widget.",N,N],[12,"color","","The color of the TitleBar's rectangle surface.",260,N],[12,"border","","The width of the border surrounding the TitleBar's…",260,N],[12,"border_color","","The color of the TitleBar's border.",260,N],[12,"text_color","","The color of the title bar's text.",260,N],[12,"font_size","","The font size for the title bar's text.",260,N],[12,"maybe_wrap","","The way in which the title bar's text should wrap.",260,N],[12,"line_spacing","","The distance between lines for multi-line title bar text.",260,N],[12,"justify","","The horizontal alignment of the title bar text.",260,N],[12,"label_x","","The position of the title bar's `Label` widget over the x…",260,N],[12,"label_y","","The position of the title bar's `Label` widget over the y…",260,N],[12,"font_id","","The font used for the `Text`.",260,N],[5,"calc_height","","Calculate the default height for the TitleBar's rect.",N,[[["fontsize"]],["scalar"]]],[11,"new","","Construct a new TitleBar widget and attach it to the…",259,[[["str"],["id"]],["self"]]],[11,"left_justify_label","","Align the text to the left of its bounding Rect's x axis…",259,[[["self"]],["self"]]],[11,"center_justify_label","","Align the text to the middle of its bounding Rect's x axis…",259,[[["self"]],["self"]]],[11,"right_justify_label","","Align the text to the right of its bounding Rect's x axis…",259,[[["self"]],["self"]]],[11,"label_x","","Specify the label's position relatively to `Button` along…",259,[[["self"],["relative"]],["self"]]],[11,"label_y","","Specify the label's position relatively to `Button` along…",259,[[["self"],["relative"]],["self"]]],[11,"font_id","","Specify the font used for displaying the text.",259,[[["self"],["id"]],["self"]]],[11,"line_spacing","","Build the type's self.$($assignee).+ with the given $Type.",259,[[["self"],["scalar"]],["self"]]],[0,"toggle","conrod_core::widget","A button that allows for toggling boolean state.",N,N],[3,"Toggle","conrod_core::widget::toggle","A pressable widget for toggling the state of a bool.",N,N],[12,"enabled","","If true, will allow user inputs. If false, will disallow…",261,N],[3,"Style","","Styling for the Toggle including coloring, bordering and…",N,N],[12,"color","","Color of the Toggle's pressable area.",262,N],[12,"border","","The width of the rectangular border surrounding the Toggle.",262,N],[12,"border_color","","The color of the Toggle's border.",262,N],[12,"label_color","","The color of the Toggle's Text label.",262,N],[12,"label_font_size","","The font size for the Toggle's Text label.",262,N],[12,"label_font_id","","The ID of the font used to display the label.",262,N],[12,"label_x","","The position of the title bar's `Label` widget over the x…",262,N],[12,"label_y","","The position of the title bar's `Label` widget over the y…",262,N],[3,"State","","The state of the Toggle.",N,N],[3,"TimesClicked","","The `Event` type yielded by the `Toggle` widget.",N,N],[11,"new","","Construct a new Toggle widget.",261,[[["bool"]],["toggle"]]],[11,"label_font_id","","Specify the font used for displaying the label.",261,[[["self"],["id"]],["self"]]],[11,"label_x","","Specify the label's position relatively to `Toggle` along…",261,[[["self"],["relative"]],["self"]]],[11,"label_y","","Specify the label's position relatively to `Toggle` along…",261,[[["self"],["relative"]],["self"]]],[11,"enabled","","Build the type's self.$($assignee).+ with the given $Type.",261,[[["self"],["bool"]],["self"]]],[0,"xy_pad","conrod_core::widget","Used for displaying and controlling a 2D point on a…",N,N],[3,"XYPad","conrod_core::widget::xy_pad","Used for displaying and controlling a 2D point on a…",N,N],[12,"enabled","","Indicates whether the XYPad will respond to user input.",263,N],[3,"Style","","Unique graphical styling for the XYPad.",N,N],[12,"color","","The color of the XYPad's rectangle.",264,N],[12,"border","","The width of the border surrounding the rectangle.",264,N],[12,"border_color","","The color of the surrounding rectangle border.",264,N],[12,"label_color","","The color of the XYPad's label and value label text.",264,N],[12,"label_font_size","","The font size for the XYPad's label.",264,N],[12,"label_font_id","","The ID of the font used to display the label.",264,N],[12,"value_font_size","","The font size for the XYPad's value label.",264,N],[12,"line_thickness","","The thickness of the XYPad's crosshair lines.",264,N],[3,"State","","The state of the XYPad.",N,N],[11,"new","","Build a new XYPad widget.",263,[[["x"],["x"],["x"],["y"],["y"],["y"]],["self"]]],[11,"label_font_id","","Specify the font used for displaying the label.",263,[[["self"],["id"]],["self"]]],[11,"line_thickness","","Build the type's self.$($assignee).+ with the given $Type.",263,[[["self"],["scalar"]],["self"]]],[11,"value_font_size","","Build the type's self.$($assignee).+ with the given $Type.",263,[[["self"],["fontsize"]],["self"]]],[11,"enabled","","Build the type's self.$($assignee).+ with the given $Type.",263,[[["self"],["bool"]],["self"]]],[6,"IsOverFn","conrod_core::widget","A function type used to determine whether or not a given…",N,N],[8,"Style","","The necessary bounds for a Widget's associated Style type.",N,N],[8,"Common","","A trait implemented by all Widget types.",N,N],[10,"common","","Borrows the `CommonBuilder` field.",265,[[["self"]],["commonbuilder"]]],[10,"common_mut","","Mutably borrows the `CommonBuilder` field.",265,[[["self"]],["commonbuilder"]]],[8,"Widget","","A trait to be implemented by all Widget types.",N,N],[16,"State","","State to be stored within the `Ui`s widget cache.",266,N],[16,"Style","","Every widget is required to have its own associated…",266,N],[16,"Event","","The type of event yielded by the widget, returned via the…",266,N],[10,"init_state","","Return the initial State of the Widget.",266,N],[10,"style","","Return the styling of the widget.",266,N],[10,"update","","Update our Widget's unique Widget::State via the State…",266,N],[11,"default_x_position","","The default Position for the widget along the x axis.",266,[[["self"],["ui"]],["position"]]],[11,"default_y_position","","The default Position for the widget along the y axis.",266,[[["self"],["ui"]],["position"]]],[11,"default_x_dimension","","The default width for the Widget.",266,[[["self"],["ui"]],["dimension"]]],[11,"default_y_dimension","","The default height of the widget.",266,[[["self"],["ui"]],["dimension"]]],[11,"drag_area","","If the widget is draggable, implement this method and…",266,N],[11,"kid_area","","The area on which child widgets will be placed when using…",266,[[["self"],["kidareaargs"]],["kidarea"]]],[11,"is_over","","Returns either of the following:",266,[[["self"]],["isoverfn"]]],[11,"parent","","Set the parent widget for this Widget by passing the…",266,[[["self"],["id"]],["self"]]],[11,"no_parent","","Specify that this widget has no parent widgets.",266,[[["self"]],["self"]]],[11,"place_on_kid_area","","Set whether or not the Widget should be placed on the…",266,[[["self"],["bool"]],["self"]]],[11,"graphics_for","","Indicates that the Widget is used as a non-interactive…",266,[[["self"],["id"]],["self"]]],[11,"floating","","Set whether or not the widget is floating (the default is…",266,[[["self"],["bool"]],["self"]]],[11,"crop_kids","","Indicates that all widgets who are children of this widget…",266,[[["self"]],["self"]]],[11,"scroll_kids","","Makes the widget's `KidArea` scrollable.",266,[[["self"]],["self"]]],[11,"scroll_kids_vertically","","Makes the widget's `KidArea` scrollable.",266,[[["self"]],["self"]]],[11,"scroll_kids_horizontally","","Set whether or not the widget's `KidArea` is scrollable…",266,[[["self"]],["self"]]],[11,"and","","A builder method that \"lifts\" the Widget through the given…",266,[[["self"],["f"]],["self"]]],[11,"and_mut","","A builder method that mutates the Widget with the given…",266,[[["self"],["f"]],["self"]]],[11,"and_if","","A method that conditionally builds the Widget with the…",266,[[["self"],["bool"],["f"]],["self"]]],[11,"and_then","","A method that optionally builds the Widget with the given…",266,[[["self"],["option"],["f"]],["self"]]],[11,"set","","Note: There should be no need to override this method.",266,N],[11,"get_unchecked","","Convert the MaybeParent into an Option.",115,[[["self"],["ui"],["position"],["position"]],["id"]]],[11,"get","","The same as `get_unchecked`, but checks whether or not the…",115,[[["self"],["id"],["ui"],["position"],["position"]],["option",["id"]]]],[11,"update","","Mutate the internal widget state and set a flag notifying…",267,[[["self"],["f"]]]],[0,"cursor","conrod_core","Contains an extendable enum of supported mouse cursor types.",N,N],[4,"MouseCursor","conrod_core::cursor","This enum specifies cursor types used by internal widgets.…",N,N],[13,"Arrow","","Default mouse cursor.",268,N],[13,"Text","","Text input curosr.",268,N],[13,"VerticalText","","Text input for vertical text.",268,N],[13,"Hand","","Open hand with index finger pointing up.",268,N],[13,"Grab","","Open hand.",268,N],[13,"Grabbing","","Closed hand.",268,N],[13,"ResizeVertical","","Vertical resize cursor.",268,N],[13,"ResizeHorizontal","","Horizontal resize cursor.",268,N],[13,"ResizeTopLeftBottomRight","","Diagonal resize cursor pointing to top left and bottom…",268,N],[13,"ResizeTopRightBottomLeft","","Diagonal resize cursor pointing to top right to bottom…",268,N],[13,"Custom","","Custom cursor variant. Encode your favourite cursor with a…",268,N],[6,"FontSize","conrod_core","Font size used throughout Conrod.",N,N],[8,"Borderable","","Widgets that may display a border.",N,N],[10,"border","","Set the width of the widget's border.",269,[[["self"],["f64"]],["self"]]],[10,"border_color","","Set the color of the widget's border.",269,[[["self"],["color"]],["self"]]],[11,"border_rgba","","Set the color of the widget's border with rgba values.",269,[[["self"],["f32"],["f32"],["f32"],["f32"]],["self"]]],[11,"border_rgb","","Set the color of the widget's border with rgb values.",269,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[11,"border_hsla","","Set the color of the widget's border with hsla values.",269,[[["self"],["f32"],["f32"],["f32"],["f32"]],["self"]]],[11,"border_hsl","","Set the color of the widget's border with hsl values.",269,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[8,"Labelable","","Widgets that may display some label.",N,N],[10,"label","","Set the label for the widget.",270,[[["self"],["str"]],["self"]]],[10,"label_color","","Set the color of the widget's label.",270,[[["self"],["color"]],["self"]]],[11,"label_rgba","","Set the color of the widget's label from rgba values.",270,[[["self"],["f32"],["f32"],["f32"],["f32"]],["self"]]],[11,"label_rgb","","Set the color of the widget's label from rgb values.",270,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[11,"label_hsla","","Set the color of the widget's label from hsla values.",270,[[["self"],["f32"],["f32"],["f32"],["f32"]],["self"]]],[11,"label_hsl","","Set the color of the widget's label from hsl values.",270,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[10,"label_font_size","","Set the font size for the widget's label.",270,[[["self"],["fontsize"]],["self"]]],[11,"small_font","","Set a \"small\" font size for the widget's label.",270,[[["self"],["ui"]],["self"]]],[11,"medium_font","","Set a \"medium\" font size for the widget's label.",270,[[["self"],["ui"]],["self"]]],[11,"large_font","","Set a \"large\" font size for the widget's label.",270,[[["self"],["ui"]],["self"]]],[14,"builder_method","","A macro for simplifying implementation of methods for the…",N,N],[14,"builder_methods","","A macro to simplify implementation of \"builder-pattern\"…",N,N],[14,"widget_ids","","A macro used to generate a struct with a field for each…",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","conrod_core::color","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","conrod_core::event","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","conrod_core::graph","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"equivalent","","",31,[[["self"],["k"]],["bool"]]],[11,"into","conrod_core::graph::algo","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","conrod_core::graph::depth_order","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","conrod_core::image","",271,[[["self"]],["u"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,N],[11,"from","","",271,[[["t"]],["t"]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"try_into","","",271,[[["self"]],["result"]]],[11,"get_type_id","","",271,[[["self"]],["typeid"]]],[11,"equivalent","","",271,[[["self"],["k"]],["bool"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",272,[[["self"]],["u"]]],[11,"from","","",272,[[["t"]],["t"]]],[11,"into_iter","","",272,[[["self"]],["i"]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"try_into","","",272,[[["self"]],["result"]]],[11,"get_type_id","","",272,[[["self"]],["typeid"]]],[11,"into","conrod_core::input::keyboard","",273,[[["self"]],["u"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,N],[11,"from","","",273,[[["t"]],["t"]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"try_into","","",273,[[["self"]],["result"]]],[11,"get_type_id","","",273,[[["self"]],["typeid"]]],[11,"equivalent","","",273,[[["self"],["k"]],["bool"]]],[11,"into","conrod_core::input","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"equivalent","","",37,[[["self"],["k"]],["bool"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"equivalent","","",38,[[["self"],["k"]],["bool"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"equivalent","","",40,[[["self"],["k"]],["bool"]]],[11,"into","conrod_core::input::state::mouse","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"equivalent","","",41,[[["self"],["k"]],["bool"]]],[11,"into","conrod_core::input","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","conrod_core::input::state","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","conrod_core::input::state::touch","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","conrod_core::input::state::mouse","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","","",274,[[["self"]],["u"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,N],[11,"from","","",274,[[["t"]],["t"]]],[11,"into_iter","","",274,[[["self"]],["i"]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"try_into","","",274,[[["self"]],["result"]]],[11,"get_type_id","","",274,[[["self"]],["typeid"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","conrod_core::input::widget","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","","",275,[[["self"]],["u"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,N],[11,"from","","",275,[[["t"]],["t"]]],[11,"into_iter","","",275,[[["self"]],["i"]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"try_into","","",275,[[["self"]],["result"]]],[11,"get_type_id","","",275,[[["self"]],["typeid"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"into_iter","","",53,[[["self"]],["i"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"into_iter","","",54,[[["self"]],["i"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into","","",276,[[["self"]],["u"]]],[11,"to_owned","","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,N],[11,"from","","",276,[[["t"]],["t"]]],[11,"into_iter","","",276,[[["self"]],["i"]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"try_into","","",276,[[["self"]],["result"]]],[11,"get_type_id","","",276,[[["self"]],["typeid"]]],[11,"into","","",277,[[["self"]],["u"]]],[11,"to_owned","","",277,[[["self"]],["t"]]],[11,"clone_into","","",277,N],[11,"from","","",277,[[["t"]],["t"]]],[11,"into_iter","","",277,[[["self"]],["i"]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"try_into","","",277,[[["self"]],["result"]]],[11,"get_type_id","","",277,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"into_iter","","",55,[[["self"]],["i"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into","","",278,[[["self"]],["u"]]],[11,"to_owned","","",278,[[["self"]],["t"]]],[11,"clone_into","","",278,N],[11,"from","","",278,[[["t"]],["t"]]],[11,"into_iter","","",278,[[["self"]],["i"]]],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"try_into","","",278,[[["self"]],["result"]]],[11,"get_type_id","","",278,[[["self"]],["typeid"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"into_iter","","",56,[[["self"]],["i"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into","","",279,[[["self"]],["u"]]],[11,"to_owned","","",279,[[["self"]],["t"]]],[11,"clone_into","","",279,N],[11,"from","","",279,[[["t"]],["t"]]],[11,"into_iter","","",279,[[["self"]],["i"]]],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"try_into","","",279,[[["self"]],["result"]]],[11,"get_type_id","","",279,[[["self"]],["typeid"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"into_iter","","",57,[[["self"]],["i"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","","",280,[[["self"]],["u"]]],[11,"to_owned","","",280,[[["self"]],["t"]]],[11,"clone_into","","",280,N],[11,"from","","",280,[[["t"]],["t"]]],[11,"into_iter","","",280,[[["self"]],["i"]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"try_into","","",280,[[["self"]],["result"]]],[11,"get_type_id","","",280,[[["self"]],["typeid"]]],[11,"into","","",281,[[["self"]],["u"]]],[11,"to_owned","","",281,[[["self"]],["t"]]],[11,"clone_into","","",281,N],[11,"from","","",281,[[["t"]],["t"]]],[11,"into_iter","","",281,[[["self"]],["i"]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"try_into","","",281,[[["self"]],["result"]]],[11,"get_type_id","","",281,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","","",282,[[["self"]],["u"]]],[11,"to_owned","","",282,[[["self"]],["t"]]],[11,"clone_into","","",282,N],[11,"from","","",282,[[["t"]],["t"]]],[11,"into_iter","","",282,[[["self"]],["i"]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"try_into","","",282,[[["self"]],["result"]]],[11,"get_type_id","","",282,[[["self"]],["typeid"]]],[11,"into","","",283,[[["self"]],["u"]]],[11,"to_owned","","",283,[[["self"]],["t"]]],[11,"clone_into","","",283,N],[11,"from","","",283,[[["t"]],["t"]]],[11,"into_iter","","",283,[[["self"]],["i"]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"try_into","","",283,[[["self"]],["result"]]],[11,"get_type_id","","",283,[[["self"]],["typeid"]]],[11,"into","","",284,[[["self"]],["u"]]],[11,"to_owned","","",284,[[["self"]],["t"]]],[11,"clone_into","","",284,N],[11,"from","","",284,[[["t"]],["t"]]],[11,"into_iter","","",284,[[["self"]],["i"]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"try_into","","",284,[[["self"]],["result"]]],[11,"get_type_id","","",284,[[["self"]],["typeid"]]],[11,"into","conrod_core::input::global","",59,[[["self"]],["u"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"into_iter","","",60,[[["self"]],["i"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into","","",285,[[["self"]],["u"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,N],[11,"from","","",285,[[["t"]],["t"]]],[11,"into_iter","","",285,[[["self"]],["i"]]],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"try_into","","",285,[[["self"]],["result"]]],[11,"get_type_id","","",285,[[["self"]],["typeid"]]],[11,"into","conrod_core::input::touch","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"equivalent","","",63,[[["self"],["k"]],["bool"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"equivalent","","",62,[[["self"],["k"]],["bool"]]],[11,"into","conrod_core::position","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"equivalent","","",65,[[["self"],["k"]],["bool"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"equivalent","","",68,[[["self"],["k"]],["bool"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"equivalent","","",69,[[["self"],["k"]],["bool"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into","conrod_core::position::range","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"equivalent","","",73,[[["self"],["k"]],["bool"]]],[11,"into","conrod_core::position::rect","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"equivalent","","",75,[[["self"],["k"]],["bool"]]],[11,"into","conrod_core::render","",82,[[["self"]],["u"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into","conrod_core::text","",286,[[["self"]],["u"]]],[11,"to_owned","","",286,[[["self"]],["t"]]],[11,"clone_into","","",286,N],[11,"from","","",286,[[["t"]],["t"]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"try_into","","",286,[[["self"]],["result"]]],[11,"get_type_id","","",286,[[["self"]],["typeid"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"equivalent","","",85,[[["self"],["k"]],["bool"]]],[11,"into","","",287,[[["self"]],["u"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,N],[11,"from","","",287,[[["t"]],["t"]]],[11,"into_iter","","",287,[[["self"]],["i"]]],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"try_into","","",287,[[["self"]],["result"]]],[11,"get_type_id","","",287,[[["self"]],["typeid"]]],[11,"into","","",288,[[["self"]],["u"]]],[11,"to_owned","","",288,[[["self"]],["t"]]],[11,"clone_into","","",288,N],[11,"from","","",288,[[["t"]],["t"]]],[11,"into_iter","","",288,[[["self"]],["i"]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"try_into","","",288,[[["self"]],["result"]]],[11,"get_type_id","","",288,[[["self"]],["typeid"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into","conrod_core::text::rt::gpu_cache","",289,[[["self"]],["u"]]],[11,"from","","",289,[[["t"]],["t"]]],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"try_into","","",289,[[["self"]],["result"]]],[11,"get_type_id","","",289,[[["self"]],["typeid"]]],[11,"into","conrod_core::text","",290,[[["self"]],["u"]]],[11,"to_owned","","",290,[[["self"]],["t"]]],[11,"clone_into","","",290,N],[11,"from","","",290,[[["t"]],["t"]]],[11,"into_iter","","",290,[[["self"]],["i"]]],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"try_into","","",290,[[["self"]],["result"]]],[11,"get_type_id","","",290,[[["self"]],["typeid"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"equivalent","","",87,[[["self"],["k"]],["bool"]]],[11,"into","conrod_core::text::rt","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"equivalent","","",88,[[["self"],["k"]],["bool"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"equivalent","","",89,[[["self"],["k"]],["bool"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"equivalent","","",90,[[["self"],["k"]],["bool"]]],[11,"into","conrod_core::text::rt::gpu_cache","",291,[[["self"]],["u"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,N],[11,"from","","",291,[[["t"]],["t"]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"try_into","","",291,[[["self"]],["result"]]],[11,"get_type_id","","",291,[[["self"]],["typeid"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"to_string","","",91,[[["self"]],["string"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"equivalent","","",91,[[["self"],["k"]],["bool"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"to_string","","",92,[[["self"]],["string"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"equivalent","","",92,[[["self"],["k"]],["bool"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"equivalent","","",93,[[["self"],["k"]],["bool"]]],[11,"into","conrod_core::text::font","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"equivalent","","",95,[[["self"],["k"]],["bool"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into","","",292,[[["self"]],["u"]]],[11,"from","","",292,[[["t"]],["t"]]],[11,"into_iter","","",292,[[["self"]],["i"]]],[11,"try_from","","",292,[[["u"]],["result"]]],[11,"borrow","","",292,[[["self"]],["t"]]],[11,"borrow_mut","","",292,[[["self"]],["t"]]],[11,"try_into","","",292,[[["self"]],["result"]]],[11,"get_type_id","","",292,[[["self"]],["typeid"]]],[11,"into","","",293,[[["self"]],["u"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,N],[11,"from","","",293,[[["t"]],["t"]]],[11,"into_iter","","",293,[[["self"]],["i"]]],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"try_into","","",293,[[["self"]],["result"]]],[11,"get_type_id","","",293,[[["self"]],["typeid"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"to_string","","",94,[[["self"]],["string"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into","conrod_core::text::glyph","",294,[[["self"]],["u"]]],[11,"from","","",294,[[["t"]],["t"]]],[11,"into_iter","","",294,[[["self"]],["i"]]],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"try_into","","",294,[[["self"]],["result"]]],[11,"get_type_id","","",294,[[["self"]],["typeid"]]],[11,"into","","",295,[[["self"]],["u"]]],[11,"from","","",295,[[["t"]],["t"]]],[11,"into_iter","","",295,[[["self"]],["i"]]],[11,"try_from","","",295,[[["u"]],["result"]]],[11,"borrow","","",295,[[["self"]],["t"]]],[11,"borrow_mut","","",295,[[["self"]],["t"]]],[11,"try_into","","",295,[[["self"]],["result"]]],[11,"get_type_id","","",295,[[["self"]],["typeid"]]],[11,"into","","",296,[[["self"]],["u"]]],[11,"from","","",296,[[["t"]],["t"]]],[11,"into_iter","","",296,[[["self"]],["i"]]],[11,"try_from","","",296,[[["u"]],["result"]]],[11,"borrow","","",296,[[["self"]],["t"]]],[11,"borrow_mut","","",296,[[["self"]],["t"]]],[11,"try_into","","",296,[[["self"]],["result"]]],[11,"get_type_id","","",296,[[["self"]],["typeid"]]],[11,"into","","",297,[[["self"]],["u"]]],[11,"from","","",297,[[["t"]],["t"]]],[11,"into_iter","","",297,[[["self"]],["i"]]],[11,"try_from","","",297,[[["u"]],["result"]]],[11,"borrow","","",297,[[["self"]],["t"]]],[11,"borrow_mut","","",297,[[["self"]],["t"]]],[11,"try_into","","",297,[[["self"]],["result"]]],[11,"get_type_id","","",297,[[["self"]],["typeid"]]],[11,"into","conrod_core::text::cursor","",298,[[["self"]],["u"]]],[11,"to_owned","","",298,[[["self"]],["t"]]],[11,"clone_into","","",298,N],[11,"from","","",298,[[["t"]],["t"]]],[11,"into_iter","","",298,[[["self"]],["i"]]],[11,"try_from","","",298,[[["u"]],["result"]]],[11,"borrow","","",298,[[["self"]],["t"]]],[11,"borrow_mut","","",298,[[["self"]],["t"]]],[11,"try_into","","",298,[[["self"]],["result"]]],[11,"get_type_id","","",298,[[["self"]],["typeid"]]],[11,"into","","",299,[[["self"]],["u"]]],[11,"to_owned","","",299,[[["self"]],["t"]]],[11,"clone_into","","",299,N],[11,"from","","",299,[[["t"]],["t"]]],[11,"into_iter","","",299,[[["self"]],["i"]]],[11,"try_from","","",299,[[["u"]],["result"]]],[11,"borrow","","",299,[[["self"]],["t"]]],[11,"borrow_mut","","",299,[[["self"]],["t"]]],[11,"try_into","","",299,[[["self"]],["result"]]],[11,"get_type_id","","",299,[[["self"]],["typeid"]]],[11,"into","","",300,[[["self"]],["u"]]],[11,"from","","",300,[[["t"]],["t"]]],[11,"into_iter","","",300,[[["self"]],["i"]]],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"try_into","","",300,[[["self"]],["result"]]],[11,"get_type_id","","",300,[[["self"]],["typeid"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"equivalent","","",97,[[["self"],["k"]],["bool"]]],[11,"into","conrod_core::text::line","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"into_iter","","",100,[[["self"]],["i"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"into","","",301,[[["self"]],["u"]]],[11,"to_owned","","",301,[[["self"]],["t"]]],[11,"clone_into","","",301,N],[11,"from","","",301,[[["t"]],["t"]]],[11,"into_iter","","",301,[[["self"]],["i"]]],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"try_into","","",301,[[["self"]],["result"]]],[11,"get_type_id","","",301,[[["self"]],["typeid"]]],[11,"into","","",302,[[["self"]],["u"]]],[11,"from","","",302,[[["t"]],["t"]]],[11,"into_iter","","",302,[[["self"]],["i"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"try_into","","",302,[[["self"]],["result"]]],[11,"get_type_id","","",302,[[["self"]],["typeid"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"into","conrod_core::theme","",101,[[["self"]],["u"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into","conrod_core::utils","",105,[[["self"]],["u"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"into","conrod_core::widget","",106,[[["self"]],["u"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"into","","",267,[[["self"]],["u"]]],[11,"from","","",267,[[["t"]],["t"]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"try_into","","",267,[[["self"]],["result"]]],[11,"get_type_id","","",267,[[["self"]],["typeid"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into","conrod_core::widget::id","",117,[[["self"]],["u"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"equivalent","","",118,[[["self"],["k"]],["bool"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"into","conrod_core::widget::scroll","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"into","","",303,[[["self"]],["u"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,N],[11,"from","","",303,[[["t"]],["t"]]],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"try_into","","",303,[[["self"]],["result"]]],[11,"get_type_id","","",303,[[["self"]],["typeid"]]],[11,"into","","",304,[[["self"]],["u"]]],[11,"to_owned","","",304,[[["self"]],["t"]]],[11,"clone_into","","",304,N],[11,"from","","",304,[[["t"]],["t"]]],[11,"try_from","","",304,[[["u"]],["result"]]],[11,"borrow","","",304,[[["self"]],["t"]]],[11,"borrow_mut","","",304,[[["self"]],["t"]]],[11,"try_into","","",304,[[["self"]],["result"]]],[11,"get_type_id","","",304,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::primitive::line","",123,[[["self"],["position"]],["w"]]],[11,"y_position","","",123,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",123,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",123,[[["self"],["ui"]],["position"]]],[11,"depth","","",123,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",123,[[["self"]],["f32"]]],[11,"x_dimension","","",123,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",123,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",123,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",123,[[["self"],["ui"]],["dimension"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::primitive::image","",128,[[["self"],["position"]],["w"]]],[11,"y_position","","",128,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",128,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",128,[[["self"],["ui"]],["position"]]],[11,"depth","","",128,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",128,[[["self"]],["f32"]]],[11,"x_dimension","","",128,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",128,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",128,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",128,[[["self"],["ui"]],["dimension"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::primitive::point_path","",131,[[["self"],["position"]],["w"]]],[11,"y_position","","",131,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",131,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",131,[[["self"],["ui"]],["position"]]],[11,"depth","","",131,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",131,[[["self"]],["f32"]]],[11,"x_dimension","","",131,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",131,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",131,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",131,[[["self"],["ui"]],["dimension"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"into","","",305,[[["self"]],["u"]]],[11,"to_owned","","",305,[[["self"]],["t"]]],[11,"clone_into","","",305,N],[11,"from","","",305,[[["t"]],["t"]]],[11,"into_iter","","",305,[[["self"]],["i"]]],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"try_into","","",305,[[["self"]],["result"]]],[11,"get_type_id","","",305,[[["self"]],["typeid"]]],[11,"into","conrod_core::widget::primitive::shape","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"into","conrod_core::widget::primitive::shape::circle","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::primitive::shape::oval","",135,[[["self"],["position"]],["w"]]],[11,"y_position","","",135,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",135,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",135,[[["self"],["ui"]],["position"]]],[11,"depth","","",135,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",135,[[["self"]],["f32"]]],[11,"x_dimension","","",135,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",135,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",135,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",135,[[["self"],["ui"]],["dimension"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"into","","",306,[[["self"]],["u"]]],[11,"to_owned","","",306,[[["self"]],["t"]]],[11,"clone_into","","",306,N],[11,"from","","",306,[[["t"]],["t"]]],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"try_into","","",306,[[["self"]],["result"]]],[11,"get_type_id","","",306,[[["self"]],["typeid"]]],[11,"equivalent","","",306,[[["self"],["k"]],["bool"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"from","","",139,[[["t"]],["t"]]],[11,"into_iter","","",139,[[["self"]],["i"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"into","","",307,[[["self"]],["u"]]],[11,"to_owned","","",307,[[["self"]],["t"]]],[11,"clone_into","","",307,N],[11,"from","","",307,[[["t"]],["t"]]],[11,"into_iter","","",307,[[["self"]],["i"]]],[11,"try_from","","",307,[[["u"]],["result"]]],[11,"borrow","","",307,[[["self"]],["t"]]],[11,"borrow_mut","","",307,[[["self"]],["t"]]],[11,"try_into","","",307,[[["self"]],["result"]]],[11,"get_type_id","","",307,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::primitive::shape::polygon","",140,[[["self"],["position"]],["w"]]],[11,"y_position","","",140,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",140,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",140,[[["self"],["ui"]],["position"]]],[11,"depth","","",140,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",140,[[["self"]],["f32"]]],[11,"x_dimension","","",140,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",140,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",140,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",140,[[["self"],["ui"]],["dimension"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"into","","",308,[[["self"]],["u"]]],[11,"to_owned","","",308,[[["self"]],["t"]]],[11,"clone_into","","",308,N],[11,"from","","",308,[[["t"]],["t"]]],[11,"into_iter","","",308,[[["self"]],["i"]]],[11,"try_from","","",308,[[["u"]],["result"]]],[11,"borrow","","",308,[[["self"]],["t"]]],[11,"borrow_mut","","",308,[[["self"]],["t"]]],[11,"try_into","","",308,[[["self"]],["result"]]],[11,"get_type_id","","",308,[[["self"]],["typeid"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::primitive::shape::rectangle","",143,[[["self"],["position"]],["w"]]],[11,"y_position","","",143,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",143,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",143,[[["self"],["ui"]],["position"]]],[11,"depth","","",143,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",143,[[["self"]],["f32"]]],[11,"x_dimension","","",143,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",143,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",143,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",143,[[["self"],["ui"]],["dimension"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"into","","",309,[[["self"]],["u"]]],[11,"to_owned","","",309,[[["self"]],["t"]]],[11,"clone_into","","",309,N],[11,"from","","",309,[[["t"]],["t"]]],[11,"try_from","","",309,[[["u"]],["result"]]],[11,"borrow","","",309,[[["self"]],["t"]]],[11,"borrow_mut","","",309,[[["self"]],["t"]]],[11,"try_into","","",309,[[["self"]],["result"]]],[11,"get_type_id","","",309,[[["self"]],["typeid"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::primitive::shape::triangles","",145,[[["self"],["position"]],["w"]]],[11,"y_position","","",145,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",145,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",145,[[["self"],["ui"]],["position"]]],[11,"depth","","",145,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",145,[[["self"]],["f32"]]],[11,"x_dimension","","",145,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",145,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",145,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",145,[[["self"],["ui"]],["dimension"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"into","","",310,[[["self"]],["u"]]],[11,"to_owned","","",310,[[["self"]],["t"]]],[11,"clone_into","","",310,N],[11,"from","","",310,[[["t"]],["t"]]],[11,"try_from","","",310,[[["u"]],["result"]]],[11,"borrow","","",310,[[["self"]],["t"]]],[11,"borrow_mut","","",310,[[["self"]],["t"]]],[11,"try_into","","",310,[[["self"]],["result"]]],[11,"get_type_id","","",310,[[["self"]],["typeid"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::primitive::text","",152,[[["self"],["position"]],["w"]]],[11,"y_position","","",152,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",152,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",152,[[["self"],["ui"]],["position"]]],[11,"depth","","",152,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",152,[[["self"]],["f32"]]],[11,"x_dimension","","",152,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",152,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",152,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",152,[[["self"],["ui"]],["dimension"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::bordered_rectangle","",156,[[["self"],["position"]],["w"]]],[11,"y_position","","",156,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",156,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",156,[[["self"],["ui"]],["position"]]],[11,"depth","","",156,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",156,[[["self"]],["f32"]]],[11,"x_dimension","","",156,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",156,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",156,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",156,[[["self"],["ui"]],["dimension"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"into","","",311,[[["self"]],["u"]]],[11,"from","","",311,[[["t"]],["t"]]],[11,"try_from","","",311,[[["u"]],["result"]]],[11,"borrow","","",311,[[["self"]],["t"]]],[11,"borrow_mut","","",311,[[["self"]],["t"]]],[11,"try_into","","",311,[[["self"]],["result"]]],[11,"get_type_id","","",311,[[["self"]],["typeid"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"from","","",158,[[["t"]],["t"]]],[11,"into_iter","","",158,[[["self"]],["i"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::button","",159,[[["self"],["position"]],["w"]]],[11,"y_position","","",159,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",159,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",159,[[["self"],["ui"]],["position"]]],[11,"depth","","",159,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",159,[[["self"]],["f32"]]],[11,"x_dimension","","",159,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",159,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",159,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",159,[[["self"],["ui"]],["dimension"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"from","","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"from","","",163,[[["t"]],["t"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"from","","",164,[[["t"]],["t"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"from","","",165,[[["t"]],["t"]]],[11,"into_iter","","",165,[[["self"]],["i"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"from","","",166,[[["t"]],["t"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::canvas","",167,[[["self"],["position"]],["w"]]],[11,"y_position","","",167,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",167,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",167,[[["self"],["ui"]],["position"]]],[11,"depth","","",167,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",167,[[["self"]],["f32"]]],[11,"x_dimension","","",167,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",167,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",167,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",167,[[["self"],["ui"]],["dimension"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"from","","",167,[[["t"]],["t"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"into","","",312,[[["self"]],["u"]]],[11,"from","","",312,[[["t"]],["t"]]],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"try_into","","",312,[[["self"]],["result"]]],[11,"get_type_id","","",312,[[["self"]],["typeid"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"from","","",168,[[["t"]],["t"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"from","","",169,[[["t"]],["t"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"from","","",170,[[["t"]],["t"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::collapsible_area","",175,[[["self"],["position"]],["w"]]],[11,"y_position","","",175,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",175,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",175,[[["self"],["ui"]],["position"]]],[11,"depth","","",175,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",175,[[["self"]],["f32"]]],[11,"x_dimension","","",175,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",175,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",175,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",175,[[["self"],["ui"]],["dimension"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"from","","",175,[[["t"]],["t"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"into","","",313,[[["self"]],["u"]]],[11,"from","","",313,[[["t"]],["t"]]],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"try_into","","",313,[[["self"]],["result"]]],[11,"get_type_id","","",313,[[["self"]],["typeid"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"from","","",172,[[["t"]],["t"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"from","","",173,[[["t"]],["t"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"from","","",174,[[["t"]],["t"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"equivalent","","",174,[[["self"],["k"]],["bool"]]],[11,"x_position","conrod_core::widget::drop_down_list","",178,[[["self"],["position"]],["w"]]],[11,"y_position","","",178,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",178,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",178,[[["self"],["ui"]],["position"]]],[11,"depth","","",178,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",178,[[["self"]],["f32"]]],[11,"x_dimension","","",178,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",178,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",178,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",178,[[["self"],["ui"]],["dimension"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"from","","",176,[[["t"]],["t"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"into","","",314,[[["self"]],["u"]]],[11,"from","","",314,[[["t"]],["t"]]],[11,"try_from","","",314,[[["u"]],["result"]]],[11,"borrow","","",314,[[["self"]],["t"]]],[11,"borrow_mut","","",314,[[["self"]],["t"]]],[11,"try_into","","",314,[[["self"]],["result"]]],[11,"get_type_id","","",314,[[["self"]],["typeid"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"from","","",177,[[["t"]],["t"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::envelope_editor","",179,[[["self"],["position"]],["w"]]],[11,"y_position","","",179,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",179,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",179,[[["self"],["ui"]],["position"]]],[11,"depth","","",179,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",179,[[["self"]],["f32"]]],[11,"x_dimension","","",179,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",179,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",179,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",179,[[["self"],["ui"]],["dimension"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"from","","",180,[[["t"]],["t"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"into","","",315,[[["self"]],["u"]]],[11,"from","","",315,[[["t"]],["t"]]],[11,"try_from","","",315,[[["u"]],["result"]]],[11,"borrow","","",315,[[["self"]],["t"]]],[11,"borrow_mut","","",315,[[["self"]],["t"]]],[11,"try_into","","",315,[[["self"]],["result"]]],[11,"get_type_id","","",315,[[["self"]],["typeid"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"from","","",181,[[["t"]],["t"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::file_navigator","",183,[[["self"],["position"]],["w"]]],[11,"y_position","","",183,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",183,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",183,[[["self"],["ui"]],["position"]]],[11,"depth","","",183,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",183,[[["self"]],["f32"]]],[11,"x_dimension","","",183,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",183,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",183,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",183,[[["self"],["ui"]],["dimension"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"into","","",316,[[["self"]],["u"]]],[11,"from","","",316,[[["t"]],["t"]]],[11,"try_from","","",316,[[["u"]],["result"]]],[11,"borrow","","",316,[[["self"]],["t"]]],[11,"borrow_mut","","",316,[[["self"]],["t"]]],[11,"try_into","","",316,[[["self"]],["result"]]],[11,"get_type_id","","",316,[[["self"]],["typeid"]]],[11,"into","","",317,[[["self"]],["u"]]],[11,"from","","",317,[[["t"]],["t"]]],[11,"try_from","","",317,[[["u"]],["result"]]],[11,"borrow","","",317,[[["self"]],["t"]]],[11,"borrow_mut","","",317,[[["self"]],["t"]]],[11,"try_into","","",317,[[["self"]],["result"]]],[11,"get_type_id","","",317,[[["self"]],["typeid"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,N],[11,"from","","",184,[[["t"]],["t"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"from","","",185,[[["t"]],["t"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"from","","",186,[[["t"]],["t"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::file_navigator::directory_view","",187,[[["self"],["position"]],["w"]]],[11,"y_position","","",187,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",187,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",187,[[["self"],["ui"]],["position"]]],[11,"depth","","",187,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",187,[[["self"]],["f32"]]],[11,"x_dimension","","",187,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",187,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",187,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",187,[[["self"],["ui"]],["dimension"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"into","","",318,[[["self"]],["u"]]],[11,"from","","",318,[[["t"]],["t"]]],[11,"try_from","","",318,[[["u"]],["result"]]],[11,"borrow","","",318,[[["self"]],["t"]]],[11,"borrow_mut","","",318,[[["self"]],["t"]]],[11,"try_into","","",318,[[["self"]],["result"]]],[11,"get_type_id","","",318,[[["self"]],["typeid"]]],[11,"into","","",319,[[["self"]],["u"]]],[11,"to_owned","","",319,[[["self"]],["t"]]],[11,"clone_into","","",319,N],[11,"from","","",319,[[["t"]],["t"]]],[11,"try_from","","",319,[[["u"]],["result"]]],[11,"borrow","","",319,[[["self"]],["t"]]],[11,"borrow_mut","","",319,[[["self"]],["t"]]],[11,"try_into","","",319,[[["self"]],["result"]]],[11,"get_type_id","","",319,[[["self"]],["typeid"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,N],[11,"from","","",188,[[["t"]],["t"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"from","","",189,[[["t"]],["t"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::grid","",190,[[["self"],["position"]],["w"]]],[11,"y_position","","",190,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",190,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",190,[[["self"],["ui"]],["position"]]],[11,"depth","","",190,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",190,[[["self"]],["f32"]]],[11,"x_dimension","","",190,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",190,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",190,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",190,[[["self"],["ui"]],["dimension"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,N],[11,"from","","",190,[[["t"]],["t"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"from","","",191,[[["t"]],["t"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"from","","",192,[[["t"]],["t"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"into","","",320,[[["self"]],["u"]]],[11,"from","","",320,[[["t"]],["t"]]],[11,"try_from","","",320,[[["u"]],["result"]]],[11,"borrow","","",320,[[["self"]],["t"]]],[11,"borrow_mut","","",320,[[["self"]],["t"]]],[11,"try_into","","",320,[[["self"]],["result"]]],[11,"get_type_id","","",320,[[["self"]],["typeid"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"from","","",193,[[["t"]],["t"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::list","",194,[[["self"],["position"]],["w"]]],[11,"y_position","","",194,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",194,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",194,[[["self"],["ui"]],["position"]]],[11,"depth","","",194,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",194,[[["self"]],["f32"]]],[11,"x_dimension","","",194,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",194,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",194,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",194,[[["self"],["ui"]],["dimension"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"from","","",194,[[["t"]],["t"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"from","","",195,[[["t"]],["t"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"into","","",321,[[["self"]],["u"]]],[11,"to_owned","","",321,[[["self"]],["t"]]],[11,"clone_into","","",321,N],[11,"from","","",321,[[["t"]],["t"]]],[11,"try_from","","",321,[[["u"]],["result"]]],[11,"borrow","","",321,[[["self"]],["t"]]],[11,"borrow_mut","","",321,[[["self"]],["t"]]],[11,"try_into","","",321,[[["self"]],["result"]]],[11,"get_type_id","","",321,[[["self"]],["typeid"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"from","","",196,[[["t"]],["t"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"into","","",322,[[["self"]],["u"]]],[11,"from","","",322,[[["t"]],["t"]]],[11,"try_from","","",322,[[["u"]],["result"]]],[11,"borrow","","",322,[[["self"]],["t"]]],[11,"borrow_mut","","",322,[[["self"]],["t"]]],[11,"try_into","","",322,[[["self"]],["result"]]],[11,"get_type_id","","",322,[[["self"]],["typeid"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,N],[11,"from","","",197,[[["t"]],["t"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"into","","",203,[[["self"]],["u"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"try_into","","",203,[[["self"]],["result"]]],[11,"get_type_id","","",203,[[["self"]],["typeid"]]],[11,"into","","",202,[[["self"]],["u"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"try_into","","",202,[[["self"]],["result"]]],[11,"get_type_id","","",202,[[["self"]],["typeid"]]],[11,"into","","",323,[[["self"]],["u"]]],[11,"to_owned","","",323,[[["self"]],["t"]]],[11,"clone_into","","",323,N],[11,"from","","",323,[[["t"]],["t"]]],[11,"try_from","","",323,[[["u"]],["result"]]],[11,"borrow","","",323,[[["self"]],["t"]]],[11,"borrow_mut","","",323,[[["self"]],["t"]]],[11,"try_into","","",323,[[["self"]],["result"]]],[11,"get_type_id","","",323,[[["self"]],["typeid"]]],[11,"into","","",324,[[["self"]],["u"]]],[11,"to_owned","","",324,[[["self"]],["t"]]],[11,"clone_into","","",324,N],[11,"from","","",324,[[["t"]],["t"]]],[11,"try_from","","",324,[[["u"]],["result"]]],[11,"borrow","","",324,[[["self"]],["t"]]],[11,"borrow_mut","","",324,[[["self"]],["t"]]],[11,"try_into","","",324,[[["self"]],["result"]]],[11,"get_type_id","","",324,[[["self"]],["typeid"]]],[11,"into","","",325,[[["self"]],["u"]]],[11,"to_owned","","",325,[[["self"]],["t"]]],[11,"clone_into","","",325,N],[11,"from","","",325,[[["t"]],["t"]]],[11,"try_from","","",325,[[["u"]],["result"]]],[11,"borrow","","",325,[[["self"]],["t"]]],[11,"borrow_mut","","",325,[[["self"]],["t"]]],[11,"try_into","","",325,[[["self"]],["result"]]],[11,"get_type_id","","",325,[[["self"]],["typeid"]]],[11,"into","","",326,[[["self"]],["u"]]],[11,"to_owned","","",326,[[["self"]],["t"]]],[11,"clone_into","","",326,N],[11,"from","","",326,[[["t"]],["t"]]],[11,"try_from","","",326,[[["u"]],["result"]]],[11,"borrow","","",326,[[["self"]],["t"]]],[11,"borrow_mut","","",326,[[["self"]],["t"]]],[11,"try_into","","",326,[[["self"]],["result"]]],[11,"get_type_id","","",326,[[["self"]],["typeid"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"from","","",198,[[["t"]],["t"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"into","","",199,[[["self"]],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,N],[11,"from","","",199,[[["t"]],["t"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"try_into","","",199,[[["self"]],["result"]]],[11,"get_type_id","","",199,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::list_select","",209,[[["self"],["position"]],["w"]]],[11,"y_position","","",209,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",209,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",209,[[["self"],["ui"]],["position"]]],[11,"depth","","",209,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",209,[[["self"]],["f32"]]],[11,"x_dimension","","",209,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",209,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",209,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",209,[[["self"],["ui"]],["dimension"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"from","","",209,[[["t"]],["t"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"into","","",327,[[["self"]],["u"]]],[11,"from","","",327,[[["t"]],["t"]]],[11,"try_from","","",327,[[["u"]],["result"]]],[11,"borrow","","",327,[[["self"]],["t"]]],[11,"borrow_mut","","",327,[[["self"]],["t"]]],[11,"try_into","","",327,[[["self"]],["result"]]],[11,"get_type_id","","",327,[[["self"]],["typeid"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"into","","",328,[[["self"]],["u"]]],[11,"to_owned","","",328,[[["self"]],["t"]]],[11,"clone_into","","",328,N],[11,"from","","",328,[[["t"]],["t"]]],[11,"try_from","","",328,[[["u"]],["result"]]],[11,"borrow","","",328,[[["self"]],["t"]]],[11,"borrow_mut","","",328,[[["self"]],["t"]]],[11,"try_into","","",328,[[["self"]],["result"]]],[11,"get_type_id","","",328,[[["self"]],["typeid"]]],[11,"into","","",329,[[["self"]],["u"]]],[11,"to_owned","","",329,[[["self"]],["t"]]],[11,"clone_into","","",329,N],[11,"from","","",329,[[["t"]],["t"]]],[11,"try_from","","",329,[[["u"]],["result"]]],[11,"borrow","","",329,[[["self"]],["t"]]],[11,"borrow_mut","","",329,[[["self"]],["t"]]],[11,"try_into","","",329,[[["self"]],["result"]]],[11,"get_type_id","","",329,[[["self"]],["typeid"]]],[11,"into","","",204,[[["self"]],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,N],[11,"from","","",204,[[["t"]],["t"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"try_into","","",204,[[["self"]],["result"]]],[11,"get_type_id","","",204,[[["self"]],["typeid"]]],[11,"into","","",205,[[["self"]],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,N],[11,"from","","",205,[[["t"]],["t"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"try_into","","",205,[[["self"]],["result"]]],[11,"get_type_id","","",205,[[["self"]],["typeid"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"from","","",206,[[["t"]],["t"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::matrix","",213,[[["self"],["position"]],["w"]]],[11,"y_position","","",213,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",213,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",213,[[["self"],["ui"]],["position"]]],[11,"depth","","",213,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",213,[[["self"]],["f32"]]],[11,"x_dimension","","",213,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",213,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",213,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",213,[[["self"],["ui"]],["dimension"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"from","","",213,[[["t"]],["t"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"into","","",330,[[["self"]],["u"]]],[11,"from","","",330,[[["t"]],["t"]]],[11,"try_from","","",330,[[["u"]],["result"]]],[11,"borrow","","",330,[[["self"]],["t"]]],[11,"borrow_mut","","",330,[[["self"]],["t"]]],[11,"try_into","","",330,[[["self"]],["result"]]],[11,"get_type_id","","",330,[[["self"]],["typeid"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"from","","",211,[[["t"]],["t"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"from","","",212,[[["t"]],["t"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"into","conrod_core::widget::graph","",331,[[["self"]],["u"]]],[11,"to_owned","","",331,[[["self"]],["t"]]],[11,"clone_into","","",331,N],[11,"from","","",331,[[["t"]],["t"]]],[11,"try_from","","",331,[[["u"]],["result"]]],[11,"borrow","","",331,[[["self"]],["t"]]],[11,"borrow_mut","","",331,[[["self"]],["t"]]],[11,"try_into","","",331,[[["self"]],["result"]]],[11,"get_type_id","","",331,[[["self"]],["typeid"]]],[11,"x_position","","",215,[[["self"],["position"]],["w"]]],[11,"y_position","","",215,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",215,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",215,[[["self"],["ui"]],["position"]]],[11,"depth","","",215,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",215,[[["self"]],["f32"]]],[11,"x_dimension","","",215,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",215,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",215,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",215,[[["self"],["ui"]],["dimension"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"from","","",215,[[["t"]],["t"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"from","","",216,[[["t"]],["t"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"into","","",332,[[["self"]],["u"]]],[11,"from","","",332,[[["t"]],["t"]]],[11,"try_from","","",332,[[["u"]],["result"]]],[11,"borrow","","",332,[[["self"]],["t"]]],[11,"borrow_mut","","",332,[[["self"]],["t"]]],[11,"try_into","","",332,[[["self"]],["result"]]],[11,"get_type_id","","",332,[[["self"]],["typeid"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"from","","",217,[[["t"]],["t"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"equivalent","","",217,[[["self"],["k"]],["bool"]]],[11,"into","","",333,[[["self"]],["u"]]],[11,"to_owned","","",333,[[["self"]],["t"]]],[11,"clone_into","","",333,N],[11,"from","","",333,[[["t"]],["t"]]],[11,"try_from","","",333,[[["u"]],["result"]]],[11,"borrow","","",333,[[["self"]],["t"]]],[11,"borrow_mut","","",333,[[["self"]],["t"]]],[11,"try_into","","",333,[[["self"]],["result"]]],[11,"get_type_id","","",333,[[["self"]],["typeid"]]],[11,"into","","",334,[[["self"]],["u"]]],[11,"from","","",334,[[["t"]],["t"]]],[11,"try_from","","",334,[[["u"]],["result"]]],[11,"borrow","","",334,[[["self"]],["t"]]],[11,"borrow_mut","","",334,[[["self"]],["t"]]],[11,"try_into","","",334,[[["self"]],["result"]]],[11,"get_type_id","","",334,[[["self"]],["typeid"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"into","","",335,[[["self"]],["u"]]],[11,"from","","",335,[[["t"]],["t"]]],[11,"into_iter","","",335,[[["self"]],["i"]]],[11,"try_from","","",335,[[["u"]],["result"]]],[11,"borrow","","",335,[[["self"]],["t"]]],[11,"borrow_mut","","",335,[[["self"]],["t"]]],[11,"try_into","","",335,[[["self"]],["result"]]],[11,"get_type_id","","",335,[[["self"]],["typeid"]]],[11,"into","","",336,[[["self"]],["u"]]],[11,"from","","",336,[[["t"]],["t"]]],[11,"into_iter","","",336,[[["self"]],["i"]]],[11,"try_from","","",336,[[["u"]],["result"]]],[11,"borrow","","",336,[[["self"]],["t"]]],[11,"borrow_mut","","",336,[[["self"]],["t"]]],[11,"try_into","","",336,[[["self"]],["result"]]],[11,"get_type_id","","",336,[[["self"]],["typeid"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"into","","",337,[[["self"]],["u"]]],[11,"from","","",337,[[["t"]],["t"]]],[11,"into_iter","","",337,[[["self"]],["i"]]],[11,"try_from","","",337,[[["u"]],["result"]]],[11,"borrow","","",337,[[["self"]],["t"]]],[11,"borrow_mut","","",337,[[["self"]],["t"]]],[11,"try_into","","",337,[[["self"]],["result"]]],[11,"get_type_id","","",337,[[["self"]],["typeid"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"from","","",218,[[["t"]],["t"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"from","","",219,[[["t"]],["t"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"from","","",220,[[["t"]],["t"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"equivalent","","",220,[[["self"],["k"]],["bool"]]],[11,"x_position","conrod_core::widget::graph::node","",221,[[["self"],["position"]],["w"]]],[11,"y_position","","",221,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",221,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",221,[[["self"],["ui"]],["position"]]],[11,"depth","","",221,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",221,[[["self"]],["f32"]]],[11,"x_dimension","","",221,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",221,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",221,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",221,[[["self"],["ui"]],["dimension"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"from","","",221,[[["t"]],["t"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"from","","",222,[[["t"]],["t"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"from","","",223,[[["t"]],["t"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"equivalent","","",223,[[["self"],["k"]],["bool"]]],[11,"into","","",338,[[["self"]],["u"]]],[11,"from","","",338,[[["t"]],["t"]]],[11,"try_from","","",338,[[["u"]],["result"]]],[11,"borrow","","",338,[[["self"]],["t"]]],[11,"borrow_mut","","",338,[[["self"]],["t"]]],[11,"try_into","","",338,[[["self"]],["result"]]],[11,"get_type_id","","",338,[[["self"]],["typeid"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"from","","",224,[[["t"]],["t"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"into","","",339,[[["self"]],["u"]]],[11,"to_owned","","",339,[[["self"]],["t"]]],[11,"clone_into","","",339,N],[11,"from","","",339,[[["t"]],["t"]]],[11,"into_iter","","",339,[[["self"]],["i"]]],[11,"try_from","","",339,[[["u"]],["result"]]],[11,"borrow","","",339,[[["self"]],["t"]]],[11,"borrow_mut","","",339,[[["self"]],["t"]]],[11,"try_into","","",339,[[["self"]],["result"]]],[11,"get_type_id","","",339,[[["self"]],["typeid"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"from","","",225,[[["t"]],["t"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"equivalent","","",225,[[["self"],["k"]],["bool"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"from","","",226,[[["t"]],["t"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"equivalent","","",226,[[["self"],["k"]],["bool"]]],[11,"x_position","conrod_core::widget::number_dialer","",235,[[["self"],["position"]],["w"]]],[11,"y_position","","",235,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",235,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",235,[[["self"],["ui"]],["position"]]],[11,"depth","","",235,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",235,[[["self"]],["f32"]]],[11,"x_dimension","","",235,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",235,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",235,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",235,[[["self"],["ui"]],["dimension"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,N],[11,"from","","",234,[[["t"]],["t"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"into","","",340,[[["self"]],["u"]]],[11,"from","","",340,[[["t"]],["t"]]],[11,"try_from","","",340,[[["u"]],["result"]]],[11,"borrow","","",340,[[["self"]],["t"]]],[11,"borrow_mut","","",340,[[["self"]],["t"]]],[11,"try_into","","",340,[[["self"]],["result"]]],[11,"get_type_id","","",340,[[["self"]],["typeid"]]],[11,"into","","",341,[[["self"]],["u"]]],[11,"to_owned","","",341,[[["self"]],["t"]]],[11,"clone_into","","",341,N],[11,"from","","",341,[[["t"]],["t"]]],[11,"try_from","","",341,[[["u"]],["result"]]],[11,"borrow","","",341,[[["self"]],["t"]]],[11,"borrow_mut","","",341,[[["self"]],["t"]]],[11,"try_into","","",341,[[["self"]],["result"]]],[11,"get_type_id","","",341,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::plot_path","",237,[[["self"],["position"]],["w"]]],[11,"y_position","","",237,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",237,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",237,[[["self"],["ui"]],["position"]]],[11,"depth","","",237,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",237,[[["self"]],["f32"]]],[11,"x_dimension","","",237,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",237,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",237,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",237,[[["self"],["ui"]],["dimension"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"from","","",236,[[["t"]],["t"]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"into","","",342,[[["self"]],["u"]]],[11,"from","","",342,[[["t"]],["t"]]],[11,"try_from","","",342,[[["u"]],["result"]]],[11,"borrow","","",342,[[["self"]],["t"]]],[11,"borrow_mut","","",342,[[["self"]],["t"]]],[11,"try_into","","",342,[[["self"]],["result"]]],[11,"get_type_id","","",342,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::range_slider","",238,[[["self"],["position"]],["w"]]],[11,"y_position","","",238,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",238,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",238,[[["self"],["ui"]],["position"]]],[11,"depth","","",238,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",238,[[["self"]],["f32"]]],[11,"x_dimension","","",238,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",238,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",238,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",238,[[["self"],["ui"]],["dimension"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"from","","",239,[[["t"]],["t"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"into","","",343,[[["self"]],["u"]]],[11,"from","","",343,[[["t"]],["t"]]],[11,"try_from","","",343,[[["u"]],["result"]]],[11,"borrow","","",343,[[["self"]],["t"]]],[11,"borrow_mut","","",343,[[["self"]],["t"]]],[11,"try_into","","",343,[[["self"]],["result"]]],[11,"get_type_id","","",343,[[["self"]],["typeid"]]],[11,"into","","",344,[[["self"]],["u"]]],[11,"to_owned","","",344,[[["self"]],["t"]]],[11,"clone_into","","",344,N],[11,"from","","",344,[[["t"]],["t"]]],[11,"into_iter","","",344,[[["self"]],["i"]]],[11,"try_from","","",344,[[["u"]],["result"]]],[11,"borrow","","",344,[[["self"]],["t"]]],[11,"borrow_mut","","",344,[[["self"]],["t"]]],[11,"try_into","","",344,[[["self"]],["result"]]],[11,"get_type_id","","",344,[[["self"]],["typeid"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"from","","",240,[[["t"]],["t"]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"from","","",241,[[["t"]],["t"]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::rounded_rectangle","",242,[[["self"],["position"]],["w"]]],[11,"y_position","","",242,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",242,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",242,[[["self"],["ui"]],["position"]]],[11,"depth","","",242,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",242,[[["self"]],["f32"]]],[11,"x_dimension","","",242,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",242,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",242,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",242,[[["self"],["ui"]],["dimension"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,N],[11,"from","","",242,[[["t"]],["t"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"into","","",345,[[["self"]],["u"]]],[11,"from","","",345,[[["t"]],["t"]]],[11,"try_from","","",345,[[["u"]],["result"]]],[11,"borrow","","",345,[[["self"]],["t"]]],[11,"borrow_mut","","",345,[[["self"]],["t"]]],[11,"try_into","","",345,[[["self"]],["result"]]],[11,"get_type_id","","",345,[[["self"]],["typeid"]]],[11,"into","","",346,[[["self"]],["u"]]],[11,"to_owned","","",346,[[["self"]],["t"]]],[11,"clone_into","","",346,N],[11,"from","","",346,[[["t"]],["t"]]],[11,"into_iter","","",346,[[["self"]],["i"]]],[11,"try_from","","",346,[[["u"]],["result"]]],[11,"borrow","","",346,[[["self"]],["t"]]],[11,"borrow_mut","","",346,[[["self"]],["t"]]],[11,"try_into","","",346,[[["self"]],["result"]]],[11,"get_type_id","","",346,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::scrollbar","",245,[[["self"],["position"]],["w"]]],[11,"y_position","","",245,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",245,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",245,[[["self"],["ui"]],["position"]]],[11,"depth","","",245,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",245,[[["self"]],["f32"]]],[11,"x_dimension","","",245,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",245,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",245,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",245,[[["self"],["ui"]],["dimension"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,N],[11,"from","","",243,[[["t"]],["t"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"into","","",347,[[["self"]],["u"]]],[11,"from","","",347,[[["t"]],["t"]]],[11,"try_from","","",347,[[["u"]],["result"]]],[11,"borrow","","",347,[[["self"]],["t"]]],[11,"borrow_mut","","",347,[[["self"]],["t"]]],[11,"try_into","","",347,[[["self"]],["result"]]],[11,"get_type_id","","",347,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::slider","",246,[[["self"],["position"]],["w"]]],[11,"y_position","","",246,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",246,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",246,[[["self"],["ui"]],["position"]]],[11,"depth","","",246,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",246,[[["self"]],["f32"]]],[11,"x_dimension","","",246,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",246,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",246,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",246,[[["self"],["ui"]],["dimension"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,N],[11,"from","","",247,[[["t"]],["t"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"into","","",348,[[["self"]],["u"]]],[11,"from","","",348,[[["t"]],["t"]]],[11,"try_from","","",348,[[["u"]],["result"]]],[11,"borrow","","",348,[[["self"]],["t"]]],[11,"borrow_mut","","",348,[[["self"]],["t"]]],[11,"try_into","","",348,[[["self"]],["result"]]],[11,"get_type_id","","",348,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::tabs","",250,[[["self"],["position"]],["w"]]],[11,"y_position","","",250,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",250,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",250,[[["self"],["ui"]],["position"]]],[11,"depth","","",250,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",250,[[["self"]],["f32"]]],[11,"x_dimension","","",250,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",250,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",250,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",250,[[["self"],["ui"]],["dimension"]]],[11,"into","","",250,[[["self"]],["u"]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"try_into","","",250,[[["self"]],["result"]]],[11,"get_type_id","","",250,[[["self"]],["typeid"]]],[11,"into","","",349,[[["self"]],["u"]]],[11,"from","","",349,[[["t"]],["t"]]],[11,"try_from","","",349,[[["u"]],["result"]]],[11,"borrow","","",349,[[["self"]],["t"]]],[11,"borrow_mut","","",349,[[["self"]],["t"]]],[11,"try_into","","",349,[[["self"]],["result"]]],[11,"get_type_id","","",349,[[["self"]],["typeid"]]],[11,"into","","",350,[[["self"]],["u"]]],[11,"to_owned","","",350,[[["self"]],["t"]]],[11,"clone_into","","",350,N],[11,"from","","",350,[[["t"]],["t"]]],[11,"try_from","","",350,[[["u"]],["result"]]],[11,"borrow","","",350,[[["self"]],["t"]]],[11,"borrow_mut","","",350,[[["self"]],["t"]]],[11,"try_into","","",350,[[["self"]],["result"]]],[11,"get_type_id","","",350,[[["self"]],["typeid"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,N],[11,"from","","",248,[[["t"]],["t"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"into","","",251,[[["self"]],["u"]]],[11,"from","","",251,[[["t"]],["t"]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"try_into","","",251,[[["self"]],["result"]]],[11,"get_type_id","","",251,[[["self"]],["typeid"]]],[11,"into","","",249,[[["self"]],["u"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,N],[11,"from","","",249,[[["t"]],["t"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"try_into","","",249,[[["self"]],["result"]]],[11,"get_type_id","","",249,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::text_box","",254,[[["self"],["position"]],["w"]]],[11,"y_position","","",254,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",254,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",254,[[["self"],["ui"]],["position"]]],[11,"depth","","",254,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",254,[[["self"]],["f32"]]],[11,"x_dimension","","",254,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",254,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",254,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",254,[[["self"],["ui"]],["dimension"]]],[11,"into","","",254,[[["self"]],["u"]]],[11,"from","","",254,[[["t"]],["t"]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"try_into","","",254,[[["self"]],["result"]]],[11,"get_type_id","","",254,[[["self"]],["typeid"]]],[11,"into","","",252,[[["self"]],["u"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,N],[11,"from","","",252,[[["t"]],["t"]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"try_into","","",252,[[["self"]],["result"]]],[11,"get_type_id","","",252,[[["self"]],["typeid"]]],[11,"into","","",351,[[["self"]],["u"]]],[11,"from","","",351,[[["t"]],["t"]]],[11,"try_from","","",351,[[["u"]],["result"]]],[11,"borrow","","",351,[[["self"]],["t"]]],[11,"borrow_mut","","",351,[[["self"]],["t"]]],[11,"try_into","","",351,[[["self"]],["result"]]],[11,"get_type_id","","",351,[[["self"]],["typeid"]]],[11,"into","","",253,[[["self"]],["u"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,N],[11,"from","","",253,[[["t"]],["t"]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"try_into","","",253,[[["self"]],["result"]]],[11,"get_type_id","","",253,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::text_edit","",258,[[["self"],["position"]],["w"]]],[11,"y_position","","",258,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",258,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",258,[[["self"],["ui"]],["position"]]],[11,"depth","","",258,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",258,[[["self"]],["f32"]]],[11,"x_dimension","","",258,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",258,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",258,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",258,[[["self"],["ui"]],["dimension"]]],[11,"into","","",258,[[["self"]],["u"]]],[11,"from","","",258,[[["t"]],["t"]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"try_into","","",258,[[["self"]],["result"]]],[11,"get_type_id","","",258,[[["self"]],["typeid"]]],[11,"into","","",255,[[["self"]],["u"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,N],[11,"from","","",255,[[["t"]],["t"]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"try_into","","",255,[[["self"]],["result"]]],[11,"get_type_id","","",255,[[["self"]],["typeid"]]],[11,"into","","",352,[[["self"]],["u"]]],[11,"from","","",352,[[["t"]],["t"]]],[11,"try_from","","",352,[[["u"]],["result"]]],[11,"borrow","","",352,[[["self"]],["t"]]],[11,"borrow_mut","","",352,[[["self"]],["t"]]],[11,"try_into","","",352,[[["self"]],["result"]]],[11,"get_type_id","","",352,[[["self"]],["typeid"]]],[11,"into","","",256,[[["self"]],["u"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,N],[11,"from","","",256,[[["t"]],["t"]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"try_into","","",256,[[["self"]],["result"]]],[11,"get_type_id","","",256,[[["self"]],["typeid"]]],[11,"into","","",257,[[["self"]],["u"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,N],[11,"from","","",257,[[["t"]],["t"]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"try_into","","",257,[[["self"]],["result"]]],[11,"get_type_id","","",257,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::title_bar","",259,[[["self"],["position"]],["w"]]],[11,"y_position","","",259,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",259,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",259,[[["self"],["ui"]],["position"]]],[11,"depth","","",259,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",259,[[["self"]],["f32"]]],[11,"x_dimension","","",259,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",259,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",259,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",259,[[["self"],["ui"]],["dimension"]]],[11,"into","","",259,[[["self"]],["u"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,N],[11,"from","","",259,[[["t"]],["t"]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"try_into","","",259,[[["self"]],["result"]]],[11,"get_type_id","","",259,[[["self"]],["typeid"]]],[11,"into","","",353,[[["self"]],["u"]]],[11,"from","","",353,[[["t"]],["t"]]],[11,"try_from","","",353,[[["u"]],["result"]]],[11,"borrow","","",353,[[["self"]],["t"]]],[11,"borrow_mut","","",353,[[["self"]],["t"]]],[11,"try_into","","",353,[[["self"]],["result"]]],[11,"get_type_id","","",353,[[["self"]],["typeid"]]],[11,"into","","",260,[[["self"]],["u"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,N],[11,"from","","",260,[[["t"]],["t"]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"try_into","","",260,[[["self"]],["result"]]],[11,"get_type_id","","",260,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::toggle","",261,[[["self"],["position"]],["w"]]],[11,"y_position","","",261,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",261,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",261,[[["self"],["ui"]],["position"]]],[11,"depth","","",261,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",261,[[["self"]],["f32"]]],[11,"x_dimension","","",261,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",261,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",261,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",261,[[["self"],["ui"]],["dimension"]]],[11,"into","","",261,[[["self"]],["u"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,N],[11,"from","","",261,[[["t"]],["t"]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"try_into","","",261,[[["self"]],["result"]]],[11,"get_type_id","","",261,[[["self"]],["typeid"]]],[11,"into","","",262,[[["self"]],["u"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,N],[11,"from","","",262,[[["t"]],["t"]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"try_into","","",262,[[["self"]],["result"]]],[11,"get_type_id","","",262,[[["self"]],["typeid"]]],[11,"into","","",354,[[["self"]],["u"]]],[11,"from","","",354,[[["t"]],["t"]]],[11,"try_from","","",354,[[["u"]],["result"]]],[11,"borrow","","",354,[[["self"]],["t"]]],[11,"borrow_mut","","",354,[[["self"]],["t"]]],[11,"try_into","","",354,[[["self"]],["result"]]],[11,"get_type_id","","",354,[[["self"]],["typeid"]]],[11,"into","","",355,[[["self"]],["u"]]],[11,"to_owned","","",355,[[["self"]],["t"]]],[11,"clone_into","","",355,N],[11,"from","","",355,[[["t"]],["t"]]],[11,"into_iter","","",355,[[["self"]],["i"]]],[11,"try_from","","",355,[[["u"]],["result"]]],[11,"borrow","","",355,[[["self"]],["t"]]],[11,"borrow_mut","","",355,[[["self"]],["t"]]],[11,"try_into","","",355,[[["self"]],["result"]]],[11,"get_type_id","","",355,[[["self"]],["typeid"]]],[11,"x_position","conrod_core::widget::xy_pad","",263,[[["self"],["position"]],["w"]]],[11,"y_position","","",263,[[["self"],["position"]],["w"]]],[11,"get_x_position","","",263,[[["self"],["ui"]],["position"]]],[11,"get_y_position","","",263,[[["self"],["ui"]],["position"]]],[11,"depth","","",263,[[["self"],["f32"]],["w"]]],[11,"get_depth","","",263,[[["self"]],["f32"]]],[11,"x_dimension","","",263,[[["self"],["dimension"]],["w"]]],[11,"y_dimension","","",263,[[["self"],["dimension"]],["w"]]],[11,"get_x_dimension","","We attempt to retrieve the `x` Dimension for the widget…",263,[[["self"],["ui"]],["dimension"]]],[11,"get_y_dimension","","We attempt to retrieve the `y` Dimension for the widget…",263,[[["self"],["ui"]],["dimension"]]],[11,"into","","",263,[[["self"]],["u"]]],[11,"from","","",263,[[["t"]],["t"]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"try_into","","",263,[[["self"]],["result"]]],[11,"get_type_id","","",263,[[["self"]],["typeid"]]],[11,"into","","",264,[[["self"]],["u"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,N],[11,"from","","",264,[[["t"]],["t"]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"try_into","","",264,[[["self"]],["result"]]],[11,"get_type_id","","",264,[[["self"]],["typeid"]]],[11,"into","","",356,[[["self"]],["u"]]],[11,"from","","",356,[[["t"]],["t"]]],[11,"try_from","","",356,[[["u"]],["result"]]],[11,"borrow","","",356,[[["self"]],["t"]]],[11,"borrow_mut","","",356,[[["self"]],["t"]]],[11,"try_into","","",356,[[["self"]],["result"]]],[11,"get_type_id","","",356,[[["self"]],["typeid"]]],[11,"into","conrod_core::cursor","",268,[[["self"]],["u"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,N],[11,"from","","",268,[[["t"]],["t"]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"try_into","","",268,[[["self"]],["result"]]],[11,"get_type_id","","",268,[[["self"]],["typeid"]]],[11,"equivalent","","",268,[[["self"],["k"]],["bool"]]],[11,"sub","conrod_core::input::keyboard","Returns the set difference of the two sets of flags.",273,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"hash","conrod_core::input","",37,N],[11,"hash","conrod_core::input::state::mouse","",41,N],[11,"hash","conrod_core::input","",38,N],[11,"hash","conrod_core::input::keyboard","",273,N],[11,"hash","conrod_core::input","",40,N],[11,"default","conrod_core::input::keyboard","",273,[[],["modifierkey"]]],[11,"deserialize","conrod_core::input","",38,[[["__d"]],["result",["controllerbutton"]]]],[11,"deserialize","conrod_core::input::keyboard","",273,[[["__d"]],["result",["modifierkey"]]]],[11,"deserialize","conrod_core::input::state::mouse","",41,[[["__d"]],["result",["mousebutton"]]]],[11,"deserialize","conrod_core::input","",42,[[["__d"]],["result",["renderargs"]]]],[11,"deserialize","","",37,[[["__d"]],["result",["button"]]]],[11,"deserialize","","",39,[[["__d"]],["result",["controlleraxisargs"]]]],[11,"deserialize","","",40,[[["__d"]],["result",["key"]]]],[11,"bitxor","conrod_core::input::keyboard","Returns the left flags, but with all the right flags…",273,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"from","conrod_core::input","",37,[[["mousebutton"]],["button"]]],[11,"from","","",40,[[["u32"]],["key"]]],[11,"from","","",37,[[["key"]],["button"]]],[11,"from","conrod_core::input::state::mouse","",41,[[["u32"]],["mousebutton"]]],[11,"from","conrod_core::input","",37,[[["controllerbutton"]],["button"]]],[11,"eq","","",38,[[["self"],["controllerbutton"]],["bool"]]],[11,"ne","","",38,[[["self"],["controllerbutton"]],["bool"]]],[11,"eq","","",37,[[["self"],["button"]],["bool"]]],[11,"ne","","",37,[[["self"],["button"]],["bool"]]],[11,"eq","","",39,[[["self"],["controlleraxisargs"]],["bool"]]],[11,"ne","","",39,[[["self"],["controlleraxisargs"]],["bool"]]],[11,"eq","","",40,[[["self"],["key"]],["bool"]]],[11,"eq","conrod_core::input::keyboard","",273,[[["self"],["modifierkey"]],["bool"]]],[11,"ne","","",273,[[["self"],["modifierkey"]],["bool"]]],[11,"eq","conrod_core::input::state::mouse","",41,[[["self"],["mousebutton"]],["bool"]]],[11,"eq","conrod_core::input","",42,[[["self"],["renderargs"]],["bool"]]],[11,"ne","","",42,[[["self"],["renderargs"]],["bool"]]],[11,"bitor_assign","conrod_core::input::keyboard","Adds the set of flags.",273,N],[11,"fmt","","",273,[[["self"],["formatter"]],["result",["error"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",273,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"fmt","","",273,[[["self"],["formatter"]],["result",["error"]]]],[11,"cmp","","",273,[[["self"],["modifierkey"]],["ordering"]]],[11,"cmp","conrod_core::input::state::mouse","",41,[[["self"],["mousebutton"]],["ordering"]]],[11,"cmp","conrod_core::input","",40,[[["self"],["key"]],["ordering"]]],[11,"partial_cmp","conrod_core::input::state::mouse","",41,[[["self"],["mousebutton"]],["option",["ordering"]]]],[11,"partial_cmp","conrod_core::input","",40,[[["self"],["key"]],["option",["ordering"]]]],[11,"partial_cmp","conrod_core::input::keyboard","",273,[[["self"],["modifierkey"]],["option",["ordering"]]]],[11,"lt","","",273,[[["self"],["modifierkey"]],["bool"]]],[11,"le","","",273,[[["self"],["modifierkey"]],["bool"]]],[11,"gt","","",273,[[["self"],["modifierkey"]],["bool"]]],[11,"ge","","",273,[[["self"],["modifierkey"]],["bool"]]],[11,"bitor","","Returns the union of the two sets of flags.",273,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"fmt","","",273,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_iter","","",273,[[["t"]],["modifierkey"]]],[11,"fmt","","",273,[[["self"],["formatter"]],["result",["error"]]]],[11,"serialize","conrod_core::input","",37,[[["self"],["__s"]],["result"]]],[11,"serialize","conrod_core::input::keyboard","",273,[[["self"],["__s"]],["result"]]],[11,"serialize","conrod_core::input::state::mouse","",41,[[["self"],["__s"]],["result"]]],[11,"serialize","conrod_core::input","",38,[[["self"],["__s"]],["result"]]],[11,"serialize","","",40,[[["self"],["__s"]],["result"]]],[11,"serialize","","",39,[[["self"],["__s"]],["result"]]],[11,"serialize","","",42,[[["self"],["__s"]],["result"]]],[11,"not","conrod_core::input::keyboard","Returns the complement of this set of flags.",273,[[["self"]],["modifierkey"]]],[11,"bitxor_assign","","Toggles the set of flags.",273,N],[11,"clone","conrod_core::input","",39,[[["self"]],["controlleraxisargs"]]],[11,"clone","","",37,[[["self"]],["button"]]],[11,"clone","conrod_core::input::keyboard","",273,[[["self"]],["modifierkey"]]],[11,"clone","conrod_core::input","",40,[[["self"]],["key"]]],[11,"clone","conrod_core::input::state::mouse","",41,[[["self"]],["mousebutton"]]],[11,"clone","conrod_core::input","",38,[[["self"]],["controllerbutton"]]],[11,"clone","","",42,[[["self"]],["renderargs"]]],[11,"extend","conrod_core::input::keyboard","",273,N],[11,"sub_assign","","Disables all flags enabled in the set.",273,N],[11,"bitand_assign","","Disables all flags disabled in the set.",273,N],[11,"fmt","conrod_core::input","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","conrod_core::input::state::mouse","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","conrod_core::input","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","conrod_core::input::keyboard","",273,[[["self"],["formatter"]],["result",["error"]]]],[11,"sub","conrod_core::text::rt","",88,[[["self"],["vector"]],["point"]]],[11,"sub","","",90,[[["self"],["vector"]],["vector"]]],[11,"sub","","",88,[[["self"],["point"]],["vector"]]],[11,"hash","conrod_core::text::rt::gpu_cache","",91,N],[11,"hash","","",93,N],[11,"hash","conrod_core::text::rt","",88,N],[11,"hash","conrod_core::text::rt::gpu_cache","",92,N],[11,"hash","conrod_core::text::rt","",89,N],[11,"hash","conrod_core::text","",85,N],[11,"hash","conrod_core::text::rt","",90,N],[11,"default","conrod_core::text::rt::gpu_cache","",291,[[],["cachebuilder"]]],[11,"mul","conrod_core::text::rt","",90,[[["self"],["f64"]],["vector",["f64"]]]],[11,"mul","","",90,[[["self"],["f32"]],["vector",["f32"]]]],[11,"into_glyph_id","conrod_core::text","",85,[[["self"],["font"]],["glyphid"]]],[11,"fmt","conrod_core::text::rt::gpu_cache","",91,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","conrod_core::text::rt","",90,[[["self"],["vector"]],["bool"]]],[11,"ne","","",90,[[["self"],["vector"]],["bool"]]],[11,"eq","conrod_core::text","",86,[[["self"],["scale"]],["bool"]]],[11,"ne","","",86,[[["self"],["scale"]],["bool"]]],[11,"eq","conrod_core::text::rt::gpu_cache","",92,[[["self"],["cachewriteerr"]],["bool"]]],[11,"eq","conrod_core::text::rt","",89,[[["self"],["rect"]],["bool"]]],[11,"ne","","",89,[[["self"],["rect"]],["bool"]]],[11,"eq","conrod_core::text::rt::gpu_cache","",91,[[["self"],["cachereaderr"]],["bool"]]],[11,"eq","conrod_core::text","",85,[[["self"],["glyphid"]],["bool"]]],[11,"ne","","",85,[[["self"],["glyphid"]],["bool"]]],[11,"eq","conrod_core::text::rt::gpu_cache","",93,[[["self"],["cachedby"]],["bool"]]],[11,"eq","conrod_core::text::rt","",88,[[["self"],["point"]],["bool"]]],[11,"ne","","",88,[[["self"],["point"]],["bool"]]],[11,"div","","",90,[[["self"],["f32"]],["vector",["f32"]]]],[11,"div","","",90,[[["self"],["f64"]],["vector",["f64"]]]],[11,"next","conrod_core::text","",288,[[["self"]],["option",["positionedglyph"]]]],[11,"next","","",287,[[["self"]],["option",["glyph"]]]],[11,"description","conrod_core::text::rt::gpu_cache","",91,[[["self"]],["str"]]],[11,"description","","",92,[[["self"]],["str"]]],[11,"clone","","",291,[[["self"]],["cachebuilder"]]],[11,"clone","","",91,[[["self"]],["cachereaderr"]]],[11,"clone","conrod_core::text::rt","",89,[[["self"]],["rect"]]],[11,"clone","conrod_core::text","",288,[[["self"]],["layoutiter"]]],[11,"clone","conrod_core::text::rt::gpu_cache","",92,[[["self"]],["cachewriteerr"]]],[11,"clone","conrod_core::text","",86,[[["self"]],["scale"]]],[11,"clone","conrod_core::text::rt","",88,[[["self"]],["point"]]],[11,"clone","","",90,[[["self"]],["vector"]]],[11,"clone","conrod_core::text","",286,[[["self"]],["glyph"]]],[11,"clone","conrod_core::text::rt::gpu_cache","",93,[[["self"]],["cachedby"]]],[11,"clone","conrod_core::text","",85,[[["self"]],["glyphid"]]],[11,"clone","","",287,[[["self"]],["glyphiter"]]],[11,"add","conrod_core::text::rt","",88,[[["self"],["vector"]],["point"]]],[11,"add","","",90,[[["self"],["point"]],["point"]]],[11,"add","","",90,[[["self"],["vector"]],["vector"]]],[11,"cmp","conrod_core::text","",85,[[["self"],["glyphid"]],["ordering"]]],[11,"cmp","conrod_core::text::rt","",90,[[["self"],["vector"]],["ordering"]]],[11,"cmp","conrod_core::text::rt::gpu_cache","",91,[[["self"],["cachereaderr"]],["ordering"]]],[11,"cmp","conrod_core::text::rt","",88,[[["self"],["point"]],["ordering"]]],[11,"cmp","conrod_core::text::rt::gpu_cache","",93,[[["self"],["cachedby"]],["ordering"]]],[11,"cmp","conrod_core::text::rt","",89,[[["self"],["rect"]],["ordering"]]],[11,"cmp","conrod_core::text::rt::gpu_cache","",92,[[["self"],["cachewriteerr"]],["ordering"]]],[11,"partial_cmp","","",92,[[["self"],["cachewriteerr"]],["option",["ordering"]]]],[11,"partial_cmp","conrod_core::text::rt","",88,[[["self"],["point"]],["option",["ordering"]]]],[11,"lt","","",88,[[["self"],["point"]],["bool"]]],[11,"le","","",88,[[["self"],["point"]],["bool"]]],[11,"gt","","",88,[[["self"],["point"]],["bool"]]],[11,"ge","","",88,[[["self"],["point"]],["bool"]]],[11,"partial_cmp","conrod_core::text","",86,[[["self"],["scale"]],["option",["ordering"]]]],[11,"lt","","",86,[[["self"],["scale"]],["bool"]]],[11,"le","","",86,[[["self"],["scale"]],["bool"]]],[11,"gt","","",86,[[["self"],["scale"]],["bool"]]],[11,"ge","","",86,[[["self"],["scale"]],["bool"]]],[11,"partial_cmp","conrod_core::text::rt::gpu_cache","",93,[[["self"],["cachedby"]],["option",["ordering"]]]],[11,"partial_cmp","","",91,[[["self"],["cachereaderr"]],["option",["ordering"]]]],[11,"partial_cmp","conrod_core::text","",85,[[["self"],["glyphid"]],["option",["ordering"]]]],[11,"lt","","",85,[[["self"],["glyphid"]],["bool"]]],[11,"le","","",85,[[["self"],["glyphid"]],["bool"]]],[11,"gt","","",85,[[["self"],["glyphid"]],["bool"]]],[11,"ge","","",85,[[["self"],["glyphid"]],["bool"]]],[11,"partial_cmp","conrod_core::text::rt","",90,[[["self"],["vector"]],["option",["ordering"]]]],[11,"lt","","",90,[[["self"],["vector"]],["bool"]]],[11,"le","","",90,[[["self"],["vector"]],["bool"]]],[11,"gt","","",90,[[["self"],["vector"]],["bool"]]],[11,"ge","","",90,[[["self"],["vector"]],["bool"]]],[11,"partial_cmp","","",89,[[["self"],["rect"]],["option",["ordering"]]]],[11,"lt","","",89,[[["self"],["rect"]],["bool"]]],[11,"le","","",89,[[["self"],["rect"]],["bool"]]],[11,"gt","","",89,[[["self"],["rect"]],["bool"]]],[11,"ge","","",89,[[["self"],["rect"]],["bool"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","conrod_core::text::rt::gpu_cache","",291,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","conrod_core::text","",286,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","conrod_core::text::rt","",88,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","conrod_core::text","",85,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result",["error"]]]],[11,"border","conrod_core::widget::bordered_rectangle","Build the type's self.$($assignee).+ with the given $Type.",156,[[["self"],["scalar"]],["self"]]],[11,"border_color","","Build the type's self.$($assignee).+ with the given $Type.",156,[[["self"],["color"]],["self"]]],[11,"border","conrod_core::widget::button","Build the type's self.$($assignee).+ with the given $Type.",159,[[["self"],["scalar"]],["self"]]],[11,"border_color","","Build the type's self.$($assignee).+ with the given $Type.",159,[[["self"],["color"]],["self"]]],[11,"border","conrod_core::widget::canvas","Build the type's self.$($assignee).+ with the given $Type.",167,[[["self"],["scalar"]],["self"]]],[11,"border_color","","Build the type's self.$($assignee).+ with the given $Type.",167,[[["self"],["color"]],["self"]]],[11,"border","conrod_core::widget::collapsible_area","",175,[[["self"],["scalar"]],["self"]]],[11,"border_color","","",175,[[["self"],["color"]],["self"]]],[11,"border","conrod_core::widget::drop_down_list","Build the type's self.$($assignee).+ with the given $Type.",178,[[["self"],["scalar"]],["self"]]],[11,"border_color","","Build the type's self.$($assignee).+ with the given $Type.",178,[[["self"],["color"]],["self"]]],[11,"border","conrod_core::widget::envelope_editor","Build the type's self.$($assignee).+ with the given $Type.",179,[[["self"],["scalar"]],["self"]]],[11,"border_color","","Build the type's self.$($assignee).+ with the given $Type.",179,[[["self"],["color"]],["self"]]],[11,"border","conrod_core::widget::number_dialer","Build the type's self.$($assignee).+ with the given $Type.",235,[[["self"],["scalar"]],["self"]]],[11,"border_color","","Build the type's self.$($assignee).+ with the given $Type.",235,[[["self"],["color"]],["self"]]],[11,"border","conrod_core::widget::range_slider","Build the type's self.$($assignee).+ with the given $Type.",238,[[["self"],["scalar"]],["self"]]],[11,"border_color","","Build the type's self.$($assignee).+ with the given $Type.",238,[[["self"],["color"]],["self"]]],[11,"border","conrod_core::widget::slider","Build the type's self.$($assignee).+ with the given $Type.",246,[[["self"],["scalar"]],["self"]]],[11,"border_color","","Build the type's self.$($assignee).+ with the given $Type.",246,[[["self"],["color"]],["self"]]],[11,"border","conrod_core::widget::tabs","",250,[[["self"],["f64"]],["self"]]],[11,"border_color","","",250,[[["self"],["color"]],["self"]]],[11,"border","conrod_core::widget::text_box","Build the type's self.$($assignee).+ with the given $Type.",254,[[["self"],["scalar"]],["self"]]],[11,"border_color","","Build the type's self.$($assignee).+ with the given $Type.",254,[[["self"],["color"]],["self"]]],[11,"border","conrod_core::widget::title_bar","Build the type's self.$($assignee).+ with the given $Type.",259,[[["self"],["scalar"]],["self"]]],[11,"border_color","","Build the type's self.$($assignee).+ with the given $Type.",259,[[["self"],["color"]],["self"]]],[11,"border","conrod_core::widget::toggle","Build the type's self.$($assignee).+ with the given $Type.",261,[[["self"],["scalar"]],["self"]]],[11,"border_color","","Build the type's self.$($assignee).+ with the given $Type.",261,[[["self"],["color"]],["self"]]],[11,"border","conrod_core::widget::xy_pad","Build the type's self.$($assignee).+ with the given $Type.",263,[[["self"],["scalar"]],["self"]]],[11,"border_color","","Build the type's self.$($assignee).+ with the given $Type.",263,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::primitive::line","",123,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::primitive::point_path","",131,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::primitive::shape::oval","",135,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::primitive::shape::polygon","",140,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::primitive::shape::rectangle","",143,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::primitive::text","",152,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::bordered_rectangle","Build the type's self.$($assignee).+ with the given $Type.",156,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::button","Build the type's self.$($assignee).+ with the given $Type.",159,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::canvas","Build the type's self.$($assignee).+ with the given $Type.",167,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::collapsible_area","",175,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::drop_down_list","Build the type's self.$($assignee).+ with the given $Type.",178,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::envelope_editor","Build the type's self.$($assignee).+ with the given $Type.",179,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::file_navigator::directory_view","Build the type's self.$($assignee).+ with the given $Type.",187,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::file_navigator","Build the type's self.$($assignee).+ with the given $Type.",183,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::grid","Build the type's self.$($assignee).+ with the given $Type.",190,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::number_dialer","Build the type's self.$($assignee).+ with the given $Type.",235,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::plot_path","Build the type's self.$($assignee).+ with the given $Type.",237,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::range_slider","Build the type's self.$($assignee).+ with the given $Type.",238,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::rounded_rectangle","",242,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::scrollbar","Build the type's self.$($assignee).+ with the given $Type.",245,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::slider","Build the type's self.$($assignee).+ with the given $Type.",246,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::tabs","",250,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::text_box","Build the type's self.$($assignee).+ with the given $Type.",254,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::text_edit","Build the type's self.$($assignee).+ with the given $Type.",258,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::title_bar","Build the type's self.$($assignee).+ with the given $Type.",259,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::toggle","Build the type's self.$($assignee).+ with the given $Type.",261,[[["self"],["color"]],["self"]]],[11,"color","conrod_core::widget::xy_pad","Build the type's self.$($assignee).+ with the given $Type.",263,[[["self"],["color"]],["self"]]],[11,"label","conrod_core::widget::button","Build the type's self.$($assignee).+ with the given $Type.",159,[[["self"],["str"]],["self"]]],[11,"label_color","","Build the type's self.$($assignee).+ with the given $Type.",159,[[["self"],["color"]],["self"]]],[11,"label_font_size","","Build the type's self.$($assignee).+ with the given $Type.",159,[[["self"],["fontsize"]],["self"]]],[11,"label","conrod_core::widget::canvas","",167,[[["self"],["str"]],["self"]]],[11,"label_color","","Build the type's self.$($assignee).+ with the given $Type.",167,[[["self"],["color"]],["self"]]],[11,"label_font_size","","Build the type's self.$($assignee).+ with the given $Type.",167,[[["self"],["fontsize"]],["self"]]],[11,"label","conrod_core::widget::drop_down_list","Build the type's self.$($assignee).+ with the given $Type.",178,[[["self"],["str"]],["self"]]],[11,"label_color","","Build the type's self.$($assignee).+ with the given $Type.",178,[[["self"],["color"]],["self"]]],[11,"label_font_size","","Build the type's self.$($assignee).+ with the given $Type.",178,[[["self"],["fontsize"]],["self"]]],[11,"label","conrod_core::widget::envelope_editor","Build the type's self.$($assignee).+ with the given $Type.",179,[[["self"],["str"]],["self"]]],[11,"label_color","","Build the type's self.$($assignee).+ with the given $Type.",179,[[["self"],["color"]],["self"]]],[11,"label_font_size","","Build the type's self.$($assignee).+ with the given $Type.",179,[[["self"],["fontsize"]],["self"]]],[11,"label","conrod_core::widget::number_dialer","Build the type's self.$($assignee).+ with the given $Type.",235,[[["self"],["str"]],["self"]]],[11,"label_color","","Build the type's self.$($assignee).+ with the given $Type.",235,[[["self"],["color"]],["self"]]],[11,"label_font_size","","Build the type's self.$($assignee).+ with the given $Type.",235,[[["self"],["fontsize"]],["self"]]],[11,"label","conrod_core::widget::range_slider","Build the type's self.$($assignee).+ with the given $Type.",238,[[["self"],["str"]],["self"]]],[11,"label_color","","Build the type's self.$($assignee).+ with the given $Type.",238,[[["self"],["color"]],["self"]]],[11,"label_font_size","","Build the type's self.$($assignee).+ with the given $Type.",238,[[["self"],["fontsize"]],["self"]]],[11,"label","conrod_core::widget::slider","Build the type's self.$($assignee).+ with the given $Type.",246,[[["self"],["str"]],["self"]]],[11,"label_color","","Build the type's self.$($assignee).+ with the given $Type.",246,[[["self"],["color"]],["self"]]],[11,"label_font_size","","Build the type's self.$($assignee).+ with the given $Type.",246,[[["self"],["fontsize"]],["self"]]],[11,"label","conrod_core::widget::title_bar","Build the type's self.$($assignee).+ with the given $Type.",259,[[["self"],["str"]],["self"]]],[11,"label_color","","Build the type's self.$($assignee).+ with the given $Type.",259,[[["self"],["color"]],["self"]]],[11,"label_font_size","","Build the type's self.$($assignee).+ with the given $Type.",259,[[["self"],["fontsize"]],["self"]]],[11,"label","conrod_core::widget::toggle","Build the type's self.$($assignee).+ with the given $Type.",261,[[["self"],["str"]],["self"]]],[11,"label_color","","Build the type's self.$($assignee).+ with the given $Type.",261,[[["self"],["color"]],["self"]]],[11,"label_font_size","","Build the type's self.$($assignee).+ with the given $Type.",261,[[["self"],["fontsize"]],["self"]]],[11,"label","conrod_core::widget::xy_pad","Build the type's self.$($assignee).+ with the given $Type.",263,[[["self"],["str"]],["self"]]],[11,"label_color","","Build the type's self.$($assignee).+ with the given $Type.",263,[[["self"],["color"]],["self"]]],[11,"label_font_size","","Build the type's self.$($assignee).+ with the given $Type.",263,[[["self"],["fontsize"]],["self"]]],[11,"next_primitive","conrod_core::render","",82,[[["self"]],["option",["primitive"]]]],[11,"next_primitive","","",84,[[["self"]],["option",["primitive"]]]],[11,"parallel_range","conrod_core::widget::scroll","",303,[[["rect"]],["range"]]],[11,"perpendicular_range","","",303,[[["rect"]],["range"]]],[11,"padding_range","","",303,[[["padding"]],["range"]]],[11,"mouse_scalar","","",303,[[["point"]],["scalar"]]],[11,"offset_direction","","",303,[[],["scalar"]]],[11,"parallel_range","","",304,[[["rect"]],["range"]]],[11,"perpendicular_range","","",304,[[["rect"]],["range"]]],[11,"padding_range","","",304,[[["padding"]],["range"]]],[11,"mouse_scalar","","",304,[[["point"]],["scalar"]]],[11,"offset_direction","","",304,[[],["scalar"]]],[11,"point","conrod_core","",357,[[["self"]],["point"]]],[11,"add","","",357,[[["self"],["point"]],["self"]]],[11,"point","","",358,[[["self"]],["point"]]],[11,"add","","",358,[[["self"],["point"]],["self"]]],[11,"get_x","","Return the X value.",357,[[["self"]],["scalar"]]],[11,"get_y","","Return the Y value.",357,[[["self"]],["scalar"]]],[11,"set_x","","Return the X value.",357,[[["self"],["scalar"]]]],[11,"set_y","","Return the Y value.",357,[[["self"],["scalar"]]]],[11,"new","","Create a new Envelope Point.",357,[[["scalar"],["scalar"]],["point"]]],[11,"ranges","conrod_core::widget::list","",324,N],[11,"scrollbar","","",324,[[["id"]],["scrollbar"]]],[11,"common_scroll","","",324,[[["commonbuilder"]],["option",["scroll"]]]],[11,"scroll_list_kids","","",324,[[["list"]],["list"]]],[11,"position_item","","",324,[[["w"],["option",["id"]],["id"],["scalar"]],["w"]]],[11,"position_scroll_trigger","","",324,[[["w"],["id"]],["w"]]],[11,"size_breadth","","",324,[[["w"],["scalar"]],["w"]]],[11,"size_length","","",324,[[["w"],["scalar"]],["w"]]],[11,"ranges","","",323,N],[11,"scrollbar","","",323,[[["id"]],["scrollbar"]]],[11,"common_scroll","","",323,[[["commonbuilder"]],["option",["scroll"]]]],[11,"scroll_list_kids","","",323,[[["list"]],["list"]]],[11,"position_item","","",323,[[["w"],["option",["id"]],["id"],["scalar"]],["w"]]],[11,"position_scroll_trigger","","",323,[[["w"],["id"]],["w"]]],[11,"size_breadth","","",323,[[["w"],["scalar"]],["w"]]],[11,"size_length","","",323,[[["w"],["scalar"]],["w"]]],[11,"ranges","","",325,N],[11,"scrollbar","","",325,[[["id"]],["scrollbar"]]],[11,"common_scroll","","",325,[[["commonbuilder"]],["option",["scroll"]]]],[11,"scroll_list_kids","","",325,[[["list"]],["list"]]],[11,"position_item","","",325,[[["w"],["option",["id"]],["id"],["scalar"]],["w"]]],[11,"position_scroll_trigger","","",325,[[["w"],["id"]],["w"]]],[11,"size_breadth","","",325,[[["w"],["scalar"]],["w"]]],[11,"size_length","","",325,[[["w"],["scalar"]],["w"]]],[11,"ranges","","",326,N],[11,"scrollbar","","",326,[[["id"]],["scrollbar"]]],[11,"common_scroll","","",326,[[["commonbuilder"]],["option",["scroll"]]]],[11,"scroll_list_kids","","",326,[[["list"]],["list"]]],[11,"position_item","","",326,[[["w"],["option",["id"]],["id"],["scalar"]],["w"]]],[11,"position_scroll_trigger","","",326,[[["w"],["id"]],["w"]]],[11,"size_breadth","","",326,[[["w"],["scalar"]],["w"]]],[11,"size_length","","",326,[[["w"],["scalar"]],["w"]]],[11,"update_list","","",195,N],[11,"size_item","","",195,[[["self"],["w"],["scalar"]],["w"]]],[11,"update_list","","",321,N],[11,"size_item","","",321,[[["self"],["w"],["scalar"]],["w"]]],[11,"key_direction","","",324,[[["key"]],["option",["listdirection"]]]],[11,"key_direction","","",323,[[["key"]],["option",["listdirection"]]]],[11,"key_direction","","",326,[[["key"]],["option",["listdirection"]]]],[11,"key_direction","","",325,[[["key"]],["option",["listdirection"]]]],[11,"click_selection","conrod_core::widget::list_select","",328,[[["self"],["click"],["usize"],["usize"],["state"],["f"],["pendingevents"]]]],[11,"key_selection","","",328,[[["self"],["keypress"],["usize"],["usize"],["state"],["f"],["pendingevents"]]]],[11,"click_selection","","",329,[[["self"],["click"],["usize"],["usize"],["state"],["f"],["pendingevents"]]]],[11,"key_selection","","",329,[[["self"],["keypress"],["usize"],["usize"],["state"],["f"],["pendingevents"]]]],[11,"track_rect","conrod_core::widget::scroll","",303,[[["rect"],["scalar"]],["rect"]]],[11,"handle_rect","","",303,[[["range"],["range"]],["rect"]]],[11,"scroll_state","","",303,[[["container"]],["option",["state"]]]],[11,"default_x_dimension","","",303,[[["scrollbar"],["ui"]],["dimension"]]],[11,"default_y_dimension","","",303,[[["scrollbar"],["ui"]],["dimension"]]],[11,"to_2d","","",303,N],[11,"track_rect","","",304,[[["rect"],["scalar"]],["rect"]]],[11,"handle_rect","","",304,[[["range"],["range"]],["rect"]]],[11,"scroll_state","","",304,[[["container"]],["option",["state"]]]],[11,"default_x_dimension","","",304,[[["scrollbar"],["ui"]],["dimension"]]],[11,"default_y_dimension","","",304,[[["scrollbar"],["ui"]],["dimension"]]],[11,"to_2d","","",304,N],[11,"common","conrod_core::widget::primitive::line","",123,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",123,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::primitive::image","",128,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",128,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::primitive::point_path","",131,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",131,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::primitive::shape::oval","",135,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",135,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::primitive::shape::polygon","",140,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",140,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::primitive::shape::rectangle","",143,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",143,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::primitive::shape::triangles","",145,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",145,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::primitive::text","",152,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",152,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::bordered_rectangle","",156,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",156,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::button","",159,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",159,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::canvas","",167,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",167,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::collapsible_area","",175,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",175,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::drop_down_list","",178,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",178,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::envelope_editor","",179,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",179,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::file_navigator::directory_view","",187,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",187,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::file_navigator","",183,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",183,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::grid","",190,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",190,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::list","",194,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",194,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::list_select","",209,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",209,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::matrix","",213,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",213,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::graph::node","",221,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",221,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::graph","",215,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",215,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::number_dialer","",235,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",235,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::plot_path","",237,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",237,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::range_slider","",238,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",238,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::rounded_rectangle","",242,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",242,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::scrollbar","",245,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",245,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::slider","",246,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",246,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::tabs","",250,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",250,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::text_box","",254,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",254,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::text_edit","",258,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",258,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::title_bar","",259,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",259,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::toggle","",261,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",261,[[["self"]],["commonbuilder"]]],[11,"common","conrod_core::widget::xy_pad","",263,[[["self"]],["commonbuilder"]]],[11,"common_mut","","",263,[[["self"]],["commonbuilder"]]],[11,"init_state","conrod_core::widget::primitive::line","",123,N],[11,"style","","",123,N],[11,"is_over","","",123,[[["self"]],["isoverfn"]]],[11,"update","","Update the state of the Line.",123,N],[11,"init_state","conrod_core::widget::primitive::image","",128,N],[11,"style","","",128,N],[11,"default_x_dimension","","",128,[[["self"],["ui"]],["dimension"]]],[11,"default_y_dimension","","",128,[[["self"],["ui"]],["dimension"]]],[11,"update","","",128,N],[11,"init_state","conrod_core::widget::primitive::point_path","",131,N],[11,"style","","",131,N],[11,"is_over","","",131,[[["self"]],["isoverfn"]]],[11,"update","","Update the state of the Line.",131,N],[11,"init_state","conrod_core::widget::primitive::shape::oval","",135,N],[11,"style","","",135,N],[11,"is_over","","",135,[[["self"]],["isoverfn"]]],[11,"update","","",135,N],[11,"init_state","conrod_core::widget::primitive::shape::polygon","",140,N],[11,"style","","",140,N],[11,"is_over","","",140,[[["self"]],["isoverfn"]]],[11,"update","","Update the state of the Polygon.",140,N],[11,"init_state","conrod_core::widget::primitive::shape::rectangle","",143,N],[11,"style","","",143,N],[11,"update","","Update the state of the Rectangle.",143,N],[11,"init_state","conrod_core::widget::primitive::shape::triangles","",145,N],[11,"style","","",145,N],[11,"is_over","","",145,[[["self"]],["isoverfn"]]],[11,"update","","",145,N],[11,"init_state","conrod_core::widget::primitive::text","",152,N],[11,"style","","",152,N],[11,"default_x_dimension","","If no specific width was given, we'll use the width of the…",152,[[["self"],["ui"]],["dimension"]]],[11,"default_y_dimension","","If no specific height was given, we'll use the total…",152,[[["self"],["ui"]],["dimension"]]],[11,"update","","Update the state of the Text.",152,N],[11,"init_state","conrod_core::widget::bordered_rectangle","",156,N],[11,"style","","",156,N],[11,"update","","Update the state of the Rectangle.",156,N],[11,"init_state","conrod_core::widget::button","",159,N],[11,"style","","",159,[[["self"]],["style"]]],[11,"update","","Update the state of the Button.",159,N],[11,"init_state","","",159,N],[11,"style","","",159,[[["self"]],["style"]]],[11,"update","","Update the state of the Button.",159,N],[11,"init_state","conrod_core::widget::canvas","",167,N],[11,"style","","",167,N],[11,"default_x_position","","",167,[[["self"],["ui"]],["position"]]],[11,"default_y_position","","",167,[[["self"],["ui"]],["position"]]],[11,"drag_area","","The title bar area at which the Canvas can be clicked and…",167,[[["self"],["dimensions"],["style"],["theme"]],["option",["rect"]]]],[11,"kid_area","","The area of the widget below the title bar, upon which…",167,[[["self"],["kidareaargs"]],["kidarea"]]],[11,"update","","Update the state of the Canvas.",167,[[["self"],["updateargs"]]]],[11,"init_state","conrod_core::widget::collapsible_area","",175,N],[11,"style","","",175,[[["self"]],["style"]]],[11,"update","","",175,N],[11,"init_state","conrod_core::widget::drop_down_list","",178,N],[11,"style","","",178,N],[11,"update","","Update the state of the DropDownList.",178,N],[11,"init_state","conrod_core::widget::envelope_editor","",179,N],[11,"style","","",179,[[["self"]],["style"]]],[11,"update","","Update the `EnvelopeEditor` in accordance to the latest…",179,N],[11,"init_state","conrod_core::widget::file_navigator::directory_view","",187,N],[11,"style","","",187,N],[11,"update","","",187,N],[11,"init_state","conrod_core::widget::file_navigator","",183,N],[11,"style","","",183,N],[11,"update","","Update the state of the Button.",183,N],[11,"init_state","conrod_core::widget::grid","",190,N],[11,"style","","",190,N],[11,"update","","Update the state of the PlotPath.",190,N],[11,"init_state","conrod_core::widget::list","",194,N],[11,"style","","",194,N],[11,"update","","",194,N],[11,"init_state","conrod_core::widget::list_select","",209,N],[11,"style","","",209,N],[11,"update","","Update the state of the ListSelect.",209,N],[11,"init_state","conrod_core::widget::matrix","",213,N],[11,"style","","",213,N],[11,"update","","Update the state of the Matrix.",213,N],[11,"init_state","conrod_core::widget::graph::node","",221,N],[11,"style","","",221,N],[11,"update","","",221,N],[11,"init_state","conrod_core::widget::graph","",215,N],[11,"style","","",215,N],[11,"update","","",215,N],[11,"init_state","conrod_core::widget::number_dialer","",235,N],[11,"style","","",235,N],[11,"update","","Update the state of the NumberDialer.",235,N],[11,"init_state","conrod_core::widget::plot_path","",237,N],[11,"style","","",237,N],[11,"is_over","","",237,[[["self"]],["isoverfn"]]],[11,"update","","Update the state of the PlotPath.",237,N],[11,"init_state","conrod_core::widget::range_slider","",238,N],[11,"style","","",238,N],[11,"kid_area","","",238,[[["self"],["kidareaargs"]],["kidarea"]]],[11,"update","","Update the state of the range slider.",238,N],[11,"init_state","conrod_core::widget::rounded_rectangle","",242,N],[11,"style","","",242,N],[11,"is_over","","",242,[[["self"]],["isoverfn"]]],[11,"update","","Update the state of the Rectangle.",242,N],[11,"init_state","conrod_core::widget::scrollbar","",245,N],[11,"style","","",245,N],[11,"default_x_dimension","","",245,[[["self"],["ui"]],["dimension"]]],[11,"default_y_dimension","","",245,[[["self"],["ui"]],["dimension"]]],[11,"update","","",245,N],[11,"init_state","conrod_core::widget::slider","",246,N],[11,"style","","",246,N],[11,"kid_area","","",246,[[["self"],["kidareaargs"]],["kidarea"]]],[11,"update","","Update the state of the Slider.",246,N],[11,"init_state","conrod_core::widget::tabs","",250,N],[11,"style","","",250,N],[11,"kid_area","","The area on which child widgets will be placed when using…",250,[[["self"],["kidareaargs"]],["kidarea"]]],[11,"update","","Update the state of the Tabs.",250,[[["self"],["updateargs"]]]],[11,"init_state","conrod_core::widget::text_box","",254,N],[11,"style","","",254,N],[11,"update","","Update the state of the TextEdit.",254,N],[11,"init_state","conrod_core::widget::text_edit","",258,N],[11,"style","","",258,N],[11,"default_y_dimension","","",258,[[["self"],["ui"]],["dimension"]]],[11,"update","","Update the state of the TextEdit.",258,N],[11,"init_state","conrod_core::widget::title_bar","",259,N],[11,"style","","",259,N],[11,"default_y_dimension","","",259,[[["self"],["ui"]],["dimension"]]],[11,"update","","",259,[[["self"],["updateargs"]]]],[11,"init_state","conrod_core::widget::toggle","",261,N],[11,"style","","",261,N],[11,"update","","Update the state of the Toggle.",261,N],[11,"init_state","conrod_core::widget::xy_pad","",263,N],[11,"style","","",263,N],[11,"update","","Update the XYPad's cached state.",263,N],[11,"into","conrod_core::color","",4,N],[11,"into","conrod_core::widget::primitive::shape::triangles","",147,N],[11,"into","","",147,N],[11,"into","conrod_core::widget::graph","",331,[[["self"]],["hashmap",["point"]]]],[11,"next","conrod_core::image","",272,[[["self"]],["option"]]],[11,"size_hint","","",272,N],[11,"next","conrod_core::input::state::mouse","",274,[[["self"]],["option"]]],[11,"next","conrod_core::input::widget","",275,[[["self"]],["option",["widget"]]]],[11,"next","","",53,[[["self"]],["option"]]],[11,"next","","",54,[[["self"]],["option"]]],[11,"next","","",276,[[["self"]],["option"]]],[11,"next","","",277,[[["self"]],["option"]]],[11,"next","","",55,[[["self"]],["option"]]],[11,"next","","",56,[[["self"]],["option"]]],[11,"next","","",278,[[["self"]],["option"]]],[11,"next","","",279,[[["self"]],["option"]]],[11,"next","","",57,[[["self"]],["option"]]],[11,"next","","",280,[[["self"]],["option"]]],[11,"next","","",281,[[["self"]],["option"]]],[11,"next","","",58,[[["self"]],["option"]]],[11,"next","","",282,[[["self"]],["option"]]],[11,"next","","",283,[[["self"]],["option"]]],[11,"next","","",284,[[["self"]],["option"]]],[11,"next","conrod_core::input::global","",60,[[["self"]],["option"]]],[11,"next","","",285,[[["self"]],["option"]]],[11,"next","conrod_core::text","",290,[[["self"]],["option"]]],[11,"next","conrod_core::text::font","",292,[[["self"]],["option"]]],[11,"next","","",293,[[["self"]],["option"]]],[11,"next","conrod_core::text::glyph","",295,[[["self"]],["option"]]],[11,"next","","",296,[[["self"]],["option"]]],[11,"next","","",294,[[["self"]],["option"]]],[11,"next","","",297,[[["self"]],["option"]]],[11,"next","conrod_core::text::cursor","",298,[[["self"]],["option"]]],[11,"next","","",299,[[["self"]],["option"]]],[11,"next","","",300,[[["self"]],["option"]]],[11,"next","conrod_core::text::line","",100,[[["self"]],["option"]]],[11,"next","","",301,[[["self"]],["option"]]],[11,"next","","",302,[[["self"]],["option"]]],[11,"next","conrod_core::widget::primitive::point_path","",305,[[["self"]],["option"]]],[11,"next","conrod_core::widget::primitive::shape::oval","",139,[[["self"]],["option"]]],[11,"next","","",307,[[["self"]],["option"]]],[11,"next","conrod_core::widget::primitive::shape::polygon","",308,[[["self"]],["option"]]],[11,"next","conrod_core::widget::bordered_rectangle","",158,[[["self"]],["option"]]],[11,"next","conrod_core::widget::button","",165,[[["self"]],["option"]]],[11,"next","conrod_core::widget::graph::node","",339,[[["self"]],["option"]]],[11,"next","conrod_core::widget::graph","",335,[[["self"]],["option"]]],[11,"next","","",336,[[["self"]],["option"]]],[11,"next","","",337,[[["self"]],["option"]]],[11,"next","conrod_core::widget::range_slider","",344,[[["self"]],["option"]]],[11,"next","conrod_core::widget::rounded_rectangle","",346,[[["self"]],["option"]]],[11,"next","conrod_core::widget::toggle","",355,[[["self"]],["option"]]],[11,"len","conrod_core::image","",272,[[["self"]],["usize"]]],[11,"partial_cmp","","",271,[[["self"],["id"]],["option",["ordering"]]]],[11,"lt","","",271,[[["self"],["id"]],["bool"]]],[11,"le","","",271,[[["self"],["id"]],["bool"]]],[11,"gt","","",271,[[["self"],["id"]],["bool"]]],[11,"ge","","",271,[[["self"],["id"]],["bool"]]],[11,"partial_cmp","conrod_core::input::touch","",63,[[["self"],["id"]],["option",["ordering"]]]],[11,"lt","","",63,[[["self"],["id"]],["bool"]]],[11,"le","","",63,[[["self"],["id"]],["bool"]]],[11,"gt","","",63,[[["self"],["id"]],["bool"]]],[11,"ge","","",63,[[["self"],["id"]],["bool"]]],[11,"partial_cmp","conrod_core::text::font","",95,[[["self"],["id"]],["option",["ordering"]]]],[11,"lt","","",95,[[["self"],["id"]],["bool"]]],[11,"le","","",95,[[["self"],["id"]],["bool"]]],[11,"gt","","",95,[[["self"],["id"]],["bool"]]],[11,"ge","","",95,[[["self"],["id"]],["bool"]]],[11,"partial_cmp","conrod_core::text::cursor","",97,[[["self"],["index"]],["option",["ordering"]]]],[11,"lt","","",97,[[["self"],["index"]],["bool"]]],[11,"le","","",97,[[["self"],["index"]],["bool"]]],[11,"gt","","",97,[[["self"],["index"]],["bool"]]],[11,"ge","","",97,[[["self"],["index"]],["bool"]]],[11,"default","conrod_core::widget::primitive::image","",130,[[],["style"]]],[11,"default","conrod_core::widget::primitive::text","",153,[[],["style"]]],[11,"default","conrod_core::widget::bordered_rectangle","",157,[[],["style"]]],[11,"default","conrod_core::widget::button","",160,[[],["style"]]],[11,"default","","",163,[[],["flat"]]],[11,"default","conrod_core::widget::canvas","",168,[[],["style"]]],[11,"default","conrod_core::widget::collapsible_area","",172,[[],["style"]]],[11,"default","conrod_core::widget::drop_down_list","",176,[[],["style"]]],[11,"default","conrod_core::widget::envelope_editor","",180,[[],["style"]]],[11,"default","conrod_core::widget::file_navigator::directory_view","",188,[[],["style"]]],[11,"default","conrod_core::widget::file_navigator","",184,[[],["style"]]],[11,"default","conrod_core::widget::grid","",191,[[],["style"]]],[11,"default","conrod_core::widget::list","",196,[[],["style"]]],[11,"default","conrod_core::widget::matrix","",211,[[],["style"]]],[11,"default","conrod_core::widget::graph::node","",222,[[],["style"]]],[11,"default","conrod_core::widget::graph","",216,[[],["style"]]],[11,"default","","",333,[[],["camera"]]],[11,"default","conrod_core::widget::number_dialer","",234,[[],["style"]]],[11,"default","conrod_core::widget::plot_path","",236,[[],["style"]]],[11,"default","conrod_core::widget::range_slider","",239,[[],["style"]]],[11,"default","conrod_core::widget::scrollbar","",243,[[],["style"]]],[11,"default","conrod_core::widget::slider","",247,[[],["style"]]],[11,"default","conrod_core::widget::tabs","",248,[[],["style"]]],[11,"default","conrod_core::widget::text_box","",252,[[],["style"]]],[11,"default","conrod_core::widget::text_edit","",255,[[],["style"]]],[11,"default","conrod_core::widget::title_bar","",260,[[],["style"]]],[11,"default","conrod_core::widget::toggle","",262,[[],["style"]]],[11,"default","conrod_core::widget::xy_pad","",264,[[],["style"]]],[11,"default","conrod_core::widget","",111,[[],["commonstyle"]]],[11,"default","","",110,[[],["self"]]],[11,"eq","conrod_core::color","",5,[[["self"],["color"]],["bool"]]],[11,"ne","","",5,[[["self"],["color"]],["bool"]]],[11,"eq","","",3,[[["self"],["hsla"]],["bool"]]],[11,"ne","","",3,[[["self"],["hsla"]],["bool"]]],[11,"eq","","",4,[[["self"],["rgba"]],["bool"]]],[11,"ne","","",4,[[["self"],["rgba"]],["bool"]]],[11,"eq","conrod_core::event","",21,[[["self"],["input"]],["bool"]]],[11,"ne","","",21,[[["self"],["input"]],["bool"]]],[11,"eq","","",22,[[["self"],["event"]],["bool"]]],[11,"ne","","",22,[[["self"],["event"]],["bool"]]],[11,"eq","","",23,[[["self"],["ui"]],["bool"]]],[11,"ne","","",23,[[["self"],["ui"]],["bool"]]],[11,"eq","","",24,[[["self"],["widget"]],["bool"]]],[11,"ne","","",24,[[["self"],["widget"]],["bool"]]],[11,"eq","","",8,[[["self"],["text"]],["bool"]]],[11,"ne","","",8,[[["self"],["text"]],["bool"]]],[11,"eq","","",9,[[["self"],["motion"]],["bool"]]],[11,"ne","","",9,[[["self"],["motion"]],["bool"]]],[11,"eq","","",25,[[["self"],["button"]],["bool"]]],[11,"ne","","",25,[[["self"],["button"]],["bool"]]],[11,"eq","","",10,[[["self"],["press"]],["bool"]]],[11,"ne","","",10,[[["self"],["press"]],["bool"]]],[11,"eq","","",11,[[["self"],["mousepress"]],["bool"]]],[11,"ne","","",11,[[["self"],["mousepress"]],["bool"]]],[11,"eq","","",12,[[["self"],["keypress"]],["bool"]]],[11,"ne","","",12,[[["self"],["keypress"]],["bool"]]],[11,"eq","","",13,[[["self"],["release"]],["bool"]]],[11,"ne","","",13,[[["self"],["release"]],["bool"]]],[11,"eq","","",14,[[["self"],["mouserelease"]],["bool"]]],[11,"ne","","",14,[[["self"],["mouserelease"]],["bool"]]],[11,"eq","","",15,[[["self"],["keyrelease"]],["bool"]]],[11,"ne","","",15,[[["self"],["keyrelease"]],["bool"]]],[11,"eq","","",16,[[["self"],["drag"]],["bool"]]],[11,"ne","","",16,[[["self"],["drag"]],["bool"]]],[11,"eq","","",17,[[["self"],["click"]],["bool"]]],[11,"ne","","",17,[[["self"],["click"]],["bool"]]],[11,"eq","","",18,[[["self"],["doubleclick"]],["bool"]]],[11,"ne","","",18,[[["self"],["doubleclick"]],["bool"]]],[11,"eq","","",19,[[["self"],["tap"]],["bool"]]],[11,"ne","","",19,[[["self"],["tap"]],["bool"]]],[11,"eq","","",20,[[["self"],["scroll"]],["bool"]]],[11,"ne","","",20,[[["self"],["scroll"]],["bool"]]],[11,"eq","conrod_core::graph","",31,[[["self"],["edge"]],["bool"]]],[11,"ne","","",31,[[["self"],["edge"]],["bool"]]],[11,"eq","conrod_core::image","",271,[[["self"],["id"]],["bool"]]],[11,"ne","","",271,[[["self"],["id"]],["bool"]]],[11,"eq","conrod_core::input::state","",45,[[["self"],["state"]],["bool"]]],[11,"ne","","",45,[[["self"],["state"]],["bool"]]],[11,"eq","conrod_core::input::state::touch","",46,[[["self"],["start"]],["bool"]]],[11,"ne","","",46,[[["self"],["start"]],["bool"]]],[11,"eq","","",47,[[["self"],["touch"]],["bool"]]],[11,"ne","","",47,[[["self"],["touch"]],["bool"]]],[11,"eq","conrod_core::input::state::mouse","",48,[[["self"],["mouse"]],["bool"]]],[11,"ne","","",48,[[["self"],["mouse"]],["bool"]]],[11,"eq","","",49,[[["self"],["buttonposition"]],["bool"]]],[11,"ne","","",49,[[["self"],["buttonposition"]],["bool"]]],[11,"eq","","",50,[[["self"],["buttonmap"]],["bool"]]],[11,"ne","","",50,[[["self"],["buttonmap"]],["bool"]]],[11,"eq","conrod_core::input","",43,[[["self"],["source"]],["bool"]]],[11,"ne","","",43,[[["self"],["source"]],["bool"]]],[11,"eq","","",44,[[["self"],["motion"]],["bool"]]],[11,"ne","","",44,[[["self"],["motion"]],["bool"]]],[11,"eq","conrod_core::input::touch","",63,[[["self"],["id"]],["bool"]]],[11,"ne","","",63,[[["self"],["id"]],["bool"]]],[11,"eq","","",62,[[["self"],["phase"]],["bool"]]],[11,"eq","","",61,[[["self"],["touch"]],["bool"]]],[11,"ne","","",61,[[["self"],["touch"]],["bool"]]],[11,"eq","conrod_core::position::range","",72,[[["self"],["range"]],["bool"]]],[11,"ne","","",72,[[["self"],["range"]],["bool"]]],[11,"eq","","",73,[[["self"],["edge"]],["bool"]]],[11,"eq","conrod_core::position::rect","",74,[[["self"],["rect"]],["bool"]]],[11,"ne","","",74,[[["self"],["rect"]],["bool"]]],[11,"eq","","",75,[[["self"],["corner"]],["bool"]]],[11,"eq","conrod_core::position","",65,[[["self"],["axis"]],["bool"]]],[11,"eq","","",66,[[["self"],["position"]],["bool"]]],[11,"ne","","",66,[[["self"],["position"]],["bool"]]],[11,"eq","","",67,[[["self"],["relative"]],["bool"]]],[11,"ne","","",67,[[["self"],["relative"]],["bool"]]],[11,"eq","","",68,[[["self"],["direction"]],["bool"]]],[11,"eq","","",69,[[["self"],["align"]],["bool"]]],[11,"eq","","",70,[[["self"],["place"]],["bool"]]],[11,"ne","","",70,[[["self"],["place"]],["bool"]]],[11,"eq","","",71,[[["self"],["dimension"]],["bool"]]],[11,"ne","","",71,[[["self"],["dimension"]],["bool"]]],[11,"eq","","",64,[[["self"],["padding"]],["bool"]]],[11,"ne","","",64,[[["self"],["padding"]],["bool"]]],[11,"eq","conrod_core::text","",87,[[["self"],["justify"]],["bool"]]],[11,"eq","conrod_core::text::font","",95,[[["self"],["id"]],["bool"]]],[11,"ne","","",95,[[["self"],["id"]],["bool"]]],[11,"eq","conrod_core::text::cursor","",97,[[["self"],["index"]],["bool"]]],[11,"ne","","",97,[[["self"],["index"]],["bool"]]],[11,"eq","conrod_core::text::line","",99,[[["self"],["break"]],["bool"]]],[11,"ne","","",99,[[["self"],["break"]],["bool"]]],[11,"eq","","",98,[[["self"],["info"]],["bool"]]],[11,"ne","","",98,[[["self"],["info"]],["bool"]]],[11,"eq","conrod_core::widget::id","",118,[[["self"],["list"]],["bool"]]],[11,"ne","","",118,[[["self"],["list"]],["bool"]]],[11,"eq","conrod_core::widget::scroll","",122,[[["self"],["scroll"]],["bool"]]],[11,"ne","","",122,[[["self"],["scroll"]],["bool"]]],[11,"eq","","",120,[[["self"],["state"]],["bool"]]],[11,"ne","","",120,[[["self"],["state"]],["bool"]]],[11,"eq","","",303,[[["self"],["x"]],["bool"]]],[11,"eq","","",304,[[["self"],["y"]],["bool"]]],[11,"eq","conrod_core::widget::primitive::line","",124,[[["self"],["state"]],["bool"]]],[11,"ne","","",124,[[["self"],["state"]],["bool"]]],[11,"eq","","",125,[[["self"],["style"]],["bool"]]],[11,"ne","","",125,[[["self"],["style"]],["bool"]]],[11,"eq","","",126,[[["self"],["pattern"]],["bool"]]],[11,"eq","","",127,[[["self"],["cap"]],["bool"]]],[11,"eq","conrod_core::widget::primitive::image","",130,[[["self"],["style"]],["bool"]]],[11,"ne","","",130,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::primitive::point_path","",132,[[["self"],["state"]],["bool"]]],[11,"ne","","",132,[[["self"],["state"]],["bool"]]],[11,"eq","conrod_core::widget::primitive::shape::oval","",306,[[["self"],["full"]],["bool"]]],[11,"eq","","",136,[[["self"],["section"]],["bool"]]],[11,"ne","","",136,[[["self"],["section"]],["bool"]]],[11,"eq","","",137,[[["self"],["state"]],["bool"]]],[11,"ne","","",137,[[["self"],["state"]],["bool"]]],[11,"eq","conrod_core::widget::primitive::shape::polygon","",141,[[["self"],["state"]],["bool"]]],[11,"ne","","",141,[[["self"],["state"]],["bool"]]],[11,"eq","","",142,[[["self"],["kind"]],["bool"]]],[11,"eq","conrod_core::widget::primitive::shape::rectangle","",309,[[["self"],["state"]],["bool"]]],[11,"ne","","",309,[[["self"],["state"]],["bool"]]],[11,"eq","","",144,[[["self"],["kind"]],["bool"]]],[11,"eq","conrod_core::widget::primitive::shape::triangles","",146,[[["self"],["singlecolor"]],["bool"]]],[11,"ne","","",146,[[["self"],["singlecolor"]],["bool"]]],[11,"eq","","",310,[[["self"],["multicolor"]],["bool"]]],[11,"eq","","",147,[[["self"],["triangle"]],["bool"]]],[11,"ne","","",147,[[["self"],["triangle"]],["bool"]]],[11,"eq","","",148,[[["self"],["state"]],["bool"]]],[11,"ne","","",148,[[["self"],["state"]],["bool"]]],[11,"eq","conrod_core::widget::primitive::shape","",133,[[["self"],["style"]],["bool"]]],[11,"ne","","",133,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::primitive::text","",153,[[["self"],["style"]],["bool"]]],[11,"ne","","",153,[[["self"],["style"]],["bool"]]],[11,"eq","","",155,[[["self"],["wrap"]],["bool"]]],[11,"eq","","",154,[[["self"],["state"]],["bool"]]],[11,"ne","","",154,[[["self"],["state"]],["bool"]]],[11,"eq","conrod_core::widget::bordered_rectangle","",157,[[["self"],["style"]],["bool"]]],[11,"ne","","",157,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::button","",160,[[["self"],["style"]],["bool"]]],[11,"ne","","",160,[[["self"],["style"]],["bool"]]],[11,"eq","","",163,[[["self"],["flat"]],["bool"]]],[11,"ne","","",163,[[["self"],["flat"]],["bool"]]],[11,"eq","conrod_core::widget::canvas","",168,[[["self"],["style"]],["bool"]]],[11,"ne","","",168,[[["self"],["style"]],["bool"]]],[11,"eq","","",169,[[["self"],["length"]],["bool"]]],[11,"ne","","",169,[[["self"],["length"]],["bool"]]],[11,"eq","conrod_core::widget::collapsible_area","",172,[[["self"],["style"]],["bool"]]],[11,"ne","","",172,[[["self"],["style"]],["bool"]]],[11,"eq","","",174,[[["self"],["event"]],["bool"]]],[11,"eq","","",173,[[["self"],["area"]],["bool"]]],[11,"ne","","",173,[[["self"],["area"]],["bool"]]],[11,"eq","conrod_core::widget::drop_down_list","",176,[[["self"],["style"]],["bool"]]],[11,"ne","","",176,[[["self"],["style"]],["bool"]]],[11,"eq","","",177,[[["self"],["maxheight"]],["bool"]]],[11,"ne","","",177,[[["self"],["maxheight"]],["bool"]]],[11,"eq","conrod_core::widget::envelope_editor","",180,[[["self"],["style"]],["bool"]]],[11,"ne","","",180,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::file_navigator::directory_view","",319,[[["self"],["entry"]],["bool"]]],[11,"ne","","",319,[[["self"],["entry"]],["bool"]]],[11,"eq","","",188,[[["self"],["style"]],["bool"]]],[11,"ne","","",188,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::file_navigator","",317,[[["self"],["directory"]],["bool"]]],[11,"ne","","",317,[[["self"],["directory"]],["bool"]]],[11,"eq","","",184,[[["self"],["style"]],["bool"]]],[11,"ne","","",184,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::grid","",191,[[["self"],["style"]],["bool"]]],[11,"ne","","",191,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::list","",196,[[["self"],["style"]],["bool"]]],[11,"ne","","",196,[[["self"],["style"]],["bool"]]],[11,"eq","","",198,[[["self"],["iteminstantiation"]],["bool"]]],[11,"eq","","",199,[[["self"],["scrollbarposition"]],["bool"]]],[11,"eq","conrod_core::widget::matrix","",211,[[["self"],["style"]],["bool"]]],[11,"ne","","",211,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::graph::node","",222,[[["self"],["style"]],["bool"]]],[11,"ne","","",222,[[["self"],["style"]],["bool"]]],[11,"eq","","",223,[[["self"],["socketlayout"]],["bool"]]],[11,"ne","","",223,[[["self"],["socketlayout"]],["bool"]]],[11,"eq","","",225,[[["self"],["socketside"]],["bool"]]],[11,"eq","","",226,[[["self"],["sockettype"]],["bool"]]],[11,"eq","conrod_core::widget::graph","",331,[[["self"],["layout"]],["bool"]]],[11,"ne","","",331,[[["self"],["layout"]],["bool"]]],[11,"eq","","",216,[[["self"],["style"]],["bool"]]],[11,"ne","","",216,[[["self"],["style"]],["bool"]]],[11,"eq","","",218,[[["self"],["event"]],["bool"]]],[11,"ne","","",218,[[["self"],["event"]],["bool"]]],[11,"eq","","",217,[[["self"],["nodesocket"]],["bool"]]],[11,"ne","","",217,[[["self"],["nodesocket"]],["bool"]]],[11,"eq","","",219,[[["self"],["nodeevent"]],["bool"]]],[11,"ne","","",219,[[["self"],["nodeevent"]],["bool"]]],[11,"eq","","",220,[[["self"],["edgeevent"]],["bool"]]],[11,"ne","","",220,[[["self"],["edgeevent"]],["bool"]]],[11,"eq","","",333,[[["self"],["camera"]],["bool"]]],[11,"ne","","",333,[[["self"],["camera"]],["bool"]]],[11,"eq","conrod_core::widget::number_dialer","",234,[[["self"],["style"]],["bool"]]],[11,"ne","","",234,[[["self"],["style"]],["bool"]]],[11,"eq","","",341,[[["self"],["glyphslot"]],["bool"]]],[11,"ne","","",341,[[["self"],["glyphslot"]],["bool"]]],[11,"eq","conrod_core::widget::plot_path","",236,[[["self"],["style"]],["bool"]]],[11,"ne","","",236,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::range_slider","",239,[[["self"],["style"]],["bool"]]],[11,"ne","","",239,[[["self"],["style"]],["bool"]]],[11,"eq","","",240,[[["self"],["drag"]],["bool"]]],[11,"ne","","",240,[[["self"],["drag"]],["bool"]]],[11,"eq","","",241,[[["self"],["edge"]],["bool"]]],[11,"eq","conrod_core::widget::scrollbar","",243,[[["self"],["style"]],["bool"]]],[11,"ne","","",243,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::slider","",247,[[["self"],["style"]],["bool"]]],[11,"ne","","",247,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::tabs","",350,[[["self"],["tab"]],["bool"]]],[11,"ne","","",350,[[["self"],["tab"]],["bool"]]],[11,"eq","","",248,[[["self"],["style"]],["bool"]]],[11,"ne","","",248,[[["self"],["style"]],["bool"]]],[11,"eq","","",249,[[["self"],["layout"]],["bool"]]],[11,"eq","conrod_core::widget::text_box","",252,[[["self"],["style"]],["bool"]]],[11,"ne","","",252,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::text_edit","",255,[[["self"],["style"]],["bool"]]],[11,"ne","","",255,[[["self"],["style"]],["bool"]]],[11,"eq","","",256,[[["self"],["drag"]],["bool"]]],[11,"eq","","",257,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",257,[[["self"],["cursor"]],["bool"]]],[11,"eq","conrod_core::widget::title_bar","",260,[[["self"],["style"]],["bool"]]],[11,"ne","","",260,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::toggle","",262,[[["self"],["style"]],["bool"]]],[11,"ne","","",262,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget::xy_pad","",264,[[["self"],["style"]],["bool"]]],[11,"ne","","",264,[[["self"],["style"]],["bool"]]],[11,"eq","conrod_core::widget","",108,[[["self"],["kidarea"]],["bool"]]],[11,"ne","","",108,[[["self"],["kidarea"]],["bool"]]],[11,"eq","","",115,[[["self"],["maybeparent"]],["bool"]]],[11,"ne","","",115,[[["self"],["maybeparent"]],["bool"]]],[11,"eq","","",109,[[["self"],["floating"]],["bool"]]],[11,"ne","","",109,[[["self"],["floating"]],["bool"]]],[11,"eq","","",111,[[["self"],["commonstyle"]],["bool"]]],[11,"ne","","",111,[[["self"],["commonstyle"]],["bool"]]],[11,"eq","","",112,[[["self"],["commonstate"]],["bool"]]],[11,"ne","","",112,[[["self"],["commonstate"]],["bool"]]],[11,"eq","conrod_core::cursor","",268,[[["self"],["mousecursor"]],["bool"]]],[11,"ne","","",268,[[["self"],["mousecursor"]],["bool"]]],[11,"from","conrod_core::color","",3,[[["color"]],["self"]]],[11,"from","","",5,[[["hsla"]],["self"]]],[11,"from","","",4,[[["color"]],["self"]]],[11,"from","","",5,[[["rgba"]],["self"]]],[11,"from","conrod_core::event","",21,[[["motion"]],["self"]]],[11,"from","","",21,[[["touch"]],["self"]]],[11,"from","","",22,[[["ui"]],["self"]]],[11,"from","","",22,[[["input"]],["self"]]],[11,"from","","",24,[[["text"]],["self"]]],[11,"from","","",24,[[["motion"]],["self"]]],[11,"from","","",24,[[["touch"]],["self"]]],[11,"from","","",24,[[["press"]],["self"]]],[11,"from","","",24,[[["release"]],["self"]]],[11,"from","","",24,[[["click"]],["self"]]],[11,"from","","",24,[[["doubleclick"]],["self"]]],[11,"from","","",24,[[["tap"]],["self"]]],[11,"from","","",24,[[["scroll"]],["self"]]],[11,"from","","",24,[[["drag"]],["self"]]],[11,"from","conrod_core::text::font","",94,[[["error"]],["self"]]],[11,"from","conrod_core::widget::primitive::shape::triangles","",147,N],[11,"from","","",147,N],[11,"from","conrod_core::widget::graph","",331,[[["hashmap",["point"]]],["self"]]],[11,"from","conrod_core::widget","",116,[[["bool"]],["self"]]],[11,"from","","",116,[[["id"]],["self"]]],[11,"as_ref","conrod_core","",104,[[["self"]],["ui"]]],[11,"as_ref","conrod_core::widget::primitive::shape::triangles","",147,[[["self"]],["triangle"]]],[11,"cmp","conrod_core::image","",271,[[["self"],["id"]],["ordering"]]],[11,"cmp","conrod_core::input::touch","",63,[[["self"],["id"]],["ordering"]]],[11,"cmp","conrod_core::text::font","",95,[[["self"],["id"]],["ordering"]]],[11,"cmp","conrod_core::text::cursor","",97,[[["self"],["index"]],["ordering"]]],[11,"clone","conrod_core","",2,[[["self"]],["bordering"]]],[11,"clone","conrod_core::color","",5,[[["self"]],["color"]]],[11,"clone","","",3,[[["self"]],["hsla"]]],[11,"clone","","",4,[[["self"]],["rgba"]]],[11,"clone","","",6,[[["self"]],["gradient"]]],[11,"clone","conrod_core::event","",21,[[["self"]],["input"]]],[11,"clone","","",22,[[["self"]],["event"]]],[11,"clone","","",23,[[["self"]],["ui"]]],[11,"clone","","",24,[[["self"]],["widget"]]],[11,"clone","","",8,[[["self"]],["text"]]],[11,"clone","","",9,[[["self"]],["motion"]]],[11,"clone","","",25,[[["self"]],["button"]]],[11,"clone","","",10,[[["self"]],["press"]]],[11,"clone","","",11,[[["self"]],["mousepress"]]],[11,"clone","","",12,[[["self"]],["keypress"]]],[11,"clone","","",13,[[["self"]],["release"]]],[11,"clone","","",14,[[["self"]],["mouserelease"]]],[11,"clone","","",15,[[["self"]],["keyrelease"]]],[11,"clone","","",16,[[["self"]],["drag"]]],[11,"clone","","",17,[[["self"]],["click"]]],[11,"clone","","",18,[[["self"]],["doubleclick"]]],[11,"clone","","",19,[[["self"]],["tap"]]],[11,"clone","","",20,[[["self"]],["scroll"]]],[11,"clone","conrod_core::graph::algo","",32,[[["self"]],["pickwidgets"]]],[11,"clone","","",33,[[["self"]],["pickscrollablewidgets"]]],[11,"clone","conrod_core::graph","",29,[[["self"]],["isoverfn"]]],[11,"clone","","",31,[[["self"]],["edge"]]],[11,"clone","conrod_core::image","",271,[[["self"]],["id"]]],[11,"clone","conrod_core::input::state","",45,[[["self"]],["state"]]],[11,"clone","conrod_core::input::state::touch","",46,[[["self"]],["start"]]],[11,"clone","","",47,[[["self"]],["touch"]]],[11,"clone","conrod_core::input::state::mouse","",48,[[["self"]],["mouse"]]],[11,"clone","","",49,[[["self"]],["buttonposition"]]],[11,"clone","","",50,[[["self"]],["buttonmap"]]],[11,"clone","","",274,[[["self"]],["pressedbuttons"]]],[11,"clone","conrod_core::input::widget","",52,[[["self"]],["widget"]]],[11,"clone","","",51,[[["self"]],["mouse"]]],[11,"clone","","",275,[[["self"]],["events"]]],[11,"clone","","",53,[[["self"]],["presses"]]],[11,"clone","","",54,[[["self"]],["mousepresses"]]],[11,"clone","","",276,[[["self"]],["mousebuttonpresses"]]],[11,"clone","","",277,[[["self"]],["keypresses"]]],[11,"clone","","",55,[[["self"]],["releases"]]],[11,"clone","","",278,[[["self"]],["mousebuttonreleases"]]],[11,"clone","","",56,[[["self"]],["mousereleases"]]],[11,"clone","","",279,[[["self"]],["keyreleases"]]],[11,"clone","","",57,[[["self"]],["clicks"]]],[11,"clone","","",280,[[["self"]],["buttonclicks"]]],[11,"clone","","",281,[[["self"]],["taps"]]],[11,"clone","","",58,[[["self"]],["drags"]]],[11,"clone","","",282,[[["self"]],["buttondrags"]]],[11,"clone","","",283,[[["self"]],["texts"]]],[11,"clone","","",284,[[["self"]],["scrolls"]]],[11,"clone","conrod_core::input::global","",60,[[["self"]],["events"]]],[11,"clone","","",285,[[["self"]],["uievents"]]],[11,"clone","conrod_core::input","",43,[[["self"]],["source"]]],[11,"clone","","",44,[[["self"]],["motion"]]],[11,"clone","conrod_core::input::touch","",63,[[["self"]],["id"]]],[11,"clone","","",62,[[["self"]],["phase"]]],[11,"clone","","",61,[[["self"]],["touch"]]],[11,"clone","conrod_core::position::range","",72,[[["self"]],["range"]]],[11,"clone","","",73,[[["self"]],["edge"]]],[11,"clone","conrod_core::position::rect","",74,[[["self"]],["rect"]]],[11,"clone","","",75,[[["self"]],["corner"]]],[11,"clone","conrod_core::position","",65,[[["self"]],["axis"]]],[11,"clone","","",66,[[["self"]],["position"]]],[11,"clone","","",67,[[["self"]],["relative"]]],[11,"clone","","",68,[[["self"]],["direction"]]],[11,"clone","","",69,[[["self"]],["align"]]],[11,"clone","","",70,[[["self"]],["place"]]],[11,"clone","","",71,[[["self"]],["dimension"]]],[11,"clone","","",64,[[["self"]],["padding"]]],[11,"clone","conrod_core::render","",83,[[["self"]],["ownedprimitives"]]],[11,"clone","conrod_core::text","",290,[[["self"]],["lines"]]],[11,"clone","","",87,[[["self"]],["justify"]]],[11,"clone","conrod_core::text::font","",95,[[["self"]],["id"]]],[11,"clone","","",293,[[["self"]],["ids"]]],[11,"clone","conrod_core::text::cursor","",298,[[["self"]],["xysperline"]]],[11,"clone","","",299,[[["self"]],["xysperlinefromtext"]]],[11,"clone","","",97,[[["self"]],["index"]]],[11,"clone","conrod_core::text::line","",99,[[["self"]],["break"]]],[11,"clone","","",98,[[["self"]],["info"]]],[11,"clone","","",301,[[["self"]],["rects"]]],[11,"clone","","",100,[[["self"]],["self"]]],[11,"clone","conrod_core::theme","",103,[[["self"]],["uniquedefault"]]],[11,"clone","conrod_core::widget::id","",118,[[["self"]],["list"]]],[11,"clone","conrod_core::widget::scroll","",122,[[["self"]],["scroll"]]],[11,"clone","","",120,[[["self"]],["state"]]],[11,"clone","","",303,[[["self"]],["x"]]],[11,"clone","","",304,[[["self"]],["y"]]],[11,"clone","conrod_core::widget::primitive::line","",123,[[["self"]],["line"]]],[11,"clone","","",124,[[["self"]],["state"]]],[11,"clone","","",125,[[["self"]],["style"]]],[11,"clone","","",126,[[["self"]],["pattern"]]],[11,"clone","","",127,[[["self"]],["cap"]]],[11,"clone","conrod_core::widget::primitive::image","",128,[[["self"]],["image"]]],[11,"clone","","",129,[[["self"]],["state"]]],[11,"clone","","",130,[[["self"]],["style"]]],[11,"clone","conrod_core::widget::primitive::point_path","",131,[[["self"]],["pointpath"]]],[11,"clone","","",132,[[["self"]],["state"]]],[11,"clone","","",305,[[["self"]],["triangles"]]],[11,"clone","conrod_core::widget::primitive::shape::circle","",134,[[["self"]],["circle"]]],[11,"clone","conrod_core::widget::primitive::shape::oval","",135,[[["self"]],["oval"]]],[11,"clone","","",306,[[["self"]],["full"]]],[11,"clone","","",136,[[["self"]],["section"]]],[11,"clone","","",137,[[["self"]],["state"]]],[11,"clone","","",139,[[["self"]],["circumference"]]],[11,"clone","","",307,[[["self"]],["triangles"]]],[11,"clone","conrod_core::widget::primitive::shape::polygon","",140,[[["self"]],["polygon"]]],[11,"clone","","",141,[[["self"]],["state"]]],[11,"clone","","",142,[[["self"]],["kind"]]],[11,"clone","","",308,[[["self"]],["triangles"]]],[11,"clone","conrod_core::widget::primitive::shape::rectangle","",143,[[["self"]],["rectangle"]]],[11,"clone","","",309,[[["self"]],["state"]]],[11,"clone","","",144,[[["self"]],["kind"]]],[11,"clone","conrod_core::widget::primitive::shape::triangles","",145,[[["self"]],["triangles"]]],[11,"clone","","",146,[[["self"]],["singlecolor"]]],[11,"clone","","",310,[[["self"]],["multicolor"]]],[11,"clone","","",147,[[["self"]],["triangle"]]],[11,"clone","","",148,[[["self"]],["state"]]],[11,"clone","","",151,[[["self"]],["trianglesunpositioned"]]],[11,"clone","conrod_core::widget::primitive::shape","",133,[[["self"]],["style"]]],[11,"clone","conrod_core::widget::primitive::text","",152,[[["self"]],["text"]]],[11,"clone","","",153,[[["self"]],["style"]]],[11,"clone","","",155,[[["self"]],["wrap"]]],[11,"clone","","",154,[[["self"]],["state"]]],[11,"clone","conrod_core::widget::bordered_rectangle","",156,[[["self"]],["borderedrectangle"]]],[11,"clone","","",157,[[["self"]],["style"]]],[11,"clone","","",158,[[["self"]],["roundedbordertriangles"]]],[11,"clone","conrod_core::widget::button","",159,[[["self"]],["button"]]],[11,"clone","","",160,[[["self"]],["style"]]],[11,"clone","","",163,[[["self"]],["flat"]]],[11,"clone","","",164,[[["self"]],["image"]]],[11,"clone","","",166,[[["self"]],["imagecolor"]]],[11,"clone","","",165,[[["self"]],["timesclicked"]]],[11,"clone","conrod_core::widget::canvas","",167,[[["self"]],["canvas"]]],[11,"clone","","",168,[[["self"]],["style"]]],[11,"clone","","",169,[[["self"]],["length"]]],[11,"clone","","",170,[[["self"]],["direction"]]],[11,"clone","conrod_core::widget::collapsible_area","",175,[[["self"]],["collapsiblearea"]]],[11,"clone","","",172,[[["self"]],["style"]]],[11,"clone","","",174,[[["self"]],["event"]]],[11,"clone","","",173,[[["self"]],["area"]]],[11,"clone","conrod_core::widget::drop_down_list","",176,[[["self"]],["style"]]],[11,"clone","","",177,[[["self"]],["maxheight"]]],[11,"clone","conrod_core::widget::envelope_editor","",180,[[["self"]],["style"]]],[11,"clone","","",181,[[["self"]],["event"]]],[11,"clone","conrod_core::widget::file_navigator::directory_view","",319,[[["self"]],["entry"]]],[11,"clone","","",188,[[["self"]],["style"]]],[11,"clone","","",189,[[["self"]],["event"]]],[11,"clone","conrod_core::widget::file_navigator","",185,[[["self"]],["types"]]],[11,"clone","","",184,[[["self"]],["style"]]],[11,"clone","","",186,[[["self"]],["event"]]],[11,"clone","conrod_core::widget::grid","",190,[[["self"]],["grid"]]],[11,"clone","","",191,[[["self"]],["style"]]],[11,"clone","","",192,[[["self"]],["lines"]]],[11,"clone","","",193,[[["self"]],["axis"]]],[11,"clone","conrod_core::widget::list","",194,[[["self"]],["list"]]],[11,"clone","","",323,[[["self"]],["up"]]],[11,"clone","","",324,[[["self"]],["down"]]],[11,"clone","","",325,[[["self"]],["left"]]],[11,"clone","","",326,[[["self"]],["right"]]],[11,"clone","","",195,[[["self"]],["fixed"]]],[11,"clone","","",321,[[["self"]],["dynamic"]]],[11,"clone","","",196,[[["self"]],["style"]]],[11,"clone","","",197,[[["self"]],["item"]]],[11,"clone","","",198,[[["self"]],["iteminstantiation"]]],[11,"clone","","",199,[[["self"]],["scrollbarposition"]]],[11,"clone","conrod_core::widget::list_select","",209,[[["self"]],["listselect"]]],[11,"clone","","",204,[[["self"]],["listdirection"]]],[11,"clone","","",205,[[["self"]],["event"]]],[11,"clone","","",328,[[["self"]],["single"]]],[11,"clone","","",329,[[["self"]],["multiple"]]],[11,"clone","","",206,[[["self"]],["selection"]]],[11,"clone","conrod_core::widget::matrix","",213,[[["self"]],["matrix"]]],[11,"clone","","",211,[[["self"]],["style"]]],[11,"clone","","",212,[[["self"]],["element"]]],[11,"clone","conrod_core::widget::graph::node","",221,[[["self"]],["node"]]],[11,"clone","","",222,[[["self"]],["style"]]],[11,"clone","","",223,[[["self"]],["socketlayout"]]],[11,"clone","","",225,[[["self"]],["socketside"]]],[11,"clone","","",226,[[["self"]],["sockettype"]]],[11,"clone","","",224,[[["self"]],["event"]]],[11,"clone","","",339,[[["self"]],["socketrects"]]],[11,"clone","conrod_core::widget::graph","",331,[[["self"]],["layout"]]],[11,"clone","","",215,[[["self"]],["graph"]]],[11,"clone","","",216,[[["self"]],["style"]]],[11,"clone","","",218,[[["self"]],["event"]]],[11,"clone","","",217,[[["self"]],["nodesocket"]]],[11,"clone","","",219,[[["self"]],["nodeevent"]]],[11,"clone","","",220,[[["self"]],["edgeevent"]]],[11,"clone","","",333,[[["self"]],["camera"]]],[11,"clone","conrod_core::widget::number_dialer","",234,[[["self"]],["style"]]],[11,"clone","","",341,[[["self"]],["glyphslot"]]],[11,"clone","conrod_core::widget::plot_path","",236,[[["self"]],["style"]]],[11,"clone","conrod_core::widget::range_slider","",239,[[["self"]],["style"]]],[11,"clone","","",240,[[["self"]],["drag"]]],[11,"clone","","",241,[[["self"]],["edge"]]],[11,"clone","","",344,[[["self"]],["event"]]],[11,"clone","conrod_core::widget::rounded_rectangle","",242,[[["self"]],["roundedrectangle"]]],[11,"clone","","",346,[[["self"]],["points"]]],[11,"clone","conrod_core::widget::scrollbar","",243,[[["self"]],["style"]]],[11,"clone","conrod_core::widget::slider","",247,[[["self"]],["style"]]],[11,"clone","conrod_core::widget::tabs","",350,[[["self"]],["tab"]]],[11,"clone","","",248,[[["self"]],["style"]]],[11,"clone","","",249,[[["self"]],["layout"]]],[11,"clone","conrod_core::widget::text_box","",252,[[["self"]],["style"]]],[11,"clone","","",253,[[["self"]],["event"]]],[11,"clone","conrod_core::widget::text_edit","",255,[[["self"]],["style"]]],[11,"clone","","",256,[[["self"]],["drag"]]],[11,"clone","","",257,[[["self"]],["cursor"]]],[11,"clone","conrod_core::widget::title_bar","",259,[[["self"]],["titlebar"]]],[11,"clone","","",260,[[["self"]],["style"]]],[11,"clone","conrod_core::widget::toggle","",261,[[["self"]],["toggle"]]],[11,"clone","","",262,[[["self"]],["style"]]],[11,"clone","","",355,[[["self"]],["timesclicked"]]],[11,"clone","conrod_core::widget::xy_pad","",264,[[["self"]],["style"]]],[11,"clone","conrod_core::widget","",108,[[["self"]],["kidarea"]]],[11,"clone","","",115,[[["self"]],["maybeparent"]]],[11,"clone","","",109,[[["self"]],["floating"]]],[11,"clone","","",110,[[["self"]],["commonbuilder"]]],[11,"clone","","",111,[[["self"]],["commonstyle"]]],[11,"clone","","",112,[[["self"]],["commonstate"]]],[11,"clone","","",116,[[["self"]],["isover"]]],[11,"clone","conrod_core::cursor","",268,[[["self"]],["mousecursor"]]],[11,"drop","conrod_core","",104,[[["self"]]]],[11,"deref","conrod_core::image","",36,N],[11,"deref","conrod_core","",104,[[["self"]],["ui"]]],[11,"deref","conrod_core::widget::id","",118,N],[11,"deref","conrod_core::widget::primitive::shape::triangles","",147,N],[11,"deref","conrod_core::widget::graph::node","",224,N],[11,"deref","conrod_core::widget::graph","",331,N],[11,"deref","","",231,N],[11,"deref","conrod_core::widget","",267,[[["self"]],["t"]]],[11,"fmt","conrod_core::text::font","",94,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","conrod_core::color","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::event","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::graph::depth_order","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::graph","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::image","",271,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::input::state","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::input::state::touch","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::input::state::mouse","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::input::widget","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::input::global","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::input","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::input::touch","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::position::range","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::position::rect","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::position","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::text","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::text::font","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::text::cursor","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::text::line","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::theme","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::id","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::scroll","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",303,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",304,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::primitive::line","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::primitive::image","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::primitive::point_path","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::primitive::shape::circle","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::primitive::shape::oval","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",306,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::primitive::shape::polygon","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::primitive::shape::rectangle","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",309,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::primitive::shape::triangles","",145,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",310,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::primitive::shape","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::primitive::text","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::bordered_rectangle","",156,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",157,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::button","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",165,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::canvas","",167,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",169,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::collapsible_area","",175,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",172,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",174,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",173,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::drop_down_list","",176,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",177,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::envelope_editor","",180,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",181,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::file_navigator::directory_view","",319,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",188,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::file_navigator","",317,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",184,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",186,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::grid","",190,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",191,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",192,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",193,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::list","",323,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",324,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",325,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",326,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",195,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",321,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",197,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",198,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",199,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::list_select","",204,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",205,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",206,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::matrix","",211,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",214,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",212,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::graph::node","",221,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",222,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",223,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",225,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",226,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",224,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::graph","",331,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",215,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",216,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",218,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",217,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",219,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",220,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",333,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::number_dialer","",234,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",341,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::plot_path","",236,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::range_slider","",239,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",240,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::rounded_rectangle","",242,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::scrollbar","",243,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::slider","",247,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::tabs","",350,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",248,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",249,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::text_box","",252,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",253,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::text_edit","",255,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",256,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",257,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::title_bar","",260,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::toggle","",262,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",355,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget::xy_pad","",264,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::widget","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","conrod_core::cursor","",268,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","conrod_core::widget::graph::node","",224,N],[11,"deref_mut","conrod_core::widget::graph","",331,N],[11,"index","conrod_core::graph","",35,[[["self"],["id"]],["node"]]],[11,"index","","",35,[[["self"],["edgeindex"]],["edge"]]],[11,"index","conrod_core::input::state::mouse","",50,N],[11,"index_mut","conrod_core::graph","",35,[[["self"],["id"]],["node"]]],[11,"index_mut","","",35,[[["self"],["edgeindex"]],["edge"]]],[11,"hash","conrod_core::image","",271,N],[11,"hash","conrod_core::input::touch","",63,N],[11,"hash","","",62,N],[11,"hash","conrod_core::text::font","",95,N],[11,"hash","conrod_core::widget::collapsible_area","",174,N],[11,"hash","conrod_core::widget::graph::node","",225,N],[11,"hash","","",226,N],[11,"hash","conrod_core::widget::graph","",217,N],[11,"description","conrod_core::text::font","",94,[[["self"]],["str"]]],[11,"next","conrod_core","",359,[[["self"],["graph"]],["option"]]],[11,"next","","",360,[[["self"],["graph"]],["option"]]],[11,"border_rgba","","Set the color of the widget's border with rgba values.",269,[[["self"],["f32"],["f32"],["f32"],["f32"]],["self"]]],[11,"border_rgb","","Set the color of the widget's border with rgb values.",269,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[11,"border_hsla","","Set the color of the widget's border with hsla values.",269,[[["self"],["f32"],["f32"],["f32"],["f32"]],["self"]]],[11,"border_hsl","","Set the color of the widget's border with hsl values.",269,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[11,"event","conrod_core::input::keyboard","Change modifier key state depending on input.",273,N],[18,"NO_MODIFIER","","No modifier.",273,N],[18,"CTRL","","Ctrl.",273,N],[18,"SHIFT","","Shift.",273,N],[18,"ALT","","Alt.",273,N],[18,"GUI","","Gui.",273,N],[18,"CTRL_SHIFT","","Ctrl + Shift.",273,N],[18,"CTRL_ALT","","Ctrl + Alt.",273,N],[18,"CTRL_GUI","","Ctrl + Gui.",273,N],[18,"CTRL_SHIFT_ALT","","Ctrl + Shift + Alt.",273,N],[18,"CTRL_SHIFT_GUI","","Ctrl + Shift + Gui.",273,N],[18,"CTRL_SHIFT_ALT_GUI","","Ctrl + Shift + Alt + Gui.",273,N],[18,"SHIFT_ALT","","Shift + Alt.",273,N],[18,"SHIFT_GUI","","Shift + Gui.",273,N],[18,"SHIFT_ALT_GUI","","Shift + Alt + Gui.",273,N],[18,"ALT_GUI","","Alt + Gui.",273,N],[11,"empty","","Returns an empty set of flags",273,[[],["modifierkey"]]],[11,"all","","Returns the set containing all flags.",273,[[],["modifierkey"]]],[11,"bits","","Returns the raw value of the flags currently stored.",273,[[["self"]],["u8"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",273,[[["u8"]],["option",["modifierkey"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",273,[[["u8"]],["modifierkey"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",273,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",273,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",273,[[["self"],["modifierkey"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",273,[[["self"],["modifierkey"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",273,N],[11,"remove","","Removes the specified flags in-place.",273,N],[11,"toggle","","Toggles the specified flags in-place.",273,N],[11,"set","","Inserts or removes the specified flags depending on the…",273,N],[11,"new","conrod_core::input","Create a new ControllerButton object. Intended for use by…",38,[[["i32"],["u8"]],["controllerbutton"]]],[11,"new","","Create a new ControllerAxisArgs object. Intended for use…",39,[[["i32"],["u8"],["f64"]],["controlleraxisargs"]]],[11,"code","","Returns an id of the key",40,[[["self"]],["i32"]]],[11,"viewport","","Returns viewport information filling entire render area.",42,[[["self"]],["viewport"]]],[11,"label_rgba","conrod_core","Set the color of the widget's label from rgba values.",270,[[["self"],["f32"],["f32"],["f32"],["f32"]],["self"]]],[11,"label_rgb","","Set the color of the widget's label from rgb values.",270,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[11,"label_hsla","","Set the color of the widget's label from hsla values.",270,[[["self"],["f32"],["f32"],["f32"],["f32"]],["self"]]],[11,"label_hsl","","Set the color of the widget's label from hsl values.",270,[[["self"],["f32"],["f32"],["f32"]],["self"]]],[11,"small_font","","Set a \"small\" font size for the widget's label.",270,[[["self"],["ui"]],["self"]]],[11,"medium_font","","Set a \"medium\" font size for the widget's label.",270,[[["self"],["ui"]],["self"]]],[11,"large_font","","Set a \"large\" font size for the widget's label.",270,[[["self"],["ui"]],["self"]]],[11,"font","conrod_core::text","The font to which this glyph belongs. If the glyph is a…",286,[[["self"]],["option",["font"]]]],[11,"id","","The glyph identifier for this glyph.",286,[[["self"]],["glyphid"]]],[11,"scaled","","Augments this glyph with scaling information, making…",286,[[["self"],["scale"]],["scaledglyph"]]],[11,"standalone","","Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces…",286,[[["self"]],["glyph"]]],[11,"get_data","","Get the data from this glyph (such as width, extents,…",286,[[["self"]],["option",["arc"]]]],[11,"uniform","","Uniform scaling, equivalent to `Scale { x: s, y: s }`.",86,[[["f32"]],["scale"]]],[11,"builder","conrod_core::text::rt::gpu_cache","Returns a default `CacheBuilder`.",289,[[],["cachebuilder"]]],[11,"scale_tolerance","","Returns the current scale tolerance for the cache.",289,[[["self"]],["f32"]]],[11,"position_tolerance","","Returns the current subpixel position tolerance for the…",289,[[["self"]],["f32"]]],[11,"dimensions","","Returns the cache texture dimensions assumed by the cache.…",289,N],[11,"queue_glyph","","Queue a glyph for caching by the next call to…",289,N],[11,"clear","","Clears the cache. Does not affect the glyph queue.",289,N],[11,"clear_queue","","Clears the glyph queue.",289,N],[11,"to_builder","","Returns a `CacheBuilder` with this cache's attributes.",289,[[["self"]],["cachebuilder"]]],[11,"cache_queued","","Caches the queued glyphs. If this is unsuccessful, the…",289,[[["self"],["f"]],["result",["cachedby","cachewriteerr"]]]],[11,"rect_for","","Retrieves the (floating point) texture coordinates of the…",289,[[["self"],["usize"],["positionedglyph"]],["result",["option","cachereaderr"]]]],[11,"width","conrod_core::text::rt","",89,[[["self"]],["n"]]],[11,"height","","",89,[[["self"]],["n"]]],[11,"dimensions","conrod_core::text::rt::gpu_cache","`width` & `height` dimensions of the 2D texture that will…",291,[[["self"],["u32"],["u32"]],["cachebuilder"]]],[11,"scale_tolerance","","Specifies the tolerances (maximum allowed difference) for…",291,[[["self"],["v"]],["cachebuilder"]]],[11,"position_tolerance","","Specifies the tolerances (maximum allowed difference) for…",291,[[["self"],["v"]],["cachebuilder"]]],[11,"pad_glyphs","","Pack glyphs in texture with a padding of a single zero…",291,[[["self"],["bool"]],["cachebuilder"]]],[11,"multithread","","When multiple CPU cores are available spread rasterization…",291,[[["self"],["bool"]],["cachebuilder"]]],[11,"build","","Constructs a new cache. Note that this is just the CPU…",291,[[["self"]],["cache"]]],[11,"rebuild","","Rebuilds a cache with new attributes. Carries over the…",291,N]],"paths":[[3,"Ui"],[3,"UiBuilder"],[4,"Bordering"],[3,"Hsla"],[3,"Rgba"],[4,"Color"],[4,"Gradient"],[8,"Colorable"],[3,"Text"],[3,"Motion"],[3,"Press"],[3,"MousePress"],[3,"KeyPress"],[3,"Release"],[3,"MouseRelease"],[3,"KeyRelease"],[3,"Drag"],[3,"Click"],[3,"DoubleClick"],[3,"Tap"],[3,"Scroll"],[4,"Input"],[4,"Event"],[4,"Ui"],[4,"Widget"],[4,"Button"],[8,"Walker"],[3,"UniqueWidgetState"],[3,"Container"],[3,"IsOverFn"],[4,"Node"],[4,"Edge"],[3,"PickWidgets"],[3,"PickScrollableWidgets"],[3,"DepthOrder"],[3,"Graph"],[3,"Map"],[4,"Button"],[3,"ControllerButton"],[3,"ControllerAxisArgs"],[4,"Key"],[4,"Button"],[3,"RenderArgs"],[4,"Source"],[4,"Motion"],[3,"State"],[3,"Start"],[3,"Touch"],[3,"Mouse"],[4,"ButtonPosition"],[3,"ButtonMap"],[3,"Mouse"],[3,"Widget"],[3,"Presses"],[3,"MousePresses"],[3,"Releases"],[3,"MouseReleases"],[3,"Clicks"],[3,"Drags"],[3,"Global"],[3,"Events"],[3,"Touch"],[4,"Phase"],[3,"Id"],[3,"Padding"],[4,"Axis"],[4,"Position"],[4,"Relative"],[4,"Direction"],[4,"Align"],[4,"Place"],[4,"Dimension"],[3,"Range"],[4,"Edge"],[3,"Rect"],[4,"Corner"],[8,"Positionable"],[8,"Sizeable"],[3,"Primitive"],[4,"PrimitiveKind"],[8,"PrimitiveWalker"],[3,"Text"],[3,"Primitives"],[3,"OwnedPrimitives"],[3,"WalkOwnedPrimitives"],[3,"GlyphId"],[3,"Scale"],[4,"Justify"],[3,"Point"],[3,"Rect"],[3,"Vector"],[4,"CacheReadErr"],[4,"CacheWriteErr"],[4,"CachedBy"],[4,"Error"],[3,"Id"],[3,"Map"],[3,"Index"],[3,"Info"],[4,"Break"],[3,"Infos"],[3,"Theme"],[3,"WidgetDefault"],[3,"UniqueDefault"],[3,"UiCell"],[4,"IterDiff"],[3,"UpdateArgs"],[3,"KidAreaArgs"],[3,"KidArea"],[3,"Floating"],[3,"CommonBuilder"],[3,"CommonStyle"],[3,"CommonState"],[3,"PreUpdateCache"],[3,"PostUpdateCache"],[4,"MaybeParent"],[4,"IsOver"],[3,"Generator"],[3,"List"],[3,"ListWalk"],[3,"State"],[8,"Axis"],[3,"Scroll"],[3,"Line"],[3,"State"],[3,"Style"],[4,"Pattern"],[4,"Cap"],[3,"Image"],[3,"State"],[3,"Style"],[3,"PointPath"],[3,"State"],[4,"Style"],[3,"Circle"],[3,"Oval"],[3,"Section"],[3,"State"],[8,"OvalSection"],[3,"Circumference"],[3,"Polygon"],[3,"State"],[4,"Kind"],[3,"Rectangle"],[4,"Kind"],[3,"Triangles"],[3,"SingleColor"],[3,"Triangle"],[3,"State"],[8,"Vertex"],[8,"Style"],[3,"TrianglesUnpositioned"],[3,"Text"],[3,"Style"],[3,"State"],[4,"Wrap"],[3,"BorderedRectangle"],[3,"Style"],[3,"RoundedBorderTriangles"],[3,"Button"],[3,"Style"],[3,"FlatIds"],[3,"ImageIds"],[3,"Flat"],[3,"Image"],[3,"TimesClicked"],[4,"ImageColor"],[3,"Canvas"],[3,"Style"],[4,"Length"],[4,"Direction"],[3,"Ids"],[3,"Style"],[3,"Area"],[4,"Event"],[3,"CollapsibleArea"],[3,"Style"],[4,"MaxHeight"],[3,"DropDownList"],[3,"EnvelopeEditor"],[3,"Style"],[4,"Event"],[8,"EnvelopePoint"],[3,"FileNavigator"],[3,"Style"],[4,"Types"],[4,"Event"],[3,"DirectoryView"],[3,"Style"],[4,"Event"],[3,"Grid"],[3,"Style"],[3,"Lines"],[4,"Axis"],[3,"List"],[3,"Fixed"],[3,"Style"],[3,"Item"],[4,"ItemInstantiation"],[4,"ScrollbarPosition"],[8,"Direction"],[8,"ItemSize"],[3,"Items"],[3,"Scrollbar"],[4,"ListDirection"],[4,"Event"],[4,"Selection"],[8,"Direction"],[8,"Mode"],[3,"ListSelect"],[3,"Events"],[3,"Style"],[3,"Element"],[3,"Matrix"],[3,"Elements"],[3,"Graph"],[3,"Style"],[3,"NodeSocket"],[4,"Event"],[4,"NodeEvent"],[4,"EdgeEvent"],[3,"Node"],[3,"Style"],[3,"SocketLayout"],[3,"Event"],[4,"SocketSide"],[4,"SocketType"],[3,"SessionEvents"],[3,"SessionNodes"],[3,"SessionEdges"],[3,"NodeContext"],[3,"NodeWidget"],[3,"Edge"],[3,"EdgeWidget"],[3,"Style"],[3,"NumberDialer"],[3,"Style"],[3,"PlotPath"],[3,"RangeSlider"],[3,"Style"],[4,"Drag"],[4,"Edge"],[3,"RoundedRectangle"],[3,"Style"],[8,"Axis"],[3,"Scrollbar"],[3,"Slider"],[3,"Style"],[3,"Style"],[4,"Layout"],[3,"Tabs"],[3,"TabRects"],[3,"Style"],[4,"Event"],[3,"TextBox"],[3,"Style"],[4,"Drag"],[4,"Cursor"],[3,"TextEdit"],[3,"TitleBar"],[3,"Style"],[3,"Toggle"],[3,"Style"],[3,"XYPad"],[3,"Style"],[8,"Common"],[8,"Widget"],[3,"State"],[4,"MouseCursor"],[8,"Borderable"],[8,"Labelable"],[3,"Id"],[3,"NewIds"],[3,"ModifierKey"],[3,"PressedButtons"],[3,"Events"],[3,"MouseButtonPresses"],[3,"KeyPresses"],[3,"MouseButtonReleases"],[3,"KeyReleases"],[3,"ButtonClicks"],[3,"Taps"],[3,"ButtonDrags"],[3,"Texts"],[3,"Scrolls"],[3,"UiEvents"],[3,"Glyph"],[3,"GlyphIter"],[3,"LayoutIter"],[3,"Cache"],[3,"Lines"],[3,"CacheBuilder"],[3,"NewIds"],[3,"Ids"],[3,"Rects"],[3,"RectsPerLine"],[3,"SelectedRectsPerLine"],[3,"SelectedRects"],[3,"XysPerLine"],[3,"XysPerLineFromText"],[3,"Xs"],[3,"Rects"],[3,"SelectedRects"],[4,"X"],[4,"Y"],[3,"Triangles"],[3,"Full"],[3,"Triangles"],[3,"Triangles"],[3,"State"],[3,"MultiColor"],[3,"State"],[3,"State"],[3,"State"],[3,"State"],[3,"State"],[3,"State"],[3,"Directory"],[3,"State"],[3,"Entry"],[3,"State"],[3,"Dynamic"],[3,"State"],[4,"Up"],[4,"Down"],[4,"Left"],[4,"Right"],[3,"State"],[3,"Single"],[3,"Multiple"],[3,"State"],[3,"Layout"],[3,"State"],[3,"Camera"],[3,"Session"],[3,"Events"],[3,"Nodes"],[3,"Edges"],[3,"State"],[3,"SocketRects"],[3,"State"],[3,"GlyphSlot"],[3,"State"],[3,"State"],[3,"Event"],[3,"State"],[3,"Points"],[3,"State"],[3,"State"],[3,"State"],[3,"Tab"],[3,"State"],[3,"State"],[3,"State"],[3,"State"],[3,"TimesClicked"],[3,"State"],[6,"Point"],[6,"ColoredPoint"],[6,"Children"],[6,"Parents"]]};
searchIndex["conrod_derive"]={"doc":"","items":[[24,"WidgetCommon","conrod_derive","",N,N],[24,"WidgetCommon_","","",N,N],[24,"WidgetStyle","","",N,N],[24,"WidgetStyle_","","",N,N]],"paths":[]};
searchIndex["conrod_example_shared"]={"doc":"This crate is used for sharing a few items between the…","items":[[3,"DemoApp","conrod_example_shared","A demonstration of some application state we want to…",N,N],[3,"Ids","","",N,N],[12,"canvas","","",0,N],[12,"title","","",0,N],[12,"introduction","","",0,N],[12,"shapes_canvas","","",0,N],[12,"rounded_rectangle","","",0,N],[12,"shapes_left_col","","",0,N],[12,"shapes_right_col","","",0,N],[12,"shapes_title","","",0,N],[12,"line","","",0,N],[12,"point_path","","",0,N],[12,"rectangle_fill","","",0,N],[12,"rectangle_outline","","",0,N],[12,"trapezoid","","",0,N],[12,"oval_fill","","",0,N],[12,"oval_outline","","",0,N],[12,"circle","","",0,N],[12,"image_title","","",0,N],[12,"rust_logo","","",0,N],[12,"button_title","","",0,N],[12,"button","","",0,N],[12,"xy_pad","","",0,N],[12,"toggle","","",0,N],[12,"ball","","",0,N],[12,"dialer_title","","",0,N],[12,"number_dialer","","",0,N],[12,"plot_path","","",0,N],[12,"canvas_scrollbar","","",0,N],[5,"theme","","A set of reasonable stylistic defaults that works for the…",N,[[],["theme"]]],[5,"gui","","Instantiate a GUI demonstrating every widget available in…",N,[[["uicell"],["ids"],["demoapp"]]]],[17,"WIN_W","","",N,N],[17,"WIN_H","","",N,N],[11,"new","","Simple constructor for the `DemoApp`.",1,[[["id"]],["self"]]],[11,"new","","Construct a new `widget::Id` container.",0,[[["generator"]],["self"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[3,"Ids"],[3,"DemoApp"]]};
searchIndex["conrod_glium"]={"doc":"A glium backend for rendering conrod primitives.","items":[[3,"GlyphCache","conrod_glium","A rusttype `GlyphCache` along with a…",N,N],[3,"Renderer","","A type used for translating `render::Primitives` into…",N,N],[3,"Commands","","An iterator yielding `Command`s, produced by the…",N,N],[3,"Vertex","","The `Vertex` type passed to the vertex shader.",N,N],[12,"mode","","The mode with which the `Vertex` will be drawn within the…",0,N],[12,"position","","The position of the vertex within vector space.",0,N],[12,"tex_coords","","The coordinates of the texture used by this `Vertex`.",0,N],[12,"color","","A color associated with the `Vertex`.",0,N],[4,"Command","","A `Command` describing a step in the drawing process.",N,N],[13,"Draw","","Draw to the target.",1,N],[13,"Scizzor","","Update the scizzor within the `glium::DrawParameters`.",1,N],[4,"Draw","","A `Command` for drawing to the target.",N,N],[13,"Image","","A range of vertices representing triangles textured with…",2,N],[13,"Plain","","A range of vertices representing plain triangles.",2,N],[4,"RendererCreationError","","Possible errors that may occur during a call to…",N,N],[13,"Texture","","Errors that might occur when creating the glyph cache…",3,N],[13,"Program","","Errors that might occur when constructing the shader…",3,N],[4,"DrawError","","Possible errors that may occur during a call to…",N,N],[13,"Buffer","","Errors that might occur upon construction of a…",4,N],[13,"Draw","","Errors that might occur when drawing to the…",4,N],[5,"program","","Construct the glium shader program that can be used to…",N,[[["f"]],["result",["program","programchoosercreationerror"]]]],[5,"draw_parameters","","Default glium `DrawParameters` with alpha blending enabled.",N,[[],["drawparameters"]]],[5,"gamma_srgb_to_linear","","Converts gamma (brightness) from sRGB to linear color space.",N,N],[5,"text_texture_client_format","","Return the optimal client format for the text texture…",N,[[["version"]],["clientformat"]]],[5,"text_texture_uncompressed_float_format","","Return the optimal uncompressed float format for the text…",N,[[["version"]],["uncompressedfloatformat"]]],[17,"MODE_TEXT","","Draw text from the text cache texture `tex` in the…",N,N],[17,"MODE_IMAGE","","Draw an image from the texture at `tex` in the fragment…",N,N],[17,"MODE_GEOMETRY","","Ignore `tex` and draw simple, colored 2D geometry.",N,N],[17,"VERTEX_SHADER_120","","The vertex shader used within the `glium::Program` for…",N,N],[17,"FRAGMENT_SHADER_120","","The fragment shader used within the `glium::Program` for…",N,N],[17,"VERTEX_SHADER_140","","The vertex shader used within the `glium::Program` for…",N,N],[17,"FRAGMENT_SHADER_140","","The fragment shader used within the `glium::Program` for…",N,N],[17,"VERTEX_SHADER_300_ES","","The vertex shader used within the `glium::Program` for…",N,N],[17,"FRAGMENT_SHADER_300_ES","","The fragment shader used within the `glium::Program` for…",N,N],[8,"TextureDimensions","","Glium textures that have two dimensions.",N,N],[10,"dimensions","","The width and height of the texture.",5,N],[11,"with_dimensions","","Construct a GlyphCache with the given texture dimensions.",6,[[["f"],["u32"],["u32"]],["result",["texturecreationerror"]]]],[11,"new","","Construct a `GlyphCache` with a size equal to the given…",6,[[["f"]],["result",["texturecreationerror"]]]],[11,"texture","","The texture used to cache the glyphs on the GPU.",6,[[["self"]],["texture2d"]]],[11,"new","","Construct a new empty `Renderer`.",7,[[["f"]],["result",["renderercreationerror"]]]],[11,"with_glyph_cache_dimensions","","Construct a new empty `Renderer` with the given glyph…",7,[[["f"],["u32"],["u32"]],["result",["renderercreationerror"]]]],[11,"commands","","Produce an `Iterator` yielding `Command`s.",7,[[["self"]],["commands"]]],[11,"fill","","Fill the inner vertex and command buffers by translating…",7,[[["self"],["display"],["p"],["map"]]]],[11,"draw","","Draws using the inner list of `Command`s to the given…",7,[[["self"],["f"],["s"],["map"]],["result",["drawerror"]]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"read","","",0,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",0,[[],["usize"]]],[11,"to_void_ptr","","",0,N],[11,"ref_from_ptr","","",0,N],[11,"is_size_suitable","","",0,[[["usize"]],["bool"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"from","","",3,[[["texturecreationerror"]],["self"]]],[11,"from","","",3,[[["programchoosercreationerror"]],["self"]]],[11,"from","","",4,[[["buffercreationerror"]],["self"]]],[11,"from","","",4,[[["drawerror"]],["self"]]],[11,"clone","","",1,[[["self"]],["command"]]],[11,"clone","","",2,[[["self"]],["draw"]]],[11,"clone","","",0,[[["self"]],["vertex"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"description","","",4,[[["self"]],["str"]]],[11,"build_bindings","","",0,[[],["vertexformat"]]]],"paths":[[3,"Vertex"],[4,"Command"],[4,"Draw"],[4,"RendererCreationError"],[4,"DrawError"],[8,"TextureDimensions"],[3,"GlyphCache"],[3,"Renderer"],[3,"Commands"]]};
searchIndex["conrod_winit"]={"doc":"A function for converting a `winit::Event` to a…","items":[[0,"macros","conrod_winit","A collection of macros for generating code related to…",N,N],[8,"WinitWindow","","Types that have access to a `winit::Window` and can…",N,N],[10,"get_inner_size","","Return the inner size of the window in logical pixels.",0,[[["self"]],["option"]]],[10,"hidpi_factor","","Return the window's DPI factor so that we can convert from…",0,[[["self"]],["f32"]]],[14,"convert_key","","Maps winit's key to a conrod `Key`.",N,N],[14,"convert_mouse_button","","Maps winit's mouse button to conrod's mouse button.",N,N],[14,"convert_window_event","","A macro for converting a `winit::WindowEvent` to a…",N,N],[14,"convert_event","","A macro for converting a `winit::Event` to a…",N,N],[14,"convert_mouse_cursor","","Convert a given conrod mouse cursor to the corresponding…",N,N],[14,"conversion_fns","","Generate a set of conversion functions for converting…",N,N]],"paths":[[8,"WinitWindow"]]};
searchIndex["core_foundation"]={"doc":"This crate provides wrappers around the underlying…","items":[[0,"array","core_foundation","Heterogeneous immutable arrays.",N,N],[6,"CFArrayRetainCallBack","core_foundation::array","",N,N],[6,"CFArrayReleaseCallBack","","",N,N],[6,"CFArrayCopyDescriptionCallBack","","",N,N],[6,"CFArrayEqualCallBack","","",N,N],[3,"CFArrayCallBacks","","",N,N],[12,"version","","",0,N],[12,"retain","","",0,N],[12,"release","","",0,N],[12,"copyDescription","","",0,N],[12,"equal","","",0,N],[3,"__CFArray","","",N,N],[6,"CFArrayRef","","",N,N],[7,"kCFTypeArrayCallBacks","","",N,N],[5,"CFArrayCreate","","",N,N],[5,"CFArrayCreateCopy","","",N,N],[5,"CFArrayGetCount","","",N,N],[5,"CFArrayGetValues","","",N,N],[5,"CFArrayGetValueAtIndex","","",N,N],[5,"CFArrayGetTypeID","","",N,[[],["u64"]]],[6,"CFIndex","","",N,N],[3,"CFArray","","A heterogeneous immutable array.",N,N],[3,"CFArrayIterator","","",N,N],[11,"from_copyable","","Creates a new `CFArray` with the given elements, which…",1,N],[11,"from_CFTypes","","Creates a new `CFArray` with the given elements, which…",1,N],[11,"to_untyped","","",1,[[["self"]],["cfarray"]]],[11,"into_untyped","","Returns the same array, but with the type reset to void…",1,[[["self"]],["cfarray"]]],[11,"iter","","Iterates over the elements of this `CFArray`.",1,[[["self"]],["cfarrayiterator"]]],[11,"len","","",1,[[["self"]],["cfindex"]]],[11,"get_unchecked","","",1,[[["self"],["cfindex"]],["itemref"]]],[11,"get","","",1,[[["self"],["cfindex"]],["option",["itemref"]]]],[11,"get_values","","",1,[[["self"],["cfrange"]],["vec"]]],[11,"get_all_values","","",1,[[["self"]],["vec"]]],[0,"attributed_string","core_foundation","",N,N],[3,"__CFAttributedString","core_foundation::attributed_string","",N,N],[6,"CFAttributedStringRef","","",N,N],[6,"CFMutableAttributedStringRef","","",N,N],[5,"CFAttributedStringCreate","","",N,N],[5,"CFAttributedStringGetLength","","",N,N],[5,"CFAttributedStringGetTypeID","","",N,[[],["u64"]]],[5,"CFAttributedStringCreateMutableCopy","","",N,N],[5,"CFAttributedStringCreateMutable","","",N,N],[5,"CFAttributedStringReplaceString","","",N,N],[5,"CFAttributedStringSetAttribute","","",N,N],[5,"CFMutableAttributedStringGetTypeID","","",N,[[],["u64"]]],[3,"CFAttributedString","","",N,N],[3,"CFMutableAttributedString","","",N,N],[11,"new","","",2,[[["cfstring"]],["self"]]],[11,"char_len","","",2,[[["self"]],["cfindex"]]],[11,"new","","",3,[[],["self"]]],[11,"char_len","","",3,[[["self"]],["cfindex"]]],[11,"replace_str","","",3,[[["self"],["cfstring"],["cfrange"]]]],[11,"set_attribute","","",3,[[["self"],["cfrange"],["cfstringref"],["t"]]]],[0,"base","core_foundation","",N,N],[6,"Boolean","core_foundation::base","",N,N],[6,"CFIndex","","",N,N],[6,"mach_port_t","","",N,N],[6,"CFAllocatorRef","","",N,N],[6,"CFNullRef","","",N,N],[6,"CFHashCode","","",N,N],[6,"CFTypeID","","",N,N],[6,"CFTypeRef","","",N,N],[6,"CFOptionFlags","","",N,N],[6,"OSStatus","","",N,N],[6,"SInt32","","",N,N],[4,"CFComparisonResult","","",N,N],[13,"LessThan","","",4,N],[13,"EqualTo","","",4,N],[13,"GreaterThan","","",4,N],[3,"CFRange","","",N,N],[12,"location","","",5,N],[12,"length","","",5,N],[6,"CFAllocatorRetainCallBack","","",N,N],[6,"CFAllocatorReleaseCallBack","","",N,N],[6,"CFAllocatorCopyDescriptionCallBack","","",N,N],[6,"CFAllocatorAllocateCallBack","","",N,N],[6,"CFAllocatorReallocateCallBack","","",N,N],[6,"CFAllocatorDeallocateCallBack","","",N,N],[6,"CFAllocatorPreferredSizeCallBack","","",N,N],[3,"CFAllocatorContext","","",N,N],[12,"version","","",6,N],[12,"info","","",6,N],[12,"retain","","",6,N],[12,"release","","",6,N],[12,"copyDescription","","",6,N],[12,"allocate","","",6,N],[12,"reallocate","","",6,N],[12,"deallocate","","",6,N],[12,"preferredSize","","",6,N],[8,"TCFTypeRef","","Trait for all types which are Core Foundation reference…",N,N],[10,"as_void_ptr","","",7,N],[10,"from_void_ptr","","",7,N],[7,"kCFAllocatorDefault","","",N,N],[7,"kCFAllocatorSystemDefault","","",N,N],[7,"kCFAllocatorMalloc","","",N,N],[7,"kCFAllocatorMallocZone","","",N,N],[7,"kCFAllocatorNull","","",N,N],[7,"kCFAllocatorUseContext","","",N,N],[5,"CFAllocatorCreate","","",N,N],[5,"CFAllocatorAllocate","","",N,N],[5,"CFAllocatorDeallocate","","",N,N],[5,"CFAllocatorGetPreferredSizeForSize","","",N,N],[5,"CFAllocatorReallocate","","",N,N],[5,"CFAllocatorGetDefault","","",N,N],[5,"CFAllocatorSetDefault","","",N,N],[5,"CFAllocatorGetContext","","",N,N],[5,"CFAllocatorGetTypeID","","",N,[[],["u64"]]],[7,"kCFNull","","",N,N],[5,"CFCopyDescription","","",N,N],[5,"CFEqual","","",N,N],[5,"CFGetRetainCount","","",N,N],[5,"CFGetTypeID","","",N,N],[5,"CFHash","","",N,N],[5,"CFRelease","","",N,N],[5,"CFRetain","","",N,N],[5,"CFShow","","",N,N],[3,"CFType","","Superclass of all Core Foundation objects.",N,N],[3,"CFAllocator","","",N,N],[3,"ItemRef","","A reference to an element inside a container",N,N],[3,"ItemMutRef","","A reference to a mutable element inside a container",N,N],[8,"CFIndexConvertible","","",N,N],[10,"to_CFIndex","","Always use this method to construct a `CFIndex` value. It…",8,[[["self"]],["cfindex"]]],[8,"TCFType","","All Core Foundation types implement this trait. The…",N,N],[16,"Ref","","The reference type wrapped inside this type.",9,N],[10,"as_concrete_TypeRef","","Returns the object as its concrete TypeRef.",9,N],[10,"wrap_under_create_rule","","Returns an instance of the object, wrapping the underlying…",9,N],[10,"type_id","","Returns the type ID for this class.",9,[[],["cftypeid"]]],[11,"as_CFType","","Returns the object as a wrapped `CFType`. The reference…",9,[[["self"]],["cftype"]]],[11,"into_CFType","","Returns the object as a wrapped `CFType`. Consumes self…",9,[[["self"]],["cftype"]]],[10,"as_CFTypeRef","","Returns the object as a raw `CFTypeRef`. The reference…",9,[[["self"]],["cftyperef"]]],[10,"wrap_under_get_rule","","Returns an instance of the object, wrapping the underlying…",9,N],[11,"retain_count","","Returns the reference count of the object. It is unwise to…",9,[[["self"]],["cfindex"]]],[11,"type_of","","Returns the type ID of this object.",9,[[["self"]],["cftypeid"]]],[11,"show","","Writes a debugging version of this object on standard error.",9,[[["self"]]]],[11,"instance_of","","Returns true if this value is an instance of another type.",9,[[["self"]],["bool"]]],[8,"FromMutVoid","","A trait describing how to convert from the stored *mut…",N,N],[10,"from_mut_void","","",10,N],[8,"FromVoid","","A trait describing how to convert from the stored *const…",N,N],[10,"from_void","","",11,N],[8,"ToVoid","","A trait describing how to convert from the stored *const…",N,N],[10,"to_void","","",12,N],[11,"downcast","","Try to downcast the `CFType` to a subclass. Checking if…",13,[[["self"]],["option"]]],[11,"downcast_into","","Similar to [`downcast`], but consumes self and can thus…",13,[[["self"]],["option"]]],[11,"new","","",14,[[["cfallocatorcontext"]],["cfallocator"]]],[0,"boolean","core_foundation","A Boolean type.",N,N],[6,"CFBooleanRef","core_foundation::boolean","",N,N],[5,"CFBooleanGetTypeID","","",N,[[],["u64"]]],[7,"kCFBooleanTrue","","",N,N],[7,"kCFBooleanFalse","","",N,N],[3,"CFBoolean","","A Boolean type.",N,N],[11,"true_value","","",15,[[],["cfboolean"]]],[11,"false_value","","",15,[[],["cfboolean"]]],[0,"data","core_foundation","Core Foundation byte buffers.",N,N],[3,"__CFData","core_foundation::data","",N,N],[6,"CFDataRef","","",N,N],[5,"CFDataCreate","","",N,N],[5,"CFDataGetBytePtr","","",N,N],[5,"CFDataGetLength","","",N,N],[5,"CFDataGetTypeID","","",N,[[],["u64"]]],[3,"CFData","","A byte buffer.",N,N],[11,"from_buffer","","",16,N],[11,"bytes","","Returns a pointer to the underlying bytes in this data.…",16,N],[11,"len","","Returns the length of this byte buffer.",16,[[["self"]],["cfindex"]]],[0,"date","core_foundation","Core Foundation date objects.",N,N],[3,"__CFDate","core_foundation::date","",N,N],[6,"CFDateRef","","",N,N],[6,"CFTimeInterval","","",N,N],[6,"CFAbsoluteTime","","",N,N],[7,"kCFAbsoluteTimeIntervalSince1904","","",N,N],[7,"kCFAbsoluteTimeIntervalSince1970","","",N,N],[5,"CFAbsoluteTimeGetCurrent","","",N,[[],["f64"]]],[5,"CFDateCreate","","",N,N],[5,"CFDateGetAbsoluteTime","","",N,N],[5,"CFDateGetTimeIntervalSinceDate","","",N,N],[5,"CFDateCompare","","",N,N],[5,"CFDateGetTypeID","","",N,[[],["u64"]]],[3,"CFDate","","A date.",N,N],[11,"new","","",17,[[["cfabsolutetime"]],["cfdate"]]],[11,"now","","",17,[[],["cfdate"]]],[11,"abs_time","","",17,[[["self"]],["cfabsolutetime"]]],[0,"dictionary","core_foundation","Dictionaries of key-value pairs.",N,N],[6,"CFDictionaryApplierFunction","core_foundation::dictionary","",N,N],[6,"CFDictionaryRetainCallBack","","",N,N],[6,"CFDictionaryReleaseCallBack","","",N,N],[6,"CFDictionaryCopyDescriptionCallBack","","",N,N],[6,"CFDictionaryEqualCallBack","","",N,N],[6,"CFDictionaryHashCallBack","","",N,N],[3,"CFDictionaryKeyCallBacks","","",N,N],[12,"version","","",18,N],[12,"retain","","",18,N],[12,"release","","",18,N],[12,"copyDescription","","",18,N],[12,"equal","","",18,N],[12,"hash","","",18,N],[3,"CFDictionaryValueCallBacks","","",N,N],[12,"version","","",19,N],[12,"retain","","",19,N],[12,"release","","",19,N],[12,"copyDescription","","",19,N],[12,"equal","","",19,N],[3,"__CFDictionary","","",N,N],[6,"CFDictionaryRef","","",N,N],[6,"CFMutableDictionaryRef","","",N,N],[7,"kCFTypeDictionaryKeyCallBacks","","",N,N],[7,"kCFTypeDictionaryValueCallBacks","","",N,N],[5,"CFDictionaryContainsKey","","",N,N],[5,"CFDictionaryCreate","","",N,N],[5,"CFDictionaryGetCount","","",N,N],[5,"CFDictionaryGetTypeID","","",N,[[],["u64"]]],[5,"CFDictionaryGetValueIfPresent","","",N,N],[5,"CFDictionaryApplyFunction","","",N,N],[5,"CFDictionaryGetKeysAndValues","","",N,N],[5,"CFDictionaryCreateMutable","","",N,N],[5,"CFDictionaryCreateMutableCopy","","",N,N],[5,"CFDictionaryAddValue","","",N,N],[5,"CFDictionarySetValue","","",N,N],[5,"CFDictionaryReplaceValue","","",N,N],[5,"CFDictionaryRemoveValue","","",N,N],[5,"CFDictionaryRemoveAllValues","","",N,N],[3,"CFDictionary","","",N,N],[3,"CFMutableDictionary","","",N,N],[11,"from_CFType_pairs","","",20,N],[11,"to_untyped","","",20,[[["self"]],["cfdictionary"]]],[11,"to_mutable","","Returns a `CFMutableDictionary` pointing to the same…",20,[[["self"]],["cfmutabledictionary"]]],[11,"into_untyped","","Returns the same dictionary, but with the types reset to…",20,[[["self"]],["cfdictionary"]]],[11,"len","","",20,[[["self"]],["usize"]]],[11,"is_empty","","",20,[[["self"]],["bool"]]],[11,"contains_key","","",20,[[["self"],["k"]],["bool"]]],[11,"find","","",20,[[["self"],["t"]],["option",["itemref"]]]],[11,"get","","Panics",20,[[["self"],["t"]],["itemref"]]],[11,"get_keys_and_values","","",20,N],[11,"new","","",21,[[],["self"]]],[11,"with_capacity","","",21,[[["isize"]],["self"]]],[11,"copy_with_capacity","","",21,[[["self"],["isize"]],["self"]]],[11,"from_CFType_pairs","","",21,N],[11,"to_untyped","","",21,[[["self"]],["cfmutabledictionary"]]],[11,"into_untyped","","Returns the same dictionary, but with the types reset to…",21,[[["self"]],["cfmutabledictionary"]]],[11,"to_immutable","","Returns a `CFDictionary` pointing to the same underlying…",21,[[["self"]],["cfdictionary"]]],[11,"len","","",21,[[["self"]],["usize"]]],[11,"is_empty","","",21,[[["self"]],["bool"]]],[11,"contains_key","","",21,N],[11,"find","","",21,[[["self"],["k"]],["option",["itemref"]]]],[11,"get","","Panics",21,[[["self"],["k"]],["itemref"]]],[11,"get_keys_and_values","","",21,N],[11,"add","","Adds the key-value pair to the dictionary if no such key…",21,[[["self"],["k"],["v"]]]],[11,"set","","Sets the value of the key in the dictionary.",21,[[["self"],["k"],["v"]]]],[11,"replace","","Replaces the value of the key in the dictionary.",21,[[["self"],["k"],["v"]]]],[11,"remove","","Removes the value of the key from the dictionary.",21,[[["self"],["k"]]]],[11,"remove_all","","",21,[[["self"]]]],[0,"error","core_foundation","Core Foundation errors.",N,N],[3,"__CFError","core_foundation::error","",N,N],[6,"CFErrorRef","","",N,N],[5,"CFErrorGetTypeID","","",N,[[],["u64"]]],[7,"kCFErrorDomainPOSIX","","",N,N],[7,"kCFErrorDomainOSStatus","","",N,N],[7,"kCFErrorDomainMach","","",N,N],[7,"kCFErrorDomainCocoa","","",N,N],[5,"CFErrorGetDomain","","",N,N],[5,"CFErrorGetCode","","",N,N],[5,"CFErrorCopyDescription","","",N,N],[3,"CFError","","An error value.",N,N],[11,"domain","","Returns a string identifying the domain with which this…",22,[[["self"]],["cfstring"]]],[11,"code","","Returns the code identifying this type of error.",22,[[["self"]],["cfindex"]]],[11,"description","","Returns a human-presentable description of the error.",22,[[["self"]],["cfstring"]]],[0,"filedescriptor","core_foundation","",N,N],[6,"CFFileDescriptorNativeDescriptor","core_foundation::filedescriptor","",N,N],[3,"__CFFileDescriptor","","",N,N],[6,"CFFileDescriptorRef","","",N,N],[17,"kCFFileDescriptorReadCallBack","","",N,N],[17,"kCFFileDescriptorWriteCallBack","","",N,N],[6,"CFFileDescriptorCallBack","","",N,N],[3,"CFFileDescriptorContext","","",N,N],[12,"version","","",23,N],[12,"info","","",23,N],[12,"retain","","",23,N],[12,"release","","",23,N],[12,"copyDescription","","",23,N],[5,"CFFileDescriptorGetTypeID","","",N,[[],["u64"]]],[5,"CFFileDescriptorCreate","","",N,N],[5,"CFFileDescriptorGetNativeDescriptor","","",N,N],[5,"CFFileDescriptorGetContext","","",N,N],[5,"CFFileDescriptorEnableCallBacks","","",N,N],[5,"CFFileDescriptorDisableCallBacks","","",N,N],[5,"CFFileDescriptorInvalidate","","",N,N],[5,"CFFileDescriptorIsValid","","",N,N],[5,"CFFileDescriptorCreateRunLoopSource","","",N,N],[3,"CFFileDescriptor","","",N,N],[11,"new","","",24,[[["rawfd"],["bool"],["cffiledescriptorcallback"],["option",["cffiledescriptorcontext"]]],["option",["cffiledescriptor"]]]],[11,"context","","",24,[[["self"]],["cffiledescriptorcontext"]]],[11,"enable_callbacks","","",24,[[["self"],["cfoptionflags"]]]],[11,"disable_callbacks","","",24,[[["self"],["cfoptionflags"]]]],[11,"valid","","",24,[[["self"]],["bool"]]],[11,"invalidate","","",24,[[["self"]]]],[11,"to_run_loop_source","","",24,[[["self"],["cfindex"]],["option",["cfrunloopsource"]]]],[0,"number","core_foundation","Immutable numbers.",N,N],[3,"__CFBoolean","core_foundation::number","",N,N],[6,"CFBooleanRef","","",N,N],[6,"CFNumberType","","",N,N],[7,"kCFNumberSInt32Type","","",N,N],[7,"kCFNumberSInt64Type","","",N,N],[7,"kCFNumberFloat32Type","","",N,N],[7,"kCFNumberFloat64Type","","",N,N],[4,"__CFNumber","","",N,N],[6,"CFNumberRef","","",N,N],[7,"kCFBooleanTrue","","",N,N],[7,"kCFBooleanFalse","","",N,N],[5,"CFBooleanGetTypeID","","",N,[[],["u64"]]],[5,"CFNumberCreate","","",N,N],[5,"CFNumberGetValue","","",N,N],[5,"CFNumberCompare","","",N,N],[5,"CFNumberGetTypeID","","",N,[[],["u64"]]],[3,"CFNumber","","An immutable numeric value.",N,N],[11,"to_i32","","",25,[[["self"]],["option",["i32"]]]],[11,"to_i64","","",25,[[["self"]],["option",["i64"]]]],[11,"to_f32","","",25,[[["self"]],["option",["f32"]]]],[11,"to_f64","","",25,[[["self"]],["option",["f64"]]]],[0,"set","core_foundation","An immutable bag of elements.",N,N],[6,"CFSetApplierFunction","core_foundation::set","",N,N],[6,"CFSetRetainCallBack","","",N,N],[6,"CFSetReleaseCallBack","","",N,N],[6,"CFSetCopyDescriptionCallBack","","",N,N],[6,"CFSetEqualCallBack","","",N,N],[6,"CFSetHashCallBack","","",N,N],[3,"CFSetCallBacks","","",N,N],[12,"version","","",26,N],[12,"retain","","",26,N],[12,"release","","",26,N],[12,"copyDescription","","",26,N],[12,"equal","","",26,N],[12,"hash","","",26,N],[3,"__CFSet","","",N,N],[6,"CFSetRef","","",N,N],[7,"kCFTypeSetCallBacks","","",N,N],[5,"CFSetCreate","","",N,N],[5,"CFSetApplyFunction","","",N,N],[5,"CFSetGetCount","","",N,N],[5,"CFSetGetTypeID","","",N,[[],["u64"]]],[3,"CFSet","","An immutable bag of elements.",N,N],[11,"from_slice","","Creates a new set from a list of `CFType` instances.",27,N],[0,"string","core_foundation","Immutable strings.",N,N],[6,"UniChar","core_foundation::string","",N,N],[6,"CFStringCompareFlags","","",N,N],[6,"CFStringEncoding","","",N,N],[7,"kCFStringEncodingUTF8","","",N,N],[6,"CFStringEncodings","","",N,N],[3,"__CFString","","",N,N],[6,"CFStringRef","","",N,N],[5,"CFStringCreateWithBytes","","",N,N],[5,"CFStringCreateWithBytesNoCopy","","",N,N],[5,"CFStringCreateWithCString","","",N,N],[5,"CFStringGetBytes","","",N,N],[5,"CFStringGetCString","","",N,N],[5,"CFStringGetCStringPtr","","",N,N],[5,"CFStringGetLength","","",N,N],[5,"CFStringGetTypeID","","",N,[[],["u64"]]],[3,"CFString","","An immutable string in one of a variety of encodings.",N,N],[11,"new","","Creates a new `CFString` instance from a Rust string.",28,[[["str"]],["cfstring"]]],[11,"from_static_string","","Like `CFString::new`, but references a string that can be…",28,[[["str"]],["cfstring"]]],[11,"char_len","","Returns the number of characters in the string.",28,[[["self"]],["cfindex"]]],[0,"url","core_foundation","A URL type for Core Foundation.",N,N],[3,"__CFURL","core_foundation::url","",N,N],[6,"CFURLRef","","",N,N],[6,"CFURLBookmarkCreationOptions","","",N,N],[6,"CFURLPathStyle","","",N,N],[17,"kCFURLPOSIXPathStyle","","",N,N],[17,"kCFURLHFSPathStyle","","",N,N],[17,"kCFURLWindowsPathStyle","","",N,N],[7,"kCFURLAttributeModificationDateKey","","",N,N],[7,"kCFURLContentAccessDateKey","","",N,N],[7,"kCFURLContentModificationDateKey","","",N,N],[7,"kCFURLCreationDateKey","","",N,N],[7,"kCFURLFileResourceIdentifierKey","","",N,N],[7,"kCFURLFileSecurityKey","","",N,N],[7,"kCFURLHasHiddenExtensionKey","","",N,N],[7,"kCFURLIsDirectoryKey","","",N,N],[7,"kCFURLIsExecutableKey","","",N,N],[7,"kCFURLIsHiddenKey","","",N,N],[7,"kCFURLIsPackageKey","","",N,N],[7,"kCFURLIsReadableKey","","",N,N],[7,"kCFURLIsRegularFileKey","","",N,N],[7,"kCFURLIsSymbolicLinkKey","","",N,N],[7,"kCFURLIsSystemImmutableKey","","",N,N],[7,"kCFURLIsUserImmutableKey","","",N,N],[7,"kCFURLIsVolumeKey","","",N,N],[7,"kCFURLIsWritableKey","","",N,N],[7,"kCFURLLabelNumberKey","","",N,N],[7,"kCFURLLinkCountKey","","",N,N],[7,"kCFURLLocalizedLabelKey","","",N,N],[7,"kCFURLLocalizedNameKey","","",N,N],[7,"kCFURLLocalizedTypeDescriptionKey","","",N,N],[7,"kCFURLNameKey","","",N,N],[7,"kCFURLParentDirectoryURLKey","","",N,N],[7,"kCFURLPreferredIOBlockSizeKey","","",N,N],[7,"kCFURLTypeIdentifierKey","","",N,N],[7,"kCFURLVolumeIdentifierKey","","",N,N],[7,"kCFURLVolumeURLKey","","",N,N],[7,"kCFURLFileResourceTypeKey","","",N,N],[5,"CFURLCopyAbsoluteURL","","",N,N],[5,"CFURLCreateFilePathURL","","",N,N],[5,"CFURLCreateFromFileSystemRepresentation","","",N,N],[5,"CFURLCreateWithBytes","","",N,N],[5,"CFURLCreateWithFileSystemPath","","",N,N],[5,"CFURLCreateWithFileSystemPathRelativeToBase","","",N,N],[5,"CFURLCanBeDecomposed","","",N,N],[5,"CFURLCopyFileSystemPath","","",N,N],[5,"CFURLCopyFragment","","",N,N],[5,"CFURLCopyHostName","","",N,N],[5,"CFURLCopyLastPathComponent","","",N,N],[5,"CFURLCopyNetLocation","","",N,N],[5,"CFURLCopyParameterString","","",N,N],[5,"CFURLCopyPassword","","",N,N],[5,"CFURLCopyPath","","",N,N],[5,"CFURLCopyPathExtension","","",N,N],[5,"CFURLCopyQueryString","","",N,N],[5,"CFURLCopyResourceSpecifier","","",N,N],[5,"CFURLCopyScheme","","",N,N],[5,"CFURLCopyStrictPath","","",N,N],[5,"CFURLCopyUserName","","",N,N],[5,"CFURLGetPortNumber","","",N,N],[5,"CFURLHasDirectoryPath","","",N,N],[5,"CFURLGetFileSystemRepresentation","","",N,N],[5,"CFURLGetString","","",N,N],[5,"CFURLGetBytes","","",N,N],[5,"CFURLGetTypeID","","",N,[[],["u64"]]],[5,"CFURLClearResourcePropertyCache","","",N,N],[5,"CFURLSetResourcePropertyForKey","","",N,N],[3,"CFURL","","",N,N],[11,"from_path","","",29,[[["p"],["bool"]],["option",["cfurl"]]]],[11,"from_file_system_path","","",29,[[["cfstring"],["cfurlpathstyle"],["bool"]],["cfurl"]]],[11,"to_path","","",29,[[["self"]],["option",["pathbuf"]]]],[11,"get_string","","",29,[[["self"]],["cfstring"]]],[11,"get_file_system_path","","",29,[[["self"],["cfurlpathstyle"]],["cfstring"]]],[11,"absolute","","",29,[[["self"]],["cfurl"]]],[0,"bundle","core_foundation","Core Foundation Bundle Type",N,N],[3,"__CFBundle","core_foundation::bundle","",N,N],[6,"CFBundleRef","","",N,N],[5,"CFBundleCreate","","",N,N],[5,"CFBundleGetBundleWithIdentifier","","",N,N],[5,"CFBundleGetFunctionPointerForName","","",N,N],[5,"CFBundleGetMainBundle","","",N,N],[5,"CFBundleGetInfoDictionary","","",N,N],[5,"CFBundleGetTypeID","","",N,[[],["u64"]]],[5,"CFBundleCopyExecutableURL","","",N,N],[5,"CFBundleCopyPrivateFrameworksURL","","",N,N],[3,"CFBundle","","A Bundle type.",N,N],[11,"new","","",30,[[["cfurl"]],["option",["cfbundle"]]]],[11,"bundle_with_identifier","","",30,[[["cfstring"]],["option",["cfbundle"]]]],[11,"function_pointer_for_name","","",30,N],[11,"main_bundle","","",30,[[],["cfbundle"]]],[11,"info_dictionary","","",30,[[["self"]],["cfdictionary",["cfstring","cftype"]]]],[11,"executable_url","","",30,[[["self"]],["option",["cfurl"]]]],[11,"private_frameworks_url","","",30,[[["self"]],["option",["cfurl"]]]],[0,"propertylist","core_foundation","Core Foundation property lists",N,N],[6,"CFPropertyListRef","core_foundation::propertylist","",N,N],[6,"CFPropertyListFormat","","",N,N],[17,"kCFPropertyListOpenStepFormat","","",N,N],[17,"kCFPropertyListXMLFormat_v1_0","","",N,N],[17,"kCFPropertyListBinaryFormat_v1_0","","",N,N],[6,"CFPropertyListMutabilityOptions","","",N,N],[17,"kCFPropertyListImmutable","","",N,N],[17,"kCFPropertyListMutableContainers","","",N,N],[17,"kCFPropertyListMutableContainersAndLeaves","","",N,N],[5,"CFPropertyListCreateWithData","","",N,N],[5,"CFPropertyListCreateData","","",N,N],[3,"CFPropertyList","","A CFPropertyList struct. This is superclass to [`CFData`],…",N,N],[5,"create_with_data","","",N,[[["cfdata"],["cfpropertylistmutabilityoptions"]],["result",["cferror"]]]],[5,"create_data","","",N,N],[8,"CFPropertyListSubClass","","Trait for all subclasses of [`CFPropertyList`].",N,N],[11,"to_CFPropertyList","","Create an instance of the superclass type…",31,[[["self"]],["cfpropertylist"]]],[11,"into_CFPropertyList","","Equal to [`to_CFPropertyList`], but consumes self and…",31,[[["self"]],["cfpropertylist"]]],[11,"as_concrete_TypeRef","","",32,[[["self"]],["cfpropertylistref"]]],[11,"wrap_under_get_rule","","",32,[[["cfpropertylistref"]],["cfpropertylist"]]],[11,"as_CFType","","",32,[[["self"]],["cftype"]]],[11,"into_CFType","","",32,[[["self"]],["cftype"]]],[11,"as_CFTypeRef","","",32,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",32,[[["cfpropertylistref"]],["cfpropertylist"]]],[11,"retain_count","","Returns the reference count of the object. It is unwise to…",32,[[["self"]],["cfindex"]]],[11,"type_of","","Returns the type ID of this object. Will be one of CFData,…",32,[[["self"]],["cftypeid"]]],[11,"show","","Writes a debugging version of this object on standard error.",32,[[["self"]]]],[11,"instance_of","","Returns true if this value is an instance of another type.",32,[[["self"]],["bool"]]],[11,"downcast","","Try to downcast the [`CFPropertyList`] to a subclass.…",32,[[["self"]],["option"]]],[11,"downcast_into","","Similar to [`downcast`], but consumes self and can thus…",32,[[["self"]],["option"]]],[0,"runloop","core_foundation","",N,N],[3,"__CFRunLoop","core_foundation::runloop","",N,N],[6,"CFRunLoopRef","","",N,N],[3,"__CFRunLoopSource","","",N,N],[6,"CFRunLoopSourceRef","","",N,N],[3,"__CFRunLoopObserver","","",N,N],[6,"CFRunLoopObserverRef","","",N,N],[17,"kCFRunLoopRunFinished","","",N,N],[17,"kCFRunLoopRunStopped","","",N,N],[17,"kCFRunLoopRunTimedOut","","",N,N],[17,"kCFRunLoopRunHandledSource","","",N,N],[6,"CFRunLoopActivity","","",N,N],[17,"kCFRunLoopEntry","","",N,N],[17,"kCFRunLoopBeforeTimers","","",N,N],[17,"kCFRunLoopBeforeSources","","",N,N],[17,"kCFRunLoopBeforeWaiting","","",N,N],[17,"kCFRunLoopAfterWaiting","","",N,N],[17,"kCFRunLoopExit","","",N,N],[17,"kCFRunLoopAllActivities","","",N,N],[3,"CFRunLoopSourceContext","","",N,N],[12,"version","","",33,N],[12,"info","","",33,N],[12,"retain","","",33,N],[12,"release","","",33,N],[12,"copyDescription","","",33,N],[12,"equal","","",33,N],[12,"hash","","",33,N],[12,"schedule","","",33,N],[12,"cancel","","",33,N],[12,"perform","","",33,N],[3,"CFRunLoopSourceContext1","","",N,N],[12,"version","","",34,N],[12,"info","","",34,N],[12,"retain","","",34,N],[12,"release","","",34,N],[12,"copyDescription","","",34,N],[12,"equal","","",34,N],[12,"hash","","",34,N],[12,"getPort","","",34,N],[12,"perform","","",34,N],[3,"CFRunLoopObserverContext","","",N,N],[12,"version","","",35,N],[12,"info","","",35,N],[12,"retain","","",35,N],[12,"release","","",35,N],[12,"copyDescription","","",35,N],[6,"CFRunLoopObserverCallBack","","",N,N],[3,"CFRunLoopTimerContext","","",N,N],[12,"version","","",36,N],[12,"info","","",36,N],[12,"retain","","",36,N],[12,"release","","",36,N],[12,"copyDescription","","",36,N],[6,"CFRunLoopTimerCallBack","","",N,N],[3,"__CFRunLoopTimer","","",N,N],[6,"CFRunLoopTimerRef","","",N,N],[7,"kCFRunLoopDefaultMode","","",N,N],[7,"kCFRunLoopCommonModes","","",N,N],[5,"CFRunLoopGetTypeID","","",N,[[],["u64"]]],[5,"CFRunLoopGetCurrent","","",N,N],[5,"CFRunLoopGetMain","","",N,N],[5,"CFRunLoopCopyCurrentMode","","",N,N],[5,"CFRunLoopCopyAllModes","","",N,N],[5,"CFRunLoopAddCommonMode","","",N,N],[5,"CFRunLoopGetNextTimerFireDate","","",N,N],[5,"CFRunLoopRun","","",N,N],[5,"CFRunLoopRunInMode","","",N,N],[5,"CFRunLoopIsWaiting","","",N,N],[5,"CFRunLoopWakeUp","","",N,N],[5,"CFRunLoopStop","","",N,N],[5,"CFRunLoopContainsSource","","",N,N],[5,"CFRunLoopAddSource","","",N,N],[5,"CFRunLoopRemoveSource","","",N,N],[5,"CFRunLoopContainsObserver","","",N,N],[5,"CFRunLoopAddObserver","","",N,N],[5,"CFRunLoopRemoveObserver","","",N,N],[5,"CFRunLoopContainsTimer","","",N,N],[5,"CFRunLoopAddTimer","","",N,N],[5,"CFRunLoopRemoveTimer","","",N,N],[5,"CFRunLoopSourceGetTypeID","","",N,[[],["u64"]]],[5,"CFRunLoopSourceCreate","","",N,N],[5,"CFRunLoopSourceGetOrder","","",N,N],[5,"CFRunLoopSourceInvalidate","","",N,N],[5,"CFRunLoopSourceIsValid","","",N,N],[5,"CFRunLoopSourceGetContext","","",N,N],[5,"CFRunLoopSourceSignal","","",N,N],[5,"CFRunLoopObserverGetTypeID","","",N,[[],["u64"]]],[5,"CFRunLoopObserverCreate","","",N,N],[5,"CFRunLoopObserverGetActivities","","",N,N],[5,"CFRunLoopObserverDoesRepeat","","",N,N],[5,"CFRunLoopObserverGetOrder","","",N,N],[5,"CFRunLoopObserverInvalidate","","",N,N],[5,"CFRunLoopObserverIsValid","","",N,N],[5,"CFRunLoopObserverGetContext","","",N,N],[5,"CFRunLoopTimerGetTypeID","","",N,[[],["u64"]]],[5,"CFRunLoopTimerCreate","","",N,N],[5,"CFRunLoopTimerGetNextFireDate","","",N,N],[5,"CFRunLoopTimerSetNextFireDate","","",N,N],[5,"CFRunLoopTimerGetInterval","","",N,N],[5,"CFRunLoopTimerDoesRepeat","","",N,N],[5,"CFRunLoopTimerGetOrder","","",N,N],[5,"CFRunLoopTimerInvalidate","","",N,N],[5,"CFRunLoopTimerIsValid","","",N,N],[5,"CFRunLoopTimerGetContext","","",N,N],[5,"CFRunLoopTimerGetTolerance","","",N,N],[5,"CFRunLoopTimerSetTolerance","","",N,N],[3,"CFRunLoop","","",N,N],[3,"CFRunLoopTimer","","",N,N],[3,"CFRunLoopSource","","",N,N],[3,"CFRunLoopObserver","","",N,N],[6,"CFRunLoopMode","","",N,N],[11,"get_current","","",37,[[],["cfrunloop"]]],[11,"get_main","","",37,[[],["cfrunloop"]]],[11,"run_current","","",37,[[]]],[11,"stop","","",37,[[["self"]]]],[11,"current_mode","","",37,[[["self"]],["option",["string"]]]],[11,"contains_timer","","",37,[[["self"],["cfrunlooptimer"],["cfrunloopmode"]],["bool"]]],[11,"add_timer","","",37,[[["self"],["cfrunlooptimer"],["cfrunloopmode"]]]],[11,"remove_timer","","",37,[[["self"],["cfrunlooptimer"],["cfrunloopmode"]]]],[11,"contains_source","","",37,[[["self"],["cfrunloopsource"],["cfrunloopmode"]],["bool"]]],[11,"add_source","","",37,[[["self"],["cfrunloopsource"],["cfrunloopmode"]]]],[11,"remove_source","","",37,[[["self"],["cfrunloopsource"],["cfrunloopmode"]]]],[11,"contains_observer","","",37,[[["self"],["cfrunloopobserver"],["cfrunloopmode"]],["bool"]]],[11,"add_observer","","",37,[[["self"],["cfrunloopobserver"],["cfrunloopmode"]]]],[11,"remove_observer","","",37,[[["self"],["cfrunloopobserver"],["cfrunloopmode"]]]],[11,"new","","",38,N],[11,"from_file_descriptor","","",39,[[["cffiledescriptor"],["cfindex"]],["option",["cfrunloopsource"]]]],[0,"timezone","core_foundation","Core Foundation time zone objects.",N,N],[3,"__CFTimeZone","core_foundation::timezone","",N,N],[6,"CFTimeZoneRef","","",N,N],[5,"CFTimeZoneCopySystem","","",N,N],[5,"CFTimeZoneCopyDefault","","",N,N],[5,"CFTimeZoneCreateWithTimeIntervalFromGMT","","",N,N],[5,"CFTimeZoneGetSecondsFromGMT","","",N,N],[5,"CFTimeZoneGetTypeID","","",N,[[],["u64"]]],[3,"CFTimeZone","","A time zone.",N,N],[11,"new","","",40,[[["cftimeinterval"]],["cftimezone"]]],[11,"system","","",40,[[],["cftimezone"]]],[11,"seconds_from_gmt","","",40,[[["self"],["cfdate"]],["cftimeinterval"]]],[0,"uuid","core_foundation","Core Foundation UUID objects.",N,N],[3,"__CFUUID","core_foundation::uuid","",N,N],[6,"CFUUIDRef","","",N,N],[3,"CFUUIDBytes","","",N,N],[12,"byte0","","",41,N],[12,"byte1","","",41,N],[12,"byte2","","",41,N],[12,"byte3","","",41,N],[12,"byte4","","",41,N],[12,"byte5","","",41,N],[12,"byte6","","",41,N],[12,"byte7","","",41,N],[12,"byte8","","",41,N],[12,"byte9","","",41,N],[12,"byte10","","",41,N],[12,"byte11","","",41,N],[12,"byte12","","",41,N],[12,"byte13","","",41,N],[12,"byte14","","",41,N],[12,"byte15","","",41,N],[5,"CFUUIDCreate","","",N,N],[5,"CFUUIDCreateFromUUIDBytes","","",N,N],[5,"CFUUIDGetUUIDBytes","","",N,N],[5,"CFUUIDGetTypeID","","",N,[[],["u64"]]],[3,"CFUUID","","A UUID.",N,N],[11,"new","","",42,[[],["cfuuid"]]],[8,"ConcreteCFType","core_foundation","",N,N],[14,"declare_TCFType","","Declare a Rust type that wraps an underlying…",N,N],[14,"impl_TCFType","","Provide an implementation of the [`TCFType`] trait for the…",N,N],[14,"impl_CFTypeDescription","","Implement `std::fmt::Debug` for the given type.",N,N],[14,"impl_CFComparison","","",N,N],[11,"into","core_foundation::array","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from_mut_void","","",1,N],[11,"from_void","","",1,N],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into_iter","","",44,[[["self"]],["i"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","core_foundation::attributed_string","",45,[[["self"]],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from_mut_void","","",2,N],[11,"from_void","","",2,N],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from_mut_void","","",3,N],[11,"from_void","","",3,N],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","core_foundation::base","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from_mut_void","","",13,N],[11,"from_void","","",13,N],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from_mut_void","","",14,N],[11,"from_void","","",14,N],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from_mut_void","core_foundation::boolean","",15,N],[11,"from_void","","",15,N],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","core_foundation::data","",48,[[["self"]],["u"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from_mut_void","","",16,N],[11,"from_void","","",16,N],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","core_foundation::date","",49,[[["self"]],["u"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from_mut_void","","",17,N],[11,"from_void","","",17,N],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","core_foundation::dictionary","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from_mut_void","","",20,N],[11,"from_void","","",20,N],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from_mut_void","","",21,N],[11,"from_void","","",21,N],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","core_foundation::error","",51,[[["self"]],["u"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from_mut_void","","",22,N],[11,"from_void","","",22,N],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","core_foundation::filedescriptor","",52,[[["self"]],["u"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from_mut_void","","",24,N],[11,"from_void","","",24,N],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","core_foundation::number","",53,[[["self"]],["u"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from_mut_void","","",25,N],[11,"from_void","","",25,N],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","core_foundation::set","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from_mut_void","","",27,N],[11,"from_void","","",27,N],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","core_foundation::string","",56,[[["self"]],["u"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from_mut_void","","",28,N],[11,"from_void","","",28,N],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","core_foundation::url","",57,[[["self"]],["u"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from_mut_void","","",29,N],[11,"from_void","","",29,N],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","core_foundation::bundle","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from_mut_void","","",30,N],[11,"from_void","","",30,N],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","core_foundation::propertylist","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","core_foundation::runloop","",59,[[["self"]],["u"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from_mut_void","","",37,N],[11,"from_void","","",37,N],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from_mut_void","","",38,N],[11,"from_void","","",38,N],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from_mut_void","","",39,N],[11,"from_void","","",39,N],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from_mut_void","","",63,N],[11,"from_void","","",63,N],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into","core_foundation::timezone","",64,[[["self"]],["u"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from_mut_void","","",40,N],[11,"from_void","","",40,N],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","core_foundation::uuid","",65,[[["self"]],["u"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from_mut_void","","",42,N],[11,"from_void","","",42,N],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"default","","",41,[[],["cfuuidbytes"]]],[11,"clone","core_foundation::set","",26,[[["self"]],["cfsetcallbacks"]]],[11,"clone","core_foundation::filedescriptor","",23,[[["self"]],["cffiledescriptorcontext"]]],[11,"clone","core_foundation::dictionary","",18,[[["self"]],["cfdictionarykeycallbacks"]]],[11,"clone","","",19,[[["self"]],["cfdictionaryvaluecallbacks"]]],[11,"clone","core_foundation::uuid","",41,[[["self"]],["cfuuidbytes"]]],[11,"clone","core_foundation::base","",6,[[["self"]],["cfallocatorcontext"]]],[11,"clone","","",4,[[["self"]],["cfcomparisonresult"]]],[11,"clone","core_foundation::array","",0,[[["self"]],["cfarraycallbacks"]]],[11,"clone","core_foundation::base","",5,[[["self"]],["cfrange"]]],[11,"into","","",4,[[["self"]],["ordering"]]],[11,"as_concrete_TypeRef","core_foundation::array","",1,[[["self"]],["cfarrayref"]]],[11,"wrap_under_get_rule","","",1,[[["cfarrayref"]],["self"]]],[11,"as_CFTypeRef","","",1,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",1,[[["cfarrayref"]],["self"]]],[11,"type_id","","",1,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::attributed_string","",2,[[["self"]],["cfattributedstringref"]]],[11,"wrap_under_get_rule","","",2,[[["cfattributedstringref"]],["self"]]],[11,"as_CFTypeRef","","",2,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",2,[[["cfattributedstringref"]],["self"]]],[11,"type_id","","",2,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","","",3,[[["self"]],["cfmutableattributedstringref"]]],[11,"wrap_under_get_rule","","",3,[[["cfmutableattributedstringref"]],["self"]]],[11,"as_CFTypeRef","","",3,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",3,[[["cfmutableattributedstringref"]],["self"]]],[11,"type_id","","",3,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::base","",14,[[["self"]],["cfallocatorref"]]],[11,"wrap_under_get_rule","","",14,[[["cfallocatorref"]],["self"]]],[11,"as_CFTypeRef","","",14,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",14,[[["cfallocatorref"]],["self"]]],[11,"type_id","","",14,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","","",13,[[["self"]],["cftyperef"]]],[11,"wrap_under_get_rule","","",13,[[["cftyperef"]],["cftype"]]],[11,"as_CFTypeRef","","",13,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",13,[[["cftyperef"]],["cftype"]]],[11,"type_id","","",13,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::boolean","",15,[[["self"]],["cfbooleanref"]]],[11,"wrap_under_get_rule","","",15,[[["cfbooleanref"]],["self"]]],[11,"as_CFTypeRef","","",15,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",15,[[["cfbooleanref"]],["self"]]],[11,"type_id","","",15,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::data","",16,[[["self"]],["cfdataref"]]],[11,"wrap_under_get_rule","","",16,[[["cfdataref"]],["self"]]],[11,"as_CFTypeRef","","",16,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",16,[[["cfdataref"]],["self"]]],[11,"type_id","","",16,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::date","",17,[[["self"]],["cfdateref"]]],[11,"wrap_under_get_rule","","",17,[[["cfdateref"]],["self"]]],[11,"as_CFTypeRef","","",17,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",17,[[["cfdateref"]],["self"]]],[11,"type_id","","",17,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::dictionary","",20,[[["self"]],["cfdictionaryref"]]],[11,"wrap_under_get_rule","","",20,[[["cfdictionaryref"]],["self"]]],[11,"as_CFTypeRef","","",20,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",20,[[["cfdictionaryref"]],["self"]]],[11,"type_id","","",20,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","","",21,[[["self"]],["cfmutabledictionaryref"]]],[11,"wrap_under_get_rule","","",21,[[["cfmutabledictionaryref"]],["self"]]],[11,"as_CFTypeRef","","",21,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",21,[[["cfmutabledictionaryref"]],["self"]]],[11,"type_id","","",21,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::error","",22,[[["self"]],["cferrorref"]]],[11,"wrap_under_get_rule","","",22,[[["cferrorref"]],["self"]]],[11,"as_CFTypeRef","","",22,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",22,[[["cferrorref"]],["self"]]],[11,"type_id","","",22,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::filedescriptor","",24,[[["self"]],["cffiledescriptorref"]]],[11,"wrap_under_get_rule","","",24,[[["cffiledescriptorref"]],["self"]]],[11,"as_CFTypeRef","","",24,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",24,[[["cffiledescriptorref"]],["self"]]],[11,"type_id","","",24,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::number","",25,[[["self"]],["cfnumberref"]]],[11,"wrap_under_get_rule","","",25,[[["cfnumberref"]],["self"]]],[11,"as_CFTypeRef","","",25,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",25,[[["cfnumberref"]],["self"]]],[11,"type_id","","",25,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::set","",27,[[["self"]],["cfsetref"]]],[11,"wrap_under_get_rule","","",27,[[["cfsetref"]],["self"]]],[11,"as_CFTypeRef","","",27,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",27,[[["cfsetref"]],["self"]]],[11,"type_id","","",27,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::string","",28,[[["self"]],["cfstringref"]]],[11,"wrap_under_get_rule","","",28,[[["cfstringref"]],["self"]]],[11,"as_CFTypeRef","","",28,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",28,[[["cfstringref"]],["self"]]],[11,"type_id","","",28,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::url","",29,[[["self"]],["cfurlref"]]],[11,"wrap_under_get_rule","","",29,[[["cfurlref"]],["self"]]],[11,"as_CFTypeRef","","",29,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",29,[[["cfurlref"]],["self"]]],[11,"type_id","","",29,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::bundle","",30,[[["self"]],["cfbundleref"]]],[11,"wrap_under_get_rule","","",30,[[["cfbundleref"]],["self"]]],[11,"as_CFTypeRef","","",30,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",30,[[["cfbundleref"]],["self"]]],[11,"type_id","","",30,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::runloop","",37,[[["self"]],["cfrunloopref"]]],[11,"wrap_under_get_rule","","",37,[[["cfrunloopref"]],["self"]]],[11,"as_CFTypeRef","","",37,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",37,[[["cfrunloopref"]],["self"]]],[11,"type_id","","",37,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","","",38,[[["self"]],["cfrunlooptimerref"]]],[11,"wrap_under_get_rule","","",38,[[["cfrunlooptimerref"]],["self"]]],[11,"as_CFTypeRef","","",38,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",38,[[["cfrunlooptimerref"]],["self"]]],[11,"type_id","","",38,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","","",39,[[["self"]],["cfrunloopsourceref"]]],[11,"wrap_under_get_rule","","",39,[[["cfrunloopsourceref"]],["self"]]],[11,"as_CFTypeRef","","",39,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",39,[[["cfrunloopsourceref"]],["self"]]],[11,"type_id","","",39,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","","",63,[[["self"]],["cfrunloopobserverref"]]],[11,"wrap_under_get_rule","","",63,[[["cfrunloopobserverref"]],["self"]]],[11,"as_CFTypeRef","","",63,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",63,[[["cfrunloopobserverref"]],["self"]]],[11,"type_id","","",63,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::timezone","",40,[[["self"]],["cftimezoneref"]]],[11,"wrap_under_get_rule","","",40,[[["cftimezoneref"]],["self"]]],[11,"as_CFTypeRef","","",40,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",40,[[["cftimezoneref"]],["self"]]],[11,"type_id","","",40,[[],["cftypeid"]]],[11,"as_concrete_TypeRef","core_foundation::uuid","",42,[[["self"]],["cfuuidref"]]],[11,"wrap_under_get_rule","","",42,[[["cfuuidref"]],["self"]]],[11,"as_CFTypeRef","","",42,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",42,[[["cfuuidref"]],["self"]]],[11,"type_id","","",42,[[],["cftypeid"]]],[11,"to_void","core_foundation::array","",1,N],[11,"to_void","core_foundation","",66,N],[11,"to_void","core_foundation::attributed_string","",2,N],[11,"to_void","core_foundation","",67,N],[11,"to_void","core_foundation::attributed_string","",3,N],[11,"to_void","core_foundation","",68,N],[11,"to_void","core_foundation::base","",14,N],[11,"to_void","core_foundation","",69,N],[11,"to_void","core_foundation::base","",13,N],[11,"to_void","core_foundation","",70,N],[11,"to_void","core_foundation::boolean","",15,N],[11,"to_void","core_foundation","",71,N],[11,"to_void","core_foundation::data","",16,N],[11,"to_void","core_foundation","",72,N],[11,"to_void","core_foundation::date","",17,N],[11,"to_void","core_foundation","",73,N],[11,"to_void","core_foundation::dictionary","",20,N],[11,"to_void","core_foundation","",74,N],[11,"to_void","core_foundation::dictionary","",21,N],[11,"to_void","core_foundation","",75,N],[11,"to_void","core_foundation::error","",22,N],[11,"to_void","core_foundation","",76,N],[11,"to_void","core_foundation::filedescriptor","",24,N],[11,"to_void","core_foundation","",77,N],[11,"to_void","core_foundation::number","",25,N],[11,"to_void","core_foundation","",78,N],[11,"to_void","core_foundation::set","",27,N],[11,"to_void","core_foundation","",79,N],[11,"to_void","core_foundation::string","",28,N],[11,"to_void","core_foundation","",80,N],[11,"to_void","core_foundation::url","",29,N],[11,"to_void","core_foundation","",81,N],[11,"to_void","core_foundation::bundle","",30,N],[11,"to_void","core_foundation","",82,N],[11,"to_void","core_foundation::runloop","",37,N],[11,"to_void","core_foundation","",83,N],[11,"to_void","core_foundation::runloop","",38,N],[11,"to_void","core_foundation","",84,N],[11,"to_void","core_foundation::runloop","",39,N],[11,"to_void","core_foundation","",85,N],[11,"to_void","core_foundation::runloop","",63,N],[11,"to_void","core_foundation","",86,N],[11,"to_void","core_foundation::timezone","",40,N],[11,"to_void","core_foundation","",87,N],[11,"to_void","core_foundation::uuid","",42,N],[11,"to_void","core_foundation","",88,N],[11,"next","core_foundation::array","",44,[[["self"]],["option",["itemref"]]]],[11,"len","","",44,[[["self"]],["usize"]]],[11,"partial_cmp","core_foundation::date","",17,[[["self"],["cfdate"]],["option",["ordering"]]]],[11,"partial_cmp","core_foundation::number","",25,[[["self"],["cfnumber"]],["option",["ordering"]]]],[11,"default","core_foundation::attributed_string","",3,[[],["self"]]],[11,"default","core_foundation::dictionary","",21,[[],["self"]]],[11,"default","core_foundation::timezone","",40,[[],["cftimezone"]]],[11,"default","core_foundation::uuid","",42,[[],["self"]]],[11,"eq","core_foundation::array","",1,[[["self"],["cfarray"]],["bool"]]],[11,"eq","core_foundation::attributed_string","",2,[[["self"],["cfattributedstring"]],["bool"]]],[11,"eq","","",3,[[["self"],["cfmutableattributedstring"]],["bool"]]],[11,"eq","core_foundation::base","",13,[[["self"],["cftype"]],["bool"]]],[11,"eq","","",14,[[["self"],["cfallocator"]],["bool"]]],[11,"eq","","",46,[[["self"],["self"]],["bool"]]],[11,"eq","","",47,[[["self"],["self"]],["bool"]]],[11,"eq","core_foundation::boolean","",15,[[["self"],["cfboolean"]],["bool"]]],[11,"eq","core_foundation::data","",16,[[["self"],["cfdata"]],["bool"]]],[11,"eq","core_foundation::date","",17,[[["self"],["cfdate"]],["bool"]]],[11,"eq","core_foundation::dictionary","",20,[[["self"],["cfdictionary"]],["bool"]]],[11,"eq","","",21,[[["self"],["cfmutabledictionary"]],["bool"]]],[11,"eq","core_foundation::error","",22,[[["self"],["cferror"]],["bool"]]],[11,"eq","core_foundation::filedescriptor","",24,[[["self"],["cffiledescriptor"]],["bool"]]],[11,"eq","core_foundation::number","",25,[[["self"],["cfnumber"]],["bool"]]],[11,"eq","core_foundation::set","",27,[[["self"],["cfset"]],["bool"]]],[11,"eq","core_foundation::string","",28,[[["self"],["cfstring"]],["bool"]]],[11,"eq","core_foundation::url","",29,[[["self"],["cfurl"]],["bool"]]],[11,"eq","core_foundation::bundle","",30,[[["self"],["cfbundle"]],["bool"]]],[11,"eq","core_foundation::propertylist","",32,[[["self"],["cfpropertylist"]],["bool"]]],[11,"eq","core_foundation::runloop","",37,[[["self"],["cfrunloop"]],["bool"]]],[11,"eq","","",38,[[["self"],["cfrunlooptimer"]],["bool"]]],[11,"eq","","",39,[[["self"],["cfrunloopsource"]],["bool"]]],[11,"eq","","",63,[[["self"],["cfrunloopobserver"]],["bool"]]],[11,"eq","core_foundation::timezone","",40,[[["self"],["cftimezone"]],["bool"]]],[11,"eq","core_foundation::uuid","",42,[[["self"],["cfuuid"]],["bool"]]],[11,"from","core_foundation::boolean","",15,[[["bool"]],["cfboolean"]]],[11,"from","core_foundation::dictionary","Creates a new mutable dictionary with the key-value pairs…",21,[[["cfdictionary"]],["self"]]],[11,"from","core_foundation::number","",25,[[["i32"]],["self"]]],[11,"from","","",25,[[["i64"]],["self"]]],[11,"from","","",25,[[["f32"]],["self"]]],[11,"from","","",25,[[["f64"]],["self"]]],[11,"from","core_foundation::string","",28,[[["str"]],["cfstring"]]],[11,"cmp","core_foundation::date","",17,[[["self"],["cfdate"]],["ordering"]]],[11,"cmp","core_foundation::number","",25,[[["self"],["cfnumber"]],["ordering"]]],[11,"clone","core_foundation::array","",1,[[["self"]],["cfarray"]]],[11,"clone","core_foundation::attributed_string","",2,[[["self"]],["cfattributedstring"]]],[11,"clone","","",3,[[["self"]],["cfmutableattributedstring"]]],[11,"clone","core_foundation::base","",13,[[["self"]],["cftype"]]],[11,"clone","","",14,[[["self"]],["cfallocator"]]],[11,"clone","core_foundation::boolean","",15,[[["self"]],["cfboolean"]]],[11,"clone","core_foundation::data","",16,[[["self"]],["cfdata"]]],[11,"clone","core_foundation::date","",17,[[["self"]],["cfdate"]]],[11,"clone","core_foundation::dictionary","",20,[[["self"]],["cfdictionary"]]],[11,"clone","","",21,[[["self"]],["cfmutabledictionary"]]],[11,"clone","core_foundation::error","",22,[[["self"]],["cferror"]]],[11,"clone","core_foundation::filedescriptor","",24,[[["self"]],["cffiledescriptor"]]],[11,"clone","core_foundation::number","",25,[[["self"]],["cfnumber"]]],[11,"clone","core_foundation::set","",27,[[["self"]],["cfset"]]],[11,"clone","core_foundation::string","",28,[[["self"]],["cfstring"]]],[11,"clone","core_foundation::url","",29,[[["self"]],["cfurl"]]],[11,"clone","core_foundation::bundle","",30,[[["self"]],["cfbundle"]]],[11,"clone","core_foundation::propertylist","",32,[[["self"]],["cfpropertylist"]]],[11,"clone","core_foundation::runloop","",37,[[["self"]],["cfrunloop"]]],[11,"clone","","",38,[[["self"]],["cfrunlooptimer"]]],[11,"clone","","",39,[[["self"]],["cfrunloopsource"]]],[11,"clone","","",63,[[["self"]],["cfrunloopobserver"]]],[11,"clone","core_foundation::timezone","",40,[[["self"]],["cftimezone"]]],[11,"clone","core_foundation::uuid","",42,[[["self"]],["cfuuid"]]],[11,"drop","core_foundation::array","",1,[[["self"]]]],[11,"drop","core_foundation::attributed_string","",2,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","core_foundation::base","",13,[[["self"]]]],[11,"drop","","",14,[[["self"]]]],[11,"drop","core_foundation::boolean","",15,[[["self"]]]],[11,"drop","core_foundation::data","",16,[[["self"]]]],[11,"drop","core_foundation::date","",17,[[["self"]]]],[11,"drop","core_foundation::dictionary","",20,[[["self"]]]],[11,"drop","","",21,[[["self"]]]],[11,"drop","core_foundation::error","",22,[[["self"]]]],[11,"drop","core_foundation::filedescriptor","",24,[[["self"]]]],[11,"drop","core_foundation::number","",25,[[["self"]]]],[11,"drop","core_foundation::set","",27,[[["self"]]]],[11,"drop","core_foundation::string","",28,[[["self"]]]],[11,"drop","core_foundation::url","",29,[[["self"]]]],[11,"drop","core_foundation::bundle","",30,[[["self"]]]],[11,"drop","core_foundation::propertylist","",32,[[["self"]]]],[11,"drop","core_foundation::runloop","",37,[[["self"]]]],[11,"drop","","",38,[[["self"]]]],[11,"drop","","",39,[[["self"]]]],[11,"drop","","",63,[[["self"]]]],[11,"drop","core_foundation::timezone","",40,[[["self"]]]],[11,"drop","core_foundation::uuid","",42,[[["self"]]]],[11,"deref","core_foundation::base","",46,[[["self"]],["t"]]],[11,"deref","","",47,[[["self"]],["t"]]],[11,"deref","core_foundation::data","",16,N],[11,"fmt","core_foundation::error","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::string","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::array","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::base","Formats the value using [`CFCopyDescription`].",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","core_foundation::boolean","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::data","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::date","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::dictionary","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::error","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::number","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::set","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::string","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::url","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::runloop","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::timezone","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_foundation::uuid","",42,[[["self"],["formatter"]],["result"]]],[11,"from_str","core_foundation::string","See also CFString::new for a variant of this which does…",28,[[["str"]],["result",["cfstring"]]]],[11,"deref_mut","core_foundation::base","",47,[[["self"]],["t"]]],[11,"description","core_foundation::error","",22,[[["self"]],["str"]]],[11,"as_raw_fd","core_foundation::filedescriptor","",24,[[["self"]],["rawfd"]]],[11,"init","core_foundation::base","",5,[[["i64"],["i64"]],["cfrange"]]]],"paths":[[3,"CFArrayCallBacks"],[3,"CFArray"],[3,"CFAttributedString"],[3,"CFMutableAttributedString"],[4,"CFComparisonResult"],[3,"CFRange"],[3,"CFAllocatorContext"],[8,"TCFTypeRef"],[8,"CFIndexConvertible"],[8,"TCFType"],[8,"FromMutVoid"],[8,"FromVoid"],[8,"ToVoid"],[3,"CFType"],[3,"CFAllocator"],[3,"CFBoolean"],[3,"CFData"],[3,"CFDate"],[3,"CFDictionaryKeyCallBacks"],[3,"CFDictionaryValueCallBacks"],[3,"CFDictionary"],[3,"CFMutableDictionary"],[3,"CFError"],[3,"CFFileDescriptorContext"],[3,"CFFileDescriptor"],[3,"CFNumber"],[3,"CFSetCallBacks"],[3,"CFSet"],[3,"CFString"],[3,"CFURL"],[3,"CFBundle"],[8,"CFPropertyListSubClass"],[3,"CFPropertyList"],[3,"CFRunLoopSourceContext"],[3,"CFRunLoopSourceContext1"],[3,"CFRunLoopObserverContext"],[3,"CFRunLoopTimerContext"],[3,"CFRunLoop"],[3,"CFRunLoopTimer"],[3,"CFRunLoopSource"],[3,"CFTimeZone"],[3,"CFUUIDBytes"],[3,"CFUUID"],[3,"__CFArray"],[3,"CFArrayIterator"],[3,"__CFAttributedString"],[3,"ItemRef"],[3,"ItemMutRef"],[3,"__CFData"],[3,"__CFDate"],[3,"__CFDictionary"],[3,"__CFError"],[3,"__CFFileDescriptor"],[3,"__CFBoolean"],[4,"__CFNumber"],[3,"__CFSet"],[3,"__CFString"],[3,"__CFURL"],[3,"__CFBundle"],[3,"__CFRunLoop"],[3,"__CFRunLoopSource"],[3,"__CFRunLoopObserver"],[3,"__CFRunLoopTimer"],[3,"CFRunLoopObserver"],[3,"__CFTimeZone"],[3,"__CFUUID"],[6,"CFArrayRef"],[6,"CFAttributedStringRef"],[6,"CFMutableAttributedStringRef"],[6,"CFAllocatorRef"],[6,"CFTypeRef"],[6,"CFBooleanRef"],[6,"CFDataRef"],[6,"CFDateRef"],[6,"CFDictionaryRef"],[6,"CFMutableDictionaryRef"],[6,"CFErrorRef"],[6,"CFFileDescriptorRef"],[6,"CFNumberRef"],[6,"CFSetRef"],[6,"CFStringRef"],[6,"CFURLRef"],[6,"CFBundleRef"],[6,"CFRunLoopRef"],[6,"CFRunLoopTimerRef"],[6,"CFRunLoopSourceRef"],[6,"CFRunLoopObserverRef"],[6,"CFTimeZoneRef"],[6,"CFUUIDRef"]]};
searchIndex["core_foundation_sys"]={"doc":"","items":[[0,"array","core_foundation_sys","",N,N],[3,"CFArrayCallBacks","core_foundation_sys::array","",N,N],[12,"version","","",0,N],[12,"retain","","",0,N],[12,"release","","",0,N],[12,"copyDescription","","",0,N],[12,"equal","","",0,N],[3,"__CFArray","","",N,N],[7,"kCFTypeArrayCallBacks","","",N,N],[5,"CFArrayCreate","","",N,N],[5,"CFArrayCreateCopy","","",N,N],[5,"CFArrayGetCount","","",N,N],[5,"CFArrayGetValues","","",N,N],[5,"CFArrayGetValueAtIndex","","",N,N],[5,"CFArrayGetTypeID","","",N,N],[6,"CFArrayRetainCallBack","","",N,N],[6,"CFArrayReleaseCallBack","","",N,N],[6,"CFArrayCopyDescriptionCallBack","","",N,N],[6,"CFArrayEqualCallBack","","",N,N],[6,"CFArrayRef","","",N,N],[0,"attributed_string","core_foundation_sys","",N,N],[3,"__CFAttributedString","core_foundation_sys::attributed_string","",N,N],[5,"CFAttributedStringCreate","","",N,N],[5,"CFAttributedStringGetLength","","",N,N],[5,"CFAttributedStringGetTypeID","","",N,N],[5,"CFAttributedStringCreateMutableCopy","","",N,N],[5,"CFAttributedStringCreateMutable","","",N,N],[5,"CFAttributedStringReplaceString","","",N,N],[5,"CFAttributedStringSetAttribute","","",N,N],[5,"CFMutableAttributedStringGetTypeID","","",N,N],[6,"CFAttributedStringRef","","",N,N],[6,"CFMutableAttributedStringRef","","",N,N],[0,"base","core_foundation_sys","",N,N],[3,"CFRange","core_foundation_sys::base","",N,N],[12,"location","","",1,N],[12,"length","","",1,N],[3,"CFAllocatorContext","","",N,N],[12,"version","","",2,N],[12,"info","","",2,N],[12,"retain","","",2,N],[12,"release","","",2,N],[12,"copyDescription","","",2,N],[12,"allocate","","",2,N],[12,"reallocate","","",2,N],[12,"deallocate","","",2,N],[12,"preferredSize","","",2,N],[4,"CFComparisonResult","","",N,N],[13,"LessThan","","",3,N],[13,"EqualTo","","",3,N],[13,"GreaterThan","","",3,N],[7,"kCFAllocatorDefault","","",N,N],[7,"kCFAllocatorSystemDefault","","",N,N],[7,"kCFAllocatorMalloc","","",N,N],[7,"kCFAllocatorMallocZone","","",N,N],[7,"kCFAllocatorNull","","",N,N],[7,"kCFAllocatorUseContext","","",N,N],[5,"CFAllocatorCreate","","",N,N],[5,"CFAllocatorAllocate","","",N,N],[5,"CFAllocatorDeallocate","","",N,N],[5,"CFAllocatorGetPreferredSizeForSize","","",N,N],[5,"CFAllocatorReallocate","","",N,N],[5,"CFAllocatorGetDefault","","",N,N],[5,"CFAllocatorSetDefault","","",N,N],[5,"CFAllocatorGetContext","","",N,N],[5,"CFAllocatorGetTypeID","","",N,N],[7,"kCFNull","","",N,N],[5,"CFCopyDescription","","",N,N],[5,"CFEqual","","",N,N],[5,"CFGetRetainCount","","",N,N],[5,"CFGetTypeID","","",N,N],[5,"CFHash","","",N,N],[5,"CFRelease","","",N,N],[5,"CFRetain","","",N,N],[5,"CFShow","","",N,N],[6,"Boolean","","",N,N],[6,"CFIndex","","",N,N],[6,"mach_port_t","","",N,N],[6,"CFAllocatorRef","","",N,N],[6,"CFNullRef","","",N,N],[6,"CFHashCode","","",N,N],[6,"CFTypeID","","",N,N],[6,"CFTypeRef","","",N,N],[6,"CFOptionFlags","","",N,N],[6,"OSStatus","","",N,N],[6,"SInt32","","",N,N],[6,"CFAllocatorRetainCallBack","","",N,N],[6,"CFAllocatorReleaseCallBack","","",N,N],[6,"CFAllocatorCopyDescriptionCallBack","","",N,N],[6,"CFAllocatorAllocateCallBack","","",N,N],[6,"CFAllocatorReallocateCallBack","","",N,N],[6,"CFAllocatorDeallocateCallBack","","",N,N],[6,"CFAllocatorPreferredSizeCallBack","","",N,N],[8,"TCFTypeRef","","Trait for all types which are Core Foundation reference…",N,N],[10,"as_void_ptr","","",4,N],[10,"from_void_ptr","","",4,N],[11,"init","","",1,[[["cfindex"],["cfindex"]],["cfrange"]]],[0,"bundle","core_foundation_sys","",N,N],[3,"__CFBundle","core_foundation_sys::bundle","",N,N],[5,"CFBundleCreate","","",N,N],[5,"CFBundleGetBundleWithIdentifier","","",N,N],[5,"CFBundleGetFunctionPointerForName","","",N,N],[5,"CFBundleGetMainBundle","","",N,N],[5,"CFBundleGetInfoDictionary","","",N,N],[5,"CFBundleGetTypeID","","",N,N],[5,"CFBundleCopyExecutableURL","","",N,N],[5,"CFBundleCopyPrivateFrameworksURL","","",N,N],[6,"CFBundleRef","","",N,N],[0,"data","core_foundation_sys","",N,N],[3,"__CFData","core_foundation_sys::data","",N,N],[5,"CFDataCreate","","",N,N],[5,"CFDataGetBytePtr","","",N,N],[5,"CFDataGetLength","","",N,N],[5,"CFDataGetTypeID","","",N,N],[6,"CFDataRef","","",N,N],[0,"date","core_foundation_sys","",N,N],[3,"__CFDate","core_foundation_sys::date","",N,N],[7,"kCFAbsoluteTimeIntervalSince1904","","",N,N],[7,"kCFAbsoluteTimeIntervalSince1970","","",N,N],[5,"CFAbsoluteTimeGetCurrent","","",N,N],[5,"CFDateCreate","","",N,N],[5,"CFDateGetAbsoluteTime","","",N,N],[5,"CFDateGetTimeIntervalSinceDate","","",N,N],[5,"CFDateCompare","","",N,N],[5,"CFDateGetTypeID","","",N,N],[6,"CFDateRef","","",N,N],[6,"CFTimeInterval","","",N,N],[6,"CFAbsoluteTime","","",N,N],[0,"dictionary","core_foundation_sys","",N,N],[3,"CFDictionaryKeyCallBacks","core_foundation_sys::dictionary","",N,N],[12,"version","","",5,N],[12,"retain","","",5,N],[12,"release","","",5,N],[12,"copyDescription","","",5,N],[12,"equal","","",5,N],[12,"hash","","",5,N],[3,"CFDictionaryValueCallBacks","","",N,N],[12,"version","","",6,N],[12,"retain","","",6,N],[12,"release","","",6,N],[12,"copyDescription","","",6,N],[12,"equal","","",6,N],[3,"__CFDictionary","","",N,N],[7,"kCFTypeDictionaryKeyCallBacks","","",N,N],[7,"kCFTypeDictionaryValueCallBacks","","",N,N],[5,"CFDictionaryContainsKey","","",N,N],[5,"CFDictionaryCreate","","",N,N],[5,"CFDictionaryGetCount","","",N,N],[5,"CFDictionaryGetTypeID","","",N,N],[5,"CFDictionaryGetValueIfPresent","","",N,N],[5,"CFDictionaryApplyFunction","","",N,N],[5,"CFDictionaryGetKeysAndValues","","",N,N],[5,"CFDictionaryCreateMutable","","",N,N],[5,"CFDictionaryCreateMutableCopy","","",N,N],[5,"CFDictionaryAddValue","","",N,N],[5,"CFDictionarySetValue","","",N,N],[5,"CFDictionaryReplaceValue","","",N,N],[5,"CFDictionaryRemoveValue","","",N,N],[5,"CFDictionaryRemoveAllValues","","",N,N],[6,"CFDictionaryApplierFunction","","",N,N],[6,"CFDictionaryRetainCallBack","","",N,N],[6,"CFDictionaryReleaseCallBack","","",N,N],[6,"CFDictionaryCopyDescriptionCallBack","","",N,N],[6,"CFDictionaryEqualCallBack","","",N,N],[6,"CFDictionaryHashCallBack","","",N,N],[6,"CFDictionaryRef","","",N,N],[6,"CFMutableDictionaryRef","","",N,N],[0,"error","core_foundation_sys","",N,N],[3,"__CFError","core_foundation_sys::error","",N,N],[5,"CFErrorGetTypeID","","",N,N],[7,"kCFErrorDomainPOSIX","","",N,N],[7,"kCFErrorDomainOSStatus","","",N,N],[7,"kCFErrorDomainMach","","",N,N],[7,"kCFErrorDomainCocoa","","",N,N],[5,"CFErrorGetDomain","","",N,N],[5,"CFErrorGetCode","","",N,N],[5,"CFErrorCopyDescription","","",N,N],[6,"CFErrorRef","","",N,N],[0,"filedescriptor","core_foundation_sys","",N,N],[3,"__CFFileDescriptor","core_foundation_sys::filedescriptor","",N,N],[3,"CFFileDescriptorContext","","",N,N],[12,"version","","",7,N],[12,"info","","",7,N],[12,"retain","","",7,N],[12,"release","","",7,N],[12,"copyDescription","","",7,N],[5,"CFFileDescriptorGetTypeID","","",N,N],[5,"CFFileDescriptorCreate","","",N,N],[5,"CFFileDescriptorGetNativeDescriptor","","",N,N],[5,"CFFileDescriptorGetContext","","",N,N],[5,"CFFileDescriptorEnableCallBacks","","",N,N],[5,"CFFileDescriptorDisableCallBacks","","",N,N],[5,"CFFileDescriptorInvalidate","","",N,N],[5,"CFFileDescriptorIsValid","","",N,N],[5,"CFFileDescriptorCreateRunLoopSource","","",N,N],[6,"CFFileDescriptorNativeDescriptor","","",N,N],[6,"CFFileDescriptorRef","","",N,N],[6,"CFFileDescriptorCallBack","","",N,N],[17,"kCFFileDescriptorReadCallBack","","",N,N],[17,"kCFFileDescriptorWriteCallBack","","",N,N],[0,"messageport","core_foundation_sys","",N,N],[3,"CFMessagePortContext","core_foundation_sys::messageport","",N,N],[12,"version","","",8,N],[12,"info","","",8,N],[12,"retain","","",8,N],[12,"release","","",8,N],[12,"copyDescription","","",8,N],[3,"__CFMessagePort","","",N,N],[5,"CFMessagePortGetTypeID","","",N,N],[5,"CFMessagePortCreateLocal","","",N,N],[5,"CFMessagePortCreateRemote","","",N,N],[5,"CFMessagePortIsRemote","","",N,N],[5,"CFMessagePortGetName","","",N,N],[5,"CFMessagePortSetName","","",N,N],[5,"CFMessagePortGetContext","","",N,N],[5,"CFMessagePortInvalidate","","",N,N],[5,"CFMessagePortIsValid","","",N,N],[5,"CFMessagePortGetInvalidationCallBack","","",N,N],[5,"CFMessagePortSetInvalidationCallBack","","",N,N],[5,"CFMessagePortSendRequest","","",N,N],[5,"CFMessagePortCreateRunLoopSource","","",N,N],[6,"CFMessagePortCallBack","","",N,N],[6,"CFMessagePortInvalidationCallBack","","",N,N],[6,"CFMessagePortRef","","",N,N],[0,"number","core_foundation_sys","",N,N],[3,"__CFBoolean","core_foundation_sys::number","",N,N],[4,"__CFNumber","","",N,N],[7,"kCFBooleanTrue","","",N,N],[7,"kCFBooleanFalse","","",N,N],[5,"CFBooleanGetTypeID","","",N,N],[5,"CFNumberCreate","","",N,N],[5,"CFNumberGetValue","","",N,N],[5,"CFNumberCompare","","",N,N],[5,"CFNumberGetTypeID","","",N,N],[6,"CFBooleanRef","","",N,N],[6,"CFNumberType","","",N,N],[6,"CFNumberRef","","",N,N],[7,"kCFNumberSInt32Type","","",N,N],[7,"kCFNumberSInt64Type","","",N,N],[7,"kCFNumberFloat32Type","","",N,N],[7,"kCFNumberFloat64Type","","",N,N],[0,"propertylist","core_foundation_sys","",N,N],[5,"CFPropertyListCreateWithData","core_foundation_sys::propertylist","",N,N],[5,"CFPropertyListCreateData","","",N,N],[6,"CFPropertyListRef","","",N,N],[6,"CFPropertyListFormat","","",N,N],[6,"CFPropertyListMutabilityOptions","","",N,N],[17,"kCFPropertyListOpenStepFormat","","",N,N],[17,"kCFPropertyListXMLFormat_v1_0","","",N,N],[17,"kCFPropertyListBinaryFormat_v1_0","","",N,N],[17,"kCFPropertyListImmutable","","",N,N],[17,"kCFPropertyListMutableContainers","","",N,N],[17,"kCFPropertyListMutableContainersAndLeaves","","",N,N],[0,"runloop","core_foundation_sys","",N,N],[3,"__CFRunLoop","core_foundation_sys::runloop","",N,N],[3,"__CFRunLoopSource","","",N,N],[3,"__CFRunLoopObserver","","",N,N],[3,"CFRunLoopSourceContext","","",N,N],[12,"version","","",9,N],[12,"info","","",9,N],[12,"retain","","",9,N],[12,"release","","",9,N],[12,"copyDescription","","",9,N],[12,"equal","","",9,N],[12,"hash","","",9,N],[12,"schedule","","",9,N],[12,"cancel","","",9,N],[12,"perform","","",9,N],[3,"CFRunLoopSourceContext1","","",N,N],[12,"version","","",10,N],[12,"info","","",10,N],[12,"retain","","",10,N],[12,"release","","",10,N],[12,"copyDescription","","",10,N],[12,"equal","","",10,N],[12,"hash","","",10,N],[12,"getPort","","",10,N],[12,"perform","","",10,N],[3,"CFRunLoopObserverContext","","",N,N],[12,"version","","",11,N],[12,"info","","",11,N],[12,"retain","","",11,N],[12,"release","","",11,N],[12,"copyDescription","","",11,N],[3,"CFRunLoopTimerContext","","",N,N],[12,"version","","",12,N],[12,"info","","",12,N],[12,"retain","","",12,N],[12,"release","","",12,N],[12,"copyDescription","","",12,N],[3,"__CFRunLoopTimer","","",N,N],[7,"kCFRunLoopDefaultMode","","",N,N],[7,"kCFRunLoopCommonModes","","",N,N],[5,"CFRunLoopGetTypeID","","",N,N],[5,"CFRunLoopGetCurrent","","",N,N],[5,"CFRunLoopGetMain","","",N,N],[5,"CFRunLoopCopyCurrentMode","","",N,N],[5,"CFRunLoopCopyAllModes","","",N,N],[5,"CFRunLoopAddCommonMode","","",N,N],[5,"CFRunLoopGetNextTimerFireDate","","",N,N],[5,"CFRunLoopRun","","",N,N],[5,"CFRunLoopRunInMode","","",N,N],[5,"CFRunLoopIsWaiting","","",N,N],[5,"CFRunLoopWakeUp","","",N,N],[5,"CFRunLoopStop","","",N,N],[5,"CFRunLoopContainsSource","","",N,N],[5,"CFRunLoopAddSource","","",N,N],[5,"CFRunLoopRemoveSource","","",N,N],[5,"CFRunLoopContainsObserver","","",N,N],[5,"CFRunLoopAddObserver","","",N,N],[5,"CFRunLoopRemoveObserver","","",N,N],[5,"CFRunLoopContainsTimer","","",N,N],[5,"CFRunLoopAddTimer","","",N,N],[5,"CFRunLoopRemoveTimer","","",N,N],[5,"CFRunLoopSourceGetTypeID","","",N,N],[5,"CFRunLoopSourceCreate","","",N,N],[5,"CFRunLoopSourceGetOrder","","",N,N],[5,"CFRunLoopSourceInvalidate","","",N,N],[5,"CFRunLoopSourceIsValid","","",N,N],[5,"CFRunLoopSourceGetContext","","",N,N],[5,"CFRunLoopSourceSignal","","",N,N],[5,"CFRunLoopObserverGetTypeID","","",N,N],[5,"CFRunLoopObserverCreate","","",N,N],[5,"CFRunLoopObserverGetActivities","","",N,N],[5,"CFRunLoopObserverDoesRepeat","","",N,N],[5,"CFRunLoopObserverGetOrder","","",N,N],[5,"CFRunLoopObserverInvalidate","","",N,N],[5,"CFRunLoopObserverIsValid","","",N,N],[5,"CFRunLoopObserverGetContext","","",N,N],[5,"CFRunLoopTimerGetTypeID","","",N,N],[5,"CFRunLoopTimerCreate","","",N,N],[5,"CFRunLoopTimerGetNextFireDate","","",N,N],[5,"CFRunLoopTimerSetNextFireDate","","",N,N],[5,"CFRunLoopTimerGetInterval","","",N,N],[5,"CFRunLoopTimerDoesRepeat","","",N,N],[5,"CFRunLoopTimerGetOrder","","",N,N],[5,"CFRunLoopTimerInvalidate","","",N,N],[5,"CFRunLoopTimerIsValid","","",N,N],[5,"CFRunLoopTimerGetContext","","",N,N],[5,"CFRunLoopTimerGetTolerance","","",N,N],[5,"CFRunLoopTimerSetTolerance","","",N,N],[6,"CFRunLoopRef","","",N,N],[6,"CFRunLoopSourceRef","","",N,N],[6,"CFRunLoopObserverRef","","",N,N],[6,"CFRunLoopActivity","","",N,N],[6,"CFRunLoopObserverCallBack","","",N,N],[6,"CFRunLoopTimerCallBack","","",N,N],[6,"CFRunLoopTimerRef","","",N,N],[17,"kCFRunLoopRunFinished","","",N,N],[17,"kCFRunLoopRunStopped","","",N,N],[17,"kCFRunLoopRunTimedOut","","",N,N],[17,"kCFRunLoopRunHandledSource","","",N,N],[17,"kCFRunLoopEntry","","",N,N],[17,"kCFRunLoopBeforeTimers","","",N,N],[17,"kCFRunLoopBeforeSources","","",N,N],[17,"kCFRunLoopBeforeWaiting","","",N,N],[17,"kCFRunLoopAfterWaiting","","",N,N],[17,"kCFRunLoopExit","","",N,N],[17,"kCFRunLoopAllActivities","","",N,N],[0,"set","core_foundation_sys","",N,N],[3,"CFSetCallBacks","core_foundation_sys::set","",N,N],[12,"version","","",13,N],[12,"retain","","",13,N],[12,"release","","",13,N],[12,"copyDescription","","",13,N],[12,"equal","","",13,N],[12,"hash","","",13,N],[3,"__CFSet","","",N,N],[7,"kCFTypeSetCallBacks","","",N,N],[5,"CFSetCreate","","",N,N],[5,"CFSetApplyFunction","","",N,N],[5,"CFSetGetCount","","",N,N],[5,"CFSetGetTypeID","","",N,N],[6,"CFSetApplierFunction","","",N,N],[6,"CFSetRetainCallBack","","",N,N],[6,"CFSetReleaseCallBack","","",N,N],[6,"CFSetCopyDescriptionCallBack","","",N,N],[6,"CFSetEqualCallBack","","",N,N],[6,"CFSetHashCallBack","","",N,N],[6,"CFSetRef","","",N,N],[0,"string","core_foundation_sys","",N,N],[3,"__CFString","core_foundation_sys::string","",N,N],[5,"CFStringCreateWithBytes","","",N,N],[5,"CFStringCreateWithBytesNoCopy","","",N,N],[5,"CFStringCreateWithCString","","",N,N],[5,"CFStringGetBytes","","",N,N],[5,"CFStringGetCString","","",N,N],[5,"CFStringGetCStringPtr","","",N,N],[5,"CFStringGetLength","","",N,N],[5,"CFStringGetTypeID","","",N,N],[6,"UniChar","","",N,N],[6,"CFStringCompareFlags","","",N,N],[6,"CFStringEncoding","","",N,N],[6,"CFStringEncodings","","",N,N],[6,"CFStringRef","","",N,N],[7,"kCFStringEncodingUTF8","","",N,N],[0,"timezone","core_foundation_sys","",N,N],[3,"__CFTimeZone","core_foundation_sys::timezone","",N,N],[5,"CFTimeZoneCopySystem","","",N,N],[5,"CFTimeZoneCopyDefault","","",N,N],[5,"CFTimeZoneCreateWithTimeIntervalFromGMT","","",N,N],[5,"CFTimeZoneGetSecondsFromGMT","","",N,N],[5,"CFTimeZoneGetTypeID","","",N,N],[6,"CFTimeZoneRef","","",N,N],[0,"url","core_foundation_sys","",N,N],[3,"__CFURL","core_foundation_sys::url","",N,N],[7,"kCFURLAttributeModificationDateKey","","",N,N],[7,"kCFURLContentAccessDateKey","","",N,N],[7,"kCFURLContentModificationDateKey","","",N,N],[7,"kCFURLCreationDateKey","","",N,N],[7,"kCFURLFileResourceIdentifierKey","","",N,N],[7,"kCFURLFileSecurityKey","","",N,N],[7,"kCFURLHasHiddenExtensionKey","","",N,N],[7,"kCFURLIsDirectoryKey","","",N,N],[7,"kCFURLIsExecutableKey","","",N,N],[7,"kCFURLIsHiddenKey","","",N,N],[7,"kCFURLIsPackageKey","","",N,N],[7,"kCFURLIsReadableKey","","",N,N],[7,"kCFURLIsRegularFileKey","","",N,N],[7,"kCFURLIsSymbolicLinkKey","","",N,N],[7,"kCFURLIsSystemImmutableKey","","",N,N],[7,"kCFURLIsUserImmutableKey","","",N,N],[7,"kCFURLIsVolumeKey","","",N,N],[7,"kCFURLIsWritableKey","","",N,N],[7,"kCFURLLabelNumberKey","","",N,N],[7,"kCFURLLinkCountKey","","",N,N],[7,"kCFURLLocalizedLabelKey","","",N,N],[7,"kCFURLLocalizedNameKey","","",N,N],[7,"kCFURLLocalizedTypeDescriptionKey","","",N,N],[7,"kCFURLNameKey","","",N,N],[7,"kCFURLParentDirectoryURLKey","","",N,N],[7,"kCFURLPreferredIOBlockSizeKey","","",N,N],[7,"kCFURLTypeIdentifierKey","","",N,N],[7,"kCFURLVolumeIdentifierKey","","",N,N],[7,"kCFURLVolumeURLKey","","",N,N],[7,"kCFURLFileResourceTypeKey","","",N,N],[5,"CFURLCopyAbsoluteURL","","",N,N],[5,"CFURLCreateFilePathURL","","",N,N],[5,"CFURLCreateFromFileSystemRepresentation","","",N,N],[5,"CFURLCreateWithBytes","","",N,N],[5,"CFURLCreateWithFileSystemPath","","",N,N],[5,"CFURLCreateWithFileSystemPathRelativeToBase","","",N,N],[5,"CFURLCanBeDecomposed","","",N,N],[5,"CFURLCopyFileSystemPath","","",N,N],[5,"CFURLCopyFragment","","",N,N],[5,"CFURLCopyHostName","","",N,N],[5,"CFURLCopyLastPathComponent","","",N,N],[5,"CFURLCopyNetLocation","","",N,N],[5,"CFURLCopyParameterString","","",N,N],[5,"CFURLCopyPassword","","",N,N],[5,"CFURLCopyPath","","",N,N],[5,"CFURLCopyPathExtension","","",N,N],[5,"CFURLCopyQueryString","","",N,N],[5,"CFURLCopyResourceSpecifier","","",N,N],[5,"CFURLCopyScheme","","",N,N],[5,"CFURLCopyStrictPath","","",N,N],[5,"CFURLCopyUserName","","",N,N],[5,"CFURLGetPortNumber","","",N,N],[5,"CFURLHasDirectoryPath","","",N,N],[5,"CFURLGetFileSystemRepresentation","","",N,N],[5,"CFURLGetString","","",N,N],[5,"CFURLGetBytes","","",N,N],[5,"CFURLGetTypeID","","",N,N],[5,"CFURLClearResourcePropertyCache","","",N,N],[5,"CFURLSetResourcePropertyForKey","","",N,N],[6,"CFURLRef","","",N,N],[6,"CFURLBookmarkCreationOptions","","",N,N],[6,"CFURLPathStyle","","",N,N],[17,"kCFURLPOSIXPathStyle","","",N,N],[17,"kCFURLHFSPathStyle","","",N,N],[17,"kCFURLWindowsPathStyle","","",N,N],[0,"uuid","core_foundation_sys","",N,N],[3,"__CFUUID","core_foundation_sys::uuid","",N,N],[3,"CFUUIDBytes","","",N,N],[12,"byte0","","",14,N],[12,"byte1","","",14,N],[12,"byte2","","",14,N],[12,"byte3","","",14,N],[12,"byte4","","",14,N],[12,"byte5","","",14,N],[12,"byte6","","",14,N],[12,"byte7","","",14,N],[12,"byte8","","",14,N],[12,"byte9","","",14,N],[12,"byte10","","",14,N],[12,"byte11","","",14,N],[12,"byte12","","",14,N],[12,"byte13","","",14,N],[12,"byte14","","",14,N],[12,"byte15","","",14,N],[5,"CFUUIDCreate","","",N,N],[5,"CFUUIDCreateFromUUIDBytes","","",N,N],[5,"CFUUIDGetUUIDBytes","","",N,N],[5,"CFUUIDGetTypeID","","",N,N],[6,"CFUUIDRef","","",N,N],[11,"into","core_foundation_sys::array","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::attributed_string","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::base","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::bundle","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::data","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::date","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::dictionary","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::error","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::filedescriptor","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::messageport","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::number","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::runloop","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::set","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::string","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::timezone","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::url","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::uuid","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","core_foundation_sys::base","",3,[[["self"]],["ordering"]]],[11,"default","core_foundation_sys::uuid","",14,[[],["cfuuidbytes"]]],[11,"clone","core_foundation_sys::array","",0,[[["self"]],["cfarraycallbacks"]]],[11,"clone","core_foundation_sys::base","",3,[[["self"]],["cfcomparisonresult"]]],[11,"clone","","",1,[[["self"]],["cfrange"]]],[11,"clone","","",2,[[["self"]],["cfallocatorcontext"]]],[11,"clone","core_foundation_sys::dictionary","",5,[[["self"]],["cfdictionarykeycallbacks"]]],[11,"clone","","",6,[[["self"]],["cfdictionaryvaluecallbacks"]]],[11,"clone","core_foundation_sys::filedescriptor","",7,[[["self"]],["cffiledescriptorcontext"]]],[11,"clone","core_foundation_sys::messageport","",8,[[["self"]],["cfmessageportcontext"]]],[11,"clone","core_foundation_sys::set","",13,[[["self"]],["cfsetcallbacks"]]],[11,"clone","core_foundation_sys::uuid","",14,[[["self"]],["cfuuidbytes"]]],[11,"fmt","core_foundation_sys::messageport","",8,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"CFArrayCallBacks"],[3,"CFRange"],[3,"CFAllocatorContext"],[4,"CFComparisonResult"],[8,"TCFTypeRef"],[3,"CFDictionaryKeyCallBacks"],[3,"CFDictionaryValueCallBacks"],[3,"CFFileDescriptorContext"],[3,"CFMessagePortContext"],[3,"CFRunLoopSourceContext"],[3,"CFRunLoopSourceContext1"],[3,"CFRunLoopObserverContext"],[3,"CFRunLoopTimerContext"],[3,"CFSetCallBacks"],[3,"CFUUIDBytes"],[3,"__CFArray"],[3,"__CFAttributedString"],[3,"__CFBundle"],[3,"__CFData"],[3,"__CFDate"],[3,"__CFDictionary"],[3,"__CFError"],[3,"__CFFileDescriptor"],[3,"__CFMessagePort"],[3,"__CFBoolean"],[4,"__CFNumber"],[3,"__CFRunLoop"],[3,"__CFRunLoopSource"],[3,"__CFRunLoopObserver"],[3,"__CFRunLoopTimer"],[3,"__CFSet"],[3,"__CFString"],[3,"__CFTimeZone"],[3,"__CFURL"],[3,"__CFUUID"]]};
searchIndex["core_graphics"]={"doc":"","items":[[0,"base","core_graphics","",N,N],[6,"boolean_t","core_graphics::base","",N,N],[6,"CGFloat","","",N,N],[6,"CGError","","",N,N],[17,"kCGImageAlphaNone","","",N,N],[17,"kCGImageAlphaPremultipliedLast","","",N,N],[17,"kCGImageAlphaPremultipliedFirst","","",N,N],[17,"kCGImageAlphaLast","","",N,N],[17,"kCGImageAlphaFirst","","",N,N],[17,"kCGImageAlphaNoneSkipLast","","",N,N],[17,"kCGImageAlphaNoneSkipFirst","","",N,N],[17,"kCGBitmapByteOrderDefault","","",N,N],[17,"kCGBitmapByteOrder16Little","","",N,N],[17,"kCGBitmapByteOrder32Little","","",N,N],[17,"kCGBitmapByteOrder16Big","","",N,N],[17,"kCGBitmapByteOrder32Big","","",N,N],[17,"kCGRenderingIntentDefault","","",N,N],[17,"kCGRenderingIntentAbsoluteColorimetric","","",N,N],[17,"kCGRenderingIntentRelativeColorimetric","","",N,N],[17,"kCGRenderingIntentPerceptual","","",N,N],[17,"kCGRenderingIntentSaturation","","",N,N],[17,"kCGBitmapByteOrder16Host","","",N,N],[17,"kCGBitmapByteOrder32Host","","",N,N],[0,"color","core_graphics","",N,N],[3,"CGColor","core_graphics::color","",N,N],[6,"SysCGColorRef","","",N,N],[11,"rgb","","",0,[[["cgfloat"],["cgfloat"],["cgfloat"],["cgfloat"]],["self"]]],[0,"color_space","core_graphics","",N,N],[3,"CGColorSpace","core_graphics::color_space","",N,N],[3,"CGColorSpaceRef","","",N,N],[7,"kCGColorSpaceSRGB","","",N,N],[7,"kCGColorSpaceAdobeRGB1998","","",N,N],[7,"kCGColorSpaceGenericGray","","",N,N],[7,"kCGColorSpaceGenericRGB","","",N,N],[7,"kCGColorSpaceGenericCMYK","","",N,N],[7,"kCGColorSpaceGenericRGBLinear","","",N,N],[7,"kCGColorSpaceGenericGrayGamma2_2","","",N,N],[11,"type_id","","",1,[[],["cftypeid"]]],[11,"create_with_name","","",1,[[["cfstringref"]],["option",["cgcolorspace"]]]],[11,"create_device_rgb","","",1,[[],["cgcolorspace"]]],[11,"create_device_gray","","",1,[[],["cgcolorspace"]]],[0,"context","core_graphics","",N,N],[3,"CGContext","core_graphics::context","",N,N],[3,"CGContextRef","","",N,N],[4,"CGBlendMode","","",N,N],[13,"Normal","","",2,N],[13,"Multiply","","",2,N],[13,"Screen","","",2,N],[13,"Overlay","","",2,N],[13,"Darken","","",2,N],[13,"Lighten","","",2,N],[13,"ColorDodge","","",2,N],[13,"ColorBurn","","",2,N],[13,"SoftLight","","",2,N],[13,"HardLight","","",2,N],[13,"Difference","","",2,N],[13,"Exclusion","","",2,N],[13,"Hue","","",2,N],[13,"Saturation","","",2,N],[13,"Color","","",2,N],[13,"Luminosity","","",2,N],[13,"Clear","","",2,N],[13,"Copy","","",2,N],[13,"SourceIn","","",2,N],[13,"SourceOut","","",2,N],[13,"SourceAtop","","",2,N],[13,"DestinationOver","","",2,N],[13,"DestinationIn","","",2,N],[13,"DestinationOut","","",2,N],[13,"DestinationAtop","","",2,N],[13,"Xor","","",2,N],[13,"PlusDarker","","",2,N],[13,"PlusLighter","","",2,N],[4,"CGTextDrawingMode","","",N,N],[13,"CGTextFill","","",3,N],[13,"CGTextStroke","","",3,N],[13,"CGTextFillStroke","","",3,N],[13,"CGTextInvisible","","",3,N],[13,"CGTextFillClip","","",3,N],[13,"CGTextStrokeClip","","",3,N],[13,"CGTextClip","","",3,N],[11,"type_id","","",4,[[],["cftypeid"]]],[11,"create_bitmap_context","","",4,[[["option"],["size_t"],["size_t"],["size_t"],["size_t"],["cgcolorspace"],["u32"]],["cgcontext"]]],[11,"data","","",4,N],[11,"flush","","",5,[[["self"]]]],[11,"width","","",5,[[["self"]],["size_t"]]],[11,"height","","",5,[[["self"]],["size_t"]]],[11,"bytes_per_row","","",5,[[["self"]],["size_t"]]],[11,"set_fill_color","","",5,[[["self"],["cgcolor"]]]],[11,"set_rgb_fill_color","","",5,[[["self"],["cgfloat"],["cgfloat"],["cgfloat"],["cgfloat"]]]],[11,"set_gray_fill_color","","",5,[[["self"],["cgfloat"],["cgfloat"]]]],[11,"set_blend_mode","","",5,[[["self"],["cgblendmode"]]]],[11,"set_allows_font_smoothing","","",5,[[["self"],["bool"]]]],[11,"set_font_smoothing_style","","",5,[[["self"],["i32"]]]],[11,"set_should_smooth_fonts","","",5,[[["self"],["bool"]]]],[11,"set_allows_antialiasing","","",5,[[["self"],["bool"]]]],[11,"set_should_antialias","","",5,[[["self"],["bool"]]]],[11,"set_allows_font_subpixel_quantization","","",5,[[["self"],["bool"]]]],[11,"set_should_subpixel_quantize_fonts","","",5,[[["self"],["bool"]]]],[11,"set_allows_font_subpixel_positioning","","",5,[[["self"],["bool"]]]],[11,"set_should_subpixel_position_fonts","","",5,[[["self"],["bool"]]]],[11,"set_text_drawing_mode","","",5,[[["self"],["cgtextdrawingmode"]]]],[11,"add_path","","",5,[[["self"],["cgpathref"]]]],[11,"close_path","","",5,[[["self"]]]],[11,"fill_path","","",5,[[["self"]]]],[11,"fill_rect","","",5,[[["self"],["cgrect"]]]],[11,"draw_image","","",5,[[["self"],["cgrect"],["cgimage"]]]],[11,"create_image","","",5,[[["self"]],["option",["cgimage"]]]],[11,"set_font","","",5,[[["self"],["cgfont"]]]],[11,"set_font_size","","",5,[[["self"],["cgfloat"]]]],[11,"set_text_matrix","","",5,[[["self"],["cgaffinetransform"]]]],[11,"show_glyphs_at_positions","","",5,N],[11,"save","","",5,[[["self"]]]],[11,"restore","","",5,[[["self"]]]],[11,"translate","","",5,[[["self"],["cgfloat"],["cgfloat"]]]],[11,"scale","","",5,[[["self"],["cgfloat"],["cgfloat"]]]],[0,"data_provider","core_graphics","",N,N],[3,"CGDataProvider","core_graphics::data_provider","",N,N],[3,"CGDataProviderRef","","",N,N],[6,"CGDataProviderGetBytesCallback","","",N,N],[6,"CGDataProviderReleaseInfoCallback","","",N,N],[6,"CGDataProviderRewindCallback","","",N,N],[6,"CGDataProviderSkipBytesCallback","","",N,N],[6,"CGDataProviderSkipForwardCallback","","",N,N],[6,"CGDataProviderGetBytePointerCallback","","",N,N],[6,"CGDataProviderGetBytesAtOffsetCallback","","",N,N],[6,"CGDataProviderReleaseBytePointerCallback","","",N,N],[6,"CGDataProviderReleaseDataCallback","","",N,N],[6,"CGDataProviderGetBytesAtPositionCallback","","",N,N],[8,"CustomData","","Encapsulates custom data that can be wrapped.",N,N],[10,"ptr","","Returns a pointer to the start of the custom data. This…",6,N],[10,"len","","Returns the length of this custom data. This value must…",6,[[["self"]],["usize"]]],[11,"type_id","","",7,[[],["cftypeid"]]],[11,"from_buffer","","Creates a data provider from the given reference-counted…",7,[[["arc",["vec"]]],["self"]]],[11,"from_slice","","Creates a data prvider from a given slice. The data…",7,N],[11,"from_custom_data","","Creates a data provider from the given raw pointer,…",7,[[["box",["box"]]],["self"]]],[11,"copy_data","","Creates a copy of the data from the underlying…",8,[[["self"]],["cfdata"]]],[0,"display","core_graphics","",N,N],[3,"CFDictionary","core_graphics::display","",N,N],[6,"CFDictionaryRef","","",N,N],[5,"CFDictionaryGetValueIfPresent","","",N,N],[3,"CFArray","","A heterogeneous immutable array.",N,N],[6,"CFArrayRef","","",N,N],[5,"CFArrayGetCount","","",N,N],[5,"CFArrayGetValueAtIndex","","",N,N],[6,"CFIndex","","",N,N],[5,"CFRelease","","",N,N],[6,"CFTypeRef","","",N,N],[3,"CGDisplay","","",N,N],[12,"id","","",9,N],[3,"CGDisplayMode","","",N,N],[3,"CGDisplayModeRef","","",N,N],[4,"CGConfigureOption","","",N,N],[13,"ConfigureForAppOnly","","",10,N],[13,"ConfigureForSession","","",10,N],[13,"ConfigurePermanently","","",10,N],[7,"CGRectNull","","",N,N],[7,"CGRectInfinite","","",N,N],[7,"kCGDisplayShowDuplicateLowResolutionModes","","",N,N],[5,"CGDisplayModeRelease","","",N,N],[5,"CGMainDisplayID","","",N,N],[5,"CGDisplayIsActive","","",N,N],[5,"CGDisplayIsAlwaysInMirrorSet","","",N,N],[5,"CGDisplayIsAsleep","","",N,N],[5,"CGDisplayIsBuiltin","","",N,N],[5,"CGDisplayIsInHWMirrorSet","","",N,N],[5,"CGDisplayIsInMirrorSet","","",N,N],[5,"CGDisplayIsMain","","",N,N],[5,"CGDisplayIsOnline","","",N,N],[5,"CGDisplayIsStereo","","",N,N],[5,"CGDisplayMirrorsDisplay","","",N,N],[5,"CGDisplayPrimaryDisplay","","",N,N],[5,"CGDisplayRotation","","",N,N],[5,"CGDisplayScreenSize","","",N,N],[5,"CGDisplaySerialNumber","","",N,N],[5,"CGDisplayUnitNumber","","",N,N],[5,"CGDisplayUsesOpenGLAcceleration","","",N,N],[5,"CGDisplayVendorNumber","","",N,N],[5,"CGGetActiveDisplayList","","",N,N],[5,"CGGetDisplaysWithRect","","",N,N],[5,"CGDisplayModelNumber","","",N,N],[5,"CGDisplayPixelsHigh","","",N,N],[5,"CGDisplayPixelsWide","","",N,N],[5,"CGDisplayBounds","","",N,N],[5,"CGDisplayCreateImage","","",N,N],[5,"CGBeginDisplayConfiguration","","",N,N],[5,"CGCancelDisplayConfiguration","","",N,N],[5,"CGCompleteDisplayConfiguration","","",N,N],[5,"CGConfigureDisplayWithDisplayMode","","",N,N],[5,"CGDisplayCopyDisplayMode","","",N,N],[5,"CGDisplayModeGetHeight","","",N,N],[5,"CGDisplayModeGetWidth","","",N,N],[5,"CGDisplayModeGetPixelHeight","","",N,N],[5,"CGDisplayModeGetPixelWidth","","",N,N],[5,"CGDisplayModeGetRefreshRate","","",N,N],[5,"CGDisplayModeGetIOFlags","","",N,N],[5,"CGDisplayModeCopyPixelEncoding","","",N,N],[5,"CGDisplayCopyAllDisplayModes","","",N,N],[5,"CGDisplayHideCursor","","",N,N],[5,"CGDisplayShowCursor","","",N,N],[5,"CGDisplayMoveCursorToPoint","","",N,N],[5,"CGWarpMouseCursorPosition","","",N,N],[5,"CGAssociateMouseAndMouseCursorPosition","","",N,N],[5,"CGWindowListCopyWindowInfo","","",N,N],[5,"CGWindowListCreateImage","","",N,N],[5,"CGWindowListCreateImageFromArray","","",N,N],[6,"CGDirectDisplayID","","",N,N],[6,"CGWindowID","","",N,N],[6,"CGWindowListOption","","",N,N],[6,"CGWindowImageOption","","",N,N],[6,"CGDisplayConfigRef","","",N,N],[17,"kCGNullWindowID","","",N,N],[17,"kCGWindowListOptionAll","","",N,N],[17,"kCGWindowListOptionOnScreenOnly","","",N,N],[17,"kCGWindowListOptionOnScreenAboveWindow","","",N,N],[17,"kCGWindowListOptionOnScreenBelowWindow","","",N,N],[17,"kCGWindowListOptionIncludingWindow","","",N,N],[17,"kCGWindowListExcludeDesktopElements","","",N,N],[17,"kCGWindowImageDefault","","",N,N],[17,"kCGWindowImageBoundsIgnoreFraming","","",N,N],[17,"kCGWindowImageShouldBeOpaque","","",N,N],[17,"kCGWindowImageOnlyShadows","","",N,N],[17,"kCGWindowImageBestResolution","","",N,N],[17,"kCGWindowImageNominalResolution","","",N,N],[17,"kDisplayModeValidFlag","","",N,N],[17,"kDisplayModeSafeFlag","","",N,N],[17,"kDisplayModeDefaultFlag","","",N,N],[17,"kDisplayModeAlwaysShowFlag","","",N,N],[17,"kDisplayModeNeverShowFlag","","",N,N],[17,"kDisplayModeNotResizeFlag","","",N,N],[17,"kDisplayModeRequiresPanFlag","","",N,N],[17,"kDisplayModeInterlacedFlag","","",N,N],[17,"kDisplayModeSimulscanFlag","","",N,N],[17,"kDisplayModeBuiltInFlag","","",N,N],[17,"kDisplayModeNotPresetFlag","","",N,N],[17,"kDisplayModeStretchedFlag","","",N,N],[17,"kDisplayModeNotGraphicsQualityFlag","","",N,N],[17,"kDisplayModeValidateAgainstDisplay","","",N,N],[17,"kDisplayModeTelevisionFlag","","",N,N],[17,"kDisplayModeValidForMirroringFlag","","",N,N],[17,"kDisplayModeAcceleratorBackedFlag","","",N,N],[17,"kDisplayModeValidForHiResFlag","","",N,N],[17,"kDisplayModeValidForAirPlayFlag","","",N,N],[17,"kDisplayModeNativeFlag","","",N,N],[17,"kDisplayModeSafetyFlags","","",N,N],[17,"IO1BitIndexedPixels","","",N,N],[17,"IO2BitIndexedPixels","","",N,N],[17,"IO4BitIndexedPixels","","",N,N],[17,"IO8BitIndexedPixels","","",N,N],[17,"IO16BitDirectPixels","","",N,N],[17,"IO32BitDirectPixels","","",N,N],[17,"kIO30BitDirectPixels","","",N,N],[17,"kIO64BitDirectPixels","","",N,N],[17,"kIO16BitFloatPixels","","",N,N],[17,"kIO32BitFloatPixels","","",N,N],[17,"IOYUV422Pixels","","",N,N],[17,"IO8BitOverlayPixels","","",N,N],[11,"new","","",9,[[["cgdirectdisplayid"]],["cgdisplay"]]],[11,"main","","Returns the the main display.",9,[[],["cgdisplay"]]],[11,"bounds","","Returns the bounds of a display in the global display…",9,[[["self"]],["cgrect"]]],[11,"display_mode","","Returns information about a display's current configuration.",9,[[["self"]],["option",["cgdisplaymode"]]]],[11,"begin_configuration","","Begins a new set of display configuration changes.",9,[[["self"]],["result",["cgdisplayconfigref","cgerror"]]]],[11,"cancel_configuration","","Cancels a set of display configuration changes.",9,[[["self"],["cgdisplayconfigref"]],["result",["cgerror"]]]],[11,"complete_configuration","","Completes a set of display configuration changes.",9,[[["self"],["cgdisplayconfigref"],["cgconfigureoption"]],["result",["cgerror"]]]],[11,"configure_display_with_display_mode","","Configures the display mode of a display.",9,[[["self"],["cgdisplayconfigref"],["cgdisplaymode"]],["result",["cgerror"]]]],[11,"image","","Returns an image containing the contents of the specified…",9,[[["self"]],["option",["cgimage"]]]],[11,"screenshot","","Returns a composite image based on a dynamically generated…",9,[[["cgrect"],["cgwindowlistoption"],["cgwindowid"],["cgwindowimageoption"]],["option",["cgimage"]]]],[11,"screenshot_from_windows","","Returns a composite image of the specified windows.",9,[[["cgrect"],["cfarray"],["cgwindowimageoption"]],["option",["cgimage"]]]],[11,"window_list_info","","Generates and returns information about the selected…",9,[[["cgwindowlistoption"],["option",["cgwindowid"]]],["option",["cfarray"]]]],[11,"is_active","","Returns a Boolean value indicating whether a display is…",9,[[["self"]],["bool"]]],[11,"is_always_in_mirror_set","","Returns a boolean indicating whether a display is always…",9,[[["self"]],["bool"]]],[11,"is_asleep","","Returns a boolean indicating whether a display is sleeping…",9,[[["self"]],["bool"]]],[11,"is_builtin","","Returns a boolean indicating whether a display is…",9,[[["self"]],["bool"]]],[11,"is_in_hw_mirror_set","","Returns a boolean indicating whether a display is in a…",9,[[["self"]],["bool"]]],[11,"is_in_mirror_set","","Returns a boolean indicating whether a display is in a…",9,[[["self"]],["bool"]]],[11,"is_main","","Returns a boolean indicating whether a display is the main…",9,[[["self"]],["bool"]]],[11,"is_online","","Returns a boolean indicating whether a display is…",9,[[["self"]],["bool"]]],[11,"uses_open_gl_acceleration","","Returns a boolean indicating whether Quartz is using…",9,[[["self"]],["bool"]]],[11,"is_stereo","","Returns a boolean indicating whether a display is running…",9,[[["self"]],["bool"]]],[11,"mirrors_display","","For a secondary display in a mirroring set, returns the…",9,[[["self"]],["cgdirectdisplayid"]]],[11,"primary_display","","Returns the primary display in a hardware mirroring set.",9,[[["self"]],["cgdirectdisplayid"]]],[11,"rotation","","Returns the rotation angle of a display in degrees.",9,[[["self"]],["f64"]]],[11,"screen_size","","Returns the width and height of a display in millimeters.",9,[[["self"]],["cgsize"]]],[11,"serial_number","","Returns the serial number of a display monitor.",9,[[["self"]],["u32"]]],[11,"unit_number","","Returns the logical unit number of a display.",9,[[["self"]],["u32"]]],[11,"vendor_number","","Returns the vendor number of the specified display's…",9,[[["self"]],["u32"]]],[11,"model_number","","Returns the model number of a display monitor.",9,[[["self"]],["u32"]]],[11,"pixels_high","","Returns the display height in pixel units.",9,[[["self"]],["u64"]]],[11,"pixels_wide","","Returns the display width in pixel units.",9,[[["self"]],["u64"]]],[11,"active_displays","","Provides a list of displays that are active (or drawable).",9,[[],["result",["vec","cgerror"]]]],[11,"active_display_count","","Provides count of displays that are active (or drawable).",9,[[],["result",["u32","cgerror"]]]],[11,"hide_cursor","","Hides the mouse cursor, and increments the hide cursor…",9,[[["self"]],["result",["cgerror"]]]],[11,"show_cursor","","Decrements the hide cursor count, and shows the mouse…",9,[[["self"]],["result",["cgerror"]]]],[11,"move_cursor_to_point","","Moves the mouse cursor to a specified point relative to…",9,[[["self"],["cgpoint"]],["result",["cgerror"]]]],[11,"warp_mouse_cursor_position","","Moves the mouse cursor without generating events.",9,[[["cgpoint"]],["result",["cgerror"]]]],[11,"associate_mouse_and_mouse_cursor_position","","Connects or disconnects the mouse and cursor while an…",9,[[["bool"]],["result",["cgerror"]]]],[11,"all_display_modes","","Returns all display modes for the specified display id.",11,[[["cgdirectdisplayid"],["cfdictionaryref"]],["option",["vec"]]]],[11,"height","","Returns the height of the specified display mode.",11,[[["self"]],["u64"]]],[11,"width","","Returns the width of the specified display mode.",11,[[["self"]],["u64"]]],[11,"pixel_height","","Returns the pixel height of the specified display mode.",11,[[["self"]],["u64"]]],[11,"pixel_width","","Returns the pixel width of the specified display mode.",11,[[["self"]],["u64"]]],[11,"refresh_rate","","",11,[[["self"]],["f64"]]],[11,"io_flags","","Returns the I/O Kit flags of the specified display mode.",11,[[["self"]],["u32"]]],[11,"pixel_encoding","","Returns the pixel encoding of the specified display mode.",11,[[["self"]],["cfstring"]]],[11,"bit_depth","","Returns the number of bits per pixel of the specified…",11,[[["self"]],["usize"]]],[0,"event","core_graphics","",N,N],[3,"CGEventFlags","core_graphics::event","",N,N],[3,"KeyCode","","Key codes for keys that are independent of keyboard layout.",N,N],[3,"ScrollEventUnit","","",N,N],[3,"EventField","","Constants used as keys to access specialized fields in…",N,N],[3,"CGEvent","","",N,N],[3,"CGEventRef","","",N,N],[4,"CGEventType","","Constants that specify the different types of input events.",N,N],[13,"Null","","",12,N],[13,"LeftMouseDown","","",12,N],[13,"LeftMouseUp","","",12,N],[13,"RightMouseDown","","",12,N],[13,"RightMouseUp","","",12,N],[13,"MouseMoved","","",12,N],[13,"LeftMouseDragged","","",12,N],[13,"RightMouseDragged","","",12,N],[13,"KeyDown","","",12,N],[13,"KeyUp","","",12,N],[13,"FlagsChanged","","",12,N],[13,"ScrollWheel","","",12,N],[13,"TabletPointer","","",12,N],[13,"TabletProximity","","",12,N],[13,"OtherMouseDown","","",12,N],[13,"OtherMouseUp","","",12,N],[13,"OtherMouseDragged","","",12,N],[13,"TapDisabledByTimeout","","",12,N],[13,"TapDisabledByUserInput","","",12,N],[4,"CGMouseButton","","",N,N],[13,"Left","","",13,N],[13,"Right","","",13,N],[13,"Center","","",13,N],[4,"CGEventTapLocation","","Possible tapping points for events.",N,N],[13,"HID","","",14,N],[13,"Session","","",14,N],[13,"AnnotatedSession","","",14,N],[6,"CGEventField","","",N,N],[6,"CGKeyCode","","",N,N],[6,"CGScrollEventUnit","","",N,N],[18,"CGEventFlagNull","","",15,N],[18,"CGEventFlagAlphaShift","","",15,N],[18,"CGEventFlagShift","","",15,N],[18,"CGEventFlagControl","","",15,N],[18,"CGEventFlagAlternate","","",15,N],[18,"CGEventFlagCommand","","",15,N],[18,"CGEventFlagHelp","","",15,N],[18,"CGEventFlagSecondaryFn","","",15,N],[18,"CGEventFlagNumericPad","","",15,N],[18,"CGEventFlagNonCoalesced","","",15,N],[11,"empty","","Returns an empty set of flags",15,[[],["cgeventflags"]]],[11,"all","","Returns the set containing all flags.",15,[[],["cgeventflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",15,[[["self"]],["u64"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",15,[[["u64"]],["option",["cgeventflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",15,[[["u64"]],["cgeventflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",15,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",15,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",15,[[["self"],["cgeventflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",15,[[["self"],["cgeventflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",15,[[["self"],["cgeventflags"]]]],[11,"remove","","Removes the specified flags in-place.",15,[[["self"],["cgeventflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",15,[[["self"],["cgeventflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",15,[[["self"],["cgeventflags"],["bool"]]]],[18,"RETURN","","",16,N],[18,"TAB","","",16,N],[18,"SPACE","","",16,N],[18,"DELETE","","",16,N],[18,"ESCAPE","","",16,N],[18,"COMMAND","","",16,N],[18,"SHIFT","","",16,N],[18,"CAPS_LOCK","","",16,N],[18,"OPTION","","",16,N],[18,"CONTROL","","",16,N],[18,"RIGHT_COMMAND","","",16,N],[18,"RIGHT_SHIFT","","",16,N],[18,"RIGHT_OPTION","","",16,N],[18,"RIGHT_CONTROL","","",16,N],[18,"FUNCTION","","",16,N],[18,"VOLUME_UP","","",16,N],[18,"VOLUME_DOWN","","",16,N],[18,"MUTE","","",16,N],[18,"F1","","",16,N],[18,"F2","","",16,N],[18,"F3","","",16,N],[18,"F4","","",16,N],[18,"F5","","",16,N],[18,"F6","","",16,N],[18,"F7","","",16,N],[18,"F8","","",16,N],[18,"F9","","",16,N],[18,"F10","","",16,N],[18,"F11","","",16,N],[18,"F12","","",16,N],[18,"F13","","",16,N],[18,"F14","","",16,N],[18,"F15","","",16,N],[18,"F16","","",16,N],[18,"F17","","",16,N],[18,"F18","","",16,N],[18,"F19","","",16,N],[18,"F20","","",16,N],[18,"HELP","","",16,N],[18,"HOME","","",16,N],[18,"PAGE_UP","","",16,N],[18,"FORWARD_DELETE","","",16,N],[18,"END","","",16,N],[18,"PAGE_DOWN","","",16,N],[18,"LEFT_ARROW","","",16,N],[18,"RIGHT_ARROW","","",16,N],[18,"DOWN_ARROW","","",16,N],[18,"UP_ARROW","","",16,N],[18,"PIXEL","","",17,N],[18,"LINE","","",17,N],[18,"MOUSE_EVENT_NUMBER","","Key to access an integer field that contains the mouse…",18,N],[18,"MOUSE_EVENT_CLICK_STATE","","Key to access an integer field that contains the mouse…",18,N],[18,"MOUSE_EVENT_PRESSURE","","Key to access a double field that contains the mouse…",18,N],[18,"MOUSE_EVENT_BUTTON_NUMBER","","Key to access an integer field that contains the mouse…",18,N],[18,"MOUSE_EVENT_DELTA_X","","Key to access an integer field that contains the…",18,N],[18,"MOUSE_EVENT_DELTA_Y","","Key to access an integer field that contains the vertical…",18,N],[18,"MOUSE_EVENT_INSTANT_MOUSER","","Key to access an integer field. The value is non-zero if…",18,N],[18,"MOUSE_EVENT_SUB_TYPE","","Key to access an integer field that encodes the mouse…",18,N],[18,"KEYBOARD_EVENT_AUTOREPEAT","","Key to access an integer field, non-zero when this is an…",18,N],[18,"KEYBOARD_EVENT_KEYCODE","","Key to access an integer field that contains the virtual…",18,N],[18,"KEYBOARD_EVENT_KEYBOARD_TYPE","","Key to access an integer field that contains the keyboard…",18,N],[18,"SCROLL_WHEEL_EVENT_DELTA_AXIS_1","","Key to access an integer field that contains scrolling…",18,N],[18,"SCROLL_WHEEL_EVENT_DELTA_AXIS_2","","Key to access an integer field that contains scrolling…",18,N],[18,"SCROLL_WHEEL_EVENT_FIXED_POINT_DELTA_AXIS_1","","Key to access a field that contains scrolling data. The…",18,N],[18,"SCROLL_WHEEL_EVENT_FIXED_POINT_DELTA_AXIS_2","","Key to access a field that contains scrolling data. The…",18,N],[18,"SCROLL_WHEEL_EVENT_POINT_DELTA_AXIS_1","","Key to access an integer field that contains pixel-based…",18,N],[18,"SCROLL_WHEEL_EVENT_POINT_DELTA_AXIS_2","","Key to access an integer field that contains pixel-based…",18,N],[18,"SCROLL_WHEEL_EVENT_INSTANT_MOUSER","","Key to access an integer field that indicates whether the…",18,N],[18,"TABLET_EVENT_POINT_X","","Key to access an integer field that contains the absolute…",18,N],[18,"TABLET_EVENT_POINT_Y","","Key to access an integer field that contains the absolute…",18,N],[18,"TABLET_EVENT_POINT_Z","","Key to access an integer field that contains the absolute…",18,N],[18,"TABLET_EVENT_POINT_BUTTONS","","Key to access an integer field that contains the tablet…",18,N],[18,"TABLET_EVENT_POINT_PRESSURE","","Key to access a double field that contains the tablet pen…",18,N],[18,"TABLET_EVENT_TILT_X","","Key to access a double field that contains the horizontal…",18,N],[18,"TABLET_EVENT_TILT_Y","","Key to access a double field that contains the vertical…",18,N],[18,"TABLET_EVENT_ROTATION","","Key to access a double field that contains the tablet pen…",18,N],[18,"TABLET_EVENT_TANGENTIAL_PRESSURE","","Key to access a double field that contains the tangential…",18,N],[18,"TABLET_EVENT_DEVICE_ID","","Key to access an integer field that contains the…",18,N],[18,"TABLET_EVENT_VENDOR_1","","Key to access an integer field that contains a…",18,N],[18,"TABLET_EVENT_VENDOR_2","","Key to access an integer field that contains a…",18,N],[18,"TABLET_EVENT_VENDOR_3","","Key to access an integer field that contains a…",18,N],[18,"TABLET_PROXIMITY_EVENT_VENDOR_ID","","Key to access an integer field that contains the…",18,N],[18,"TABLET_PROXIMITY_EVENT_TABLET_ID","","Key to access an integer field that contains the…",18,N],[18,"TABLET_PROXIMITY_EVENT_POINTER_ID","","Key to access an integer field that contains the…",18,N],[18,"TABLET_PROXIMITY_EVENT_DEVICE_ID","","Key to access an integer field that contains the…",18,N],[18,"TABLET_PROXIMITY_EVENT_SYSTEM_TABLET_ID","","Key to access an integer field that contains the…",18,N],[18,"TABLET_PROXIMITY_EVENT_VENDOR_POINTER_TYPE","","Key to access an integer field that contains the…",18,N],[18,"TABLET_PROXIMITY_EVENT_VENDOR_POINTER_SERIAL_NUMBER","","Key to access an integer field that contains the…",18,N],[18,"TABLET_PROXIMITY_EVENT_VENDOR_UNIQUE_ID","","Key to access an integer field that contains the…",18,N],[18,"TABLET_PROXIMITY_EVENT_CAPABILITY_MASK","","Key to access an integer field that contains the device…",18,N],[18,"TABLET_PROXIMITY_EVENT_POINTER_TYPE","","Key to access an integer field that contains the pointer…",18,N],[18,"TABLET_PROXIMITY_EVENT_ENTER_PROXIMITY","","Key to access an integer field that indicates whether the…",18,N],[18,"EVENT_TARGET_PROCESS_SERIAL_NUMBER","","Key to access a field that contains the event target…",18,N],[18,"EVENT_TARGET_UNIX_PROCESS_ID","","Key to access a field that contains the event target Unix…",18,N],[18,"EVENT_SOURCE_UNIX_PROCESS_ID","","Key to access a field that contains the event source Unix…",18,N],[18,"EVENT_SOURCE_USER_DATA","","Key to access a field that contains the event source…",18,N],[18,"EVENT_SOURCE_USER_ID","","Key to access a field that contains the event source Unix…",18,N],[18,"EVENT_SOURCE_GROUP_ID","","Key to access a field that contains the event source Unix…",18,N],[18,"EVENT_SOURCE_STATE_ID","","Key to access a field that contains the event source state…",18,N],[18,"SCROLL_WHEEL_EVENT_IS_CONTINUOUS","","Key to access an integer field that indicates whether a…",18,N],[18,"MOUSE_EVENT_WINDOW_UNDER_MOUSE_POINTER","","Added in 10.5; made public in 10.7.",18,N],[18,"MOUSE_EVENT_WINDOW_UNDER_MOUSE_POINTER_THAT_CAN_HANDLE_THIS_EVENT","","",18,N],[11,"type_id","","",19,[[],["cftypeid"]]],[11,"new","","",19,[[["cgeventsource"]],["result",["cgevent"]]]],[11,"new_keyboard_event","","",19,[[["cgeventsource"],["cgkeycode"],["bool"]],["result",["cgevent"]]]],[11,"new_mouse_event","","",19,[[["cgeventsource"],["cgeventtype"],["cgpoint"],["cgmousebutton"]],["result",["cgevent"]]]],[11,"post","","",19,[[["self"],["cgeventtaplocation"]]]],[11,"location","","",19,[[["self"]],["cgpoint"]]],[11,"set_flags","","",19,[[["self"],["cgeventflags"]]]],[11,"get_flags","","",19,[[["self"]],["cgeventflags"]]],[11,"set_type","","",19,[[["self"],["cgeventtype"]]]],[11,"get_type","","",19,[[["self"]],["cgeventtype"]]],[11,"set_string_from_utf16_unchecked","","",19,N],[11,"set_string","","",19,[[["self"],["str"]]]],[11,"get_integer_value_field","","",19,[[["self"],["cgeventfield"]],["i64"]]],[11,"set_integer_value_field","","",19,[[["self"],["cgeventfield"],["i64"]]]],[11,"get_double_value_field","","",19,[[["self"],["cgeventfield"]],["f64"]]],[11,"set_double_value_field","","",19,[[["self"],["cgeventfield"],["f64"]]]],[0,"event_source","core_graphics","",N,N],[3,"CGEventSource","core_graphics::event_source","",N,N],[3,"CGEventSourceRef","","",N,N],[4,"CGEventSourceStateID","","Possible source states of an event source.",N,N],[13,"Private","","",20,N],[13,"CombinedSessionState","","",20,N],[13,"HIDSystemState","","",20,N],[11,"type_id","","",21,[[],["cftypeid"]]],[11,"new","","",21,[[["cgeventsourcestateid"]],["result"]]],[0,"font","core_graphics","",N,N],[3,"CGFont","core_graphics::font","",N,N],[3,"CGFontRef","","",N,N],[6,"CGGlyph","","",N,N],[11,"type_id","","",22,[[],["cftypeid"]]],[11,"from_data_provider","","",22,[[["cgdataprovider"]],["result",["cgfont"]]]],[11,"from_name","","",22,[[["cfstring"]],["result",["cgfont"]]]],[11,"create_copy_from_variations","","",22,[[["self"],["cfdictionary"]],["result",["cgfont"]]]],[11,"postscript_name","","",22,[[["self"]],["cfstring"]]],[11,"get_glyph_b_boxes","","",22,N],[11,"get_glyph_advances","","",22,N],[11,"get_units_per_em","","",22,[[["self"]],["c_int"]]],[11,"copy_table_tags","","",22,[[["self"]],["cfarray",["u32"]]]],[11,"copy_table_for_tag","","",22,[[["self"],["u32"]],["option",["cfdata"]]]],[0,"geometry","core_graphics","",N,N],[3,"CGSize","core_graphics::geometry","",N,N],[12,"width","","",23,N],[12,"height","","",23,N],[3,"CGPoint","","",N,N],[12,"x","","",24,N],[12,"y","","",24,N],[3,"CGRect","","",N,N],[12,"origin","","",25,N],[12,"size","","",25,N],[3,"CGAffineTransform","","",N,N],[12,"a","","",26,N],[12,"b","","",26,N],[12,"c","","",26,N],[12,"d","","",26,N],[12,"tx","","",26,N],[12,"ty","","",26,N],[17,"CG_ZERO_POINT","","",N,N],[17,"CG_ZERO_SIZE","","",N,N],[17,"CG_ZERO_RECT","","",N,N],[17,"CG_AFFINE_TRANSFORM_IDENTITY","","",N,N],[11,"new","","",23,[[["cgfloat"],["cgfloat"]],["cgsize"]]],[11,"apply_transform","","",23,[[["self"],["cgaffinetransform"]],["cgsize"]]],[11,"new","","",24,[[["cgfloat"],["cgfloat"]],["cgpoint"]]],[11,"apply_transform","","",24,[[["self"],["cgaffinetransform"]],["cgpoint"]]],[11,"new","","",25,[[["cgpoint"],["cgsize"]],["cgrect"]]],[11,"inset","","",25,[[["self"],["cgsize"]],["cgrect"]]],[11,"from_dict_representation","","",25,[[["cfdictionary"]],["option",["cgrect"]]]],[11,"is_empty","","",25,[[["self"]],["bool"]]],[11,"is_intersects","","",25,[[["self"],["cgrect"]],["bool"]]],[11,"apply_transform","","",25,[[["self"],["cgaffinetransform"]],["cgrect"]]],[11,"new","","",26,[[["cgfloat"],["cgfloat"],["cgfloat"],["cgfloat"],["cgfloat"],["cgfloat"]],["cgaffinetransform"]]],[11,"invert","","",26,[[["self"]],["cgaffinetransform"]]],[0,"window","core_graphics","",N,N],[5,"copy_window_info","core_graphics::window","",N,[[["cgwindowlistoption"],["cgwindowid"]],["option",["cfarray"]]]],[5,"create_window_list","","",N,[[["cgwindowlistoption"],["cgwindowid"]],["option",["cfarray"]]]],[5,"create_description_from_array","","",N,[[["cfarray",["cgwindowid"]]],["option",["cfarray"]]]],[5,"create_image","","",N,[[["cgrect"],["cgwindowlistoption"],["cgwindowid"],["cgwindowimageoption"]],["option",["cgimage"]]]],[5,"create_image_from_array","","",N,[[["cgrect"],["cfarray"],["cgwindowimageoption"]],["option",["cgimage"]]]],[7,"kCGWindowNumber","","",N,N],[7,"kCGWindowStoreType","","",N,N],[7,"kCGWindowLayer","","",N,N],[7,"kCGWindowBounds","","",N,N],[7,"kCGWindowSharingState","","",N,N],[7,"kCGWindowAlpha","","",N,N],[7,"kCGWindowOwnerPID","","",N,N],[7,"kCGWindowMemoryUsage","","",N,N],[7,"kCGWindowWorkspace","","",N,N],[7,"kCGWindowOwnerName","","",N,N],[7,"kCGWindowName","","",N,N],[7,"kCGWindowIsOnscreen","","",N,N],[7,"kCGWindowBackingLocationVideoMemory","","",N,N],[5,"CGWindowListCopyWindowInfo","","",N,N],[5,"CGWindowListCreate","","",N,N],[5,"CGWindowListCreateDescriptionFromArray","","",N,N],[5,"CGWindowListCreateImage","","",N,N],[5,"CGWindowListCreateImageFromArray","","",N,N],[6,"CGWindowID","","",N,N],[6,"CGWindowSharingType","","",N,N],[6,"CGWindowBackingType","","",N,N],[6,"CGWindowListOption","","",N,N],[6,"CGWindowImageOption","","",N,N],[17,"kCGWindowSharingNone","","",N,N],[17,"kCGWindowSharingReadOnly","","",N,N],[17,"kCGWindowSharingReadWrite","","",N,N],[17,"kCGWindowBackingStoreRetained","","",N,N],[17,"kCGWindowBackingStoreNonretained","","",N,N],[17,"kCGWindowBackingStoreBuffered","","",N,N],[17,"kCGWindowListOptionAll","","",N,N],[17,"kCGWindowListOptionOnScreenOnly","","",N,N],[17,"kCGWindowListOptionOnScreenAboveWindow","","",N,N],[17,"kCGWindowListOptionOnScreenBelowWindow","","",N,N],[17,"kCGWindowListOptionIncludingWindow","","",N,N],[17,"kCGWindowListOptionExcludeDesktopElements","","",N,N],[17,"kCGWindowImageDefault","","",N,N],[17,"kCGWindowImageBoundsIgnoreFraming","","",N,N],[17,"kCGWindowImageShouldBeOpaque","","",N,N],[17,"kCGWindowImageOnlyShadows","","",N,N],[17,"kCGWindowImageBestResolution","","",N,N],[17,"kCGWindowImageNominalResolution","","",N,N],[17,"kCGNullWindowID","","",N,N],[0,"private","core_graphics","Evil private APIs.",N,N],[3,"CGSRegion","core_graphics::private","",N,N],[3,"CGSSurface","","This should always be memory-safe; the window server…",N,N],[11,"from_rect","","",27,[[["cgrect"]],["cgsregion"]]],[11,"from_rects","","",27,N],[11,"from_ids","","",28,[[["c_uint"],["c_int"],["c_uint"]],["cgssurface"]]],[11,"id","","",28,[[["self"]],["c_uint"]]],[11,"set_shape","","",28,[[["self"],["cgsregion"]]]],[0,"image","core_graphics","",N,N],[3,"CGImage","core_graphics::image","",N,N],[3,"CGImageRef","","",N,N],[4,"CGImageAlphaInfo","","",N,N],[13,"CGImageAlphaNone","","",29,N],[13,"CGImageAlphaPremultipliedLast","","",29,N],[13,"CGImageAlphaPremultipliedFirst","","",29,N],[13,"CGImageAlphaLast","","",29,N],[13,"CGImageAlphaFirst","","",29,N],[13,"CGImageAlphaNoneSkipLast","","",29,N],[13,"CGImageAlphaNoneSkipFirst","","",29,N],[13,"CGImageAlphaOnly","","",29,N],[4,"CGImageByteOrderInfo","","",N,N],[13,"CGImageByteOrderMask","","",30,N],[13,"CGImageByteOrder16Little","","",30,N],[13,"CGImageByteOrder32Little","","",30,N],[13,"CGImageByteOrder16Big","","",30,N],[13,"CGImageByteOrder32Big","","",30,N],[11,"new","","",31,[[["size_t"],["size_t"],["size_t"],["size_t"],["size_t"],["cgcolorspace"],["u32"],["cgdataprovider"],["bool"],["u32"]],["self"]]],[11,"type_id","","",31,[[],["cftypeid"]]],[11,"width","","",32,[[["self"]],["size_t"]]],[11,"height","","",32,[[["self"]],["size_t"]]],[11,"bits_per_component","","",32,[[["self"]],["size_t"]]],[11,"bits_per_pixel","","",32,[[["self"]],["size_t"]]],[11,"bytes_per_row","","",32,[[["self"]],["size_t"]]],[11,"color_space","","",32,[[["self"]],["cgcolorspace"]]],[11,"data","","Returns the raw image bytes wrapped in `CFData`. Note, the…",32,[[["self"]],["cfdata"]]],[11,"cropped","","Returns a cropped image. If the `rect` specifies a…",32,[[["self"],["cgrect"]],["option",["cgimage"]]]],[0,"path","core_graphics","",N,N],[3,"CGPath","core_graphics::path","",N,N],[3,"CGPathRef","","",N,N],[3,"CGPathElementRef","","",N,N],[3,"CGPathElement","","",N,N],[12,"element_type","","",33,N],[4,"CGPathElementType","","",N,N],[13,"MoveToPoint","","",34,N],[13,"AddLineToPoint","","",34,N],[13,"AddQuadCurveToPoint","","",34,N],[13,"AddCurveToPoint","","",34,N],[13,"CloseSubpath","","",34,N],[6,"SysCGPathRef","","",N,N],[11,"from_rect","","",35,[[["cgrect"],["option",["cgaffinetransform"]]],["cgpath"]]],[11,"type_id","","",35,[[],["cftypeid"]]],[11,"apply","","",35,[[["self"],["f"]]]],[11,"points","","",33,N],[11,"into","core_graphics::color","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from_void","","",0,N],[11,"from_mut_void","","",0,N],[11,"into","core_graphics::color_space","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","core_graphics::context","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","core_graphics::data_provider","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","core_graphics::display","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from_void","","",37,N],[11,"from_mut_void","","",37,N],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from_void","","",38,N],[11,"from_mut_void","","",38,N],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","core_graphics::event","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","core_graphics::event_source","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","core_graphics::font","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","core_graphics::geometry","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","core_graphics::private","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","core_graphics::image","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","core_graphics::path","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"to_void","core_graphics::display","",38,N],[11,"to_void","","",37,N],[11,"eq","","",38,[[["self"],["cfarray"]],["bool"]]],[11,"eq","","",37,[[["self"],["cfdictionary"]],["bool"]]],[11,"as_concrete_TypeRef","","",38,N],[11,"wrap_under_get_rule","","",38,N],[11,"as_CFTypeRef","","",38,N],[11,"wrap_under_create_rule","","",38,N],[11,"type_id","","",38,[[],["u64"]]],[11,"as_concrete_TypeRef","","",37,N],[11,"wrap_under_get_rule","","",37,N],[11,"as_CFTypeRef","","",37,N],[11,"wrap_under_create_rule","","",37,N],[11,"type_id","","",37,[[],["u64"]]],[11,"drop","","",38,N],[11,"drop","","",37,N],[11,"clone","","",37,[[["self"]],["cfdictionary"]]],[11,"clone","","",38,[[["self"]],["cfarray"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"extend","core_graphics::event","",15,[[["self"],["t"]]]],[11,"to_owned","core_graphics::color_space","",36,[[["self"]],["cgcolorspace"]]],[11,"to_owned","core_graphics::context","",5,[[["self"]],["cgcontext"]]],[11,"to_owned","core_graphics::data_provider","",8,[[["self"]],["cgdataprovider"]]],[11,"to_owned","core_graphics::display","",39,[[["self"]],["cgdisplaymode"]]],[11,"to_owned","core_graphics::event","",40,[[["self"]],["cgevent"]]],[11,"to_owned","core_graphics::event_source","",41,[[["self"]],["cgeventsource"]]],[11,"to_owned","core_graphics::font","",42,[[["self"]],["cgfont"]]],[11,"to_owned","core_graphics::image","",32,[[["self"]],["cgimage"]]],[11,"to_owned","core_graphics::path","",43,[[["self"]],["cgpath"]]],[11,"partial_cmp","core_graphics::event","",15,[[["self"],["cgeventflags"]],["option",["ordering"]]]],[11,"lt","","",15,[[["self"],["cgeventflags"]],["bool"]]],[11,"le","","",15,[[["self"],["cgeventflags"]],["bool"]]],[11,"gt","","",15,[[["self"],["cgeventflags"]],["bool"]]],[11,"ge","","",15,[[["self"],["cgeventflags"]],["bool"]]],[11,"default","core_graphics::geometry","",23,[[],["cgsize"]]],[11,"default","","",24,[[],["cgpoint"]]],[11,"default","","",25,[[],["cgrect"]]],[11,"default","","",26,[[],["cgaffinetransform"]]],[11,"eq","core_graphics::color","",0,[[["self"],["cgcolor"]],["bool"]]],[11,"eq","core_graphics::event","",15,[[["self"],["cgeventflags"]],["bool"]]],[11,"ne","","",15,[[["self"],["cgeventflags"]],["bool"]]],[11,"eq","core_graphics::geometry","",25,[[["self"],["cgrect"]],["bool"]]],[11,"eq","core_graphics::path","",34,[[["self"],["cgpathelementtype"]],["bool"]]],[11,"as_ref","core_graphics::color_space","",1,[[["self"]],["cgcolorspaceref"]]],[11,"as_ref","core_graphics::context","",4,[[["self"]],["cgcontextref"]]],[11,"as_ref","core_graphics::data_provider","",7,[[["self"]],["cgdataproviderref"]]],[11,"as_ref","core_graphics::display","",11,[[["self"]],["cgdisplaymoderef"]]],[11,"as_ref","core_graphics::event","",19,[[["self"]],["cgeventref"]]],[11,"as_ref","core_graphics::event_source","",21,[[["self"]],["cgeventsourceref"]]],[11,"as_ref","core_graphics::font","",22,[[["self"]],["cgfontref"]]],[11,"as_ref","core_graphics::image","",31,[[["self"]],["cgimageref"]]],[11,"as_ref","core_graphics::path","",35,[[["self"]],["cgpathref"]]],[11,"cmp","core_graphics::event","",15,[[["self"],["cgeventflags"]],["ordering"]]],[11,"clone","core_graphics::color","",0,[[["self"]],["cgcolor"]]],[11,"clone","core_graphics::color_space","",1,[[["self"]],["cgcolorspace"]]],[11,"clone","core_graphics::context","",2,[[["self"]],["cgblendmode"]]],[11,"clone","","",4,[[["self"]],["cgcontext"]]],[11,"clone","core_graphics::data_provider","",7,[[["self"]],["cgdataprovider"]]],[11,"clone","core_graphics::display","",10,[[["self"]],["cgconfigureoption"]]],[11,"clone","","",9,[[["self"]],["cgdisplay"]]],[11,"clone","","",11,[[["self"]],["cgdisplaymode"]]],[11,"clone","core_graphics::event","",15,[[["self"]],["cgeventflags"]]],[11,"clone","","",12,[[["self"]],["cgeventtype"]]],[11,"clone","","",13,[[["self"]],["cgmousebutton"]]],[11,"clone","","",14,[[["self"]],["cgeventtaplocation"]]],[11,"clone","","",19,[[["self"]],["cgevent"]]],[11,"clone","core_graphics::event_source","",20,[[["self"]],["cgeventsourcestateid"]]],[11,"clone","","",21,[[["self"]],["cgeventsource"]]],[11,"clone","core_graphics::font","",22,[[["self"]],["cgfont"]]],[11,"clone","core_graphics::geometry","",23,[[["self"]],["cgsize"]]],[11,"clone","","",24,[[["self"]],["cgpoint"]]],[11,"clone","","",25,[[["self"]],["cgrect"]]],[11,"clone","","",26,[[["self"]],["cgaffinetransform"]]],[11,"clone","core_graphics::image","",31,[[["self"]],["cgimage"]]],[11,"clone","core_graphics::path","",35,[[["self"]],["cgpath"]]],[11,"clone","","",34,[[["self"]],["cgpathelementtype"]]],[11,"drop","core_graphics::color","",0,[[["self"]]]],[11,"drop","core_graphics::color_space","",1,[[["self"]]]],[11,"drop","core_graphics::context","",4,[[["self"]]]],[11,"drop","core_graphics::data_provider","",7,[[["self"]]]],[11,"drop","core_graphics::display","",11,[[["self"]]]],[11,"drop","core_graphics::event","",19,[[["self"]]]],[11,"drop","core_graphics::event_source","",21,[[["self"]]]],[11,"drop","core_graphics::font","",22,[[["self"]]]],[11,"drop","core_graphics::private","",27,[[["self"]]]],[11,"drop","core_graphics::image","",31,[[["self"]]]],[11,"drop","core_graphics::path","",35,[[["self"]]]],[11,"deref","core_graphics::color_space","",1,[[["self"]],["cgcolorspaceref"]]],[11,"deref","core_graphics::context","",4,[[["self"]],["cgcontextref"]]],[11,"deref","core_graphics::data_provider","",7,[[["self"]],["cgdataproviderref"]]],[11,"deref","core_graphics::display","",11,[[["self"]],["cgdisplaymoderef"]]],[11,"deref","core_graphics::event","",19,[[["self"]],["cgeventref"]]],[11,"deref","core_graphics::event_source","",21,[[["self"]],["cgeventsourceref"]]],[11,"deref","core_graphics::font","",22,[[["self"]],["cgfontref"]]],[11,"deref","core_graphics::image","",31,[[["self"]],["cgimageref"]]],[11,"deref","core_graphics::path","",35,[[["self"]],["cgpathref"]]],[11,"deref","","",44,[[["self"]],["cgpathelement"]]],[11,"fmt","core_graphics::context","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_graphics::display","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_graphics::event","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_graphics::event_source","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_graphics::geometry","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","core_graphics::path","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"sub","core_graphics::event","Returns the set difference of the two sets of flags.",15,[[["self"],["cgeventflags"]],["cgeventflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",15,[[["self"],["cgeventflags"]]]],[11,"not","","Returns the complement of this set of flags.",15,[[["self"]],["cgeventflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",15,[[["self"],["cgeventflags"]],["cgeventflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",15,[[["self"],["cgeventflags"]],["cgeventflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",15,[[["self"],["cgeventflags"]],["cgeventflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",15,[[["self"],["cgeventflags"]]]],[11,"bitor_assign","","Adds the set of flags.",15,[[["self"],["cgeventflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",15,[[["self"],["cgeventflags"]]]],[11,"deref_mut","core_graphics::color_space","",1,[[["self"]],["cgcolorspaceref"]]],[11,"deref_mut","core_graphics::context","",4,[[["self"]],["cgcontextref"]]],[11,"deref_mut","core_graphics::data_provider","",7,[[["self"]],["cgdataproviderref"]]],[11,"deref_mut","core_graphics::display","",11,[[["self"]],["cgdisplaymoderef"]]],[11,"deref_mut","core_graphics::event","",19,[[["self"]],["cgeventref"]]],[11,"deref_mut","core_graphics::event_source","",21,[[["self"]],["cgeventsourceref"]]],[11,"deref_mut","core_graphics::font","",22,[[["self"]],["cgfontref"]]],[11,"deref_mut","core_graphics::image","",31,[[["self"]],["cgimageref"]]],[11,"deref_mut","core_graphics::path","",35,[[["self"]],["cgpathref"]]],[11,"hash","core_graphics::event","",15,N],[11,"from_iter","","",15,[[["t"]],["cgeventflags"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"borrow","core_graphics::color_space","",1,[[["self"]],["cgcolorspaceref"]]],[11,"borrow","core_graphics::context","",4,[[["self"]],["cgcontextref"]]],[11,"borrow","core_graphics::data_provider","",7,[[["self"]],["cgdataproviderref"]]],[11,"borrow","core_graphics::display","",11,[[["self"]],["cgdisplaymoderef"]]],[11,"borrow","core_graphics::event","",19,[[["self"]],["cgeventref"]]],[11,"borrow","core_graphics::event_source","",21,[[["self"]],["cgeventsourceref"]]],[11,"borrow","core_graphics::font","",22,[[["self"]],["cgfontref"]]],[11,"borrow","core_graphics::image","",31,[[["self"]],["cgimageref"]]],[11,"borrow","core_graphics::path","",35,[[["self"]],["cgpathref"]]],[11,"as_concrete_TypeRef","core_graphics::color","",0,[[["self"]],["cgcolorref"]]],[11,"wrap_under_get_rule","","",0,[[["cgcolorref"]],["self"]]],[11,"as_CFTypeRef","","",0,[[["self"]],["cftyperef"]]],[11,"wrap_under_create_rule","","",0,[[["cgcolorref"]],["self"]]],[11,"type_id","","",0,[[],["cftypeid"]]],[11,"to_void","","",0,N],[11,"to_void","core_graphics","",45,N],[11,"from_CFType_pairs","core_graphics::display","",37,N],[11,"to_untyped","","",37,[[["self"]],["cfdictionary"]]],[11,"to_mutable","","Returns a `CFMutableDictionary` pointing to the same…",37,[[["self"]],["cfmutabledictionary"]]],[11,"into_untyped","","Returns the same dictionary, but with the types reset to…",37,[[["self"]],["cfdictionary"]]],[11,"len","","",37,[[["self"]],["usize"]]],[11,"is_empty","","",37,[[["self"]],["bool"]]],[11,"contains_key","","",37,[[["self"],["k"]],["bool"]]],[11,"find","","",37,[[["self"],["t"]],["option",["itemref"]]]],[11,"get","","Panics",37,[[["self"],["t"]],["itemref"]]],[11,"get_keys_and_values","","",37,N],[11,"from_copyable","","Creates a new `CFArray` with the given elements, which…",38,N],[11,"from_CFTypes","","Creates a new `CFArray` with the given elements, which…",38,N],[11,"to_untyped","","",38,[[["self"]],["cfarray"]]],[11,"into_untyped","","Returns the same array, but with the type reset to void…",38,[[["self"]],["cfarray"]]],[11,"iter","","Iterates over the elements of this `CFArray`.",38,[[["self"]],["cfarrayiterator"]]],[11,"len","","",38,[[["self"]],["i64"]]],[11,"get_unchecked","","",38,[[["self"],["i64"]],["itemref"]]],[11,"get","","",38,[[["self"],["i64"]],["option",["itemref"]]]],[11,"get_values","","",38,[[["self"],["cfrange"]],["vec"]]],[11,"get_all_values","","",38,[[["self"]],["vec"]]]],"paths":[[3,"CGColor"],[3,"CGColorSpace"],[4,"CGBlendMode"],[4,"CGTextDrawingMode"],[3,"CGContext"],[3,"CGContextRef"],[8,"CustomData"],[3,"CGDataProvider"],[3,"CGDataProviderRef"],[3,"CGDisplay"],[4,"CGConfigureOption"],[3,"CGDisplayMode"],[4,"CGEventType"],[4,"CGMouseButton"],[4,"CGEventTapLocation"],[3,"CGEventFlags"],[3,"KeyCode"],[3,"ScrollEventUnit"],[3,"EventField"],[3,"CGEvent"],[4,"CGEventSourceStateID"],[3,"CGEventSource"],[3,"CGFont"],[3,"CGSize"],[3,"CGPoint"],[3,"CGRect"],[3,"CGAffineTransform"],[3,"CGSRegion"],[3,"CGSSurface"],[4,"CGImageAlphaInfo"],[4,"CGImageByteOrderInfo"],[3,"CGImage"],[3,"CGImageRef"],[3,"CGPathElement"],[4,"CGPathElementType"],[3,"CGPath"],[3,"CGColorSpaceRef"],[3,"CFDictionary"],[3,"CFArray"],[3,"CGDisplayModeRef"],[3,"CGEventRef"],[3,"CGEventSourceRef"],[3,"CGFontRef"],[3,"CGPathRef"],[3,"CGPathElementRef"],[6,"SysCGColorRef"]]};
searchIndex["crossbeam_deque"]={"doc":"Concurrent work-stealing deques.","items":[[3,"Worker","crossbeam_deque","A worker queue.",N,N],[3,"Stealer","","A stealer handle of a worker queue.",N,N],[3,"Injector","","An injector queue.",N,N],[4,"Steal","","Possible outcomes of a steal operation.",N,N],[13,"Empty","","The queue was empty at the time of stealing.",0,N],[13,"Success","","At least one task was successfully stolen.",0,N],[13,"Retry","","The steal operation needs to be retried.",0,N],[11,"new_fifo","","Creates a FIFO worker queue.",1,[[],["worker"]]],[11,"new_lifo","","Creates a LIFO worker queue.",1,[[],["worker"]]],[11,"stealer","","Creates a stealer for this queue.",1,[[["self"]],["stealer"]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[["self"]],["bool"]]],[11,"push","","Pushes a task into the queue.",1,[[["self"],["t"]]]],[11,"pop","","Pops a task from the queue.",1,[[["self"]],["option"]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[["self"]],["bool"]]],[11,"steal","","Steals a task from the queue.",2,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into another worker.",2,[[["self"],["worker"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into another worker,…",2,[[["self"],["worker"]],["steal"]]],[11,"new","","Creates a new injector queue.",3,[[],["injector"]]],[11,"push","","Pushes a task into the queue.",3,[[["self"],["t"]]]],[11,"steal","","Steals a task from the queue.",3,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into a worker.",3,[[["self"],["worker"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into a worker, and…",3,[[["self"],["worker"]],["steal"]]],[11,"is_empty","","Returns `true` if the queue is empty.",3,[[["self"]],["bool"]]],[11,"is_empty","","Returns `true` if the queue was empty at the time of…",0,[[["self"]],["bool"]]],[11,"is_success","","Returns `true` if at least one task was stolen.",0,[[["self"]],["bool"]]],[11,"is_retry","","Returns `true` if the steal operation needs to be retried.",0,[[["self"]],["bool"]]],[11,"success","","Returns the result of the operation, if successful.",0,[[["self"]],["option"]]],[11,"or_else","","If no task was stolen, attempts another steal operation.",0,[[["self"],["f"]],["steal"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["steal"]],["bool"]]],[11,"ne","","",0,[[["self"],["steal"]],["bool"]]],[11,"clone","","",2,[[["self"]],["stealer"]]],[11,"clone","","",0,[[["self"]],["steal"]]],[11,"drop","","",3,[[["self"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"from_iter","","Consumes items until a `Success` is found and returns it.",0,[[["i"]],["steal"]]]],"paths":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]};
searchIndex["crossbeam_epoch"]={"doc":"Epoch-based memory reclamation.","items":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",N,N],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",N,N],[12,"current","","The value in the atomic pointer at the time of the failed…",0,N],[12,"new","","The new value, which the operation failed to store.",0,N],[3,"Owned","","An owned heap-allocated object.",N,N],[3,"Shared","","A pointer to an object protected by the epoch GC.",N,N],[3,"Collector","","An epoch-based garbage collector.",N,N],[3,"LocalHandle","","A handle to a garbage collector.",N,N],[3,"Guard","","A guard that keeps the current thread pinned.",N,N],[5,"unprotected","","Returns a reference to a dummy guard that allows…",N,[[],["guard"]]],[5,"default_collector","","Returns the default global collector.",N,[[],["collector"]]],[5,"is_pinned","","Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin","","Pins the current thread.",N,[[],["guard"]]],[11,"null","","Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new","","Allocates `value` on the heap and returns a new atomic…",1,[[["t"]],["atomic"]]],[11,"load","","Loads a `Shared` from the atomic pointer.",1,[[["self"],["ordering"],["guard"]],["shared"]]],[11,"load_consume","","Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["self"],["guard"]],["shared"]]],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["self"],["p"],["ordering"]]]],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["self"],["p"],["ordering"],["guard"]],["shared"]]],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["self"],["shared"],["p"],["o"],["guard"]],["result",["shared","compareandseterror"]]]],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["self"],["shared"],["p"],["o"],["guard"]],["result",["shared","compareandseterror"]]]],[11,"fetch_and","","Bitwise \"and\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"fetch_or","","Bitwise \"or\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"fetch_xor","","Bitwise \"xor\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"new","","Allocates `value` on the heap and returns a new owned…",2,[[["t"]],["owned"]]],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,N],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,[[["self"],["guard"]],["shared"]]],[11,"into_box","","Converts the owned pointer into a `Box`.",2,[[["self"]],["box"]]],[11,"tag","","Returns the tag stored within the pointer.",2,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",2,[[["self"],["usize"]],["owned"]]],[11,"null","","Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null","","Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,N],[11,"deref","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"deref_mut","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"as_ref","","Converts the pointer to a reference.",3,[[["self"]],["option"]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[["self"]],["owned"]]],[11,"tag","","Returns the tag stored within the pointer.",3,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",3,[[["self"],["usize"]],["shared"]]],[11,"new","","Creates a new collector.",4,[[],["self"]]],[11,"register","","Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin","","Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,"collector","","Returns the `Collector` associated with this handle.",5,[[["self"]],["collector"]]],[11,"defer","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_unchecked","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_destroy","","Stores a destructor for an object so that it can be…",6,[[["self"],["shared"]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin","","Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after","","Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,"collector","","Returns the `Collector` associated with this guard.",6,[[["self"]],["option",["collector"]]]],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",N,N],[10,"success","","The ordering of the operation when it succeeds.",7,[[["self"]],["ordering"]]],[10,"failure","","The ordering of the operation when it fails.",7,[[["self"]],["ordering"]]],[8,"Pointer","","A trait for either `Owned` or `Shared` pointers.",N,N],[10,"into_usize","","Returns the machine representation of the pointer.",8,[[["self"]],["usize"]]],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",8,[[["usize"]],["self"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_usize","","",2,[[["self"]],["usize"]]],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",2,[[["usize"]],["self"]]],[11,"into_usize","","",3,[[["self"]],["usize"]]],[11,"from_usize","","",3,[[["usize"]],["self"]]],[11,"partial_cmp","","",3,[[["self"],["self"]],["option",["ordering"]]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"as_mut","","",2,[[["self"]],["t"]]],[11,"eq","","",3,[[["self"],["self"]],["bool"]]],[11,"eq","","Checks if both handles point to the same collector.",4,[[["self"],["collector"]],["bool"]]],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from","","",1,[[["box"]],["self"]]],[11,"from","","",1,[[["t"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,N],[11,"from","","",2,[[["t"]],["self"]]],[11,"from","","Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from","","Returns a new pointer pointing to `raw`.",3,N],[11,"as_ref","","",2,[[["self"]],["t"]]],[11,"cmp","","",3,[[["self"],["self"]],["ordering"]]],[11,"clone","","Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","","Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]]],"paths":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]};
searchIndex["crossbeam_utils"]={"doc":"Miscellaneous tools for concurrent programming.","items":[[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",N,N],[3,"Backoff","","Performs exponential backoff in spin loops.",N,N],[0,"atomic","","Atomic types.",N,N],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",N,N],[11,"new","","Creates a new atomic cell initialized with `val`.",0,[[["t"]],["atomiccell"]]],[11,"get_mut","","Returns a mutable reference to the inner value.",0,[[["self"]],["t"]]],[11,"into_inner","","Unwraps the atomic cell and returns its inner value.",0,[[["self"]],["t"]]],[11,"is_lock_free","","Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store","","Stores `val` into the atomic cell.",0,[[["self"],["t"]]]],[11,"swap","","Stores `val` into the atomic cell and returns the previous…",0,[[["self"],["t"]],["t"]]],[11,"load","","Loads a value.",0,[[["self"]],["t"]]],[11,"compare_and_swap","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"],["t"]],["t"]]],[11,"compare_exchange","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"],["t"]],["result"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i128"]],["i128"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i128"]],["i128"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i128"]],["i128"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i128"]],["i128"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i128"]],["i128"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_and","","Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_or","","Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_xor","","Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types…",N,N],[16,"Val","","Type returned by `load_consume`.",1,N],[10,"load_consume","","Loads a value from the atomic using a \"consume\" memory…",1,N],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",2,[[["t"]],["cachepadded"]]],[11,"into_inner","","Returns the value value.",2,[[["self"]],["t"]]],[11,"new","","Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset","","Resets the `Backoff`.",3,[[["self"]]]],[11,"spin","","Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze","","Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed","","Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync","","Thread synchronization primitives.",N,N],[3,"ShardedLock","crossbeam_utils::sync","A sharded reader-writer lock.",N,N],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a…",N,N],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a…",N,N],[3,"Parker","","A thread parking primitive.",N,N],[3,"Unparker","","Unparks a thread parked by the associated [`Parker`].",N,N],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of…",N,N],[11,"new","","Creates a new `Parker`.",4,[[],["parker"]]],[11,"park","","Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout","","Blocks the current thread until the token is made…",4,[[["self"],["duration"]]]],[11,"unparker","","Returns a reference to an associated [`Unparker`].",4,[[["self"]],["unparker"]]],[11,"unpark","","Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new","","Creates a new sharded reader-writer lock.",6,[[["t"]],["shardedlock"]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",6,[[["self"]],["lockresult"]]],[11,"is_poisoned","","Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],["lockresult"]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",6,[[["self"]],["trylockresult",["shardedlockreadguard"]]]],[11,"read","","Locks with shared read access, blocking the current thread…",6,[[["self"]],["lockresult",["shardedlockreadguard"]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",6,[[["self"]],["trylockresult",["shardedlockwriteguard"]]]],[11,"write","","Locks with exclusive write access, blocking the current…",6,[[["self"]],["lockresult",["shardedlockwriteguard"]]]],[11,"new","","Creates a new wait group and returns the single reference…",7,[[],["waitgroup"]]],[11,"wait","","Drops this reference and waits until all other references…",7,[[["self"]]]],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",N,N],[3,"Scope","crossbeam_utils::thread","A scope for spawning threads.",N,N],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",N,N],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",N,N],[5,"scope","","Creates a new scope for spawning threads.",N,[[["f"]],["result"]]],[11,"spawn","","Spawns a scoped thread.",8,[[["self"],["f"]],["scopedjoinhandle"]]],[11,"builder","","Creates a builder that can configure a thread before…",8,[[["self"]],["scopedthreadbuilder"]]],[11,"name","","Sets the name for the new thread.",9,[[["self"],["string"]],["scopedthreadbuilder"]]],[11,"stack_size","","Sets the size of the stack for the new thread.",9,[[["self"],["usize"]],["scopedthreadbuilder"]]],[11,"spawn","","Spawns a scoped thread with this configuration.",9,[[["self"],["f"]],["result",["scopedjoinhandle"]]]],[11,"join","","Waits for the thread to finish and returns its result.",10,[[["self"]],["result"]]],[11,"thread","","Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"into","crossbeam_utils","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","crossbeam_utils::atomic","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","crossbeam_utils::sync","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","crossbeam_utils::thread","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"default","crossbeam_utils::atomic","",0,[[],["atomiccell"]]],[11,"default","crossbeam_utils","",2,[[],["cachepadded"]]],[11,"default","","",3,[[],["backoff"]]],[11,"default","crossbeam_utils::sync","",6,[[],["shardedlock"]]],[11,"eq","crossbeam_utils","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"ne","","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"from","","",2,[[["t"]],["self"]]],[11,"from","crossbeam_utils::sync","",6,[[["t"]],["self"]]],[11,"clone","crossbeam_utils","",2,[[["self"]],["cachepadded"]]],[11,"clone","crossbeam_utils::sync","",5,[[["self"]],["unparker"]]],[11,"clone","","",7,[[["self"]],["waitgroup"]]],[11,"drop","","",12,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"deref","crossbeam_utils","",2,[[["self"]],["t"]]],[11,"deref","crossbeam_utils::sync","",11,[[["self"]],["t"]]],[11,"deref","","",12,[[["self"]],["t"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils::atomic","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils::thread","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","crossbeam_utils","",2,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils::sync","",12,[[["self"]],["t"]]],[11,"hash","crossbeam_utils","",2,N]],"paths":[[3,"AtomicCell"],[8,"AtomicConsume"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"WaitGroup"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"]]};
searchIndex["daggy"]={"doc":"daggy is a directed acyclic graph data structure library.","items":[[3,"EdgeIndex","daggy","Edge identifier.",N,N],[3,"NodeIndex","","Node identifier.",N,N],[3,"EdgeWeightsMut","","Iterator yielding mutable access to all edge weights.",N,N],[3,"NodeWeightsMut","","Iterator yielding mutable access to all node weights.",N,N],[3,"Dag","","A Directed acyclic graph (DAG) data structure.",N,N],[3,"Children","","A Walker type that can be used to step through the…",N,N],[3,"Parents","","A Walker type that can be used to step through the parents…",N,N],[3,"EdgeIndices","","An iterator yielding multiple `EdgeIndex`s, returned by…",N,N],[3,"WouldCycle","","An error returned by the `Dag::add_edge` method in the…",N,N],[12,"0","","",0,N],[0,"walker","","Walker is a trait providing a variety of useful methods…",N,N],[3,"Recursive","daggy::walker","Recursively walks a graph using the recursive function…",N,N],[3,"Chain","","Walks the entirety of `a` before walking the entirety of…",N,N],[3,"Filter","","A walker that applies some given predicate to each element…",N,N],[3,"Peekable","","A walker that has a `.peek(&graph)` method that returns an…",N,N],[3,"SkipWhile","","A walker that invokes the predicate on elements until it…",N,N],[3,"TakeWhile","","A walker that yields elements so long as the predicate…",N,N],[3,"Skip","","A walker that skips the first n steps of this walk, and…",N,N],[3,"Take","","A walker that yields the first n steps of this walk.",N,N],[3,"Cycle","","A walker that repeats its internal walker endlessly.",N,N],[3,"Inspect","","A walker that calls a function with a reference to each…",N,N],[3,"Iter","","An iterator yielding index pairs produced by its internal…",N,N],[3,"IterEdges","","An iterator yielding edge indices produced by its internal…",N,N],[3,"IterNodes","","An iterator yielding node indices produced by its internal…",N,N],[3,"IterWeights","","An iterator yielding weights associated with the index…",N,N],[3,"IterEdgeWeights","","An iterator yielding edge weights associated with the…",N,N],[3,"IterNodeWeights","","An iterator yielding node weights associated with the…",N,N],[6,"IndexPair","","Short-hand for an edge node index pair.",N,N],[8,"Walker","","A trait providing a variety of useful methods for…",N,N],[16,"Index","","The unsigned integer type used for node and edge indices.",1,N],[10,"next","","Fetch the `EdgeIndex` and `NodeIndex` to the next…",1,[[["self"],["g"]],["option",["indexpair"]]]],[11,"next_edge","","The next edge in our walk for the given Graph.",1,[[["self"],["g"]],["option",["edgeindex"]]]],[11,"next_node","","The next node in our walk for the given Graph.",1,[[["self"],["g"]],["option",["nodeindex"]]]],[11,"count","","Counts all the steps in the entire walk of the given graph.",1,[[["self"],["g"]],["usize"]]],[11,"last","","Walks the whole walk until reaching and returning the last…",1,[[["self"],["g"]],["option",["indexpair"]]]],[11,"last_edge","","Walks the whole walk until reaching and returning the last…",1,[[["self"],["g"]],["option",["edgeindex"]]]],[11,"last_node","","Walks the whole walk until reaching and returning the last…",1,[[["self"],["g"]],["option",["nodeindex"]]]],[11,"nth","","Walks \"n\" number of steps and produces the resulting edge…",1,[[["self"],["g"],["usize"]],["option",["indexpair"]]]],[11,"nth_edge","","Walks \"n\" number of steps and produces the resulting edge.",1,[[["self"],["g"],["usize"]],["option",["edgeindex"]]]],[11,"nth_node","","Walks \"n\" number of steps and produces the resulting node.",1,[[["self"],["g"],["usize"]],["option",["nodeindex"]]]],[11,"chain","","Produces a walker that will walk the entirey of `self`…",1,[[["self"],["o"]],["chain"]]],[11,"filter","","Creates a walker that applies the predicate to each…",1,[[["self"],["p"]],["filter"]]],[11,"peekable","","Creates a walker that has a `.peek(&graph)` method that…",1,[[["self"]],["peekable"]]],[11,"skip_while","","Creates a walker that invokes the predicate on elements…",1,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Creates a walker that yields elements so long as the…",1,[[["self"],["p"]],["takewhile"]]],[11,"skip","","Creates a walker that skips the first n steps of this…",1,[[["self"],["usize"]],["skip"]]],[11,"take","","Creates a walker that yields the first n steps of this walk.",1,[[["self"],["usize"]],["take"]]],[11,"all","","Tests whether the predicate holds true for all steps in…",1,[[["self"],["g"],["p"]],["bool"]]],[11,"any","","Tests whether any step in the walk satisfies the given…",1,[[["self"],["g"],["p"]],["bool"]]],[11,"find","","Returns the first edge node index pair satisfying the…",1,[[["self"],["g"],["p"]],["option",["indexpair"]]]],[11,"find_edge","","Returns the edge index satisfying the specified predicate.",1,[[["self"],["g"],["p"]],["option",["edgeindex"]]]],[11,"find_node","","Returns the node index satisfying the specified predicate.",1,[[["self"],["g"],["p"]],["option",["nodeindex"]]]],[11,"cycle","","Repeats the walker endlessly.",1,[[["self"]],["cycle"]]],[11,"fold","","Performs a fold operation over the entire walker,…",1,[[["self"],["b"],["g"],["f"]],["b"]]],[11,"inspect","","Creates a walker that calls a function with a reference to…",1,[[["self"],["f"]],["inspect"]]],[11,"iter","","Converts the walker into an iterator yielding index pairs.",1,[[["self"],["g"]],["iter"]]],[11,"iter_weights","","Converts the walker into an iterator yielding `(&e, &n)`,…",1,[[["self"],["g"]],["iterweights"]]],[11,"new","","Construct a new Recursive Walker starting from the node at…",2,[[["nodeindex"],["f"]],["self"]]],[11,"peek","","The edge node index pair of the neighbor at the next step…",3,[[["self"],["g"]],["option",["indexpair"]]]],[11,"peek_edge","","The edge index of the neighbor at the next step in our…",3,[[["self"],["g"]],["option",["edgeindex"]]]],[11,"peek_node","","The node index of the neighbor at the next step in our…",3,[[["self"],["g"]],["option",["nodeindex"]]]],[11,"edges","","Convert to an iterator that only yields the edge indices.",4,[[["self"]],["iteredges"]]],[11,"nodes","","Convert to an iterator that only yields the node indices.",4,[[["self"]],["iternodes"]]],[11,"edges","","Convert to an iterator yielding only the edge weights.",5,[[["self"]],["iteredgeweights"]]],[11,"nodes","","Convert to an iterator yielding only the node weights.",5,[[["self"]],["iternodeweights"]]],[6,"PetGraph","daggy","The Petgraph to be used internally within the Dag for…",N,N],[6,"RawNodes","","Read only access into a Dag's internal node array.",N,N],[6,"RawEdges","","Read only access into a Dag's internal edge array.",N,N],[6,"RecursiveWalk","","An alias to simplify the Recursive Walker type returned by…",N,N],[11,"new","","Create a new, empty `Dag`.",6,[[],["self"]]],[11,"with_capacity","","Create a new `Dag` with estimated capacity for its node…",6,[[["usize"],["usize"]],["self"]]],[11,"clear","","Removes all nodes and edges from the Dag.",6,[[["self"]]]],[11,"node_count","","The total number of nodes in the Dag.",6,[[["self"]],["usize"]]],[11,"edge_count","","The total number of edgees in the Dag.",6,[[["self"]],["usize"]]],[11,"graph","","Borrow the `Dag`'s underlying `PetGraph<N, Ix>`. All…",6,[[["self"]],["petgraph"]]],[11,"into_graph","","Take ownership of the `Dag` and return the internal…",6,[[["self"]],["petgraph"]]],[11,"add_node","","Add a new node to the `Dag` with the given weight.",6,[[["self"],["n"]],["nodeindex"]]],[11,"add_edge","","Add a new directed edge to the `Dag` with the given weight.",6,[[["self"],["nodeindex"],["nodeindex"],["e"]],["result",["edgeindex","wouldcycle"]]]],[11,"add_edges","","Adds the given directed edges to the `Dag`, each with…",6,[[["self"],["i"]],["result",["edgeindices","wouldcycle"]]]],[11,"update_edge","","Update the edge from nodes `a` -> `b` with the given weight.",6,[[["self"],["nodeindex"],["nodeindex"],["e"]],["result",["edgeindex","wouldcycle"]]]],[11,"find_edge","","Find and return the index to the edge that describes `a`…",6,[[["self"],["nodeindex"],["nodeindex"]],["option",["edgeindex"]]]],[11,"edge_endpoints","","Access the parent and child nodes for the given `EdgeIndex`.",6,[[["self"],["edgeindex"]],["option"]]],[11,"clear_edges","","Remove all edges.",6,[[["self"]]]],[11,"add_parent","","Add a new edge and parent node to the node at the given…",6,N],[11,"add_child","","Add a new edge and child node to the node at the given…",6,N],[11,"node_weight","","Borrow the weight from the node at the given index.",6,[[["self"],["nodeindex"]],["option"]]],[11,"node_weight_mut","","Mutably borrow the weight from the node at the given index.",6,[[["self"],["nodeindex"]],["option"]]],[11,"raw_nodes","","Read from the internal node array.",6,[[["self"]],["rawnodes"]]],[11,"node_weights_mut","","An iterator yielding mutable access to all node weights.",6,[[["self"]],["nodeweightsmut"]]],[11,"edge_weight","","Borrow the weight from the edge at the given index.",6,[[["self"],["edgeindex"]],["option"]]],[11,"edge_weight_mut","","Mutably borrow the weight from the edge at the given index.",6,[[["self"],["edgeindex"]],["option"]]],[11,"raw_edges","","Read from the internal edge array.",6,[[["self"]],["rawedges"]]],[11,"edge_weights_mut","","An iterator yielding mutable access to all edge weights.",6,[[["self"]],["edgeweightsmut"]]],[11,"index_twice_mut","","Index the `Dag` by two indices.",6,N],[11,"remove_node","","Remove the node at the given index from the `Dag` and…",6,[[["self"],["nodeindex"]],["option"]]],[11,"remove_edge","","Remove an edge and return its weight, or `None` if it…",6,[[["self"],["edgeindex"]],["option"]]],[11,"parents","","A Walker type that may be used to step through the parents…",6,[[["self"],["nodeindex"]],["parents"]]],[11,"children","","A \"walker\" object that may be used to step through the…",6,[[["self"],["nodeindex"]],["children"]]],[11,"recursive_walk","","A Walker type that recursively walks the Dag using the…",6,[[["self"],["nodeindex"],["f"]],["recursivewalk"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"equivalent","","",7,[[["self"],["k"]],["bool"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"equivalent","","",8,[[["self"],["k"]],["bool"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","daggy::walker","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"into_iter","","",23,[[["self"]],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"into_iter","","",24,[[["self"]],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"into_iter","","",25,[[["self"]],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"fmt","daggy","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","","",8,N],[11,"hash","","",7,N],[11,"default","","",7,[[],["edgeindex"]]],[11,"default","","",8,[[],["nodeindex"]]],[11,"from","","",8,[[["ix"]],["nodeindex"]]],[11,"eq","","",8,[[["self"],["nodeindex"]],["bool"]]],[11,"ne","","",8,[[["self"],["nodeindex"]],["bool"]]],[11,"eq","","",7,[[["self"],["edgeindex"]],["bool"]]],[11,"ne","","",7,[[["self"],["edgeindex"]],["bool"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"cmp","","",8,[[["self"],["nodeindex"]],["ordering"]]],[11,"cmp","","",7,[[["self"],["edgeindex"]],["ordering"]]],[11,"partial_cmp","","",8,[[["self"],["nodeindex"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["nodeindex"]],["bool"]]],[11,"le","","",8,[[["self"],["nodeindex"]],["bool"]]],[11,"gt","","",8,[[["self"],["nodeindex"]],["bool"]]],[11,"ge","","",8,[[["self"],["nodeindex"]],["bool"]]],[11,"partial_cmp","","",7,[[["self"],["edgeindex"]],["option",["ordering"]]]],[11,"lt","","",7,[[["self"],["edgeindex"]],["bool"]]],[11,"le","","",7,[[["self"],["edgeindex"]],["bool"]]],[11,"gt","","",7,[[["self"],["edgeindex"]],["bool"]]],[11,"ge","","",7,[[["self"],["edgeindex"]],["bool"]]],[11,"index","","",7,[[["self"]],["usize"]]],[11,"is_node_index","","",7,[[],["bool"]]],[11,"index","","",8,[[["self"]],["usize"]]],[11,"is_node_index","","",8,[[],["bool"]]],[11,"clone","","",7,[[["self"]],["edgeindex"]]],[11,"clone","","",8,[[["self"]],["nodeindex"]]],[11,"next","daggy::walker","",2,[[["self"],["g"]],["option",["indexpair"]]]],[11,"next","","",14,[[["self"],["g"]],["option",["indexpair"]]]],[11,"next","","",15,[[["self"],["g"]],["option",["indexpair"]]]],[11,"next","","",3,[[["self"],["g"]],["option",["indexpair"]]]],[11,"next","","",16,[[["self"],["g"]],["option",["indexpair"]]]],[11,"next","","",17,[[["self"],["g"]],["option",["indexpair"]]]],[11,"next","","",18,[[["self"],["g"]],["option",["indexpair"]]]],[11,"next","","",19,[[["self"],["g"]],["option",["indexpair"]]]],[11,"next","","",20,[[["self"],["g"]],["option",["indexpair"]]]],[11,"next","","",21,[[["self"],["g"]],["option",["indexpair"]]]],[11,"next","daggy","",11,[[["self"],["dag"]],["option"]]],[11,"next","","",12,[[["self"],["dag"]],["option"]]],[11,"next","daggy::walker","",4,[[["self"]],["option",["indexpair"]]]],[11,"next","","",22,[[["self"]],["option",["edgeindex"]]]],[11,"next","","",23,[[["self"]],["option",["nodeindex"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"next","","",24,[[["self"]],["option"]]],[11,"next","","",25,[[["self"]],["option"]]],[11,"next","daggy","",13,[[["self"]],["option",["edgeindex"]]]],[11,"clone","daggy::walker","",2,[[["self"]],["recursive"]]],[11,"clone","","",14,[[["self"]],["chain"]]],[11,"clone","","",15,[[["self"]],["filter"]]],[11,"clone","","",3,[[["self"]],["peekable"]]],[11,"clone","","",16,[[["self"]],["skipwhile"]]],[11,"clone","","",17,[[["self"]],["takewhile"]]],[11,"clone","","",18,[[["self"]],["skip"]]],[11,"clone","","",19,[[["self"]],["take"]]],[11,"clone","","",20,[[["self"]],["cycle"]]],[11,"clone","","",21,[[["self"]],["inspect"]]],[11,"clone","","",4,[[["self"]],["iter"]]],[11,"clone","","",22,[[["self"]],["iteredges"]]],[11,"clone","","",23,[[["self"]],["iternodes"]]],[11,"clone","","",5,[[["self"]],["iterweights"]]],[11,"clone","","",24,[[["self"]],["iteredgeweights"]]],[11,"clone","","",25,[[["self"]],["iternodeweights"]]],[11,"clone","daggy","",6,[[["self"]],["dag"]]],[11,"clone","","",0,[[["self"]],["wouldcycle"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","daggy::walker","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","daggy","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"index","","",6,[[["self"],["nodeindex"]],["n"]]],[11,"index","","",6,[[["self"],["edgeindex"]],["e"]]],[11,"index_mut","","",6,[[["self"],["nodeindex"]],["n"]]],[11,"index_mut","","",6,[[["self"],["edgeindex"]],["e"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"new","","",7,[[["usize"]],["edgeindex"]]],[11,"index","","",7,[[["self"]],["usize"]]],[11,"end","","An invalid `EdgeIndex` used to denote absence of an edge,…",7,[[],["edgeindex"]]],[11,"new","","",8,[[["usize"]],["nodeindex"]]],[11,"index","","",8,[[["self"]],["usize"]]],[11,"end","","",8,[[],["nodeindex"]]]],"paths":[[3,"WouldCycle"],[8,"Walker"],[3,"Recursive"],[3,"Peekable"],[3,"Iter"],[3,"IterWeights"],[3,"Dag"],[3,"EdgeIndex"],[3,"NodeIndex"],[3,"EdgeWeightsMut"],[3,"NodeWeightsMut"],[3,"Children"],[3,"Parents"],[3,"EdgeIndices"],[3,"Chain"],[3,"Filter"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Cycle"],[3,"Inspect"],[3,"IterEdges"],[3,"IterNodes"],[3,"IterEdgeWeights"],[3,"IterNodeWeights"]]};
searchIndex["deflate"]={"doc":"An implementation an encoder using DEFLATE compression…","items":[[3,"CompressionOptions","deflate","A struct describing the options for a compressor or…",N,N],[12,"max_hash_checks","","The maximum number of checks to make in the hash table for…",0,N],[12,"lazy_if_less_than","","Only lazy match if we have a length less than this value.",0,N],[12,"matching_type","","Whether to use lazy or greedy matching.",0,N],[12,"special","","Force fixed/stored blocks (Not implemented yet). * Default…",0,N],[4,"SpecialOptions","","Enum allowing some special options (not implemented yet)!",N,N],[13,"Normal","","Compress normally.",1,N],[13,"_ForceFixed","","Force fixed huffman tables. (Unimplemented!).",1,N],[13,"_ForceStored","","Force stored (uncompressed) blocks only. (Unimplemented!).",1,N],[4,"Compression","","An enum describing the level of compression to be used by…",N,N],[13,"Fast","","Fast minimal compression (`CompressionOptions::fast()`).",2,N],[13,"Default","","Default level (`CompressionOptions::default()`).",2,N],[13,"Best","","Higher compression level (`CompressionOptions::high()`).",2,N],[4,"MatchingType","","An enum describing whether we use lazy or greedy matching.",N,N],[13,"Greedy","","Use greedy matching: the matching algorithm simply uses a…",3,N],[13,"Lazy","","Use lazy matching: after finding a match, the next input…",3,N],[5,"deflate_bytes_conf","","Compress the given slice of bytes with DEFLATE compression.",N,N],[5,"deflate_bytes","","Compress the given slice of bytes with DEFLATE compression…",N,N],[5,"deflate_bytes_zlib_conf","","Compress the given slice of bytes with DEFLATE…",N,N],[5,"deflate_bytes_zlib","","Compress the given slice of bytes with DEFLATE…",N,N],[11,"high","","Returns compression settings rouhgly corresponding to the…",0,[[],["compressionoptions"]]],[11,"fast","","Returns  a fast set of compression settings",0,[[],["compressionoptions"]]],[11,"huffman_only","","Returns a set of compression settings that makes the…",0,[[],["compressionoptions"]]],[11,"rle","","Returns a set of compression settings that makes the…",0,[[],["compressionoptions"]]],[0,"write","","Encoders implementing a `Write` interface.",N,N],[3,"DeflateEncoder","deflate::write","A DEFLATE encoder/compressor.",N,N],[3,"ZlibEncoder","","A Zlib encoder/compressor.",N,N],[11,"into","deflate","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","deflate::write","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"partial_cmp","deflate","",2,[[["self"],["compression"]],["option",["ordering"]]]],[11,"partial_cmp","","",3,[[["self"],["matchingtype"]],["option",["ordering"]]]],[11,"default","","",2,[[],["compression"]]],[11,"default","","",1,[[],["specialoptions"]]],[11,"default","","Returns the options describing the default compression…",0,[[],["compressionoptions"]]],[11,"eq","","",2,[[["self"],["compression"]],["bool"]]],[11,"eq","","",1,[[["self"],["specialoptions"]],["bool"]]],[11,"eq","","",0,[[["self"],["compressionoptions"]],["bool"]]],[11,"ne","","",0,[[["self"],["compressionoptions"]],["bool"]]],[11,"eq","","",3,[[["self"],["matchingtype"]],["bool"]]],[11,"from","","",0,[[["compression"]],["compressionoptions"]]],[11,"cmp","","",2,[[["self"],["compression"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["matchingtype"]],["ordering"]]],[11,"clone","","",2,[[["self"]],["compression"]]],[11,"clone","","",1,[[["self"]],["specialoptions"]]],[11,"clone","","",0,[[["self"]],["compressionoptions"]]],[11,"clone","","",3,[[["self"]],["matchingtype"]]],[11,"drop","deflate::write","When the encoder is dropped, output the rest of the data.",4,[[["self"]]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",5,[[["self"]]]],[11,"fmt","deflate","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"hash","","",2,N],[11,"hash","","",1,N],[11,"hash","","",0,N],[11,"hash","","",3,N],[11,"write","deflate::write","",4,N],[11,"flush","","Flush the encoder.",4,[[["self"]],["result"]]],[11,"write","","",5,N],[11,"flush","","Flush the encoder.",5,[[["self"]],["result"]]],[11,"new","","Creates a new encoder using the provided compression…",4,[[["w"],["o"]],["deflateencoder"]]],[11,"finish","","Encode all pending data to the contained writer, consume…",4,[[["self"]],["result"]]],[11,"reset","","Resets the encoder (except the compression options),…",4,[[["self"],["w"]],["result"]]],[11,"new","","Create a new `ZlibEncoder` using the provided compression…",5,[[["w"],["o"]],["zlibencoder"]]],[11,"finish","","Encode all pending data to the contained writer, consume…",5,[[["self"]],["result"]]],[11,"reset","","Resets the encoder (except the compression options),…",5,[[["self"],["w"]],["result"]]],[11,"checksum","","Return the adler32 checksum of the currently consumed data.",5,[[["self"]],["u32"]]]],"paths":[[3,"CompressionOptions"],[4,"SpecialOptions"],[4,"Compression"],[4,"MatchingType"],[3,"DeflateEncoder"],[3,"ZlibEncoder"]]};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","items":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"left_or","","Return left value or given value",0,[[["self"],["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[["self"]],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["self"],["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["self"],["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[["self"]],["r"]]],[11,"right_or_else","","Returns left value or computes it from a closure",0,[[["self"],["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",N,N],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,N],[11,"from","","",0,[[["result"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"deref_mut","","",0,N],[11,"hash","","",0,N],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,N],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,N],[11,"into","","",0,[[["self"]],["result"]]]],"paths":[[4,"Either"]]};
searchIndex["find_folder"]={"doc":"","items":[[3,"SearchFolder","find_folder","A search defined as a starting path and a route to take.",N,N],[12,"start","","The starting path of the search.",0,N],[12,"direction","","The route to take while searching.",0,N],[4,"Search","","The direction in which `find_folder` should search for the…",N,N],[13,"Parents","","Search recursively through parent directories with the…",1,N],[13,"Kids","","Search recursively through children directories with the…",1,N],[13,"ParentsThenKids","","Search parents and then kids (same as `Both`).",1,N],[13,"KidsThenParents","","Search kids and then parents.",1,N],[4,"Error","","If the search was unsuccessful.",N,N],[13,"IO","","Some std io Error occurred.",2,N],[13,"NotFound","","The directory requested was not found.",2,N],[5,"check_kids","","Check the contents of this folder and children folders.",N,[[["u8"],["str"],["path"]],["result",["pathbuf","error"]]]],[5,"check_parents","","Check the given path and `depth` number of parent…",N,[[["u8"],["str"],["path"]],["result",["pathbuf","error"]]]],[5,"check_dir","","Check the given directory for a folder with the matching…",N,[[["str"],["path"]],["result",["pathbuf","error"]]]],[6,"KidsDepth","","Depth of recursion through kids.",N,N],[6,"ParentsDepth","","Depth of recursion through parents.",N,N],[11,"for_folder","","An easy API method for finding a folder with a given name.…",1,[[["self"],["str"]],["result",["pathbuf","error"]]]],[11,"of","","Use this to search in a specific folder.",1,[[["self"],["pathbuf"]],["searchfolder"]]],[11,"for_folder","","Search for a folder with the given name.",0,[[["self"],["str"]],["result",["pathbuf","error"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"eq","","",1,[[["self"],["search"]],["bool"]]],[11,"ne","","",1,[[["self"],["search"]],["bool"]]],[11,"from","","",2,[[["error"]],["error"]]],[11,"clone","","",1,[[["self"]],["search"]]],[11,"clone","","",0,[[["self"]],["searchfolder"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]]],"paths":[[3,"SearchFolder"],[4,"Search"],[4,"Error"]]};
searchIndex["fixedbitset"]={"doc":"`FixedBitSet` is a simple fixed size set of bits.","items":[[3,"FixedBitSet","fixedbitset","`FixedBitSet` is a simple fixed size set of bits that each…",N,N],[3,"Difference","","An iterator producing elements in the difference of two…",N,N],[3,"Intersection","","An iterator producing elements in the intersection of two…",N,N],[3,"Union","","An iterator producing elements in the union of two sets.",N,N],[3,"Ones","","An  iterator producing the indices of the set bit in a set.",N,N],[8,"IndexRange","","IndexRange is implemented by Rust's built-in range types,…",N,N],[11,"start","","Start index (inclusive)",0,[[["self"]],["option"]]],[11,"end","","End index (exclusive)",0,[[["self"]],["option"]]],[11,"with_capacity","","Create a new FixedBitSet with a specific number of bits,…",1,[[["usize"]],["self"]]],[11,"grow","","Grow capacity to bits, all new bits initialized to zero",1,[[["self"],["usize"]]]],[11,"len","","Return the length of the `FixedBitSet` in bits.",1,[[["self"]],["usize"]]],[11,"contains","","Return true if the bit is enabled in the FixedBitSet,…",1,[[["self"],["usize"]],["bool"]]],[11,"clear","","Clear all bits.",1,[[["self"]]]],[11,"insert","","Enable `bit`.",1,[[["self"],["usize"]]]],[11,"put","","Enable `bit`, and return its previous value.",1,[[["self"],["usize"]],["bool"]]],[11,"set","","Panics if bit is out of bounds.",1,[[["self"],["usize"],["bool"]]]],[11,"copy_bit","","Copies boolean value from specified bit to the specified…",1,[[["self"],["usize"],["usize"]]]],[11,"count_ones","","Count the number of set bits in the given bit range.",1,[[["self"],["t"]],["usize"]]],[11,"set_range","","Sets every bit in the given range to the given state…",1,[[["self"],["t"],["bool"]]]],[11,"insert_range","","Enables every bit in the given range.",1,[[["self"],["t"]]]],[11,"as_slice","","View the bitset as a slice of `u32` blocks",1,N],[11,"as_mut_slice","","View the bitset as a mutable slice of `u32` blocks.…",1,N],[11,"ones","","Iterates over all enabled bits.",1,[[["self"]],["ones"]]],[11,"intersection","","Returns a lazy iterator over the intersection of two…",1,[[["self"],["fixedbitset"]],["intersection"]]],[11,"union","","Returns a lazy iterator over the union of two…",1,[[["self"],["fixedbitset"]],["union"]]],[11,"difference","","Returns a lazy iterator over the difference of two…",1,[[["self"],["fixedbitset"]],["difference"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"partial_cmp","","",1,[[["self"],["fixedbitset"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"le","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"gt","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"ge","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"default","","",1,[[],["fixedbitset"]]],[11,"eq","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"ne","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"cmp","","",1,[[["self"],["fixedbitset"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"index","","",1,[[["self"],["usize"]],["bool"]]],[11,"hash","","",1,N],[11,"from_iter","","",1,[[["i"]],["self"]]],[11,"start","","Start index (inclusive)",0,[[["self"]],["option"]]],[11,"end","","End index (exclusive)",0,[[["self"]],["option"]]]],"paths":[[8,"IndexRange"],[3,"FixedBitSet"],[3,"Difference"],[3,"Intersection"],[3,"Union"],[3,"Ones"]]};
searchIndex["float"]={"doc":"Traits for generic floats in game programming","items":[[8,"Float","float","Convenience trait for floats.",N,N],[8,"Min","","Minimum value.",N,N],[10,"min","","Returns the minimum value of self or other.",0,[[["self"],["self"]],["self"]]],[8,"Max","","Maximum value.",N,N],[10,"max","","Returns the maximum value of self or other.",1,[[["self"],["self"]],["self"]]],[8,"Signum","","The sign of the number.",N,N],[10,"signum","","Returns number representing the sign of self",2,[[["self"]],["self"]]],[8,"Powf","","Floating number power.",N,N],[10,"powf","","Returns floating power of the number.",3,[[["self"],["self"]],["self"]]],[8,"Radians","","Useful constants for radians.",N,N],[10,"_90","","Returns radians corresponding to 90 degrees.",4,[[],["self"]]],[10,"_180","","Returns radians corresponding to 180 degrees.",4,[[],["self"]]],[10,"_360","","Returns radians corresponding to 360 degrees.",4,[[],["self"]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to…",4,[[["self"]],["self"]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to…",4,[[["self"]],["self"]]],[8,"One","","Number 1.",N,N],[10,"one","","Returns 1.",5,[[],["self"]]],[8,"Zero","","Number 0.",N,N],[10,"zero","","Returns 0.",6,[[],["self"]]],[8,"Sqrt","","Square root.",N,N],[10,"sqrt","","Returns square root.",7,[[["self"]],["self"]]],[8,"Trig","","Basic trigonometry functions",N,N],[10,"sin","","Returns sine of self.",8,[[["self"]],["self"]]],[10,"cos","","Returns cosine of self.",8,[[["self"]],["self"]]],[10,"tan","","Returns tangent of self.",8,[[["self"]],["self"]]],[10,"asin","","Returns inverse sine of self.",8,[[["self"]],["self"]]],[10,"acos","","Returns inverse cosine of self.",8,[[["self"]],["self"]]],[10,"atan","","Returns inverse tangent of self.",8,[[["self"]],["self"]]],[10,"atan2","","Returns the four quadrant arctangent of self (y) and other…",8,[[["self"],["self"]],["self"]]],[10,"sinh","","Returns hyperbolic sine of self.",8,[[["self"]],["self"]]],[10,"cosh","","Returns hyperbolic cosine of self.",8,[[["self"]],["self"]]],[10,"tanh","","Returns hyperbolic tangent of self.",8,[[["self"]],["self"]]],[10,"asinh","","Returns inverse hyperbolic sine of self.",8,[[["self"]],["self"]]],[10,"acosh","","Returns inverse hyperbolic cosine of self.",8,[[["self"]],["self"]]],[10,"atanh","","Returns inverse hyperbolic tangent of self.",8,[[["self"]],["self"]]],[8,"Cast","","Casts into another type.",N,N],[10,"cast","","Casts into other type.",9,[[["self"]],["t"]]],[8,"FromPrimitive","","Trait for converting from different numeric types",N,N],[10,"from_f64","","from a f64",10,[[["f64"]],["self"]]],[10,"from_f32","","from a f32",10,[[["f32"]],["self"]]],[10,"from_isize","","from a isze",10,[[["isize"]],["self"]]],[10,"from_u32","","from a u32",10,[[["u32"]],["self"]]],[10,"from_i32","","from a i32",10,[[["i32"]],["self"]]]],"paths":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Powf"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]};
searchIndex["fnv"]={"doc":"An implementation of the [Fowler–Noll–Vo hash…","items":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",N,N],[6,"FnvBuildHasher","","A builder for default FNV hashers.",N,N],[6,"FnvHashMap","","A `HashMap` using a default FNV hasher.",N,N],[6,"FnvHashSet","","A `HashSet` using a default FNV hasher.",N,N],[11,"with_key","","Create an FNV hasher starting with a state corresponding…",0,[[["u64"]],["fnvhasher"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["fnvhasher"]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",0,N]],"paths":[[3,"FnvHasher"]]};
searchIndex["foreign_types"]={"doc":"A framework for Rust wrappers over C APIs.","items":[[3,"Opaque","foreign_types","An opaque type used to define `ForeignTypeRef` types.",N,N],[8,"ForeignType","","A type implemented by wrappers over foreign types.",N,N],[16,"CType","","The raw C type.",0,N],[16,"Ref","","The type representing a reference to this type.",0,N],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,N],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,N],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed…",N,N],[16,"CType","","The raw C type.",1,N],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",1,N],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw…",1,N],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,N],[14,"foreign_type","","A macro to easily define wrappers for foreign types.",N,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]]],"paths":[[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]};
searchIndex["foreign_types_shared"]={"doc":"Internal crate used by foreign-types","items":[[3,"Opaque","foreign_types_shared","An opaque type used to define `ForeignTypeRef` types.",N,N],[8,"ForeignType","","A type implemented by wrappers over foreign types.",N,N],[16,"CType","","The raw C type.",0,N],[16,"Ref","","The type representing a reference to this type.",0,N],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,N],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,N],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed…",N,N],[16,"CType","","The raw C type.",1,N],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",1,N],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw…",1,N],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]]],"paths":[[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]};
searchIndex["gif"]={"doc":"GIF en- and decoding library Build Status","items":[[3,"Frame","gif","A GIF frame",N,N],[12,"delay","","Frame delay in units of 10 ms.",0,N],[12,"dispose","","Disposal method.",0,N],[12,"transparent","","Transparent index (if available).",0,N],[12,"needs_user_input","","True if the frame needs user input to be displayed.",0,N],[12,"top","","Offset from the top border of the canvas.",0,N],[12,"left","","Offset from the left border of the canvas.",0,N],[12,"width","","Width of the frame.",0,N],[12,"height","","Height of the frame.",0,N],[12,"interlaced","","True if the image is interlaced.",0,N],[12,"palette","","Frame local color palette if available.",0,N],[12,"buffer","","Buffer containing the image data. Only indices unless…",0,N],[3,"StreamingDecoder","","GIF decoder which supports streaming",N,N],[3,"MemoryLimit","","Memory limit in bytes. `MemoryLimit::Some(0)` means that…",N,N],[12,"0","","",1,N],[3,"Reader","","GIF decoder",N,N],[3,"Decoder","","GIF decoder",N,N],[3,"Encoder","","GIF encoder.",N,N],[4,"Block","","Known GIF block types",N,N],[13,"Image","","Image block.",2,N],[13,"Extension","","Extension block.",2,N],[13,"Trailer","","Image trailer.",2,N],[4,"Extension","","Known GIF extensions",N,N],[13,"Text","","Text extension.",3,N],[13,"Control","","Control extension.",3,N],[13,"Comment","","Comment extension.",3,N],[13,"Application","","Application extension.",3,N],[4,"DisposalMethod","","Disposal method",N,N],[13,"Any","","StreamingDecoder is not required to take any action.",4,N],[13,"Keep","","Do not dispose.",4,N],[13,"Background","","Restore to background color.",4,N],[13,"Previous","","Restore to previous.",4,N],[4,"Decoded","","Indicates whether a certain object has been decoded",N,N],[13,"Nothing","","Decoded nothing.",5,N],[13,"GlobalPalette","","Global palette.",5,N],[13,"BackgroundColor","","Index of the background color in the global palette.",5,N],[13,"Trailer","","Decoded the image trailer.",5,N],[13,"BlockStart","","The start of a block.",5,N],[13,"SubBlockFinished","","Decoded a sub-block. More sub-block are available.",5,N],[13,"BlockFinished","","Decoded the last (or only) sub-block of a block.",5,N],[13,"Frame","","Decoded all information of the next frame. The returned…",5,N],[13,"Data","","Decoded some data of the current frame.",5,N],[13,"DataEnd","","No more data available the current frame.",5,N],[4,"DecodingError","","Decoding error.",N,N],[13,"Format","","Returned if the image is found to be malformed.",6,N],[13,"Internal","","Internal (logic) error.",6,N],[13,"Io","","Wraps `std::io::Error`.",6,N],[4,"ColorOutput","","Output mode for the image data",N,N],[13,"RGBA","","The decoder expands the image data to 32bit RGBA. This…",7,N],[13,"Indexed","","The decoder returns the raw indexed data.",7,N],[4,"Extensions","","Configures how extensions should be handled",N,N],[13,"Save","","Saves all extention data",8,N],[13,"Skip","","Skips the data of unknown extensions and extracts the data…",8,N],[4,"ExtensionData","","Extension data.",N,N],[13,"Control","","Control extension. Use `ExtensionData::new_control_ext` to…",9,N],[12,"flags","gif::ExtensionData","Flags.",9,N],[12,"delay","","Frame delay.",9,N],[12,"trns","","Transparent index.",9,N],[13,"Repetitions","gif","Sets the number of repetitions",9,N],[4,"Repeat","","Number of repetitions",N,N],[13,"Finite","","Finite number of repetitions",10,N],[13,"Infinite","","Infinite number of repetitions",10,N],[11,"from_u8","","Converts `u8` to `Option<Self>`",4,[[["u8"]],["option",["disposalmethod"]]]],[11,"from_u8","","Converts `u8` to `Option<Self>`",2,[[["u8"]],["option",["block"]]]],[11,"from_u8","","Converts `u8` to `Option<Self>`",3,[[["u8"]],["option",["extension"]]]],[11,"from_rgba","","Creates a frame from pixels in RGBA format. Note: This…",0,N],[11,"from_rgba_speed","","Creates a frame from pixels in RGBA format. `speed` is a…",0,N],[11,"from_palette_pixels","","Creates a frame from a palette and indexed pixels.",0,N],[11,"from_indexed_pixels","","Creates a frame from indexed pixels in the global palette.",0,N],[11,"from_rgb","","Creates a frame from pixels in RGB format. Note: This…",0,N],[11,"from_rgb_speed","","Creates a frame from pixels in RGB format. `speed` is a…",0,N],[11,"new","","Creates a new streaming decoder",11,[[],["streamingdecoder"]]],[11,"update","","Updates the internal state of the decoder. ",11,N],[11,"last_ext","","Returns the data of the last extension that has been…",11,N],[11,"current_frame_mut","","Current frame info as a mutable ref.",11,[[["self"]],["frame"]]],[11,"current_frame","","Current frame info as a ref.",11,[[["self"]],["frame"]]],[11,"width","","Width of the image",11,[[["self"]],["u16"]]],[11,"height","","Height of the image",11,[[["self"]],["u16"]]],[11,"new","","Creates a new decoder builder",12,[[["r"]],["decoder"]]],[11,"read_info","","Reads the logical screen descriptor including the global…",12,[[["self"]],["result",["reader","decodingerror"]]]],[11,"next_frame_info","","Returns the next frame info",13,[[["self"]],["result",["option","decodingerror"]]]],[11,"read_next_frame","","Reads the next frame from the image.",13,[[["self"]],["result",["option","decodingerror"]]]],[11,"read_into_buffer","","Reads the data of the current frame into a pre-allocated…",13,N],[11,"fill_buffer","","Reads data of the current frame into a pre-allocated…",13,N],[11,"buffer_size","","Output buffer size",13,[[["self"]],["usize"]]],[11,"line_length","","Line length of the current frame",13,[[["self"]],["usize"]]],[11,"palette","","Returns the color palette relevant for the current (next)…",13,[[["self"]],["result",["decodingerror"]]]],[11,"global_palette","","The global color palette",13,[[["self"]],["option"]]],[11,"width","","Width of the image",13,[[["self"]],["u16"]]],[11,"height","","Height of the image",13,[[["self"]],["u16"]]],[11,"bg_color","","Index of the background color in the global palette",13,[[["self"]],["option",["usize"]]]],[11,"new_control_ext","","Constructor for control extension data.",9,[[["u16"],["disposalmethod"],["bool"],["option",["u8"]]],["extensiondata"]]],[11,"new","","Creates a new encoder.",14,N],[11,"write_global_palette","","Writes the global color palette.",14,N],[11,"write_frame","","Writes a frame to the image.",14,[[["self"],["frame"]],["result"]]],[11,"write_extension","","Writes an extension to the image.",14,[[["self"],["extensiondata"]],["result"]]],[11,"write_raw_extension","","Writes a raw extension to the image.",14,N],[8,"SetParameter","","Implemented for objects that have parameters.",N,N],[11,"set","","Sets `value` as a parameter of `self`.",15,N],[8,"Parameter","","Configuration parameter trait.",N,N],[16,"Result","","Result type of `set_param`.",16,N],[10,"set_param","","Sets `self` as a parameter of `Object`.",16,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"set_param","","",8,[[["self"],["streamingdecoder"]]]],[11,"set_param","","",7,[[["self"],["decoder"]]]],[11,"set_param","","",1,[[["self"],["decoder"]]]],[11,"set_param","","",10,N],[11,"default","","",0,[[],["frame"]]],[11,"eq","","",4,[[["self"],["disposalmethod"]],["bool"]]],[11,"eq","","",2,[[["self"],["block"]],["bool"]]],[11,"eq","","",3,[[["self"],["extension"]],["bool"]]],[11,"eq","","",8,[[["self"],["extensions"]],["bool"]]],[11,"eq","","",7,[[["self"],["coloroutput"]],["bool"]]],[11,"from","","",6,[[["error"]],["self"]]],[11,"clone","","",4,[[["self"]],["disposalmethod"]]],[11,"clone","","",2,[[["self"]],["block"]]],[11,"clone","","",3,[[["self"]],["extension"]]],[11,"clone","","",0,[[["self"]],["frame"]]],[11,"drop","","",14,[[["self"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"cause","","",6,[[["self"]],["option",["error"]]]],[11,"set","","Sets `value` as a parameter of `self`.",15,N]],"paths":[[3,"Frame"],[3,"MemoryLimit"],[4,"Block"],[4,"Extension"],[4,"DisposalMethod"],[4,"Decoded"],[4,"DecodingError"],[4,"ColorOutput"],[4,"Extensions"],[4,"ExtensionData"],[4,"Repeat"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[8,"SetParameter"],[8,"Parameter"]]};
searchIndex["gleam"]={"doc":"","items":[[0,"gl","gleam","",N,N],[3,"FnPtr","gleam::gl","",N,N],[3,"GlFfi","","",N,N],[12,"Accum","","",0,N],[12,"ActiveTexture","","Fallbacks: ActiveTextureARB",0,N],[12,"AlphaFunc","","",0,N],[12,"AreTexturesResident","","",0,N],[12,"ArrayElement","","Fallbacks: ArrayElementEXT",0,N],[12,"AttachShader","","Fallbacks: AttachObjectARB",0,N],[12,"Begin","","",0,N],[12,"BeginConditionalRender","","Fallbacks: BeginConditionalRenderNV",0,N],[12,"BeginQuery","","Fallbacks: BeginQueryARB",0,N],[12,"BeginTransformFeedback","","Fallbacks: BeginTransformFeedbackEXT,…",0,N],[12,"BindAttribLocation","","Fallbacks: BindAttribLocationARB",0,N],[12,"BindBuffer","","Fallbacks: BindBufferARB",0,N],[12,"BindBufferBase","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV",0,N],[12,"BindBufferRange","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV",0,N],[12,"BindFragDataLocation","","Fallbacks: BindFragDataLocationEXT",0,N],[12,"BindFragDataLocationIndexed","","Fallbacks: BindFragDataLocationIndexedEXT",0,N],[12,"BindFramebuffer","","",0,N],[12,"BindRenderbuffer","","",0,N],[12,"BindSampler","","",0,N],[12,"BindTexture","","Fallbacks: BindTextureEXT",0,N],[12,"BindVertexArray","","Fallbacks: BindVertexArrayOES",0,N],[12,"Bitmap","","",0,N],[12,"BlendBarrierKHR","","",0,N],[12,"BlendColor","","Fallbacks: BlendColorEXT",0,N],[12,"BlendEquation","","Fallbacks: BlendEquationEXT",0,N],[12,"BlendEquationSeparate","","Fallbacks: BlendEquationSeparateEXT",0,N],[12,"BlendFunc","","",0,N],[12,"BlendFuncSeparate","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR",0,N],[12,"BlitFramebuffer","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV",0,N],[12,"BufferData","","Fallbacks: BufferDataARB",0,N],[12,"BufferSubData","","Fallbacks: BufferSubDataARB",0,N],[12,"CallList","","",0,N],[12,"CallLists","","",0,N],[12,"CheckFramebufferStatus","","Fallbacks: CheckFramebufferStatusEXT",0,N],[12,"ClampColor","","Fallbacks: ClampColorARB",0,N],[12,"Clear","","",0,N],[12,"ClearAccum","","",0,N],[12,"ClearBufferfi","","",0,N],[12,"ClearBufferfv","","",0,N],[12,"ClearBufferiv","","",0,N],[12,"ClearBufferuiv","","",0,N],[12,"ClearColor","","",0,N],[12,"ClearDepth","","",0,N],[12,"ClearIndex","","",0,N],[12,"ClearStencil","","",0,N],[12,"ClientActiveTexture","","Fallbacks: ClientActiveTextureARB",0,N],[12,"ClientWaitSync","","Fallbacks: ClientWaitSyncAPPLE",0,N],[12,"ClipPlane","","",0,N],[12,"Color3b","","",0,N],[12,"Color3bv","","",0,N],[12,"Color3d","","",0,N],[12,"Color3dv","","",0,N],[12,"Color3f","","",0,N],[12,"Color3fv","","",0,N],[12,"Color3i","","",0,N],[12,"Color3iv","","",0,N],[12,"Color3s","","",0,N],[12,"Color3sv","","",0,N],[12,"Color3ub","","",0,N],[12,"Color3ubv","","",0,N],[12,"Color3ui","","",0,N],[12,"Color3uiv","","",0,N],[12,"Color3us","","",0,N],[12,"Color3usv","","",0,N],[12,"Color4b","","",0,N],[12,"Color4bv","","",0,N],[12,"Color4d","","",0,N],[12,"Color4dv","","",0,N],[12,"Color4f","","",0,N],[12,"Color4fv","","",0,N],[12,"Color4i","","",0,N],[12,"Color4iv","","",0,N],[12,"Color4s","","",0,N],[12,"Color4sv","","",0,N],[12,"Color4ub","","",0,N],[12,"Color4ubv","","",0,N],[12,"Color4ui","","",0,N],[12,"Color4uiv","","",0,N],[12,"Color4us","","",0,N],[12,"Color4usv","","",0,N],[12,"ColorMask","","",0,N],[12,"ColorMaski","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, ColorMaskiOES",0,N],[12,"ColorMaterial","","",0,N],[12,"ColorP3ui","","",0,N],[12,"ColorP3uiv","","",0,N],[12,"ColorP4ui","","",0,N],[12,"ColorP4uiv","","",0,N],[12,"ColorPointer","","",0,N],[12,"CompileShader","","Fallbacks: CompileShaderARB",0,N],[12,"CompressedTexImage1D","","Fallbacks: CompressedTexImage1DARB",0,N],[12,"CompressedTexImage2D","","Fallbacks: CompressedTexImage2DARB",0,N],[12,"CompressedTexImage3D","","Fallbacks: CompressedTexImage3DARB",0,N],[12,"CompressedTexSubImage1D","","Fallbacks: CompressedTexSubImage1DARB",0,N],[12,"CompressedTexSubImage2D","","Fallbacks: CompressedTexSubImage2DARB",0,N],[12,"CompressedTexSubImage3D","","Fallbacks: CompressedTexSubImage3DARB",0,N],[12,"CopyBufferSubData","","Fallbacks: CopyBufferSubDataNV",0,N],[12,"CopyImageSubData","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES",0,N],[12,"CopyPixels","","",0,N],[12,"CopyTexImage1D","","Fallbacks: CopyTexImage1DEXT",0,N],[12,"CopyTexImage2D","","Fallbacks: CopyTexImage2DEXT",0,N],[12,"CopyTexSubImage1D","","Fallbacks: CopyTexSubImage1DEXT",0,N],[12,"CopyTexSubImage2D","","Fallbacks: CopyTexSubImage2DEXT",0,N],[12,"CopyTexSubImage3D","","Fallbacks: CopyTexSubImage3DEXT",0,N],[12,"CreateProgram","","Fallbacks: CreateProgramObjectARB",0,N],[12,"CreateShader","","Fallbacks: CreateShaderObjectARB",0,N],[12,"CullFace","","",0,N],[12,"DebugMessageCallback","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR",0,N],[12,"DebugMessageCallbackKHR","","",0,N],[12,"DebugMessageControl","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR",0,N],[12,"DebugMessageControlKHR","","",0,N],[12,"DebugMessageInsert","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR",0,N],[12,"DebugMessageInsertKHR","","",0,N],[12,"DeleteBuffers","","Fallbacks: DeleteBuffersARB",0,N],[12,"DeleteFencesAPPLE","","",0,N],[12,"DeleteFramebuffers","","Fallbacks: DeleteFramebuffersEXT",0,N],[12,"DeleteLists","","",0,N],[12,"DeleteProgram","","",0,N],[12,"DeleteQueries","","Fallbacks: DeleteQueriesARB",0,N],[12,"DeleteRenderbuffers","","Fallbacks: DeleteRenderbuffersEXT",0,N],[12,"DeleteSamplers","","",0,N],[12,"DeleteShader","","",0,N],[12,"DeleteSync","","Fallbacks: DeleteSyncAPPLE",0,N],[12,"DeleteTextures","","",0,N],[12,"DeleteVertexArrays","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES",0,N],[12,"DepthFunc","","",0,N],[12,"DepthMask","","",0,N],[12,"DepthRange","","",0,N],[12,"DetachShader","","Fallbacks: DetachObjectARB",0,N],[12,"Disable","","",0,N],[12,"DisableClientState","","",0,N],[12,"DisableVertexAttribArray","","Fallbacks: DisableVertexAttribArrayARB",0,N],[12,"Disablei","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV,…",0,N],[12,"DrawArrays","","Fallbacks: DrawArraysEXT",0,N],[12,"DrawArraysInstanced","","Fallbacks: DrawArraysInstancedANGLE,…",0,N],[12,"DrawBuffer","","",0,N],[12,"DrawBuffers","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT",0,N],[12,"DrawElements","","",0,N],[12,"DrawElementsBaseVertex","","Fallbacks: DrawElementsBaseVertexEXT,…",0,N],[12,"DrawElementsInstanced","","Fallbacks: DrawElementsInstancedANGLE,…",0,N],[12,"DrawElementsInstancedBaseVertex","","Fallbacks: DrawElementsInstancedBaseVertexEXT,…",0,N],[12,"DrawPixels","","",0,N],[12,"DrawRangeElements","","Fallbacks: DrawRangeElementsEXT",0,N],[12,"DrawRangeElementsBaseVertex","","Fallbacks: DrawRangeElementsBaseVertexEXT,…",0,N],[12,"EdgeFlag","","",0,N],[12,"EdgeFlagPointer","","",0,N],[12,"EdgeFlagv","","",0,N],[12,"Enable","","",0,N],[12,"EnableClientState","","",0,N],[12,"EnableVertexAttribArray","","Fallbacks: EnableVertexAttribArrayARB",0,N],[12,"Enablei","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV,…",0,N],[12,"End","","",0,N],[12,"EndConditionalRender","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX",0,N],[12,"EndList","","",0,N],[12,"EndQuery","","Fallbacks: EndQueryARB",0,N],[12,"EndTransformFeedback","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV",0,N],[12,"EvalCoord1d","","",0,N],[12,"EvalCoord1dv","","",0,N],[12,"EvalCoord1f","","",0,N],[12,"EvalCoord1fv","","",0,N],[12,"EvalCoord2d","","",0,N],[12,"EvalCoord2dv","","",0,N],[12,"EvalCoord2f","","",0,N],[12,"EvalCoord2fv","","",0,N],[12,"EvalMesh1","","",0,N],[12,"EvalMesh2","","",0,N],[12,"EvalPoint1","","",0,N],[12,"EvalPoint2","","",0,N],[12,"FeedbackBuffer","","",0,N],[12,"FenceSync","","Fallbacks: FenceSyncAPPLE",0,N],[12,"Finish","","",0,N],[12,"FinishFenceAPPLE","","",0,N],[12,"FinishObjectAPPLE","","",0,N],[12,"Flush","","",0,N],[12,"FlushMappedBufferRange","","Fallbacks: FlushMappedBufferRangeAPPLE,…",0,N],[12,"FogCoordPointer","","Fallbacks: FogCoordPointerEXT",0,N],[12,"FogCoordd","","Fallbacks: FogCoorddEXT",0,N],[12,"FogCoorddv","","Fallbacks: FogCoorddvEXT",0,N],[12,"FogCoordf","","Fallbacks: FogCoordfEXT",0,N],[12,"FogCoordfv","","Fallbacks: FogCoordfvEXT",0,N],[12,"Fogf","","",0,N],[12,"Fogfv","","",0,N],[12,"Fogi","","",0,N],[12,"Fogiv","","",0,N],[12,"FramebufferRenderbuffer","","Fallbacks: FramebufferRenderbufferEXT",0,N],[12,"FramebufferTexture","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT,…",0,N],[12,"FramebufferTexture1D","","Fallbacks: FramebufferTexture1DEXT",0,N],[12,"FramebufferTexture2D","","Fallbacks: FramebufferTexture2DEXT",0,N],[12,"FramebufferTexture3D","","Fallbacks: FramebufferTexture3DEXT",0,N],[12,"FramebufferTextureLayer","","Fallbacks: FramebufferTextureLayerARB,…",0,N],[12,"FrontFace","","",0,N],[12,"Frustum","","",0,N],[12,"GenBuffers","","Fallbacks: GenBuffersARB",0,N],[12,"GenFencesAPPLE","","",0,N],[12,"GenFramebuffers","","Fallbacks: GenFramebuffersEXT",0,N],[12,"GenLists","","",0,N],[12,"GenQueries","","Fallbacks: GenQueriesARB",0,N],[12,"GenRenderbuffers","","Fallbacks: GenRenderbuffersEXT",0,N],[12,"GenSamplers","","",0,N],[12,"GenTextures","","",0,N],[12,"GenVertexArrays","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES",0,N],[12,"GenerateMipmap","","Fallbacks: GenerateMipmapEXT",0,N],[12,"GetActiveAttrib","","Fallbacks: GetActiveAttribARB",0,N],[12,"GetActiveUniform","","Fallbacks: GetActiveUniformARB",0,N],[12,"GetActiveUniformBlockName","","",0,N],[12,"GetActiveUniformBlockiv","","",0,N],[12,"GetActiveUniformName","","",0,N],[12,"GetActiveUniformsiv","","",0,N],[12,"GetAttachedShaders","","",0,N],[12,"GetAttribLocation","","Fallbacks: GetAttribLocationARB",0,N],[12,"GetBooleani_v","","Fallbacks: GetBooleanIndexedvEXT",0,N],[12,"GetBooleanv","","",0,N],[12,"GetBufferParameteri64v","","",0,N],[12,"GetBufferParameteriv","","Fallbacks: GetBufferParameterivARB",0,N],[12,"GetBufferPointerv","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES",0,N],[12,"GetBufferSubData","","Fallbacks: GetBufferSubDataARB",0,N],[12,"GetClipPlane","","",0,N],[12,"GetCompressedTexImage","","Fallbacks: GetCompressedTexImageARB",0,N],[12,"GetDebugMessageLog","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR",0,N],[12,"GetDebugMessageLogKHR","","",0,N],[12,"GetDoublev","","",0,N],[12,"GetError","","",0,N],[12,"GetFloatv","","",0,N],[12,"GetFragDataIndex","","Fallbacks: GetFragDataIndexEXT",0,N],[12,"GetFragDataLocation","","Fallbacks: GetFragDataLocationEXT",0,N],[12,"GetFramebufferAttachmentParameteriv","","Fallbacks: GetFramebufferAttachmentParameterivEXT",0,N],[12,"GetInteger64i_v","","",0,N],[12,"GetInteger64v","","Fallbacks: GetInteger64vAPPLE",0,N],[12,"GetIntegeri_v","","Fallbacks: GetIntegerIndexedvEXT",0,N],[12,"GetIntegerv","","",0,N],[12,"GetLightfv","","",0,N],[12,"GetLightiv","","",0,N],[12,"GetMapdv","","",0,N],[12,"GetMapfv","","",0,N],[12,"GetMapiv","","",0,N],[12,"GetMaterialfv","","",0,N],[12,"GetMaterialiv","","",0,N],[12,"GetMultisamplefv","","Fallbacks: GetMultisamplefvNV",0,N],[12,"GetObjectLabel","","Fallbacks: GetObjectLabelKHR",0,N],[12,"GetObjectLabelKHR","","",0,N],[12,"GetObjectPtrLabel","","Fallbacks: GetObjectPtrLabelKHR",0,N],[12,"GetObjectPtrLabelKHR","","",0,N],[12,"GetPixelMapfv","","",0,N],[12,"GetPixelMapuiv","","",0,N],[12,"GetPixelMapusv","","",0,N],[12,"GetPointerv","","Fallbacks: GetPointervEXT, GetPointervKHR",0,N],[12,"GetPointervKHR","","",0,N],[12,"GetPolygonStipple","","",0,N],[12,"GetProgramBinary","","Fallbacks: GetProgramBinaryOES",0,N],[12,"GetProgramInfoLog","","",0,N],[12,"GetProgramiv","","",0,N],[12,"GetQueryObjecti64v","","Fallbacks: GetQueryObjecti64vEXT",0,N],[12,"GetQueryObjectiv","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT",0,N],[12,"GetQueryObjectui64v","","Fallbacks: GetQueryObjectui64vEXT",0,N],[12,"GetQueryObjectuiv","","Fallbacks: GetQueryObjectuivARB",0,N],[12,"GetQueryiv","","Fallbacks: GetQueryivARB",0,N],[12,"GetRenderbufferParameteriv","","Fallbacks: GetRenderbufferParameterivEXT",0,N],[12,"GetSamplerParameterIiv","","Fallbacks: GetSamplerParameterIivEXT,…",0,N],[12,"GetSamplerParameterIuiv","","Fallbacks: GetSamplerParameterIuivEXT,…",0,N],[12,"GetSamplerParameterfv","","",0,N],[12,"GetSamplerParameteriv","","",0,N],[12,"GetShaderInfoLog","","",0,N],[12,"GetShaderSource","","Fallbacks: GetShaderSourceARB",0,N],[12,"GetShaderiv","","",0,N],[12,"GetString","","",0,N],[12,"GetStringi","","",0,N],[12,"GetSynciv","","Fallbacks: GetSyncivAPPLE",0,N],[12,"GetTexEnvfv","","",0,N],[12,"GetTexEnviv","","",0,N],[12,"GetTexGendv","","",0,N],[12,"GetTexGenfv","","",0,N],[12,"GetTexGeniv","","",0,N],[12,"GetTexImage","","",0,N],[12,"GetTexLevelParameterfv","","",0,N],[12,"GetTexLevelParameteriv","","",0,N],[12,"GetTexParameterIiv","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES",0,N],[12,"GetTexParameterIuiv","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES",0,N],[12,"GetTexParameterPointervAPPLE","","",0,N],[12,"GetTexParameterfv","","",0,N],[12,"GetTexParameteriv","","",0,N],[12,"GetTransformFeedbackVarying","","Fallbacks: GetTransformFeedbackVaryingEXT",0,N],[12,"GetUniformBlockIndex","","",0,N],[12,"GetUniformIndices","","",0,N],[12,"GetUniformLocation","","Fallbacks: GetUniformLocationARB",0,N],[12,"GetUniformfv","","Fallbacks: GetUniformfvARB",0,N],[12,"GetUniformiv","","Fallbacks: GetUniformivARB",0,N],[12,"GetUniformuiv","","Fallbacks: GetUniformuivEXT",0,N],[12,"GetVertexAttribIiv","","Fallbacks: GetVertexAttribIivEXT",0,N],[12,"GetVertexAttribIuiv","","Fallbacks: GetVertexAttribIuivEXT",0,N],[12,"GetVertexAttribPointerv","","Fallbacks: GetVertexAttribPointervARB,…",0,N],[12,"GetVertexAttribdv","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV",0,N],[12,"GetVertexAttribfv","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV",0,N],[12,"GetVertexAttribiv","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV",0,N],[12,"Hint","","",0,N],[12,"IndexMask","","",0,N],[12,"IndexPointer","","",0,N],[12,"Indexd","","",0,N],[12,"Indexdv","","",0,N],[12,"Indexf","","",0,N],[12,"Indexfv","","",0,N],[12,"Indexi","","",0,N],[12,"Indexiv","","",0,N],[12,"Indexs","","",0,N],[12,"Indexsv","","",0,N],[12,"Indexub","","",0,N],[12,"Indexubv","","",0,N],[12,"InitNames","","",0,N],[12,"InsertEventMarkerEXT","","",0,N],[12,"InterleavedArrays","","",0,N],[12,"InvalidateBufferData","","",0,N],[12,"InvalidateBufferSubData","","",0,N],[12,"InvalidateFramebuffer","","",0,N],[12,"InvalidateSubFramebuffer","","",0,N],[12,"InvalidateTexImage","","",0,N],[12,"InvalidateTexSubImage","","",0,N],[12,"IsBuffer","","Fallbacks: IsBufferARB",0,N],[12,"IsEnabled","","",0,N],[12,"IsEnabledi","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT,…",0,N],[12,"IsFenceAPPLE","","",0,N],[12,"IsFramebuffer","","Fallbacks: IsFramebufferEXT",0,N],[12,"IsList","","",0,N],[12,"IsProgram","","",0,N],[12,"IsQuery","","Fallbacks: IsQueryARB",0,N],[12,"IsRenderbuffer","","Fallbacks: IsRenderbufferEXT",0,N],[12,"IsSampler","","",0,N],[12,"IsShader","","",0,N],[12,"IsSync","","Fallbacks: IsSyncAPPLE",0,N],[12,"IsTexture","","",0,N],[12,"IsVertexArray","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES",0,N],[12,"LightModelf","","",0,N],[12,"LightModelfv","","",0,N],[12,"LightModeli","","",0,N],[12,"LightModeliv","","",0,N],[12,"Lightf","","",0,N],[12,"Lightfv","","",0,N],[12,"Lighti","","",0,N],[12,"Lightiv","","",0,N],[12,"LineStipple","","",0,N],[12,"LineWidth","","",0,N],[12,"LinkProgram","","Fallbacks: LinkProgramARB",0,N],[12,"ListBase","","",0,N],[12,"LoadIdentity","","",0,N],[12,"LoadMatrixd","","",0,N],[12,"LoadMatrixf","","",0,N],[12,"LoadName","","",0,N],[12,"LoadTransposeMatrixd","","Fallbacks: LoadTransposeMatrixdARB",0,N],[12,"LoadTransposeMatrixf","","Fallbacks: LoadTransposeMatrixfARB",0,N],[12,"LogicOp","","",0,N],[12,"Map1d","","",0,N],[12,"Map1f","","",0,N],[12,"Map2d","","",0,N],[12,"Map2f","","",0,N],[12,"MapBuffer","","Fallbacks: MapBufferARB, MapBufferOES",0,N],[12,"MapBufferRange","","Fallbacks: MapBufferRangeEXT",0,N],[12,"MapGrid1d","","",0,N],[12,"MapGrid1f","","",0,N],[12,"MapGrid2d","","",0,N],[12,"MapGrid2f","","",0,N],[12,"Materialf","","",0,N],[12,"Materialfv","","",0,N],[12,"Materiali","","",0,N],[12,"Materialiv","","",0,N],[12,"MatrixMode","","",0,N],[12,"MultMatrixd","","",0,N],[12,"MultMatrixf","","",0,N],[12,"MultTransposeMatrixd","","Fallbacks: MultTransposeMatrixdARB",0,N],[12,"MultTransposeMatrixf","","Fallbacks: MultTransposeMatrixfARB",0,N],[12,"MultiDrawArrays","","Fallbacks: MultiDrawArraysEXT",0,N],[12,"MultiDrawElements","","Fallbacks: MultiDrawElementsEXT",0,N],[12,"MultiDrawElementsBaseVertex","","Fallbacks: MultiDrawElementsBaseVertexEXT",0,N],[12,"MultiTexCoord1d","","Fallbacks: MultiTexCoord1dARB",0,N],[12,"MultiTexCoord1dv","","Fallbacks: MultiTexCoord1dvARB",0,N],[12,"MultiTexCoord1f","","Fallbacks: MultiTexCoord1fARB",0,N],[12,"MultiTexCoord1fv","","Fallbacks: MultiTexCoord1fvARB",0,N],[12,"MultiTexCoord1i","","Fallbacks: MultiTexCoord1iARB",0,N],[12,"MultiTexCoord1iv","","Fallbacks: MultiTexCoord1ivARB",0,N],[12,"MultiTexCoord1s","","Fallbacks: MultiTexCoord1sARB",0,N],[12,"MultiTexCoord1sv","","Fallbacks: MultiTexCoord1svARB",0,N],[12,"MultiTexCoord2d","","Fallbacks: MultiTexCoord2dARB",0,N],[12,"MultiTexCoord2dv","","Fallbacks: MultiTexCoord2dvARB",0,N],[12,"MultiTexCoord2f","","Fallbacks: MultiTexCoord2fARB",0,N],[12,"MultiTexCoord2fv","","Fallbacks: MultiTexCoord2fvARB",0,N],[12,"MultiTexCoord2i","","Fallbacks: MultiTexCoord2iARB",0,N],[12,"MultiTexCoord2iv","","Fallbacks: MultiTexCoord2ivARB",0,N],[12,"MultiTexCoord2s","","Fallbacks: MultiTexCoord2sARB",0,N],[12,"MultiTexCoord2sv","","Fallbacks: MultiTexCoord2svARB",0,N],[12,"MultiTexCoord3d","","Fallbacks: MultiTexCoord3dARB",0,N],[12,"MultiTexCoord3dv","","Fallbacks: MultiTexCoord3dvARB",0,N],[12,"MultiTexCoord3f","","Fallbacks: MultiTexCoord3fARB",0,N],[12,"MultiTexCoord3fv","","Fallbacks: MultiTexCoord3fvARB",0,N],[12,"MultiTexCoord3i","","Fallbacks: MultiTexCoord3iARB",0,N],[12,"MultiTexCoord3iv","","Fallbacks: MultiTexCoord3ivARB",0,N],[12,"MultiTexCoord3s","","Fallbacks: MultiTexCoord3sARB",0,N],[12,"MultiTexCoord3sv","","Fallbacks: MultiTexCoord3svARB",0,N],[12,"MultiTexCoord4d","","Fallbacks: MultiTexCoord4dARB",0,N],[12,"MultiTexCoord4dv","","Fallbacks: MultiTexCoord4dvARB",0,N],[12,"MultiTexCoord4f","","Fallbacks: MultiTexCoord4fARB",0,N],[12,"MultiTexCoord4fv","","Fallbacks: MultiTexCoord4fvARB",0,N],[12,"MultiTexCoord4i","","Fallbacks: MultiTexCoord4iARB",0,N],[12,"MultiTexCoord4iv","","Fallbacks: MultiTexCoord4ivARB",0,N],[12,"MultiTexCoord4s","","Fallbacks: MultiTexCoord4sARB",0,N],[12,"MultiTexCoord4sv","","Fallbacks: MultiTexCoord4svARB",0,N],[12,"MultiTexCoordP1ui","","",0,N],[12,"MultiTexCoordP1uiv","","",0,N],[12,"MultiTexCoordP2ui","","",0,N],[12,"MultiTexCoordP2uiv","","",0,N],[12,"MultiTexCoordP3ui","","",0,N],[12,"MultiTexCoordP3uiv","","",0,N],[12,"MultiTexCoordP4ui","","",0,N],[12,"MultiTexCoordP4uiv","","",0,N],[12,"NewList","","",0,N],[12,"Normal3b","","",0,N],[12,"Normal3bv","","",0,N],[12,"Normal3d","","",0,N],[12,"Normal3dv","","",0,N],[12,"Normal3f","","",0,N],[12,"Normal3fv","","",0,N],[12,"Normal3i","","",0,N],[12,"Normal3iv","","",0,N],[12,"Normal3s","","",0,N],[12,"Normal3sv","","",0,N],[12,"NormalP3ui","","",0,N],[12,"NormalP3uiv","","",0,N],[12,"NormalPointer","","",0,N],[12,"ObjectLabel","","Fallbacks: ObjectLabelKHR",0,N],[12,"ObjectLabelKHR","","",0,N],[12,"ObjectPtrLabel","","Fallbacks: ObjectPtrLabelKHR",0,N],[12,"ObjectPtrLabelKHR","","",0,N],[12,"Ortho","","",0,N],[12,"PassThrough","","",0,N],[12,"PixelMapfv","","",0,N],[12,"PixelMapuiv","","",0,N],[12,"PixelMapusv","","",0,N],[12,"PixelStoref","","",0,N],[12,"PixelStorei","","",0,N],[12,"PixelTransferf","","",0,N],[12,"PixelTransferi","","",0,N],[12,"PixelZoom","","",0,N],[12,"PointParameterf","","Fallbacks: PointParameterfARB, PointParameterfEXT,…",0,N],[12,"PointParameterfv","","Fallbacks: PointParameterfvARB, PointParameterfvEXT,…",0,N],[12,"PointParameteri","","Fallbacks: PointParameteriNV",0,N],[12,"PointParameteriv","","Fallbacks: PointParameterivNV",0,N],[12,"PointSize","","",0,N],[12,"PolygonMode","","Fallbacks: PolygonModeNV",0,N],[12,"PolygonOffset","","",0,N],[12,"PolygonStipple","","",0,N],[12,"PopAttrib","","",0,N],[12,"PopClientAttrib","","",0,N],[12,"PopDebugGroup","","Fallbacks: PopDebugGroupKHR",0,N],[12,"PopDebugGroupKHR","","",0,N],[12,"PopGroupMarkerEXT","","",0,N],[12,"PopMatrix","","",0,N],[12,"PopName","","",0,N],[12,"PrimitiveRestartIndex","","",0,N],[12,"PrioritizeTextures","","Fallbacks: PrioritizeTexturesEXT",0,N],[12,"ProgramBinary","","Fallbacks: ProgramBinaryOES",0,N],[12,"ProgramParameteri","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT",0,N],[12,"ProvokingVertex","","Fallbacks: ProvokingVertexEXT",0,N],[12,"PushAttrib","","",0,N],[12,"PushClientAttrib","","",0,N],[12,"PushDebugGroup","","Fallbacks: PushDebugGroupKHR",0,N],[12,"PushDebugGroupKHR","","",0,N],[12,"PushGroupMarkerEXT","","",0,N],[12,"PushMatrix","","",0,N],[12,"PushName","","",0,N],[12,"QueryCounter","","Fallbacks: QueryCounterEXT",0,N],[12,"RasterPos2d","","",0,N],[12,"RasterPos2dv","","",0,N],[12,"RasterPos2f","","",0,N],[12,"RasterPos2fv","","",0,N],[12,"RasterPos2i","","",0,N],[12,"RasterPos2iv","","",0,N],[12,"RasterPos2s","","",0,N],[12,"RasterPos2sv","","",0,N],[12,"RasterPos3d","","",0,N],[12,"RasterPos3dv","","",0,N],[12,"RasterPos3f","","",0,N],[12,"RasterPos3fv","","",0,N],[12,"RasterPos3i","","",0,N],[12,"RasterPos3iv","","",0,N],[12,"RasterPos3s","","",0,N],[12,"RasterPos3sv","","",0,N],[12,"RasterPos4d","","",0,N],[12,"RasterPos4dv","","",0,N],[12,"RasterPos4f","","",0,N],[12,"RasterPos4fv","","",0,N],[12,"RasterPos4i","","",0,N],[12,"RasterPos4iv","","",0,N],[12,"RasterPos4s","","",0,N],[12,"RasterPos4sv","","",0,N],[12,"ReadBuffer","","",0,N],[12,"ReadPixels","","",0,N],[12,"Rectd","","",0,N],[12,"Rectdv","","",0,N],[12,"Rectf","","",0,N],[12,"Rectfv","","",0,N],[12,"Recti","","",0,N],[12,"Rectiv","","",0,N],[12,"Rects","","",0,N],[12,"Rectsv","","",0,N],[12,"RenderMode","","",0,N],[12,"RenderbufferStorage","","Fallbacks: RenderbufferStorageEXT",0,N],[12,"RenderbufferStorageMultisample","","Fallbacks: RenderbufferStorageMultisampleEXT,…",0,N],[12,"Rotated","","",0,N],[12,"Rotatef","","",0,N],[12,"SampleCoverage","","Fallbacks: SampleCoverageARB",0,N],[12,"SampleMaski","","",0,N],[12,"SamplerParameterIiv","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES",0,N],[12,"SamplerParameterIuiv","","Fallbacks: SamplerParameterIuivEXT, SamplerParameterIuivOES",0,N],[12,"SamplerParameterf","","",0,N],[12,"SamplerParameterfv","","",0,N],[12,"SamplerParameteri","","",0,N],[12,"SamplerParameteriv","","",0,N],[12,"Scaled","","",0,N],[12,"Scalef","","",0,N],[12,"Scissor","","",0,N],[12,"SecondaryColor3b","","Fallbacks: SecondaryColor3bEXT",0,N],[12,"SecondaryColor3bv","","Fallbacks: SecondaryColor3bvEXT",0,N],[12,"SecondaryColor3d","","Fallbacks: SecondaryColor3dEXT",0,N],[12,"SecondaryColor3dv","","Fallbacks: SecondaryColor3dvEXT",0,N],[12,"SecondaryColor3f","","Fallbacks: SecondaryColor3fEXT",0,N],[12,"SecondaryColor3fv","","Fallbacks: SecondaryColor3fvEXT",0,N],[12,"SecondaryColor3i","","Fallbacks: SecondaryColor3iEXT",0,N],[12,"SecondaryColor3iv","","Fallbacks: SecondaryColor3ivEXT",0,N],[12,"SecondaryColor3s","","Fallbacks: SecondaryColor3sEXT",0,N],[12,"SecondaryColor3sv","","Fallbacks: SecondaryColor3svEXT",0,N],[12,"SecondaryColor3ub","","Fallbacks: SecondaryColor3ubEXT",0,N],[12,"SecondaryColor3ubv","","Fallbacks: SecondaryColor3ubvEXT",0,N],[12,"SecondaryColor3ui","","Fallbacks: SecondaryColor3uiEXT",0,N],[12,"SecondaryColor3uiv","","Fallbacks: SecondaryColor3uivEXT",0,N],[12,"SecondaryColor3us","","Fallbacks: SecondaryColor3usEXT",0,N],[12,"SecondaryColor3usv","","Fallbacks: SecondaryColor3usvEXT",0,N],[12,"SecondaryColorP3ui","","",0,N],[12,"SecondaryColorP3uiv","","",0,N],[12,"SecondaryColorPointer","","Fallbacks: SecondaryColorPointerEXT",0,N],[12,"SelectBuffer","","",0,N],[12,"SetFenceAPPLE","","",0,N],[12,"ShadeModel","","",0,N],[12,"ShaderSource","","Fallbacks: ShaderSourceARB",0,N],[12,"StencilFunc","","",0,N],[12,"StencilFuncSeparate","","",0,N],[12,"StencilMask","","",0,N],[12,"StencilMaskSeparate","","",0,N],[12,"StencilOp","","",0,N],[12,"StencilOpSeparate","","Fallbacks: StencilOpSeparateATI",0,N],[12,"TestFenceAPPLE","","",0,N],[12,"TestObjectAPPLE","","",0,N],[12,"TexBuffer","","Fallbacks: TexBufferARB, TexBufferEXT, TexBufferOES",0,N],[12,"TexCoord1d","","",0,N],[12,"TexCoord1dv","","",0,N],[12,"TexCoord1f","","",0,N],[12,"TexCoord1fv","","",0,N],[12,"TexCoord1i","","",0,N],[12,"TexCoord1iv","","",0,N],[12,"TexCoord1s","","",0,N],[12,"TexCoord1sv","","",0,N],[12,"TexCoord2d","","",0,N],[12,"TexCoord2dv","","",0,N],[12,"TexCoord2f","","",0,N],[12,"TexCoord2fv","","",0,N],[12,"TexCoord2i","","",0,N],[12,"TexCoord2iv","","",0,N],[12,"TexCoord2s","","",0,N],[12,"TexCoord2sv","","",0,N],[12,"TexCoord3d","","",0,N],[12,"TexCoord3dv","","",0,N],[12,"TexCoord3f","","",0,N],[12,"TexCoord3fv","","",0,N],[12,"TexCoord3i","","",0,N],[12,"TexCoord3iv","","",0,N],[12,"TexCoord3s","","",0,N],[12,"TexCoord3sv","","",0,N],[12,"TexCoord4d","","",0,N],[12,"TexCoord4dv","","",0,N],[12,"TexCoord4f","","",0,N],[12,"TexCoord4fv","","",0,N],[12,"TexCoord4i","","",0,N],[12,"TexCoord4iv","","",0,N],[12,"TexCoord4s","","",0,N],[12,"TexCoord4sv","","",0,N],[12,"TexCoordP1ui","","",0,N],[12,"TexCoordP1uiv","","",0,N],[12,"TexCoordP2ui","","",0,N],[12,"TexCoordP2uiv","","",0,N],[12,"TexCoordP3ui","","",0,N],[12,"TexCoordP3uiv","","",0,N],[12,"TexCoordP4ui","","",0,N],[12,"TexCoordP4uiv","","",0,N],[12,"TexCoordPointer","","",0,N],[12,"TexEnvf","","",0,N],[12,"TexEnvfv","","",0,N],[12,"TexEnvi","","",0,N],[12,"TexEnviv","","",0,N],[12,"TexGend","","",0,N],[12,"TexGendv","","",0,N],[12,"TexGenf","","",0,N],[12,"TexGenfv","","",0,N],[12,"TexGeni","","",0,N],[12,"TexGeniv","","",0,N],[12,"TexImage1D","","",0,N],[12,"TexImage2D","","",0,N],[12,"TexImage2DMultisample","","",0,N],[12,"TexImage3D","","Fallbacks: TexImage3DEXT",0,N],[12,"TexImage3DMultisample","","",0,N],[12,"TexParameterIiv","","Fallbacks: TexParameterIivEXT, TexParameterIivOES",0,N],[12,"TexParameterIuiv","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES",0,N],[12,"TexParameterf","","",0,N],[12,"TexParameterfv","","",0,N],[12,"TexParameteri","","",0,N],[12,"TexParameteriv","","",0,N],[12,"TexStorage1D","","Fallbacks: TexStorage1DEXT",0,N],[12,"TexStorage2D","","Fallbacks: TexStorage2DEXT",0,N],[12,"TexStorage3D","","Fallbacks: TexStorage3DEXT",0,N],[12,"TexSubImage1D","","Fallbacks: TexSubImage1DEXT",0,N],[12,"TexSubImage2D","","Fallbacks: TexSubImage2DEXT",0,N],[12,"TexSubImage3D","","Fallbacks: TexSubImage3DEXT",0,N],[12,"TextureRangeAPPLE","","",0,N],[12,"TransformFeedbackVaryings","","Fallbacks: TransformFeedbackVaryingsEXT",0,N],[12,"Translated","","",0,N],[12,"Translatef","","",0,N],[12,"Uniform1f","","Fallbacks: Uniform1fARB",0,N],[12,"Uniform1fv","","Fallbacks: Uniform1fvARB",0,N],[12,"Uniform1i","","Fallbacks: Uniform1iARB",0,N],[12,"Uniform1iv","","Fallbacks: Uniform1ivARB",0,N],[12,"Uniform1ui","","Fallbacks: Uniform1uiEXT",0,N],[12,"Uniform1uiv","","Fallbacks: Uniform1uivEXT",0,N],[12,"Uniform2f","","Fallbacks: Uniform2fARB",0,N],[12,"Uniform2fv","","Fallbacks: Uniform2fvARB",0,N],[12,"Uniform2i","","Fallbacks: Uniform2iARB",0,N],[12,"Uniform2iv","","Fallbacks: Uniform2ivARB",0,N],[12,"Uniform2ui","","Fallbacks: Uniform2uiEXT",0,N],[12,"Uniform2uiv","","Fallbacks: Uniform2uivEXT",0,N],[12,"Uniform3f","","Fallbacks: Uniform3fARB",0,N],[12,"Uniform3fv","","Fallbacks: Uniform3fvARB",0,N],[12,"Uniform3i","","Fallbacks: Uniform3iARB",0,N],[12,"Uniform3iv","","Fallbacks: Uniform3ivARB",0,N],[12,"Uniform3ui","","Fallbacks: Uniform3uiEXT",0,N],[12,"Uniform3uiv","","Fallbacks: Uniform3uivEXT",0,N],[12,"Uniform4f","","Fallbacks: Uniform4fARB",0,N],[12,"Uniform4fv","","Fallbacks: Uniform4fvARB",0,N],[12,"Uniform4i","","Fallbacks: Uniform4iARB",0,N],[12,"Uniform4iv","","Fallbacks: Uniform4ivARB",0,N],[12,"Uniform4ui","","Fallbacks: Uniform4uiEXT",0,N],[12,"Uniform4uiv","","Fallbacks: Uniform4uivEXT",0,N],[12,"UniformBlockBinding","","",0,N],[12,"UniformMatrix2fv","","Fallbacks: UniformMatrix2fvARB",0,N],[12,"UniformMatrix2x3fv","","Fallbacks: UniformMatrix2x3fvNV",0,N],[12,"UniformMatrix2x4fv","","Fallbacks: UniformMatrix2x4fvNV",0,N],[12,"UniformMatrix3fv","","Fallbacks: UniformMatrix3fvARB",0,N],[12,"UniformMatrix3x2fv","","Fallbacks: UniformMatrix3x2fvNV",0,N],[12,"UniformMatrix3x4fv","","Fallbacks: UniformMatrix3x4fvNV",0,N],[12,"UniformMatrix4fv","","Fallbacks: UniformMatrix4fvARB",0,N],[12,"UniformMatrix4x2fv","","Fallbacks: UniformMatrix4x2fvNV",0,N],[12,"UniformMatrix4x3fv","","Fallbacks: UniformMatrix4x3fvNV",0,N],[12,"UnmapBuffer","","Fallbacks: UnmapBufferARB, UnmapBufferOES",0,N],[12,"UseProgram","","Fallbacks: UseProgramObjectARB",0,N],[12,"ValidateProgram","","Fallbacks: ValidateProgramARB",0,N],[12,"Vertex2d","","",0,N],[12,"Vertex2dv","","",0,N],[12,"Vertex2f","","",0,N],[12,"Vertex2fv","","",0,N],[12,"Vertex2i","","",0,N],[12,"Vertex2iv","","",0,N],[12,"Vertex2s","","",0,N],[12,"Vertex2sv","","",0,N],[12,"Vertex3d","","",0,N],[12,"Vertex3dv","","",0,N],[12,"Vertex3f","","",0,N],[12,"Vertex3fv","","",0,N],[12,"Vertex3i","","",0,N],[12,"Vertex3iv","","",0,N],[12,"Vertex3s","","",0,N],[12,"Vertex3sv","","",0,N],[12,"Vertex4d","","",0,N],[12,"Vertex4dv","","",0,N],[12,"Vertex4f","","",0,N],[12,"Vertex4fv","","",0,N],[12,"Vertex4i","","",0,N],[12,"Vertex4iv","","",0,N],[12,"Vertex4s","","",0,N],[12,"Vertex4sv","","",0,N],[12,"VertexAttrib1d","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV",0,N],[12,"VertexAttrib1dv","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV",0,N],[12,"VertexAttrib1f","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV",0,N],[12,"VertexAttrib1fv","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV",0,N],[12,"VertexAttrib1s","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV",0,N],[12,"VertexAttrib1sv","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV",0,N],[12,"VertexAttrib2d","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV",0,N],[12,"VertexAttrib2dv","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV",0,N],[12,"VertexAttrib2f","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV",0,N],[12,"VertexAttrib2fv","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV",0,N],[12,"VertexAttrib2s","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV",0,N],[12,"VertexAttrib2sv","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV",0,N],[12,"VertexAttrib3d","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV",0,N],[12,"VertexAttrib3dv","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV",0,N],[12,"VertexAttrib3f","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV",0,N],[12,"VertexAttrib3fv","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV",0,N],[12,"VertexAttrib3s","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV",0,N],[12,"VertexAttrib3sv","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV",0,N],[12,"VertexAttrib4Nbv","","Fallbacks: VertexAttrib4NbvARB",0,N],[12,"VertexAttrib4Niv","","Fallbacks: VertexAttrib4NivARB",0,N],[12,"VertexAttrib4Nsv","","Fallbacks: VertexAttrib4NsvARB",0,N],[12,"VertexAttrib4Nub","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV",0,N],[12,"VertexAttrib4Nubv","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV",0,N],[12,"VertexAttrib4Nuiv","","Fallbacks: VertexAttrib4NuivARB",0,N],[12,"VertexAttrib4Nusv","","Fallbacks: VertexAttrib4NusvARB",0,N],[12,"VertexAttrib4bv","","Fallbacks: VertexAttrib4bvARB",0,N],[12,"VertexAttrib4d","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV",0,N],[12,"VertexAttrib4dv","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV",0,N],[12,"VertexAttrib4f","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV",0,N],[12,"VertexAttrib4fv","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV",0,N],[12,"VertexAttrib4iv","","Fallbacks: VertexAttrib4ivARB",0,N],[12,"VertexAttrib4s","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV",0,N],[12,"VertexAttrib4sv","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV",0,N],[12,"VertexAttrib4ubv","","Fallbacks: VertexAttrib4ubvARB",0,N],[12,"VertexAttrib4uiv","","Fallbacks: VertexAttrib4uivARB",0,N],[12,"VertexAttrib4usv","","Fallbacks: VertexAttrib4usvARB",0,N],[12,"VertexAttribDivisor","","Fallbacks: VertexAttribDivisorANGLE,…",0,N],[12,"VertexAttribI1i","","Fallbacks: VertexAttribI1iEXT",0,N],[12,"VertexAttribI1iv","","Fallbacks: VertexAttribI1ivEXT",0,N],[12,"VertexAttribI1ui","","Fallbacks: VertexAttribI1uiEXT",0,N],[12,"VertexAttribI1uiv","","Fallbacks: VertexAttribI1uivEXT",0,N],[12,"VertexAttribI2i","","Fallbacks: VertexAttribI2iEXT",0,N],[12,"VertexAttribI2iv","","Fallbacks: VertexAttribI2ivEXT",0,N],[12,"VertexAttribI2ui","","Fallbacks: VertexAttribI2uiEXT",0,N],[12,"VertexAttribI2uiv","","Fallbacks: VertexAttribI2uivEXT",0,N],[12,"VertexAttribI3i","","Fallbacks: VertexAttribI3iEXT",0,N],[12,"VertexAttribI3iv","","Fallbacks: VertexAttribI3ivEXT",0,N],[12,"VertexAttribI3ui","","Fallbacks: VertexAttribI3uiEXT",0,N],[12,"VertexAttribI3uiv","","Fallbacks: VertexAttribI3uivEXT",0,N],[12,"VertexAttribI4bv","","Fallbacks: VertexAttribI4bvEXT",0,N],[12,"VertexAttribI4i","","Fallbacks: VertexAttribI4iEXT",0,N],[12,"VertexAttribI4iv","","Fallbacks: VertexAttribI4ivEXT",0,N],[12,"VertexAttribI4sv","","Fallbacks: VertexAttribI4svEXT",0,N],[12,"VertexAttribI4ubv","","Fallbacks: VertexAttribI4ubvEXT",0,N],[12,"VertexAttribI4ui","","Fallbacks: VertexAttribI4uiEXT",0,N],[12,"VertexAttribI4uiv","","Fallbacks: VertexAttribI4uivEXT",0,N],[12,"VertexAttribI4usv","","Fallbacks: VertexAttribI4usvEXT",0,N],[12,"VertexAttribIPointer","","Fallbacks: VertexAttribIPointerEXT",0,N],[12,"VertexAttribP1ui","","",0,N],[12,"VertexAttribP1uiv","","",0,N],[12,"VertexAttribP2ui","","",0,N],[12,"VertexAttribP2uiv","","",0,N],[12,"VertexAttribP3ui","","",0,N],[12,"VertexAttribP3uiv","","",0,N],[12,"VertexAttribP4ui","","",0,N],[12,"VertexAttribP4uiv","","",0,N],[12,"VertexAttribPointer","","Fallbacks: VertexAttribPointerARB",0,N],[12,"VertexP2ui","","",0,N],[12,"VertexP2uiv","","",0,N],[12,"VertexP3ui","","",0,N],[12,"VertexP3uiv","","",0,N],[12,"VertexP4ui","","",0,N],[12,"VertexP4uiv","","",0,N],[12,"VertexPointer","","",0,N],[12,"Viewport","","",0,N],[12,"WaitSync","","Fallbacks: WaitSyncAPPLE",0,N],[12,"WindowPos2d","","Fallbacks: WindowPos2dARB, WindowPos2dMESA",0,N],[12,"WindowPos2dv","","Fallbacks: WindowPos2dvARB, WindowPos2dvMESA",0,N],[12,"WindowPos2f","","Fallbacks: WindowPos2fARB, WindowPos2fMESA",0,N],[12,"WindowPos2fv","","Fallbacks: WindowPos2fvARB, WindowPos2fvMESA",0,N],[12,"WindowPos2i","","Fallbacks: WindowPos2iARB, WindowPos2iMESA",0,N],[12,"WindowPos2iv","","Fallbacks: WindowPos2ivARB, WindowPos2ivMESA",0,N],[12,"WindowPos2s","","Fallbacks: WindowPos2sARB, WindowPos2sMESA",0,N],[12,"WindowPos2sv","","Fallbacks: WindowPos2svARB, WindowPos2svMESA",0,N],[12,"WindowPos3d","","Fallbacks: WindowPos3dARB, WindowPos3dMESA",0,N],[12,"WindowPos3dv","","Fallbacks: WindowPos3dvARB, WindowPos3dvMESA",0,N],[12,"WindowPos3f","","Fallbacks: WindowPos3fARB, WindowPos3fMESA",0,N],[12,"WindowPos3fv","","Fallbacks: WindowPos3fvARB, WindowPos3fvMESA",0,N],[12,"WindowPos3i","","Fallbacks: WindowPos3iARB, WindowPos3iMESA",0,N],[12,"WindowPos3iv","","Fallbacks: WindowPos3ivARB, WindowPos3ivMESA",0,N],[12,"WindowPos3s","","Fallbacks: WindowPos3sARB, WindowPos3sMESA",0,N],[12,"WindowPos3sv","","Fallbacks: WindowPos3svARB, WindowPos3svMESA",0,N],[3,"GlesFfi","","",N,N],[12,"ActiveTexture","","Fallbacks: ActiveTextureARB",1,N],[12,"AttachShader","","Fallbacks: AttachObjectARB",1,N],[12,"BeginQuery","","Fallbacks: BeginQueryARB",1,N],[12,"BeginQueryEXT","","",1,N],[12,"BeginTransformFeedback","","Fallbacks: BeginTransformFeedbackEXT,…",1,N],[12,"BindAttribLocation","","Fallbacks: BindAttribLocationARB",1,N],[12,"BindBuffer","","Fallbacks: BindBufferARB",1,N],[12,"BindBufferBase","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV",1,N],[12,"BindBufferRange","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV",1,N],[12,"BindFramebuffer","","",1,N],[12,"BindRenderbuffer","","",1,N],[12,"BindSampler","","",1,N],[12,"BindTexture","","Fallbacks: BindTextureEXT",1,N],[12,"BindTransformFeedback","","",1,N],[12,"BindVertexArray","","Fallbacks: BindVertexArrayOES",1,N],[12,"BlendBarrierKHR","","",1,N],[12,"BlendColor","","Fallbacks: BlendColorEXT",1,N],[12,"BlendEquation","","Fallbacks: BlendEquationEXT",1,N],[12,"BlendEquationSeparate","","Fallbacks: BlendEquationSeparateEXT",1,N],[12,"BlendFunc","","",1,N],[12,"BlendFuncSeparate","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR",1,N],[12,"BlitFramebuffer","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV",1,N],[12,"BufferData","","Fallbacks: BufferDataARB",1,N],[12,"BufferSubData","","Fallbacks: BufferSubDataARB",1,N],[12,"CheckFramebufferStatus","","Fallbacks: CheckFramebufferStatusEXT",1,N],[12,"Clear","","",1,N],[12,"ClearBufferfi","","",1,N],[12,"ClearBufferfv","","",1,N],[12,"ClearBufferiv","","",1,N],[12,"ClearBufferuiv","","",1,N],[12,"ClearColor","","",1,N],[12,"ClearDepthf","","Fallbacks: ClearDepthfOES",1,N],[12,"ClearStencil","","",1,N],[12,"ClientWaitSync","","Fallbacks: ClientWaitSyncAPPLE",1,N],[12,"ColorMask","","",1,N],[12,"CompileShader","","Fallbacks: CompileShaderARB",1,N],[12,"CompressedTexImage2D","","Fallbacks: CompressedTexImage2DARB",1,N],[12,"CompressedTexImage3D","","Fallbacks: CompressedTexImage3DARB",1,N],[12,"CompressedTexSubImage2D","","Fallbacks: CompressedTexSubImage2DARB",1,N],[12,"CompressedTexSubImage3D","","Fallbacks: CompressedTexSubImage3DARB",1,N],[12,"CopyBufferSubData","","Fallbacks: CopyBufferSubDataNV",1,N],[12,"CopyImageSubDataEXT","","",1,N],[12,"CopyTexImage2D","","Fallbacks: CopyTexImage2DEXT",1,N],[12,"CopyTexSubImage2D","","Fallbacks: CopyTexSubImage2DEXT",1,N],[12,"CopyTexSubImage3D","","Fallbacks: CopyTexSubImage3DEXT",1,N],[12,"CreateProgram","","Fallbacks: CreateProgramObjectARB",1,N],[12,"CreateShader","","Fallbacks: CreateShaderObjectARB",1,N],[12,"CullFace","","",1,N],[12,"DebugMessageCallback","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR",1,N],[12,"DebugMessageCallbackKHR","","",1,N],[12,"DebugMessageControl","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR",1,N],[12,"DebugMessageControlKHR","","",1,N],[12,"DebugMessageInsert","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR",1,N],[12,"DebugMessageInsertKHR","","",1,N],[12,"DeleteBuffers","","Fallbacks: DeleteBuffersARB",1,N],[12,"DeleteFramebuffers","","Fallbacks: DeleteFramebuffersEXT",1,N],[12,"DeleteProgram","","",1,N],[12,"DeleteQueries","","Fallbacks: DeleteQueriesARB",1,N],[12,"DeleteQueriesEXT","","",1,N],[12,"DeleteRenderbuffers","","Fallbacks: DeleteRenderbuffersEXT",1,N],[12,"DeleteSamplers","","",1,N],[12,"DeleteShader","","",1,N],[12,"DeleteSync","","Fallbacks: DeleteSyncAPPLE",1,N],[12,"DeleteTextures","","",1,N],[12,"DeleteTransformFeedbacks","","Fallbacks: DeleteTransformFeedbacksNV",1,N],[12,"DeleteVertexArrays","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES",1,N],[12,"DepthFunc","","",1,N],[12,"DepthMask","","",1,N],[12,"DepthRangef","","Fallbacks: DepthRangefOES",1,N],[12,"DetachShader","","Fallbacks: DetachObjectARB",1,N],[12,"Disable","","",1,N],[12,"DisableVertexAttribArray","","Fallbacks: DisableVertexAttribArrayARB",1,N],[12,"DrawArrays","","Fallbacks: DrawArraysEXT",1,N],[12,"DrawArraysInstanced","","Fallbacks: DrawArraysInstancedANGLE,…",1,N],[12,"DrawBuffers","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT",1,N],[12,"DrawElements","","",1,N],[12,"DrawElementsInstanced","","Fallbacks: DrawElementsInstancedANGLE,…",1,N],[12,"DrawRangeElements","","Fallbacks: DrawRangeElementsEXT",1,N],[12,"EGLImageTargetRenderbufferStorageOES","","",1,N],[12,"EGLImageTargetTexture2DOES","","",1,N],[12,"Enable","","",1,N],[12,"EnableVertexAttribArray","","Fallbacks: EnableVertexAttribArrayARB",1,N],[12,"EndQuery","","Fallbacks: EndQueryARB",1,N],[12,"EndQueryEXT","","",1,N],[12,"EndTransformFeedback","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV",1,N],[12,"FenceSync","","Fallbacks: FenceSyncAPPLE",1,N],[12,"Finish","","",1,N],[12,"Flush","","",1,N],[12,"FlushMappedBufferRange","","Fallbacks: FlushMappedBufferRangeAPPLE,…",1,N],[12,"FramebufferRenderbuffer","","Fallbacks: FramebufferRenderbufferEXT",1,N],[12,"FramebufferTexture2D","","Fallbacks: FramebufferTexture2DEXT",1,N],[12,"FramebufferTextureLayer","","Fallbacks: FramebufferTextureLayerARB,…",1,N],[12,"FrontFace","","",1,N],[12,"GenBuffers","","Fallbacks: GenBuffersARB",1,N],[12,"GenFramebuffers","","Fallbacks: GenFramebuffersEXT",1,N],[12,"GenQueries","","Fallbacks: GenQueriesARB",1,N],[12,"GenQueriesEXT","","",1,N],[12,"GenRenderbuffers","","Fallbacks: GenRenderbuffersEXT",1,N],[12,"GenSamplers","","",1,N],[12,"GenTextures","","",1,N],[12,"GenTransformFeedbacks","","Fallbacks: GenTransformFeedbacksNV",1,N],[12,"GenVertexArrays","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES",1,N],[12,"GenerateMipmap","","Fallbacks: GenerateMipmapEXT",1,N],[12,"GetActiveAttrib","","Fallbacks: GetActiveAttribARB",1,N],[12,"GetActiveUniform","","Fallbacks: GetActiveUniformARB",1,N],[12,"GetActiveUniformBlockName","","",1,N],[12,"GetActiveUniformBlockiv","","",1,N],[12,"GetActiveUniformsiv","","",1,N],[12,"GetAttachedShaders","","",1,N],[12,"GetAttribLocation","","Fallbacks: GetAttribLocationARB",1,N],[12,"GetBooleanv","","",1,N],[12,"GetBufferParameteri64v","","",1,N],[12,"GetBufferParameteriv","","Fallbacks: GetBufferParameterivARB",1,N],[12,"GetBufferPointerv","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES",1,N],[12,"GetDebugMessageLog","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR",1,N],[12,"GetDebugMessageLogKHR","","",1,N],[12,"GetError","","",1,N],[12,"GetFloatv","","",1,N],[12,"GetFragDataLocation","","Fallbacks: GetFragDataLocationEXT",1,N],[12,"GetFramebufferAttachmentParameteriv","","Fallbacks: GetFramebufferAttachmentParameterivEXT",1,N],[12,"GetInteger64i_v","","",1,N],[12,"GetInteger64v","","Fallbacks: GetInteger64vAPPLE",1,N],[12,"GetIntegeri_v","","Fallbacks: GetIntegerIndexedvEXT",1,N],[12,"GetIntegerv","","",1,N],[12,"GetInternalformativ","","",1,N],[12,"GetObjectLabel","","Fallbacks: GetObjectLabelKHR",1,N],[12,"GetObjectLabelKHR","","",1,N],[12,"GetObjectPtrLabel","","Fallbacks: GetObjectPtrLabelKHR",1,N],[12,"GetObjectPtrLabelKHR","","",1,N],[12,"GetPointerv","","Fallbacks: GetPointervEXT, GetPointervKHR",1,N],[12,"GetPointervKHR","","",1,N],[12,"GetProgramBinary","","Fallbacks: GetProgramBinaryOES",1,N],[12,"GetProgramInfoLog","","",1,N],[12,"GetProgramiv","","",1,N],[12,"GetQueryObjecti64vEXT","","",1,N],[12,"GetQueryObjectivEXT","","",1,N],[12,"GetQueryObjectui64vEXT","","",1,N],[12,"GetQueryObjectuiv","","Fallbacks: GetQueryObjectuivARB",1,N],[12,"GetQueryObjectuivEXT","","",1,N],[12,"GetQueryiv","","Fallbacks: GetQueryivARB",1,N],[12,"GetQueryivEXT","","",1,N],[12,"GetRenderbufferParameteriv","","Fallbacks: GetRenderbufferParameterivEXT",1,N],[12,"GetSamplerParameterfv","","",1,N],[12,"GetSamplerParameteriv","","",1,N],[12,"GetShaderInfoLog","","",1,N],[12,"GetShaderPrecisionFormat","","",1,N],[12,"GetShaderSource","","Fallbacks: GetShaderSourceARB",1,N],[12,"GetShaderiv","","",1,N],[12,"GetString","","",1,N],[12,"GetStringi","","",1,N],[12,"GetSynciv","","Fallbacks: GetSyncivAPPLE",1,N],[12,"GetTexParameterfv","","",1,N],[12,"GetTexParameteriv","","",1,N],[12,"GetTransformFeedbackVarying","","Fallbacks: GetTransformFeedbackVaryingEXT",1,N],[12,"GetUniformBlockIndex","","",1,N],[12,"GetUniformIndices","","",1,N],[12,"GetUniformLocation","","Fallbacks: GetUniformLocationARB",1,N],[12,"GetUniformfv","","Fallbacks: GetUniformfvARB",1,N],[12,"GetUniformiv","","Fallbacks: GetUniformivARB",1,N],[12,"GetUniformuiv","","Fallbacks: GetUniformuivEXT",1,N],[12,"GetVertexAttribIiv","","Fallbacks: GetVertexAttribIivEXT",1,N],[12,"GetVertexAttribIuiv","","Fallbacks: GetVertexAttribIuivEXT",1,N],[12,"GetVertexAttribPointerv","","Fallbacks: GetVertexAttribPointervARB,…",1,N],[12,"GetVertexAttribfv","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV",1,N],[12,"GetVertexAttribiv","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV",1,N],[12,"Hint","","",1,N],[12,"InsertEventMarkerEXT","","",1,N],[12,"InvalidateFramebuffer","","",1,N],[12,"InvalidateSubFramebuffer","","",1,N],[12,"IsBuffer","","Fallbacks: IsBufferARB",1,N],[12,"IsEnabled","","",1,N],[12,"IsFramebuffer","","Fallbacks: IsFramebufferEXT",1,N],[12,"IsProgram","","",1,N],[12,"IsQuery","","Fallbacks: IsQueryARB",1,N],[12,"IsQueryEXT","","",1,N],[12,"IsRenderbuffer","","Fallbacks: IsRenderbufferEXT",1,N],[12,"IsSampler","","",1,N],[12,"IsShader","","",1,N],[12,"IsSync","","Fallbacks: IsSyncAPPLE",1,N],[12,"IsTexture","","",1,N],[12,"IsTransformFeedback","","Fallbacks: IsTransformFeedbackNV",1,N],[12,"IsVertexArray","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES",1,N],[12,"LineWidth","","",1,N],[12,"LinkProgram","","Fallbacks: LinkProgramARB",1,N],[12,"MapBufferRange","","Fallbacks: MapBufferRangeEXT",1,N],[12,"ObjectLabel","","Fallbacks: ObjectLabelKHR",1,N],[12,"ObjectLabelKHR","","",1,N],[12,"ObjectPtrLabel","","Fallbacks: ObjectPtrLabelKHR",1,N],[12,"ObjectPtrLabelKHR","","",1,N],[12,"PauseTransformFeedback","","Fallbacks: PauseTransformFeedbackNV",1,N],[12,"PixelStorei","","",1,N],[12,"PolygonOffset","","",1,N],[12,"PopDebugGroup","","Fallbacks: PopDebugGroupKHR",1,N],[12,"PopDebugGroupKHR","","",1,N],[12,"PopGroupMarkerEXT","","",1,N],[12,"ProgramBinary","","Fallbacks: ProgramBinaryOES",1,N],[12,"ProgramParameteri","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT",1,N],[12,"ProvokingVertexANGLE","","",1,N],[12,"PushDebugGroup","","Fallbacks: PushDebugGroupKHR",1,N],[12,"PushDebugGroupKHR","","",1,N],[12,"PushGroupMarkerEXT","","",1,N],[12,"QueryCounterEXT","","",1,N],[12,"ReadBuffer","","",1,N],[12,"ReadPixels","","",1,N],[12,"ReleaseShaderCompiler","","",1,N],[12,"RenderbufferStorage","","Fallbacks: RenderbufferStorageEXT",1,N],[12,"RenderbufferStorageMultisample","","Fallbacks: RenderbufferStorageMultisampleEXT,…",1,N],[12,"ResumeTransformFeedback","","Fallbacks: ResumeTransformFeedbackNV",1,N],[12,"SampleCoverage","","Fallbacks: SampleCoverageARB",1,N],[12,"SamplerParameterf","","",1,N],[12,"SamplerParameterfv","","",1,N],[12,"SamplerParameteri","","",1,N],[12,"SamplerParameteriv","","",1,N],[12,"Scissor","","",1,N],[12,"ShaderBinary","","",1,N],[12,"ShaderSource","","Fallbacks: ShaderSourceARB",1,N],[12,"StencilFunc","","",1,N],[12,"StencilFuncSeparate","","",1,N],[12,"StencilMask","","",1,N],[12,"StencilMaskSeparate","","",1,N],[12,"StencilOp","","",1,N],[12,"StencilOpSeparate","","Fallbacks: StencilOpSeparateATI",1,N],[12,"TexImage2D","","",1,N],[12,"TexImage3D","","Fallbacks: TexImage3DEXT",1,N],[12,"TexParameterf","","",1,N],[12,"TexParameterfv","","",1,N],[12,"TexParameteri","","",1,N],[12,"TexParameteriv","","",1,N],[12,"TexStorage1DEXT","","",1,N],[12,"TexStorage2D","","Fallbacks: TexStorage2DEXT",1,N],[12,"TexStorage2DEXT","","",1,N],[12,"TexStorage3D","","Fallbacks: TexStorage3DEXT",1,N],[12,"TexStorage3DEXT","","",1,N],[12,"TexSubImage2D","","Fallbacks: TexSubImage2DEXT",1,N],[12,"TexSubImage3D","","Fallbacks: TexSubImage3DEXT",1,N],[12,"TextureStorage1DEXT","","",1,N],[12,"TextureStorage2DEXT","","",1,N],[12,"TextureStorage3DEXT","","",1,N],[12,"TransformFeedbackVaryings","","Fallbacks: TransformFeedbackVaryingsEXT",1,N],[12,"Uniform1f","","Fallbacks: Uniform1fARB",1,N],[12,"Uniform1fv","","Fallbacks: Uniform1fvARB",1,N],[12,"Uniform1i","","Fallbacks: Uniform1iARB",1,N],[12,"Uniform1iv","","Fallbacks: Uniform1ivARB",1,N],[12,"Uniform1ui","","Fallbacks: Uniform1uiEXT",1,N],[12,"Uniform1uiv","","Fallbacks: Uniform1uivEXT",1,N],[12,"Uniform2f","","Fallbacks: Uniform2fARB",1,N],[12,"Uniform2fv","","Fallbacks: Uniform2fvARB",1,N],[12,"Uniform2i","","Fallbacks: Uniform2iARB",1,N],[12,"Uniform2iv","","Fallbacks: Uniform2ivARB",1,N],[12,"Uniform2ui","","Fallbacks: Uniform2uiEXT",1,N],[12,"Uniform2uiv","","Fallbacks: Uniform2uivEXT",1,N],[12,"Uniform3f","","Fallbacks: Uniform3fARB",1,N],[12,"Uniform3fv","","Fallbacks: Uniform3fvARB",1,N],[12,"Uniform3i","","Fallbacks: Uniform3iARB",1,N],[12,"Uniform3iv","","Fallbacks: Uniform3ivARB",1,N],[12,"Uniform3ui","","Fallbacks: Uniform3uiEXT",1,N],[12,"Uniform3uiv","","Fallbacks: Uniform3uivEXT",1,N],[12,"Uniform4f","","Fallbacks: Uniform4fARB",1,N],[12,"Uniform4fv","","Fallbacks: Uniform4fvARB",1,N],[12,"Uniform4i","","Fallbacks: Uniform4iARB",1,N],[12,"Uniform4iv","","Fallbacks: Uniform4ivARB",1,N],[12,"Uniform4ui","","Fallbacks: Uniform4uiEXT",1,N],[12,"Uniform4uiv","","Fallbacks: Uniform4uivEXT",1,N],[12,"UniformBlockBinding","","",1,N],[12,"UniformMatrix2fv","","Fallbacks: UniformMatrix2fvARB",1,N],[12,"UniformMatrix2x3fv","","Fallbacks: UniformMatrix2x3fvNV",1,N],[12,"UniformMatrix2x4fv","","Fallbacks: UniformMatrix2x4fvNV",1,N],[12,"UniformMatrix3fv","","Fallbacks: UniformMatrix3fvARB",1,N],[12,"UniformMatrix3x2fv","","Fallbacks: UniformMatrix3x2fvNV",1,N],[12,"UniformMatrix3x4fv","","Fallbacks: UniformMatrix3x4fvNV",1,N],[12,"UniformMatrix4fv","","Fallbacks: UniformMatrix4fvARB",1,N],[12,"UniformMatrix4x2fv","","Fallbacks: UniformMatrix4x2fvNV",1,N],[12,"UniformMatrix4x3fv","","Fallbacks: UniformMatrix4x3fvNV",1,N],[12,"UnmapBuffer","","Fallbacks: UnmapBufferARB, UnmapBufferOES",1,N],[12,"UseProgram","","Fallbacks: UseProgramObjectARB",1,N],[12,"ValidateProgram","","Fallbacks: ValidateProgramARB",1,N],[12,"VertexAttrib1f","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV",1,N],[12,"VertexAttrib1fv","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV",1,N],[12,"VertexAttrib2f","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV",1,N],[12,"VertexAttrib2fv","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV",1,N],[12,"VertexAttrib3f","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV",1,N],[12,"VertexAttrib3fv","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV",1,N],[12,"VertexAttrib4f","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV",1,N],[12,"VertexAttrib4fv","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV",1,N],[12,"VertexAttribDivisor","","Fallbacks: VertexAttribDivisorANGLE,…",1,N],[12,"VertexAttribI4i","","Fallbacks: VertexAttribI4iEXT",1,N],[12,"VertexAttribI4iv","","Fallbacks: VertexAttribI4ivEXT",1,N],[12,"VertexAttribI4ui","","Fallbacks: VertexAttribI4uiEXT",1,N],[12,"VertexAttribI4uiv","","Fallbacks: VertexAttribI4uivEXT",1,N],[12,"VertexAttribIPointer","","Fallbacks: VertexAttribIPointerEXT",1,N],[12,"VertexAttribPointer","","Fallbacks: VertexAttribPointerARB",1,N],[12,"Viewport","","",1,N],[12,"WaitSync","","Fallbacks: WaitSyncAPPLE",1,N],[3,"DebugMessage","","",N,N],[12,"message","","",2,N],[12,"source","","",2,N],[12,"ty","","",2,N],[12,"id","","",2,N],[12,"severity","","",2,N],[3,"ErrorCheckingGl","","",N,N],[3,"ErrorReactingGl","","A wrapper around GL context that calls a specified…",N,N],[3,"ProfilingGl","","A wrapper around GL context that times each call and…",N,N],[3,"GlFns","","",N,N],[3,"GlesFns","","",N,N],[4,"__GLsync","","",N,N],[4,"_cl_context","","",N,N],[4,"_cl_event","","",N,N],[4,"GlType","","",N,N],[13,"Gl","","",3,N],[13,"Gles","","",3,N],[5,"buffer_data","","",N,N],[5,"buffer_data_raw","","",N,[[["gl"],["glenum"],["t"],["glenum"]]]],[5,"buffer_sub_data","","",N,N],[0,"types","","",N,N],[4,"__GLsync","gleam::gl::types","",N,N],[4,"_cl_context","","",N,N],[4,"_cl_event","","",N,N],[6,"GLenum","","",N,N],[6,"GLboolean","","",N,N],[6,"GLbitfield","","",N,N],[6,"GLvoid","","",N,N],[6,"GLbyte","","",N,N],[6,"GLshort","","",N,N],[6,"GLint","","",N,N],[6,"GLclampx","","",N,N],[6,"GLubyte","","",N,N],[6,"GLushort","","",N,N],[6,"GLuint","","",N,N],[6,"GLsizei","","",N,N],[6,"GLfloat","","",N,N],[6,"GLclampf","","",N,N],[6,"GLdouble","","",N,N],[6,"GLclampd","","",N,N],[6,"GLeglImageOES","","",N,N],[6,"GLchar","","",N,N],[6,"GLcharARB","","",N,N],[6,"GLhandleARB","","",N,N],[6,"GLhalfARB","","",N,N],[6,"GLhalf","","",N,N],[6,"GLfixed","","",N,N],[6,"GLintptr","","",N,N],[6,"GLsizeiptr","","",N,N],[6,"GLint64","","",N,N],[6,"GLuint64","","",N,N],[6,"GLintptrARB","","",N,N],[6,"GLsizeiptrARB","","",N,N],[6,"GLint64EXT","","",N,N],[6,"GLuint64EXT","","",N,N],[6,"GLsync","","",N,N],[6,"GLDEBUGPROC","","",N,N],[6,"GLDEBUGPROCARB","","",N,N],[6,"GLDEBUGPROCKHR","","",N,N],[6,"GLDEBUGPROCAMD","","",N,N],[6,"GLhalfNV","","",N,N],[6,"GLvdpauSurfaceNV","","",N,N],[6,"GLenum","gleam::gl","",N,N],[6,"GLboolean","","",N,N],[6,"GLbitfield","","",N,N],[6,"GLvoid","","",N,N],[6,"GLbyte","","",N,N],[6,"GLshort","","",N,N],[6,"GLint","","",N,N],[6,"GLclampx","","",N,N],[6,"GLubyte","","",N,N],[6,"GLushort","","",N,N],[6,"GLuint","","",N,N],[6,"GLsizei","","",N,N],[6,"GLfloat","","",N,N],[6,"GLclampf","","",N,N],[6,"GLdouble","","",N,N],[6,"GLclampd","","",N,N],[6,"GLeglImageOES","","",N,N],[6,"GLchar","","",N,N],[6,"GLcharARB","","",N,N],[6,"GLhandleARB","","",N,N],[6,"GLhalfARB","","",N,N],[6,"GLhalf","","",N,N],[6,"GLfixed","","",N,N],[6,"GLintptr","","",N,N],[6,"GLsizeiptr","","",N,N],[6,"GLint64","","",N,N],[6,"GLuint64","","",N,N],[6,"GLintptrARB","","",N,N],[6,"GLsizeiptrARB","","",N,N],[6,"GLint64EXT","","",N,N],[6,"GLuint64EXT","","",N,N],[6,"GLsync","","",N,N],[6,"GLDEBUGPROC","","",N,N],[6,"GLDEBUGPROCARB","","",N,N],[6,"GLDEBUGPROCKHR","","",N,N],[6,"GLDEBUGPROCAMD","","",N,N],[6,"GLhalfNV","","",N,N],[6,"GLvdpauSurfaceNV","","",N,N],[17,"ACCUM","","",N,N],[17,"ACCUM_ALPHA_BITS","","",N,N],[17,"ACCUM_BLUE_BITS","","",N,N],[17,"ACCUM_BUFFER_BIT","","",N,N],[17,"ACCUM_CLEAR_VALUE","","",N,N],[17,"ACCUM_GREEN_BITS","","",N,N],[17,"ACCUM_RED_BITS","","",N,N],[17,"ACTIVE_ATTRIBUTES","","",N,N],[17,"ACTIVE_ATTRIBUTE_MAX_LENGTH","","",N,N],[17,"ACTIVE_TEXTURE","","",N,N],[17,"ACTIVE_UNIFORMS","","",N,N],[17,"ACTIVE_UNIFORM_BLOCKS","","",N,N],[17,"ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","","",N,N],[17,"ACTIVE_UNIFORM_MAX_LENGTH","","",N,N],[17,"ADD","","",N,N],[17,"ADD_SIGNED","","",N,N],[17,"ALIASED_LINE_WIDTH_RANGE","","",N,N],[17,"ALIASED_POINT_SIZE_RANGE","","",N,N],[17,"ALL_ATTRIB_BITS","","",N,N],[17,"ALPHA","","",N,N],[17,"ALPHA12","","",N,N],[17,"ALPHA16","","",N,N],[17,"ALPHA16F_EXT","","",N,N],[17,"ALPHA32F_EXT","","",N,N],[17,"ALPHA4","","",N,N],[17,"ALPHA8","","",N,N],[17,"ALPHA8_EXT","","",N,N],[17,"ALPHA_BIAS","","",N,N],[17,"ALPHA_BITS","","",N,N],[17,"ALPHA_INTEGER","","",N,N],[17,"ALPHA_SCALE","","",N,N],[17,"ALPHA_TEST","","",N,N],[17,"ALPHA_TEST_FUNC","","",N,N],[17,"ALPHA_TEST_REF","","",N,N],[17,"ALREADY_SIGNALED","","",N,N],[17,"ALWAYS","","",N,N],[17,"AMBIENT","","",N,N],[17,"AMBIENT_AND_DIFFUSE","","",N,N],[17,"AND","","",N,N],[17,"AND_INVERTED","","",N,N],[17,"AND_REVERSE","","",N,N],[17,"ANY_SAMPLES_PASSED","","",N,N],[17,"ANY_SAMPLES_PASSED_CONSERVATIVE","","",N,N],[17,"ARRAY_BUFFER","","",N,N],[17,"ARRAY_BUFFER_BINDING","","",N,N],[17,"ATTACHED_SHADERS","","",N,N],[17,"ATTRIB_STACK_DEPTH","","",N,N],[17,"AUTO_NORMAL","","",N,N],[17,"AUX0","","",N,N],[17,"AUX1","","",N,N],[17,"AUX2","","",N,N],[17,"AUX3","","",N,N],[17,"AUX_BUFFERS","","",N,N],[17,"BACK","","",N,N],[17,"BACK_LEFT","","",N,N],[17,"BACK_RIGHT","","",N,N],[17,"BGR","","",N,N],[17,"BGRA","","",N,N],[17,"BGRA8_EXT","","",N,N],[17,"BGRA_EXT","","",N,N],[17,"BGRA_INTEGER","","",N,N],[17,"BGR_INTEGER","","",N,N],[17,"BITMAP","","",N,N],[17,"BITMAP_TOKEN","","",N,N],[17,"BLEND","","",N,N],[17,"BLEND_ADVANCED_COHERENT_KHR","","",N,N],[17,"BLEND_COLOR","","",N,N],[17,"BLEND_DST","","",N,N],[17,"BLEND_DST_ALPHA","","",N,N],[17,"BLEND_DST_RGB","","",N,N],[17,"BLEND_EQUATION","","",N,N],[17,"BLEND_EQUATION_ALPHA","","",N,N],[17,"BLEND_EQUATION_RGB","","",N,N],[17,"BLEND_SRC","","",N,N],[17,"BLEND_SRC_ALPHA","","",N,N],[17,"BLEND_SRC_RGB","","",N,N],[17,"BLUE","","",N,N],[17,"BLUE_BIAS","","",N,N],[17,"BLUE_BITS","","",N,N],[17,"BLUE_INTEGER","","",N,N],[17,"BLUE_SCALE","","",N,N],[17,"BOOL","","",N,N],[17,"BOOL_VEC2","","",N,N],[17,"BOOL_VEC3","","",N,N],[17,"BOOL_VEC4","","",N,N],[17,"BUFFER","","",N,N],[17,"BUFFER_ACCESS","","",N,N],[17,"BUFFER_ACCESS_FLAGS","","",N,N],[17,"BUFFER_KHR","","",N,N],[17,"BUFFER_MAPPED","","",N,N],[17,"BUFFER_MAP_LENGTH","","",N,N],[17,"BUFFER_MAP_OFFSET","","",N,N],[17,"BUFFER_MAP_POINTER","","",N,N],[17,"BUFFER_SIZE","","",N,N],[17,"BUFFER_USAGE","","",N,N],[17,"BYTE","","",N,N],[17,"C3F_V3F","","",N,N],[17,"C4F_N3F_V3F","","",N,N],[17,"C4UB_V2F","","",N,N],[17,"C4UB_V3F","","",N,N],[17,"CCW","","",N,N],[17,"CLAMP","","",N,N],[17,"CLAMP_FRAGMENT_COLOR","","",N,N],[17,"CLAMP_READ_COLOR","","",N,N],[17,"CLAMP_TO_BORDER","","",N,N],[17,"CLAMP_TO_EDGE","","",N,N],[17,"CLAMP_VERTEX_COLOR","","",N,N],[17,"CLEAR","","",N,N],[17,"CLIENT_ACTIVE_TEXTURE","","",N,N],[17,"CLIENT_ALL_ATTRIB_BITS","","",N,N],[17,"CLIENT_ATTRIB_STACK_DEPTH","","",N,N],[17,"CLIENT_PIXEL_STORE_BIT","","",N,N],[17,"CLIENT_VERTEX_ARRAY_BIT","","",N,N],[17,"CLIP_DISTANCE0","","",N,N],[17,"CLIP_DISTANCE1","","",N,N],[17,"CLIP_DISTANCE2","","",N,N],[17,"CLIP_DISTANCE3","","",N,N],[17,"CLIP_DISTANCE4","","",N,N],[17,"CLIP_DISTANCE5","","",N,N],[17,"CLIP_DISTANCE6","","",N,N],[17,"CLIP_DISTANCE7","","",N,N],[17,"CLIP_PLANE0","","",N,N],[17,"CLIP_PLANE1","","",N,N],[17,"CLIP_PLANE2","","",N,N],[17,"CLIP_PLANE3","","",N,N],[17,"CLIP_PLANE4","","",N,N],[17,"CLIP_PLANE5","","",N,N],[17,"COEFF","","",N,N],[17,"COLOR","","",N,N],[17,"COLORBURN_KHR","","",N,N],[17,"COLORDODGE_KHR","","",N,N],[17,"COLOR_ARRAY","","",N,N],[17,"COLOR_ARRAY_BUFFER_BINDING","","",N,N],[17,"COLOR_ARRAY_POINTER","","",N,N],[17,"COLOR_ARRAY_SIZE","","",N,N],[17,"COLOR_ARRAY_STRIDE","","",N,N],[17,"COLOR_ARRAY_TYPE","","",N,N],[17,"COLOR_ATTACHMENT0","","",N,N],[17,"COLOR_ATTACHMENT1","","",N,N],[17,"COLOR_ATTACHMENT10","","",N,N],[17,"COLOR_ATTACHMENT11","","",N,N],[17,"COLOR_ATTACHMENT12","","",N,N],[17,"COLOR_ATTACHMENT13","","",N,N],[17,"COLOR_ATTACHMENT14","","",N,N],[17,"COLOR_ATTACHMENT15","","",N,N],[17,"COLOR_ATTACHMENT16","","",N,N],[17,"COLOR_ATTACHMENT17","","",N,N],[17,"COLOR_ATTACHMENT18","","",N,N],[17,"COLOR_ATTACHMENT19","","",N,N],[17,"COLOR_ATTACHMENT2","","",N,N],[17,"COLOR_ATTACHMENT20","","",N,N],[17,"COLOR_ATTACHMENT21","","",N,N],[17,"COLOR_ATTACHMENT22","","",N,N],[17,"COLOR_ATTACHMENT23","","",N,N],[17,"COLOR_ATTACHMENT24","","",N,N],[17,"COLOR_ATTACHMENT25","","",N,N],[17,"COLOR_ATTACHMENT26","","",N,N],[17,"COLOR_ATTACHMENT27","","",N,N],[17,"COLOR_ATTACHMENT28","","",N,N],[17,"COLOR_ATTACHMENT29","","",N,N],[17,"COLOR_ATTACHMENT3","","",N,N],[17,"COLOR_ATTACHMENT30","","",N,N],[17,"COLOR_ATTACHMENT31","","",N,N],[17,"COLOR_ATTACHMENT4","","",N,N],[17,"COLOR_ATTACHMENT5","","",N,N],[17,"COLOR_ATTACHMENT6","","",N,N],[17,"COLOR_ATTACHMENT7","","",N,N],[17,"COLOR_ATTACHMENT8","","",N,N],[17,"COLOR_ATTACHMENT9","","",N,N],[17,"COLOR_BUFFER_BIT","","",N,N],[17,"COLOR_CLEAR_VALUE","","",N,N],[17,"COLOR_INDEX","","",N,N],[17,"COLOR_INDEXES","","",N,N],[17,"COLOR_LOGIC_OP","","",N,N],[17,"COLOR_MATERIAL","","",N,N],[17,"COLOR_MATERIAL_FACE","","",N,N],[17,"COLOR_MATERIAL_PARAMETER","","",N,N],[17,"COLOR_SUM","","",N,N],[17,"COLOR_WRITEMASK","","",N,N],[17,"COMBINE","","",N,N],[17,"COMBINE_ALPHA","","",N,N],[17,"COMBINE_RGB","","",N,N],[17,"COMPARE_REF_TO_TEXTURE","","",N,N],[17,"COMPARE_R_TO_TEXTURE","","",N,N],[17,"COMPILE","","",N,N],[17,"COMPILE_AND_EXECUTE","","",N,N],[17,"COMPILE_STATUS","","",N,N],[17,"COMPRESSED_ALPHA","","",N,N],[17,"COMPRESSED_INTENSITY","","",N,N],[17,"COMPRESSED_LUMINANCE","","",N,N],[17,"COMPRESSED_LUMINANCE_ALPHA","","",N,N],[17,"COMPRESSED_R11_EAC","","",N,N],[17,"COMPRESSED_RED","","",N,N],[17,"COMPRESSED_RED_RGTC1","","",N,N],[17,"COMPRESSED_RG","","",N,N],[17,"COMPRESSED_RG11_EAC","","",N,N],[17,"COMPRESSED_RGB","","",N,N],[17,"COMPRESSED_RGB8_ETC2","","",N,N],[17,"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",N,N],[17,"COMPRESSED_RGBA","","",N,N],[17,"COMPRESSED_RGBA8_ETC2_EAC","","",N,N],[17,"COMPRESSED_RG_RGTC2","","",N,N],[17,"COMPRESSED_SIGNED_R11_EAC","","",N,N],[17,"COMPRESSED_SIGNED_RED_RGTC1","","",N,N],[17,"COMPRESSED_SIGNED_RG11_EAC","","",N,N],[17,"COMPRESSED_SIGNED_RG_RGTC2","","",N,N],[17,"COMPRESSED_SLUMINANCE","","",N,N],[17,"COMPRESSED_SLUMINANCE_ALPHA","","",N,N],[17,"COMPRESSED_SRGB","","",N,N],[17,"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","","",N,N],[17,"COMPRESSED_SRGB8_ETC2","","",N,N],[17,"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",N,N],[17,"COMPRESSED_SRGB_ALPHA","","",N,N],[17,"COMPRESSED_TEXTURE_FORMATS","","",N,N],[17,"CONDITION_SATISFIED","","",N,N],[17,"CONSTANT","","",N,N],[17,"CONSTANT_ALPHA","","",N,N],[17,"CONSTANT_ATTENUATION","","",N,N],[17,"CONSTANT_COLOR","","",N,N],[17,"CONTEXT_COMPATIBILITY_PROFILE_BIT","","",N,N],[17,"CONTEXT_CORE_PROFILE_BIT","","",N,N],[17,"CONTEXT_FLAGS","","",N,N],[17,"CONTEXT_FLAG_DEBUG_BIT","","",N,N],[17,"CONTEXT_FLAG_DEBUG_BIT_KHR","","",N,N],[17,"CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","","",N,N],[17,"CONTEXT_PROFILE_MASK","","",N,N],[17,"COORD_REPLACE","","",N,N],[17,"COPY","","",N,N],[17,"COPY_INVERTED","","",N,N],[17,"COPY_PIXEL_TOKEN","","",N,N],[17,"COPY_READ_BUFFER","","",N,N],[17,"COPY_READ_BUFFER_BINDING","","",N,N],[17,"COPY_WRITE_BUFFER","","",N,N],[17,"COPY_WRITE_BUFFER_BINDING","","",N,N],[17,"CULL_FACE","","",N,N],[17,"CULL_FACE_MODE","","",N,N],[17,"CURRENT_BIT","","",N,N],[17,"CURRENT_COLOR","","",N,N],[17,"CURRENT_FOG_COORD","","",N,N],[17,"CURRENT_FOG_COORDINATE","","",N,N],[17,"CURRENT_INDEX","","",N,N],[17,"CURRENT_NORMAL","","",N,N],[17,"CURRENT_PROGRAM","","",N,N],[17,"CURRENT_QUERY","","",N,N],[17,"CURRENT_QUERY_EXT","","",N,N],[17,"CURRENT_RASTER_COLOR","","",N,N],[17,"CURRENT_RASTER_DISTANCE","","",N,N],[17,"CURRENT_RASTER_INDEX","","",N,N],[17,"CURRENT_RASTER_POSITION","","",N,N],[17,"CURRENT_RASTER_POSITION_VALID","","",N,N],[17,"CURRENT_RASTER_SECONDARY_COLOR","","",N,N],[17,"CURRENT_RASTER_TEXTURE_COORDS","","",N,N],[17,"CURRENT_SECONDARY_COLOR","","",N,N],[17,"CURRENT_TEXTURE_COORDS","","",N,N],[17,"CURRENT_VERTEX_ATTRIB","","",N,N],[17,"CW","","",N,N],[17,"DARKEN_KHR","","",N,N],[17,"DEBUG_CALLBACK_FUNCTION","","",N,N],[17,"DEBUG_CALLBACK_FUNCTION_KHR","","",N,N],[17,"DEBUG_CALLBACK_USER_PARAM","","",N,N],[17,"DEBUG_CALLBACK_USER_PARAM_KHR","","",N,N],[17,"DEBUG_GROUP_STACK_DEPTH","","",N,N],[17,"DEBUG_GROUP_STACK_DEPTH_KHR","","",N,N],[17,"DEBUG_LOGGED_MESSAGES","","",N,N],[17,"DEBUG_LOGGED_MESSAGES_KHR","","",N,N],[17,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","","",N,N],[17,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR","","",N,N],[17,"DEBUG_OUTPUT","","",N,N],[17,"DEBUG_OUTPUT_KHR","","",N,N],[17,"DEBUG_OUTPUT_SYNCHRONOUS","","",N,N],[17,"DEBUG_OUTPUT_SYNCHRONOUS_KHR","","",N,N],[17,"DEBUG_SEVERITY_HIGH","","",N,N],[17,"DEBUG_SEVERITY_HIGH_KHR","","",N,N],[17,"DEBUG_SEVERITY_LOW","","",N,N],[17,"DEBUG_SEVERITY_LOW_KHR","","",N,N],[17,"DEBUG_SEVERITY_MEDIUM","","",N,N],[17,"DEBUG_SEVERITY_MEDIUM_KHR","","",N,N],[17,"DEBUG_SEVERITY_NOTIFICATION","","",N,N],[17,"DEBUG_SEVERITY_NOTIFICATION_KHR","","",N,N],[17,"DEBUG_SOURCE_API","","",N,N],[17,"DEBUG_SOURCE_API_KHR","","",N,N],[17,"DEBUG_SOURCE_APPLICATION","","",N,N],[17,"DEBUG_SOURCE_APPLICATION_KHR","","",N,N],[17,"DEBUG_SOURCE_OTHER","","",N,N],[17,"DEBUG_SOURCE_OTHER_KHR","","",N,N],[17,"DEBUG_SOURCE_SHADER_COMPILER","","",N,N],[17,"DEBUG_SOURCE_SHADER_COMPILER_KHR","","",N,N],[17,"DEBUG_SOURCE_THIRD_PARTY","","",N,N],[17,"DEBUG_SOURCE_THIRD_PARTY_KHR","","",N,N],[17,"DEBUG_SOURCE_WINDOW_SYSTEM","","",N,N],[17,"DEBUG_SOURCE_WINDOW_SYSTEM_KHR","","",N,N],[17,"DEBUG_TYPE_DEPRECATED_BEHAVIOR","","",N,N],[17,"DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR","","",N,N],[17,"DEBUG_TYPE_ERROR","","",N,N],[17,"DEBUG_TYPE_ERROR_KHR","","",N,N],[17,"DEBUG_TYPE_MARKER","","",N,N],[17,"DEBUG_TYPE_MARKER_KHR","","",N,N],[17,"DEBUG_TYPE_OTHER","","",N,N],[17,"DEBUG_TYPE_OTHER_KHR","","",N,N],[17,"DEBUG_TYPE_PERFORMANCE","","",N,N],[17,"DEBUG_TYPE_PERFORMANCE_KHR","","",N,N],[17,"DEBUG_TYPE_POP_GROUP","","",N,N],[17,"DEBUG_TYPE_POP_GROUP_KHR","","",N,N],[17,"DEBUG_TYPE_PORTABILITY","","",N,N],[17,"DEBUG_TYPE_PORTABILITY_KHR","","",N,N],[17,"DEBUG_TYPE_PUSH_GROUP","","",N,N],[17,"DEBUG_TYPE_PUSH_GROUP_KHR","","",N,N],[17,"DEBUG_TYPE_UNDEFINED_BEHAVIOR","","",N,N],[17,"DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR","","",N,N],[17,"DECAL","","",N,N],[17,"DECR","","",N,N],[17,"DECR_WRAP","","",N,N],[17,"DELETE_STATUS","","",N,N],[17,"DEPTH","","",N,N],[17,"DEPTH24_STENCIL8","","",N,N],[17,"DEPTH32F_STENCIL8","","",N,N],[17,"DEPTH_ATTACHMENT","","",N,N],[17,"DEPTH_BIAS","","",N,N],[17,"DEPTH_BITS","","",N,N],[17,"DEPTH_BUFFER_BIT","","",N,N],[17,"DEPTH_CLAMP","","",N,N],[17,"DEPTH_CLEAR_VALUE","","",N,N],[17,"DEPTH_COMPONENT","","",N,N],[17,"DEPTH_COMPONENT16","","",N,N],[17,"DEPTH_COMPONENT24","","",N,N],[17,"DEPTH_COMPONENT32","","",N,N],[17,"DEPTH_COMPONENT32F","","",N,N],[17,"DEPTH_FUNC","","",N,N],[17,"DEPTH_RANGE","","",N,N],[17,"DEPTH_SCALE","","",N,N],[17,"DEPTH_STENCIL","","",N,N],[17,"DEPTH_STENCIL_ATTACHMENT","","",N,N],[17,"DEPTH_TEST","","",N,N],[17,"DEPTH_TEXTURE_MODE","","",N,N],[17,"DEPTH_WRITEMASK","","",N,N],[17,"DIFFERENCE_KHR","","",N,N],[17,"DIFFUSE","","",N,N],[17,"DISPLAY_LIST","","",N,N],[17,"DITHER","","",N,N],[17,"DOMAIN","","",N,N],[17,"DONT_CARE","","",N,N],[17,"DOT3_RGB","","",N,N],[17,"DOT3_RGBA","","",N,N],[17,"DOUBLE","","",N,N],[17,"DOUBLEBUFFER","","",N,N],[17,"DRAW_BUFFER","","",N,N],[17,"DRAW_BUFFER0","","",N,N],[17,"DRAW_BUFFER1","","",N,N],[17,"DRAW_BUFFER10","","",N,N],[17,"DRAW_BUFFER11","","",N,N],[17,"DRAW_BUFFER12","","",N,N],[17,"DRAW_BUFFER13","","",N,N],[17,"DRAW_BUFFER14","","",N,N],[17,"DRAW_BUFFER15","","",N,N],[17,"DRAW_BUFFER2","","",N,N],[17,"DRAW_BUFFER3","","",N,N],[17,"DRAW_BUFFER4","","",N,N],[17,"DRAW_BUFFER5","","",N,N],[17,"DRAW_BUFFER6","","",N,N],[17,"DRAW_BUFFER7","","",N,N],[17,"DRAW_BUFFER8","","",N,N],[17,"DRAW_BUFFER9","","",N,N],[17,"DRAW_FRAMEBUFFER","","",N,N],[17,"DRAW_FRAMEBUFFER_BINDING","","",N,N],[17,"DRAW_PIXELS_APPLE","","",N,N],[17,"DRAW_PIXEL_TOKEN","","",N,N],[17,"DST_ALPHA","","",N,N],[17,"DST_COLOR","","",N,N],[17,"DYNAMIC_COPY","","",N,N],[17,"DYNAMIC_DRAW","","",N,N],[17,"DYNAMIC_READ","","",N,N],[17,"EDGE_FLAG","","",N,N],[17,"EDGE_FLAG_ARRAY","","",N,N],[17,"EDGE_FLAG_ARRAY_BUFFER_BINDING","","",N,N],[17,"EDGE_FLAG_ARRAY_POINTER","","",N,N],[17,"EDGE_FLAG_ARRAY_STRIDE","","",N,N],[17,"ELEMENT_ARRAY_BUFFER","","",N,N],[17,"ELEMENT_ARRAY_BUFFER_BINDING","","",N,N],[17,"EMISSION","","",N,N],[17,"ENABLE_BIT","","",N,N],[17,"EQUAL","","",N,N],[17,"EQUIV","","",N,N],[17,"EVAL_BIT","","",N,N],[17,"EXCLUSION_KHR","","",N,N],[17,"EXP","","",N,N],[17,"EXP2","","",N,N],[17,"EXTENSIONS","","",N,N],[17,"EYE_LINEAR","","",N,N],[17,"EYE_PLANE","","",N,N],[17,"FALSE","","",N,N],[17,"FASTEST","","",N,N],[17,"FEEDBACK","","",N,N],[17,"FEEDBACK_BUFFER_POINTER","","",N,N],[17,"FEEDBACK_BUFFER_SIZE","","",N,N],[17,"FEEDBACK_BUFFER_TYPE","","",N,N],[17,"FENCE_APPLE","","",N,N],[17,"FILL","","",N,N],[17,"FIRST_VERTEX_CONVENTION","","",N,N],[17,"FIXED","","",N,N],[17,"FIXED_ONLY","","",N,N],[17,"FLAT","","",N,N],[17,"FLOAT","","",N,N],[17,"FLOAT_32_UNSIGNED_INT_24_8_REV","","",N,N],[17,"FLOAT_MAT2","","",N,N],[17,"FLOAT_MAT2x3","","",N,N],[17,"FLOAT_MAT2x4","","",N,N],[17,"FLOAT_MAT3","","",N,N],[17,"FLOAT_MAT3x2","","",N,N],[17,"FLOAT_MAT3x4","","",N,N],[17,"FLOAT_MAT4","","",N,N],[17,"FLOAT_MAT4x2","","",N,N],[17,"FLOAT_MAT4x3","","",N,N],[17,"FLOAT_VEC2","","",N,N],[17,"FLOAT_VEC3","","",N,N],[17,"FLOAT_VEC4","","",N,N],[17,"FOG","","",N,N],[17,"FOG_BIT","","",N,N],[17,"FOG_COLOR","","",N,N],[17,"FOG_COORD","","",N,N],[17,"FOG_COORDINATE","","",N,N],[17,"FOG_COORDINATE_ARRAY","","",N,N],[17,"FOG_COORDINATE_ARRAY_BUFFER_BINDING","","",N,N],[17,"FOG_COORDINATE_ARRAY_POINTER","","",N,N],[17,"FOG_COORDINATE_ARRAY_STRIDE","","",N,N],[17,"FOG_COORDINATE_ARRAY_TYPE","","",N,N],[17,"FOG_COORDINATE_SOURCE","","",N,N],[17,"FOG_COORD_ARRAY","","",N,N],[17,"FOG_COORD_ARRAY_BUFFER_BINDING","","",N,N],[17,"FOG_COORD_ARRAY_POINTER","","",N,N],[17,"FOG_COORD_ARRAY_STRIDE","","",N,N],[17,"FOG_COORD_ARRAY_TYPE","","",N,N],[17,"FOG_COORD_SRC","","",N,N],[17,"FOG_DENSITY","","",N,N],[17,"FOG_END","","",N,N],[17,"FOG_HINT","","",N,N],[17,"FOG_INDEX","","",N,N],[17,"FOG_MODE","","",N,N],[17,"FOG_START","","",N,N],[17,"FRAGMENT_DEPTH","","",N,N],[17,"FRAGMENT_SHADER","","",N,N],[17,"FRAGMENT_SHADER_DERIVATIVE_HINT","","",N,N],[17,"FRAMEBUFFER","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_LAYERED","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_RED_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","","",N,N],[17,"FRAMEBUFFER_BINDING","","",N,N],[17,"FRAMEBUFFER_COMPLETE","","",N,N],[17,"FRAMEBUFFER_DEFAULT","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_DIMENSIONS","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_READ_BUFFER","","",N,N],[17,"FRAMEBUFFER_SRGB","","",N,N],[17,"FRAMEBUFFER_UNDEFINED","","",N,N],[17,"FRAMEBUFFER_UNSUPPORTED","","",N,N],[17,"FRONT","","",N,N],[17,"FRONT_AND_BACK","","",N,N],[17,"FRONT_FACE","","",N,N],[17,"FRONT_LEFT","","",N,N],[17,"FRONT_RIGHT","","",N,N],[17,"FUNC_ADD","","",N,N],[17,"FUNC_REVERSE_SUBTRACT","","",N,N],[17,"FUNC_SUBTRACT","","",N,N],[17,"GENERATE_MIPMAP","","",N,N],[17,"GENERATE_MIPMAP_HINT","","",N,N],[17,"GEOMETRY_INPUT_TYPE","","",N,N],[17,"GEOMETRY_OUTPUT_TYPE","","",N,N],[17,"GEOMETRY_SHADER","","",N,N],[17,"GEOMETRY_VERTICES_OUT","","",N,N],[17,"GEQUAL","","",N,N],[17,"GPU_DISJOINT_EXT","","",N,N],[17,"GREATER","","",N,N],[17,"GREEN","","",N,N],[17,"GREEN_BIAS","","",N,N],[17,"GREEN_BITS","","",N,N],[17,"GREEN_INTEGER","","",N,N],[17,"GREEN_SCALE","","",N,N],[17,"HALF_FLOAT","","",N,N],[17,"HALF_FLOAT_OES","","",N,N],[17,"HARDLIGHT_KHR","","",N,N],[17,"HIGH_FLOAT","","",N,N],[17,"HIGH_INT","","",N,N],[17,"HINT_BIT","","",N,N],[17,"HSL_COLOR_KHR","","",N,N],[17,"HSL_HUE_KHR","","",N,N],[17,"HSL_LUMINOSITY_KHR","","",N,N],[17,"HSL_SATURATION_KHR","","",N,N],[17,"IMPLEMENTATION_COLOR_READ_FORMAT","","",N,N],[17,"IMPLEMENTATION_COLOR_READ_TYPE","","",N,N],[17,"INCR","","",N,N],[17,"INCR_WRAP","","",N,N],[17,"INDEX","","",N,N],[17,"INDEX_ARRAY","","",N,N],[17,"INDEX_ARRAY_BUFFER_BINDING","","",N,N],[17,"INDEX_ARRAY_POINTER","","",N,N],[17,"INDEX_ARRAY_STRIDE","","",N,N],[17,"INDEX_ARRAY_TYPE","","",N,N],[17,"INDEX_BITS","","",N,N],[17,"INDEX_CLEAR_VALUE","","",N,N],[17,"INDEX_LOGIC_OP","","",N,N],[17,"INDEX_MODE","","",N,N],[17,"INDEX_OFFSET","","",N,N],[17,"INDEX_SHIFT","","",N,N],[17,"INDEX_WRITEMASK","","",N,N],[17,"INFO_LOG_LENGTH","","",N,N],[17,"INT","","",N,N],[17,"INTENSITY","","",N,N],[17,"INTENSITY12","","",N,N],[17,"INTENSITY16","","",N,N],[17,"INTENSITY4","","",N,N],[17,"INTENSITY8","","",N,N],[17,"INTERLEAVED_ATTRIBS","","",N,N],[17,"INTERPOLATE","","",N,N],[17,"INT_2_10_10_10_REV","","",N,N],[17,"INT_SAMPLER_1D","","",N,N],[17,"INT_SAMPLER_1D_ARRAY","","",N,N],[17,"INT_SAMPLER_2D","","",N,N],[17,"INT_SAMPLER_2D_ARRAY","","",N,N],[17,"INT_SAMPLER_2D_MULTISAMPLE","","",N,N],[17,"INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"INT_SAMPLER_2D_RECT","","",N,N],[17,"INT_SAMPLER_3D","","",N,N],[17,"INT_SAMPLER_BUFFER","","",N,N],[17,"INT_SAMPLER_CUBE","","",N,N],[17,"INT_VEC2","","",N,N],[17,"INT_VEC3","","",N,N],[17,"INT_VEC4","","",N,N],[17,"INVALID_ENUM","","",N,N],[17,"INVALID_FRAMEBUFFER_OPERATION","","",N,N],[17,"INVALID_INDEX","","",N,N],[17,"INVALID_OPERATION","","",N,N],[17,"INVALID_VALUE","","",N,N],[17,"INVERT","","",N,N],[17,"KEEP","","",N,N],[17,"LAST_VERTEX_CONVENTION","","",N,N],[17,"LEFT","","",N,N],[17,"LEQUAL","","",N,N],[17,"LESS","","",N,N],[17,"LIGHT0","","",N,N],[17,"LIGHT1","","",N,N],[17,"LIGHT2","","",N,N],[17,"LIGHT3","","",N,N],[17,"LIGHT4","","",N,N],[17,"LIGHT5","","",N,N],[17,"LIGHT6","","",N,N],[17,"LIGHT7","","",N,N],[17,"LIGHTEN_KHR","","",N,N],[17,"LIGHTING","","",N,N],[17,"LIGHTING_BIT","","",N,N],[17,"LIGHT_MODEL_AMBIENT","","",N,N],[17,"LIGHT_MODEL_COLOR_CONTROL","","",N,N],[17,"LIGHT_MODEL_LOCAL_VIEWER","","",N,N],[17,"LIGHT_MODEL_TWO_SIDE","","",N,N],[17,"LINE","","",N,N],[17,"LINEAR","","",N,N],[17,"LINEAR_ATTENUATION","","",N,N],[17,"LINEAR_MIPMAP_LINEAR","","",N,N],[17,"LINEAR_MIPMAP_NEAREST","","",N,N],[17,"LINES","","",N,N],[17,"LINES_ADJACENCY","","",N,N],[17,"LINE_BIT","","",N,N],[17,"LINE_LOOP","","",N,N],[17,"LINE_RESET_TOKEN","","",N,N],[17,"LINE_SMOOTH","","",N,N],[17,"LINE_SMOOTH_HINT","","",N,N],[17,"LINE_STIPPLE","","",N,N],[17,"LINE_STIPPLE_PATTERN","","",N,N],[17,"LINE_STIPPLE_REPEAT","","",N,N],[17,"LINE_STRIP","","",N,N],[17,"LINE_STRIP_ADJACENCY","","",N,N],[17,"LINE_TOKEN","","",N,N],[17,"LINE_WIDTH","","",N,N],[17,"LINE_WIDTH_GRANULARITY","","",N,N],[17,"LINE_WIDTH_RANGE","","",N,N],[17,"LINK_STATUS","","",N,N],[17,"LIST_BASE","","",N,N],[17,"LIST_BIT","","",N,N],[17,"LIST_INDEX","","",N,N],[17,"LIST_MODE","","",N,N],[17,"LOAD","","",N,N],[17,"LOGIC_OP","","",N,N],[17,"LOGIC_OP_MODE","","",N,N],[17,"LOWER_LEFT","","",N,N],[17,"LOW_FLOAT","","",N,N],[17,"LOW_INT","","",N,N],[17,"LUMINANCE","","",N,N],[17,"LUMINANCE12","","",N,N],[17,"LUMINANCE12_ALPHA12","","",N,N],[17,"LUMINANCE12_ALPHA4","","",N,N],[17,"LUMINANCE16","","",N,N],[17,"LUMINANCE16F_EXT","","",N,N],[17,"LUMINANCE16_ALPHA16","","",N,N],[17,"LUMINANCE32F_EXT","","",N,N],[17,"LUMINANCE4","","",N,N],[17,"LUMINANCE4_ALPHA4","","",N,N],[17,"LUMINANCE6_ALPHA2","","",N,N],[17,"LUMINANCE8","","",N,N],[17,"LUMINANCE8_ALPHA8","","",N,N],[17,"LUMINANCE8_ALPHA8_EXT","","",N,N],[17,"LUMINANCE8_EXT","","",N,N],[17,"LUMINANCE_ALPHA","","",N,N],[17,"LUMINANCE_ALPHA16F_EXT","","",N,N],[17,"LUMINANCE_ALPHA32F_EXT","","",N,N],[17,"MAJOR_VERSION","","",N,N],[17,"MAP1_COLOR_4","","",N,N],[17,"MAP1_GRID_DOMAIN","","",N,N],[17,"MAP1_GRID_SEGMENTS","","",N,N],[17,"MAP1_INDEX","","",N,N],[17,"MAP1_NORMAL","","",N,N],[17,"MAP1_TEXTURE_COORD_1","","",N,N],[17,"MAP1_TEXTURE_COORD_2","","",N,N],[17,"MAP1_TEXTURE_COORD_3","","",N,N],[17,"MAP1_TEXTURE_COORD_4","","",N,N],[17,"MAP1_VERTEX_3","","",N,N],[17,"MAP1_VERTEX_4","","",N,N],[17,"MAP2_COLOR_4","","",N,N],[17,"MAP2_GRID_DOMAIN","","",N,N],[17,"MAP2_GRID_SEGMENTS","","",N,N],[17,"MAP2_INDEX","","",N,N],[17,"MAP2_NORMAL","","",N,N],[17,"MAP2_TEXTURE_COORD_1","","",N,N],[17,"MAP2_TEXTURE_COORD_2","","",N,N],[17,"MAP2_TEXTURE_COORD_3","","",N,N],[17,"MAP2_TEXTURE_COORD_4","","",N,N],[17,"MAP2_VERTEX_3","","",N,N],[17,"MAP2_VERTEX_4","","",N,N],[17,"MAP_COLOR","","",N,N],[17,"MAP_FLUSH_EXPLICIT_BIT","","",N,N],[17,"MAP_INVALIDATE_BUFFER_BIT","","",N,N],[17,"MAP_INVALIDATE_RANGE_BIT","","",N,N],[17,"MAP_READ_BIT","","",N,N],[17,"MAP_STENCIL","","",N,N],[17,"MAP_UNSYNCHRONIZED_BIT","","",N,N],[17,"MAP_WRITE_BIT","","",N,N],[17,"MATRIX_MODE","","",N,N],[17,"MAX","","",N,N],[17,"MAX_3D_TEXTURE_SIZE","","",N,N],[17,"MAX_ARRAY_TEXTURE_LAYERS","","",N,N],[17,"MAX_ATTRIB_STACK_DEPTH","","",N,N],[17,"MAX_CLIENT_ATTRIB_STACK_DEPTH","","",N,N],[17,"MAX_CLIP_DISTANCES","","",N,N],[17,"MAX_CLIP_PLANES","","",N,N],[17,"MAX_COLOR_ATTACHMENTS","","",N,N],[17,"MAX_COLOR_TEXTURE_SAMPLES","","",N,N],[17,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMBINED_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_COMBINED_UNIFORM_BLOCKS","","",N,N],[17,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_CUBE_MAP_TEXTURE_SIZE","","",N,N],[17,"MAX_DEBUG_GROUP_STACK_DEPTH","","",N,N],[17,"MAX_DEBUG_GROUP_STACK_DEPTH_KHR","","",N,N],[17,"MAX_DEBUG_LOGGED_MESSAGES","","",N,N],[17,"MAX_DEBUG_LOGGED_MESSAGES_KHR","","",N,N],[17,"MAX_DEBUG_MESSAGE_LENGTH","","",N,N],[17,"MAX_DEBUG_MESSAGE_LENGTH_KHR","","",N,N],[17,"MAX_DEPTH_TEXTURE_SAMPLES","","",N,N],[17,"MAX_DRAW_BUFFERS","","",N,N],[17,"MAX_DUAL_SOURCE_DRAW_BUFFERS","","",N,N],[17,"MAX_ELEMENTS_INDICES","","",N,N],[17,"MAX_ELEMENTS_VERTICES","","",N,N],[17,"MAX_ELEMENT_INDEX","","",N,N],[17,"MAX_EVAL_ORDER","","",N,N],[17,"MAX_FRAGMENT_INPUT_COMPONENTS","","",N,N],[17,"MAX_FRAGMENT_UNIFORM_BLOCKS","","",N,N],[17,"MAX_FRAGMENT_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_FRAGMENT_UNIFORM_VECTORS","","",N,N],[17,"MAX_GEOMETRY_INPUT_COMPONENTS","","",N,N],[17,"MAX_GEOMETRY_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_GEOMETRY_OUTPUT_VERTICES","","",N,N],[17,"MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_GEOMETRY_UNIFORM_BLOCKS","","",N,N],[17,"MAX_GEOMETRY_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_INTEGER_SAMPLES","","",N,N],[17,"MAX_LABEL_LENGTH","","",N,N],[17,"MAX_LABEL_LENGTH_KHR","","",N,N],[17,"MAX_LIGHTS","","",N,N],[17,"MAX_LIST_NESTING","","",N,N],[17,"MAX_MODELVIEW_STACK_DEPTH","","",N,N],[17,"MAX_NAME_STACK_DEPTH","","",N,N],[17,"MAX_PIXEL_MAP_TABLE","","",N,N],[17,"MAX_PROGRAM_TEXEL_OFFSET","","",N,N],[17,"MAX_PROJECTION_STACK_DEPTH","","",N,N],[17,"MAX_RECTANGLE_TEXTURE_SIZE","","",N,N],[17,"MAX_RECTANGLE_TEXTURE_SIZE_ARB","","",N,N],[17,"MAX_RENDERBUFFER_SIZE","","",N,N],[17,"MAX_SAMPLES","","",N,N],[17,"MAX_SAMPLE_MASK_WORDS","","",N,N],[17,"MAX_SERVER_WAIT_TIMEOUT","","",N,N],[17,"MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT","","",N,N],[17,"MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT","","",N,N],[17,"MAX_TEXTURE_BUFFER_SIZE","","",N,N],[17,"MAX_TEXTURE_COORDS","","",N,N],[17,"MAX_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_TEXTURE_LOD_BIAS","","",N,N],[17,"MAX_TEXTURE_MAX_ANISOTROPY_EXT","","",N,N],[17,"MAX_TEXTURE_SIZE","","",N,N],[17,"MAX_TEXTURE_STACK_DEPTH","","",N,N],[17,"MAX_TEXTURE_UNITS","","",N,N],[17,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","","",N,N],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","","",N,N],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","","",N,N],[17,"MAX_UNIFORM_BLOCK_SIZE","","",N,N],[17,"MAX_UNIFORM_BUFFER_BINDINGS","","",N,N],[17,"MAX_VARYING_COMPONENTS","","",N,N],[17,"MAX_VARYING_FLOATS","","",N,N],[17,"MAX_VARYING_VECTORS","","",N,N],[17,"MAX_VERTEX_ATTRIBS","","",N,N],[17,"MAX_VERTEX_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_VERTEX_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_VERTEX_UNIFORM_BLOCKS","","",N,N],[17,"MAX_VERTEX_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_VERTEX_UNIFORM_VECTORS","","",N,N],[17,"MAX_VIEWPORT_DIMS","","",N,N],[17,"MEDIUM_FLOAT","","",N,N],[17,"MEDIUM_INT","","",N,N],[17,"MIN","","",N,N],[17,"MINOR_VERSION","","",N,N],[17,"MIN_PROGRAM_TEXEL_OFFSET","","",N,N],[17,"MIRRORED_REPEAT","","",N,N],[17,"MODELVIEW","","",N,N],[17,"MODELVIEW_MATRIX","","",N,N],[17,"MODELVIEW_STACK_DEPTH","","",N,N],[17,"MODULATE","","",N,N],[17,"MULT","","",N,N],[17,"MULTIPLY_KHR","","",N,N],[17,"MULTISAMPLE","","",N,N],[17,"MULTISAMPLE_BIT","","",N,N],[17,"N3F_V3F","","",N,N],[17,"NAME_STACK_DEPTH","","",N,N],[17,"NAND","","",N,N],[17,"NEAREST","","",N,N],[17,"NEAREST_MIPMAP_LINEAR","","",N,N],[17,"NEAREST_MIPMAP_NEAREST","","",N,N],[17,"NEVER","","",N,N],[17,"NICEST","","",N,N],[17,"NONE","","",N,N],[17,"NOOP","","",N,N],[17,"NOR","","",N,N],[17,"NORMALIZE","","",N,N],[17,"NORMAL_ARRAY","","",N,N],[17,"NORMAL_ARRAY_BUFFER_BINDING","","",N,N],[17,"NORMAL_ARRAY_POINTER","","",N,N],[17,"NORMAL_ARRAY_STRIDE","","",N,N],[17,"NORMAL_ARRAY_TYPE","","",N,N],[17,"NORMAL_MAP","","",N,N],[17,"NOTEQUAL","","",N,N],[17,"NO_ERROR","","",N,N],[17,"NUM_COMPRESSED_TEXTURE_FORMATS","","",N,N],[17,"NUM_EXTENSIONS","","",N,N],[17,"NUM_PROGRAM_BINARY_FORMATS","","",N,N],[17,"NUM_SAMPLE_COUNTS","","",N,N],[17,"NUM_SHADER_BINARY_FORMATS","","",N,N],[17,"OBJECT_LINEAR","","",N,N],[17,"OBJECT_PLANE","","",N,N],[17,"OBJECT_TYPE","","",N,N],[17,"ONE","","",N,N],[17,"ONE_MINUS_CONSTANT_ALPHA","","",N,N],[17,"ONE_MINUS_CONSTANT_COLOR","","",N,N],[17,"ONE_MINUS_DST_ALPHA","","",N,N],[17,"ONE_MINUS_DST_COLOR","","",N,N],[17,"ONE_MINUS_SRC1_ALPHA","","",N,N],[17,"ONE_MINUS_SRC1_COLOR","","",N,N],[17,"ONE_MINUS_SRC_ALPHA","","",N,N],[17,"ONE_MINUS_SRC_COLOR","","",N,N],[17,"OPERAND0_ALPHA","","",N,N],[17,"OPERAND0_RGB","","",N,N],[17,"OPERAND1_ALPHA","","",N,N],[17,"OPERAND1_RGB","","",N,N],[17,"OPERAND2_ALPHA","","",N,N],[17,"OPERAND2_RGB","","",N,N],[17,"OR","","",N,N],[17,"ORDER","","",N,N],[17,"OR_INVERTED","","",N,N],[17,"OR_REVERSE","","",N,N],[17,"OUT_OF_MEMORY","","",N,N],[17,"OVERLAY_KHR","","",N,N],[17,"PACK_ALIGNMENT","","",N,N],[17,"PACK_IMAGE_HEIGHT","","",N,N],[17,"PACK_LSB_FIRST","","",N,N],[17,"PACK_ROW_LENGTH","","",N,N],[17,"PACK_SKIP_IMAGES","","",N,N],[17,"PACK_SKIP_PIXELS","","",N,N],[17,"PACK_SKIP_ROWS","","",N,N],[17,"PACK_SWAP_BYTES","","",N,N],[17,"PASS_THROUGH_TOKEN","","",N,N],[17,"PERSPECTIVE_CORRECTION_HINT","","",N,N],[17,"PIXEL_MAP_A_TO_A","","",N,N],[17,"PIXEL_MAP_A_TO_A_SIZE","","",N,N],[17,"PIXEL_MAP_B_TO_B","","",N,N],[17,"PIXEL_MAP_B_TO_B_SIZE","","",N,N],[17,"PIXEL_MAP_G_TO_G","","",N,N],[17,"PIXEL_MAP_G_TO_G_SIZE","","",N,N],[17,"PIXEL_MAP_I_TO_A","","",N,N],[17,"PIXEL_MAP_I_TO_A_SIZE","","",N,N],[17,"PIXEL_MAP_I_TO_B","","",N,N],[17,"PIXEL_MAP_I_TO_B_SIZE","","",N,N],[17,"PIXEL_MAP_I_TO_G","","",N,N],[17,"PIXEL_MAP_I_TO_G_SIZE","","",N,N],[17,"PIXEL_MAP_I_TO_I","","",N,N],[17,"PIXEL_MAP_I_TO_I_SIZE","","",N,N],[17,"PIXEL_MAP_I_TO_R","","",N,N],[17,"PIXEL_MAP_I_TO_R_SIZE","","",N,N],[17,"PIXEL_MAP_R_TO_R","","",N,N],[17,"PIXEL_MAP_R_TO_R_SIZE","","",N,N],[17,"PIXEL_MAP_S_TO_S","","",N,N],[17,"PIXEL_MAP_S_TO_S_SIZE","","",N,N],[17,"PIXEL_MODE_BIT","","",N,N],[17,"PIXEL_PACK_BUFFER","","",N,N],[17,"PIXEL_PACK_BUFFER_BINDING","","",N,N],[17,"PIXEL_UNPACK_BUFFER","","",N,N],[17,"PIXEL_UNPACK_BUFFER_BINDING","","",N,N],[17,"POINT","","",N,N],[17,"POINTS","","",N,N],[17,"POINT_BIT","","",N,N],[17,"POINT_DISTANCE_ATTENUATION","","",N,N],[17,"POINT_FADE_THRESHOLD_SIZE","","",N,N],[17,"POINT_SIZE","","",N,N],[17,"POINT_SIZE_GRANULARITY","","",N,N],[17,"POINT_SIZE_MAX","","",N,N],[17,"POINT_SIZE_MIN","","",N,N],[17,"POINT_SIZE_RANGE","","",N,N],[17,"POINT_SMOOTH","","",N,N],[17,"POINT_SMOOTH_HINT","","",N,N],[17,"POINT_SPRITE","","",N,N],[17,"POINT_SPRITE_COORD_ORIGIN","","",N,N],[17,"POINT_TOKEN","","",N,N],[17,"POLYGON","","",N,N],[17,"POLYGON_BIT","","",N,N],[17,"POLYGON_MODE","","",N,N],[17,"POLYGON_OFFSET_FACTOR","","",N,N],[17,"POLYGON_OFFSET_FILL","","",N,N],[17,"POLYGON_OFFSET_LINE","","",N,N],[17,"POLYGON_OFFSET_POINT","","",N,N],[17,"POLYGON_OFFSET_UNITS","","",N,N],[17,"POLYGON_SMOOTH","","",N,N],[17,"POLYGON_SMOOTH_HINT","","",N,N],[17,"POLYGON_STIPPLE","","",N,N],[17,"POLYGON_STIPPLE_BIT","","",N,N],[17,"POLYGON_TOKEN","","",N,N],[17,"POSITION","","",N,N],[17,"PREVIOUS","","",N,N],[17,"PRIMARY_COLOR","","",N,N],[17,"PRIMITIVES_GENERATED","","",N,N],[17,"PRIMITIVE_RESTART","","",N,N],[17,"PRIMITIVE_RESTART_FIXED_INDEX","","",N,N],[17,"PRIMITIVE_RESTART_INDEX","","",N,N],[17,"PROGRAM","","",N,N],[17,"PROGRAM_BINARY_FORMATS","","",N,N],[17,"PROGRAM_BINARY_LENGTH","","",N,N],[17,"PROGRAM_BINARY_RETRIEVABLE_HINT","","",N,N],[17,"PROGRAM_KHR","","",N,N],[17,"PROGRAM_PIPELINE","","",N,N],[17,"PROGRAM_PIPELINE_KHR","","",N,N],[17,"PROGRAM_POINT_SIZE","","",N,N],[17,"PROJECTION","","",N,N],[17,"PROJECTION_MATRIX","","",N,N],[17,"PROJECTION_STACK_DEPTH","","",N,N],[17,"PROVOKING_VERTEX","","",N,N],[17,"PROXY_TEXTURE_1D","","",N,N],[17,"PROXY_TEXTURE_1D_ARRAY","","",N,N],[17,"PROXY_TEXTURE_2D","","",N,N],[17,"PROXY_TEXTURE_2D_ARRAY","","",N,N],[17,"PROXY_TEXTURE_2D_MULTISAMPLE","","",N,N],[17,"PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"PROXY_TEXTURE_3D","","",N,N],[17,"PROXY_TEXTURE_CUBE_MAP","","",N,N],[17,"PROXY_TEXTURE_RECTANGLE","","",N,N],[17,"PROXY_TEXTURE_RECTANGLE_ARB","","",N,N],[17,"Q","","",N,N],[17,"QUADRATIC_ATTENUATION","","",N,N],[17,"QUADS","","",N,N],[17,"QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","","",N,N],[17,"QUAD_STRIP","","",N,N],[17,"QUERY","","",N,N],[17,"QUERY_BY_REGION_NO_WAIT","","",N,N],[17,"QUERY_BY_REGION_WAIT","","",N,N],[17,"QUERY_COUNTER_BITS","","",N,N],[17,"QUERY_COUNTER_BITS_EXT","","",N,N],[17,"QUERY_KHR","","",N,N],[17,"QUERY_NO_WAIT","","",N,N],[17,"QUERY_RESULT","","",N,N],[17,"QUERY_RESULT_AVAILABLE","","",N,N],[17,"QUERY_RESULT_AVAILABLE_EXT","","",N,N],[17,"QUERY_RESULT_EXT","","",N,N],[17,"QUERY_WAIT","","",N,N],[17,"R","","",N,N],[17,"R11F_G11F_B10F","","",N,N],[17,"R16","","",N,N],[17,"R16F","","",N,N],[17,"R16F_EXT","","",N,N],[17,"R16I","","",N,N],[17,"R16UI","","",N,N],[17,"R16_SNORM","","",N,N],[17,"R32F","","",N,N],[17,"R32F_EXT","","",N,N],[17,"R32I","","",N,N],[17,"R32UI","","",N,N],[17,"R3_G3_B2","","",N,N],[17,"R8","","",N,N],[17,"R8I","","",N,N],[17,"R8UI","","",N,N],[17,"R8_EXT","","",N,N],[17,"R8_SNORM","","",N,N],[17,"RASTERIZER_DISCARD","","",N,N],[17,"READ_BUFFER","","",N,N],[17,"READ_FRAMEBUFFER","","",N,N],[17,"READ_FRAMEBUFFER_BINDING","","",N,N],[17,"READ_ONLY","","",N,N],[17,"READ_WRITE","","",N,N],[17,"RED","","",N,N],[17,"RED_BIAS","","",N,N],[17,"RED_BITS","","",N,N],[17,"RED_INTEGER","","",N,N],[17,"RED_SCALE","","",N,N],[17,"REFLECTION_MAP","","",N,N],[17,"RENDER","","",N,N],[17,"RENDERBUFFER","","",N,N],[17,"RENDERBUFFER_ALPHA_SIZE","","",N,N],[17,"RENDERBUFFER_BINDING","","",N,N],[17,"RENDERBUFFER_BLUE_SIZE","","",N,N],[17,"RENDERBUFFER_DEPTH_SIZE","","",N,N],[17,"RENDERBUFFER_GREEN_SIZE","","",N,N],[17,"RENDERBUFFER_HEIGHT","","",N,N],[17,"RENDERBUFFER_INTERNAL_FORMAT","","",N,N],[17,"RENDERBUFFER_RED_SIZE","","",N,N],[17,"RENDERBUFFER_SAMPLES","","",N,N],[17,"RENDERBUFFER_STENCIL_SIZE","","",N,N],[17,"RENDERBUFFER_WIDTH","","",N,N],[17,"RENDERER","","",N,N],[17,"RENDER_MODE","","",N,N],[17,"REPEAT","","",N,N],[17,"REPLACE","","",N,N],[17,"REQUIRED_TEXTURE_IMAGE_UNITS_OES","","",N,N],[17,"RESCALE_NORMAL","","",N,N],[17,"RETURN","","",N,N],[17,"RG","","",N,N],[17,"RG16","","",N,N],[17,"RG16F","","",N,N],[17,"RG16F_EXT","","",N,N],[17,"RG16I","","",N,N],[17,"RG16UI","","",N,N],[17,"RG16_SNORM","","",N,N],[17,"RG32F","","",N,N],[17,"RG32F_EXT","","",N,N],[17,"RG32I","","",N,N],[17,"RG32UI","","",N,N],[17,"RG8","","",N,N],[17,"RG8I","","",N,N],[17,"RG8UI","","",N,N],[17,"RG8_EXT","","",N,N],[17,"RG8_SNORM","","",N,N],[17,"RGB","","",N,N],[17,"RGB10","","",N,N],[17,"RGB10_A2","","",N,N],[17,"RGB10_A2UI","","",N,N],[17,"RGB10_A2_EXT","","",N,N],[17,"RGB10_EXT","","",N,N],[17,"RGB12","","",N,N],[17,"RGB16","","",N,N],[17,"RGB16F","","",N,N],[17,"RGB16F_EXT","","",N,N],[17,"RGB16I","","",N,N],[17,"RGB16UI","","",N,N],[17,"RGB16_SNORM","","",N,N],[17,"RGB32F","","",N,N],[17,"RGB32F_EXT","","",N,N],[17,"RGB32I","","",N,N],[17,"RGB32UI","","",N,N],[17,"RGB4","","",N,N],[17,"RGB5","","",N,N],[17,"RGB565","","",N,N],[17,"RGB5_A1","","",N,N],[17,"RGB8","","",N,N],[17,"RGB8I","","",N,N],[17,"RGB8UI","","",N,N],[17,"RGB8_SNORM","","",N,N],[17,"RGB9_E5","","",N,N],[17,"RGBA","","",N,N],[17,"RGBA12","","",N,N],[17,"RGBA16","","",N,N],[17,"RGBA16F","","",N,N],[17,"RGBA16F_EXT","","",N,N],[17,"RGBA16I","","",N,N],[17,"RGBA16UI","","",N,N],[17,"RGBA16_SNORM","","",N,N],[17,"RGBA2","","",N,N],[17,"RGBA32F","","",N,N],[17,"RGBA32F_EXT","","",N,N],[17,"RGBA32I","","",N,N],[17,"RGBA32UI","","",N,N],[17,"RGBA4","","",N,N],[17,"RGBA8","","",N,N],[17,"RGBA8I","","",N,N],[17,"RGBA8UI","","",N,N],[17,"RGBA8_SNORM","","",N,N],[17,"RGBA_INTEGER","","",N,N],[17,"RGBA_MODE","","",N,N],[17,"RGB_INTEGER","","",N,N],[17,"RGB_SCALE","","",N,N],[17,"RG_INTEGER","","",N,N],[17,"RIGHT","","",N,N],[17,"S","","",N,N],[17,"SAMPLER","","",N,N],[17,"SAMPLER_1D","","",N,N],[17,"SAMPLER_1D_ARRAY","","",N,N],[17,"SAMPLER_1D_ARRAY_SHADOW","","",N,N],[17,"SAMPLER_1D_SHADOW","","",N,N],[17,"SAMPLER_2D","","",N,N],[17,"SAMPLER_2D_ARRAY","","",N,N],[17,"SAMPLER_2D_ARRAY_SHADOW","","",N,N],[17,"SAMPLER_2D_MULTISAMPLE","","",N,N],[17,"SAMPLER_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"SAMPLER_2D_RECT","","",N,N],[17,"SAMPLER_2D_RECT_SHADOW","","",N,N],[17,"SAMPLER_2D_SHADOW","","",N,N],[17,"SAMPLER_3D","","",N,N],[17,"SAMPLER_BINDING","","",N,N],[17,"SAMPLER_BUFFER","","",N,N],[17,"SAMPLER_CUBE","","",N,N],[17,"SAMPLER_CUBE_SHADOW","","",N,N],[17,"SAMPLER_EXTERNAL_OES","","",N,N],[17,"SAMPLER_KHR","","",N,N],[17,"SAMPLES","","",N,N],[17,"SAMPLES_PASSED","","",N,N],[17,"SAMPLE_ALPHA_TO_COVERAGE","","",N,N],[17,"SAMPLE_ALPHA_TO_ONE","","",N,N],[17,"SAMPLE_BUFFERS","","",N,N],[17,"SAMPLE_COVERAGE","","",N,N],[17,"SAMPLE_COVERAGE_INVERT","","",N,N],[17,"SAMPLE_COVERAGE_VALUE","","",N,N],[17,"SAMPLE_MASK","","",N,N],[17,"SAMPLE_MASK_VALUE","","",N,N],[17,"SAMPLE_POSITION","","",N,N],[17,"SCISSOR_BIT","","",N,N],[17,"SCISSOR_BOX","","",N,N],[17,"SCISSOR_TEST","","",N,N],[17,"SCREEN_KHR","","",N,N],[17,"SECONDARY_COLOR_ARRAY","","",N,N],[17,"SECONDARY_COLOR_ARRAY_BUFFER_BINDING","","",N,N],[17,"SECONDARY_COLOR_ARRAY_POINTER","","",N,N],[17,"SECONDARY_COLOR_ARRAY_SIZE","","",N,N],[17,"SECONDARY_COLOR_ARRAY_STRIDE","","",N,N],[17,"SECONDARY_COLOR_ARRAY_TYPE","","",N,N],[17,"SELECT","","",N,N],[17,"SELECTION_BUFFER_POINTER","","",N,N],[17,"SELECTION_BUFFER_SIZE","","",N,N],[17,"SEPARATE_ATTRIBS","","",N,N],[17,"SEPARATE_SPECULAR_COLOR","","",N,N],[17,"SET","","",N,N],[17,"SHADER","","",N,N],[17,"SHADER_BINARY_FORMATS","","",N,N],[17,"SHADER_COMPILER","","",N,N],[17,"SHADER_KHR","","",N,N],[17,"SHADER_PIXEL_LOCAL_STORAGE_EXT","","",N,N],[17,"SHADER_SOURCE_LENGTH","","",N,N],[17,"SHADER_TYPE","","",N,N],[17,"SHADE_MODEL","","",N,N],[17,"SHADING_LANGUAGE_VERSION","","",N,N],[17,"SHININESS","","",N,N],[17,"SHORT","","",N,N],[17,"SIGNALED","","",N,N],[17,"SIGNED_NORMALIZED","","",N,N],[17,"SINGLE_COLOR","","",N,N],[17,"SLUMINANCE","","",N,N],[17,"SLUMINANCE8","","",N,N],[17,"SLUMINANCE8_ALPHA8","","",N,N],[17,"SLUMINANCE_ALPHA","","",N,N],[17,"SMOOTH","","",N,N],[17,"SMOOTH_LINE_WIDTH_GRANULARITY","","",N,N],[17,"SMOOTH_LINE_WIDTH_RANGE","","",N,N],[17,"SMOOTH_POINT_SIZE_GRANULARITY","","",N,N],[17,"SMOOTH_POINT_SIZE_RANGE","","",N,N],[17,"SOFTLIGHT_KHR","","",N,N],[17,"SOURCE0_ALPHA","","",N,N],[17,"SOURCE0_RGB","","",N,N],[17,"SOURCE1_ALPHA","","",N,N],[17,"SOURCE1_RGB","","",N,N],[17,"SOURCE2_ALPHA","","",N,N],[17,"SOURCE2_RGB","","",N,N],[17,"SPECULAR","","",N,N],[17,"SPHERE_MAP","","",N,N],[17,"SPOT_CUTOFF","","",N,N],[17,"SPOT_DIRECTION","","",N,N],[17,"SPOT_EXPONENT","","",N,N],[17,"SRC0_ALPHA","","",N,N],[17,"SRC0_RGB","","",N,N],[17,"SRC1_ALPHA","","",N,N],[17,"SRC1_COLOR","","",N,N],[17,"SRC1_RGB","","",N,N],[17,"SRC2_ALPHA","","",N,N],[17,"SRC2_RGB","","",N,N],[17,"SRC_ALPHA","","",N,N],[17,"SRC_ALPHA_SATURATE","","",N,N],[17,"SRC_COLOR","","",N,N],[17,"SRGB","","",N,N],[17,"SRGB8","","",N,N],[17,"SRGB8_ALPHA8","","",N,N],[17,"SRGB_ALPHA","","",N,N],[17,"STACK_OVERFLOW","","",N,N],[17,"STACK_OVERFLOW_KHR","","",N,N],[17,"STACK_UNDERFLOW","","",N,N],[17,"STACK_UNDERFLOW_KHR","","",N,N],[17,"STATIC_COPY","","",N,N],[17,"STATIC_DRAW","","",N,N],[17,"STATIC_READ","","",N,N],[17,"STENCIL","","",N,N],[17,"STENCIL_ATTACHMENT","","",N,N],[17,"STENCIL_BACK_FAIL","","",N,N],[17,"STENCIL_BACK_FUNC","","",N,N],[17,"STENCIL_BACK_PASS_DEPTH_FAIL","","",N,N],[17,"STENCIL_BACK_PASS_DEPTH_PASS","","",N,N],[17,"STENCIL_BACK_REF","","",N,N],[17,"STENCIL_BACK_VALUE_MASK","","",N,N],[17,"STENCIL_BACK_WRITEMASK","","",N,N],[17,"STENCIL_BITS","","",N,N],[17,"STENCIL_BUFFER_BIT","","",N,N],[17,"STENCIL_CLEAR_VALUE","","",N,N],[17,"STENCIL_FAIL","","",N,N],[17,"STENCIL_FUNC","","",N,N],[17,"STENCIL_INDEX","","",N,N],[17,"STENCIL_INDEX1","","",N,N],[17,"STENCIL_INDEX16","","",N,N],[17,"STENCIL_INDEX4","","",N,N],[17,"STENCIL_INDEX8","","",N,N],[17,"STENCIL_PASS_DEPTH_FAIL","","",N,N],[17,"STENCIL_PASS_DEPTH_PASS","","",N,N],[17,"STENCIL_REF","","",N,N],[17,"STENCIL_TEST","","",N,N],[17,"STENCIL_VALUE_MASK","","",N,N],[17,"STENCIL_WRITEMASK","","",N,N],[17,"STEREO","","",N,N],[17,"STORAGE_CACHED_APPLE","","",N,N],[17,"STORAGE_PRIVATE_APPLE","","",N,N],[17,"STORAGE_SHARED_APPLE","","",N,N],[17,"STREAM_COPY","","",N,N],[17,"STREAM_DRAW","","",N,N],[17,"STREAM_READ","","",N,N],[17,"SUBPIXEL_BITS","","",N,N],[17,"SUBTRACT","","",N,N],[17,"SYNC_CONDITION","","",N,N],[17,"SYNC_FENCE","","",N,N],[17,"SYNC_FLAGS","","",N,N],[17,"SYNC_FLUSH_COMMANDS_BIT","","",N,N],[17,"SYNC_GPU_COMMANDS_COMPLETE","","",N,N],[17,"SYNC_STATUS","","",N,N],[17,"T","","",N,N],[17,"T2F_C3F_V3F","","",N,N],[17,"T2F_C4F_N3F_V3F","","",N,N],[17,"T2F_C4UB_V3F","","",N,N],[17,"T2F_N3F_V3F","","",N,N],[17,"T2F_V3F","","",N,N],[17,"T4F_C4F_N3F_V4F","","",N,N],[17,"T4F_V4F","","",N,N],[17,"TEXTURE","","",N,N],[17,"TEXTURE0","","",N,N],[17,"TEXTURE1","","",N,N],[17,"TEXTURE10","","",N,N],[17,"TEXTURE11","","",N,N],[17,"TEXTURE12","","",N,N],[17,"TEXTURE13","","",N,N],[17,"TEXTURE14","","",N,N],[17,"TEXTURE15","","",N,N],[17,"TEXTURE16","","",N,N],[17,"TEXTURE17","","",N,N],[17,"TEXTURE18","","",N,N],[17,"TEXTURE19","","",N,N],[17,"TEXTURE2","","",N,N],[17,"TEXTURE20","","",N,N],[17,"TEXTURE21","","",N,N],[17,"TEXTURE22","","",N,N],[17,"TEXTURE23","","",N,N],[17,"TEXTURE24","","",N,N],[17,"TEXTURE25","","",N,N],[17,"TEXTURE26","","",N,N],[17,"TEXTURE27","","",N,N],[17,"TEXTURE28","","",N,N],[17,"TEXTURE29","","",N,N],[17,"TEXTURE3","","",N,N],[17,"TEXTURE30","","",N,N],[17,"TEXTURE31","","",N,N],[17,"TEXTURE4","","",N,N],[17,"TEXTURE5","","",N,N],[17,"TEXTURE6","","",N,N],[17,"TEXTURE7","","",N,N],[17,"TEXTURE8","","",N,N],[17,"TEXTURE9","","",N,N],[17,"TEXTURE_1D","","",N,N],[17,"TEXTURE_1D_ARRAY","","",N,N],[17,"TEXTURE_2D","","",N,N],[17,"TEXTURE_2D_ARRAY","","",N,N],[17,"TEXTURE_2D_MULTISAMPLE","","",N,N],[17,"TEXTURE_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"TEXTURE_3D","","",N,N],[17,"TEXTURE_ALPHA_SIZE","","",N,N],[17,"TEXTURE_ALPHA_TYPE","","",N,N],[17,"TEXTURE_BASE_LEVEL","","",N,N],[17,"TEXTURE_BINDING_1D","","",N,N],[17,"TEXTURE_BINDING_1D_ARRAY","","",N,N],[17,"TEXTURE_BINDING_2D","","",N,N],[17,"TEXTURE_BINDING_2D_ARRAY","","",N,N],[17,"TEXTURE_BINDING_2D_MULTISAMPLE","","",N,N],[17,"TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"TEXTURE_BINDING_3D","","",N,N],[17,"TEXTURE_BINDING_BUFFER","","",N,N],[17,"TEXTURE_BINDING_CUBE_MAP","","",N,N],[17,"TEXTURE_BINDING_EXTERNAL_OES","","",N,N],[17,"TEXTURE_BINDING_RECTANGLE","","",N,N],[17,"TEXTURE_BINDING_RECTANGLE_ARB","","",N,N],[17,"TEXTURE_BIT","","",N,N],[17,"TEXTURE_BLUE_SIZE","","",N,N],[17,"TEXTURE_BLUE_TYPE","","",N,N],[17,"TEXTURE_BORDER","","",N,N],[17,"TEXTURE_BORDER_COLOR","","",N,N],[17,"TEXTURE_BUFFER","","",N,N],[17,"TEXTURE_BUFFER_DATA_STORE_BINDING","","",N,N],[17,"TEXTURE_COMPARE_FUNC","","",N,N],[17,"TEXTURE_COMPARE_MODE","","",N,N],[17,"TEXTURE_COMPONENTS","","",N,N],[17,"TEXTURE_COMPRESSED","","",N,N],[17,"TEXTURE_COMPRESSED_IMAGE_SIZE","","",N,N],[17,"TEXTURE_COMPRESSION_HINT","","",N,N],[17,"TEXTURE_COORD_ARRAY","","",N,N],[17,"TEXTURE_COORD_ARRAY_BUFFER_BINDING","","",N,N],[17,"TEXTURE_COORD_ARRAY_POINTER","","",N,N],[17,"TEXTURE_COORD_ARRAY_SIZE","","",N,N],[17,"TEXTURE_COORD_ARRAY_STRIDE","","",N,N],[17,"TEXTURE_COORD_ARRAY_TYPE","","",N,N],[17,"TEXTURE_CUBE_MAP","","",N,N],[17,"TEXTURE_CUBE_MAP_NEGATIVE_X","","",N,N],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Y","","",N,N],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Z","","",N,N],[17,"TEXTURE_CUBE_MAP_POSITIVE_X","","",N,N],[17,"TEXTURE_CUBE_MAP_POSITIVE_Y","","",N,N],[17,"TEXTURE_CUBE_MAP_POSITIVE_Z","","",N,N],[17,"TEXTURE_CUBE_MAP_SEAMLESS","","",N,N],[17,"TEXTURE_DEPTH","","",N,N],[17,"TEXTURE_DEPTH_SIZE","","",N,N],[17,"TEXTURE_DEPTH_TYPE","","",N,N],[17,"TEXTURE_ENV","","",N,N],[17,"TEXTURE_ENV_COLOR","","",N,N],[17,"TEXTURE_ENV_MODE","","",N,N],[17,"TEXTURE_EXTERNAL_OES","","",N,N],[17,"TEXTURE_FILTER_CONTROL","","",N,N],[17,"TEXTURE_FIXED_SAMPLE_LOCATIONS","","",N,N],[17,"TEXTURE_GEN_MODE","","",N,N],[17,"TEXTURE_GEN_Q","","",N,N],[17,"TEXTURE_GEN_R","","",N,N],[17,"TEXTURE_GEN_S","","",N,N],[17,"TEXTURE_GEN_T","","",N,N],[17,"TEXTURE_GREEN_SIZE","","",N,N],[17,"TEXTURE_GREEN_TYPE","","",N,N],[17,"TEXTURE_HEIGHT","","",N,N],[17,"TEXTURE_IMMUTABLE_FORMAT","","",N,N],[17,"TEXTURE_IMMUTABLE_FORMAT_EXT","","",N,N],[17,"TEXTURE_IMMUTABLE_LEVELS","","",N,N],[17,"TEXTURE_INTENSITY_SIZE","","",N,N],[17,"TEXTURE_INTENSITY_TYPE","","",N,N],[17,"TEXTURE_INTERNAL_FORMAT","","",N,N],[17,"TEXTURE_LOD_BIAS","","",N,N],[17,"TEXTURE_LUMINANCE_SIZE","","",N,N],[17,"TEXTURE_LUMINANCE_TYPE","","",N,N],[17,"TEXTURE_MAG_FILTER","","",N,N],[17,"TEXTURE_MATRIX","","",N,N],[17,"TEXTURE_MAX_ANISOTROPY_EXT","","",N,N],[17,"TEXTURE_MAX_LEVEL","","",N,N],[17,"TEXTURE_MAX_LOD","","",N,N],[17,"TEXTURE_MIN_FILTER","","",N,N],[17,"TEXTURE_MIN_LOD","","",N,N],[17,"TEXTURE_PRIORITY","","",N,N],[17,"TEXTURE_RANGE_LENGTH_APPLE","","",N,N],[17,"TEXTURE_RANGE_POINTER_APPLE","","",N,N],[17,"TEXTURE_RECTANGLE","","",N,N],[17,"TEXTURE_RECTANGLE_ARB","","",N,N],[17,"TEXTURE_RED_SIZE","","",N,N],[17,"TEXTURE_RED_TYPE","","",N,N],[17,"TEXTURE_RESIDENT","","",N,N],[17,"TEXTURE_SAMPLES","","",N,N],[17,"TEXTURE_SHARED_SIZE","","",N,N],[17,"TEXTURE_STACK_DEPTH","","",N,N],[17,"TEXTURE_STENCIL_SIZE","","",N,N],[17,"TEXTURE_STORAGE_HINT_APPLE","","",N,N],[17,"TEXTURE_SWIZZLE_A","","",N,N],[17,"TEXTURE_SWIZZLE_B","","",N,N],[17,"TEXTURE_SWIZZLE_G","","",N,N],[17,"TEXTURE_SWIZZLE_R","","",N,N],[17,"TEXTURE_SWIZZLE_RGBA","","",N,N],[17,"TEXTURE_WIDTH","","",N,N],[17,"TEXTURE_WRAP_R","","",N,N],[17,"TEXTURE_WRAP_S","","",N,N],[17,"TEXTURE_WRAP_T","","",N,N],[17,"TIMEOUT_EXPIRED","","",N,N],[17,"TIMEOUT_IGNORED","","",N,N],[17,"TIMESTAMP","","",N,N],[17,"TIMESTAMP_EXT","","",N,N],[17,"TIME_ELAPSED","","",N,N],[17,"TIME_ELAPSED_EXT","","",N,N],[17,"TRANSFORM_BIT","","",N,N],[17,"TRANSFORM_FEEDBACK","","",N,N],[17,"TRANSFORM_FEEDBACK_ACTIVE","","",N,N],[17,"TRANSFORM_FEEDBACK_BINDING","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_BINDING","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_MODE","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_SIZE","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_START","","",N,N],[17,"TRANSFORM_FEEDBACK_PAUSED","","",N,N],[17,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","","",N,N],[17,"TRANSFORM_FEEDBACK_VARYINGS","","",N,N],[17,"TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","","",N,N],[17,"TRANSPOSE_COLOR_MATRIX","","",N,N],[17,"TRANSPOSE_MODELVIEW_MATRIX","","",N,N],[17,"TRANSPOSE_PROJECTION_MATRIX","","",N,N],[17,"TRANSPOSE_TEXTURE_MATRIX","","",N,N],[17,"TRIANGLES","","",N,N],[17,"TRIANGLES_ADJACENCY","","",N,N],[17,"TRIANGLE_FAN","","",N,N],[17,"TRIANGLE_STRIP","","",N,N],[17,"TRIANGLE_STRIP_ADJACENCY","","",N,N],[17,"TRUE","","",N,N],[17,"UNIFORM_ARRAY_STRIDE","","",N,N],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORMS","","",N,N],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","","",N,N],[17,"UNIFORM_BLOCK_BINDING","","",N,N],[17,"UNIFORM_BLOCK_DATA_SIZE","","",N,N],[17,"UNIFORM_BLOCK_INDEX","","",N,N],[17,"UNIFORM_BLOCK_NAME_LENGTH","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","","",N,N],[17,"UNIFORM_BUFFER","","",N,N],[17,"UNIFORM_BUFFER_BINDING","","",N,N],[17,"UNIFORM_BUFFER_OFFSET_ALIGNMENT","","",N,N],[17,"UNIFORM_BUFFER_SIZE","","",N,N],[17,"UNIFORM_BUFFER_START","","",N,N],[17,"UNIFORM_IS_ROW_MAJOR","","",N,N],[17,"UNIFORM_MATRIX_STRIDE","","",N,N],[17,"UNIFORM_NAME_LENGTH","","",N,N],[17,"UNIFORM_OFFSET","","",N,N],[17,"UNIFORM_SIZE","","",N,N],[17,"UNIFORM_TYPE","","",N,N],[17,"UNPACK_ALIGNMENT","","",N,N],[17,"UNPACK_CLIENT_STORAGE_APPLE","","",N,N],[17,"UNPACK_IMAGE_HEIGHT","","",N,N],[17,"UNPACK_LSB_FIRST","","",N,N],[17,"UNPACK_ROW_LENGTH","","",N,N],[17,"UNPACK_SKIP_IMAGES","","",N,N],[17,"UNPACK_SKIP_PIXELS","","",N,N],[17,"UNPACK_SKIP_ROWS","","",N,N],[17,"UNPACK_SWAP_BYTES","","",N,N],[17,"UNSIGNALED","","",N,N],[17,"UNSIGNED_BYTE","","",N,N],[17,"UNSIGNED_BYTE_2_3_3_REV","","",N,N],[17,"UNSIGNED_BYTE_3_3_2","","",N,N],[17,"UNSIGNED_INT","","",N,N],[17,"UNSIGNED_INT_10F_11F_11F_REV","","",N,N],[17,"UNSIGNED_INT_10_10_10_2","","",N,N],[17,"UNSIGNED_INT_24_8","","",N,N],[17,"UNSIGNED_INT_2_10_10_10_REV","","",N,N],[17,"UNSIGNED_INT_5_9_9_9_REV","","",N,N],[17,"UNSIGNED_INT_8_8_8_8","","",N,N],[17,"UNSIGNED_INT_8_8_8_8_REV","","",N,N],[17,"UNSIGNED_INT_SAMPLER_1D","","",N,N],[17,"UNSIGNED_INT_SAMPLER_1D_ARRAY","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D_ARRAY","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D_RECT","","",N,N],[17,"UNSIGNED_INT_SAMPLER_3D","","",N,N],[17,"UNSIGNED_INT_SAMPLER_BUFFER","","",N,N],[17,"UNSIGNED_INT_SAMPLER_CUBE","","",N,N],[17,"UNSIGNED_INT_VEC2","","",N,N],[17,"UNSIGNED_INT_VEC3","","",N,N],[17,"UNSIGNED_INT_VEC4","","",N,N],[17,"UNSIGNED_NORMALIZED","","",N,N],[17,"UNSIGNED_SHORT","","",N,N],[17,"UNSIGNED_SHORT_1_5_5_5_REV","","",N,N],[17,"UNSIGNED_SHORT_4_4_4_4","","",N,N],[17,"UNSIGNED_SHORT_4_4_4_4_REV","","",N,N],[17,"UNSIGNED_SHORT_5_5_5_1","","",N,N],[17,"UNSIGNED_SHORT_5_6_5","","",N,N],[17,"UNSIGNED_SHORT_5_6_5_REV","","",N,N],[17,"UPPER_LEFT","","",N,N],[17,"V2F","","",N,N],[17,"V3F","","",N,N],[17,"VALIDATE_STATUS","","",N,N],[17,"VENDOR","","",N,N],[17,"VERSION","","",N,N],[17,"VERTEX_ARRAY","","",N,N],[17,"VERTEX_ARRAY_BINDING","","",N,N],[17,"VERTEX_ARRAY_BUFFER_BINDING","","",N,N],[17,"VERTEX_ARRAY_KHR","","",N,N],[17,"VERTEX_ARRAY_POINTER","","",N,N],[17,"VERTEX_ARRAY_SIZE","","",N,N],[17,"VERTEX_ARRAY_STRIDE","","",N,N],[17,"VERTEX_ARRAY_TYPE","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_DIVISOR","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_ENABLED","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_INTEGER","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_NORMALIZED","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_POINTER","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_SIZE","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_STRIDE","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_TYPE","","",N,N],[17,"VERTEX_PROGRAM_POINT_SIZE","","",N,N],[17,"VERTEX_PROGRAM_TWO_SIDE","","",N,N],[17,"VERTEX_SHADER","","",N,N],[17,"VIEWPORT","","",N,N],[17,"VIEWPORT_BIT","","",N,N],[17,"WAIT_FAILED","","",N,N],[17,"WEIGHT_ARRAY_BUFFER_BINDING","","",N,N],[17,"WRITE_ONLY","","",N,N],[17,"XOR","","",N,N],[17,"ZERO","","",N,N],[17,"ZOOM_X","","",N,N],[17,"ZOOM_Y","","",N,N],[8,"Gl","","",N,N],[10,"get_type","","",4,[[["self"]],["gltype"]]],[10,"buffer_data_untyped","","",4,N],[10,"buffer_sub_data_untyped","","",4,N],[10,"map_buffer","","",4,N],[10,"map_buffer_range","","",4,N],[10,"unmap_buffer","","",4,[[["self"],["glenum"]],["glboolean"]]],[10,"tex_buffer","","",4,[[["self"],["glenum"],["glenum"],["gluint"]]]],[10,"shader_source","","",4,N],[10,"read_buffer","","",4,[[["self"],["glenum"]]]],[10,"read_pixels_into_buffer","","",4,N],[10,"read_pixels","","",4,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"]],["vec",["u8"]]]],[10,"read_pixels_into_pbo","","",4,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"]]]],[10,"sample_coverage","","",4,[[["self"],["glclampf"],["bool"]]]],[10,"polygon_offset","","",4,[[["self"],["glfloat"],["glfloat"]]]],[10,"pixel_store_i","","",4,[[["self"],["glenum"],["glint"]]]],[10,"gen_buffers","","",4,[[["self"],["glsizei"]],["vec",["gluint"]]]],[10,"gen_renderbuffers","","",4,[[["self"],["glsizei"]],["vec",["gluint"]]]],[10,"gen_framebuffers","","",4,[[["self"],["glsizei"]],["vec",["gluint"]]]],[10,"gen_textures","","",4,[[["self"],["glsizei"]],["vec",["gluint"]]]],[10,"gen_vertex_arrays","","",4,[[["self"],["glsizei"]],["vec",["gluint"]]]],[10,"gen_queries","","",4,[[["self"],["glsizei"]],["vec",["gluint"]]]],[10,"begin_query","","",4,[[["self"],["glenum"],["gluint"]]]],[10,"end_query","","",4,[[["self"],["glenum"]]]],[10,"query_counter","","",4,[[["self"],["gluint"],["glenum"]]]],[10,"get_query_object_iv","","",4,[[["self"],["gluint"],["glenum"]],["i32"]]],[10,"get_query_object_uiv","","",4,[[["self"],["gluint"],["glenum"]],["u32"]]],[10,"get_query_object_i64v","","",4,[[["self"],["gluint"],["glenum"]],["i64"]]],[10,"get_query_object_ui64v","","",4,[[["self"],["gluint"],["glenum"]],["u64"]]],[10,"delete_queries","","",4,N],[10,"delete_vertex_arrays","","",4,N],[10,"delete_buffers","","",4,N],[10,"delete_renderbuffers","","",4,N],[10,"delete_framebuffers","","",4,N],[10,"delete_textures","","",4,N],[10,"framebuffer_renderbuffer","","",4,[[["self"],["glenum"],["glenum"],["glenum"],["gluint"]]]],[10,"renderbuffer_storage","","",4,[[["self"],["glenum"],["glenum"],["glsizei"],["glsizei"]]]],[10,"depth_func","","",4,[[["self"],["glenum"]]]],[10,"active_texture","","",4,[[["self"],["glenum"]]]],[10,"attach_shader","","",4,[[["self"],["gluint"],["gluint"]]]],[10,"bind_attrib_location","","",4,[[["self"],["gluint"],["gluint"],["str"]]]],[10,"get_uniform_iv","","",4,N],[10,"get_uniform_fv","","",4,N],[10,"get_uniform_block_index","","",4,[[["self"],["gluint"],["str"]],["gluint"]]],[10,"get_uniform_indices","","",4,N],[10,"bind_buffer_base","","",4,[[["self"],["glenum"],["gluint"],["gluint"]]]],[10,"bind_buffer_range","","",4,[[["self"],["glenum"],["gluint"],["gluint"],["glintptr"],["glsizeiptr"]]]],[10,"uniform_block_binding","","",4,[[["self"],["gluint"],["gluint"],["gluint"]]]],[10,"bind_buffer","","",4,[[["self"],["glenum"],["gluint"]]]],[10,"bind_vertex_array","","",4,[[["self"],["gluint"]]]],[10,"bind_renderbuffer","","",4,[[["self"],["glenum"],["gluint"]]]],[10,"bind_framebuffer","","",4,[[["self"],["glenum"],["gluint"]]]],[10,"bind_texture","","",4,[[["self"],["glenum"],["gluint"]]]],[10,"draw_buffers","","",4,N],[10,"tex_image_2d","","",4,[[["self"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glint"],["glenum"],["glenum"],["option"]]]],[10,"compressed_tex_image_2d","","",4,N],[10,"compressed_tex_sub_image_2d","","",4,N],[10,"tex_image_3d","","",4,[[["self"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"],["glint"],["glenum"],["glenum"],["option"]]]],[10,"copy_tex_image_2d","","",4,[[["self"],["glenum"],["glint"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glint"]]]],[10,"copy_tex_sub_image_2d","","",4,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[10,"copy_tex_sub_image_3d","","",4,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[10,"tex_sub_image_2d","","",4,N],[10,"tex_sub_image_2d_pbo","","",4,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"],["usize"]]]],[10,"tex_sub_image_3d","","",4,N],[10,"tex_sub_image_3d_pbo","","",4,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"],["glenum"],["glenum"],["usize"]]]],[10,"tex_storage_2d","","",4,[[["self"],["glenum"],["glint"],["glenum"],["glsizei"],["glsizei"]]]],[10,"tex_storage_3d","","",4,[[["self"],["glenum"],["glint"],["glenum"],["glsizei"],["glsizei"],["glsizei"]]]],[10,"get_tex_image_into_buffer","","",4,N],[10,"copy_image_sub_data","","",4,[[["self"],["gluint"],["glenum"],["glint"],["glint"],["glint"],["glint"],["gluint"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"]]]],[10,"invalidate_framebuffer","","",4,N],[10,"invalidate_sub_framebuffer","","",4,N],[10,"get_integer_v","","",4,N],[10,"get_integer_64v","","",4,N],[10,"get_integer_iv","","",4,N],[10,"get_integer_64iv","","",4,N],[10,"get_boolean_v","","",4,N],[10,"get_float_v","","",4,N],[10,"get_framebuffer_attachment_parameter_iv","","",4,[[["self"],["glenum"],["glenum"],["glenum"]],["glint"]]],[10,"get_renderbuffer_parameter_iv","","",4,[[["self"],["glenum"],["glenum"]],["glint"]]],[10,"get_tex_parameter_iv","","",4,[[["self"],["glenum"],["glenum"]],["glint"]]],[10,"get_tex_parameter_fv","","",4,[[["self"],["glenum"],["glenum"]],["glfloat"]]],[10,"tex_parameter_i","","",4,[[["self"],["glenum"],["glenum"],["glint"]]]],[10,"tex_parameter_f","","",4,[[["self"],["glenum"],["glenum"],["glfloat"]]]],[10,"framebuffer_texture_2d","","",4,[[["self"],["glenum"],["glenum"],["glenum"],["gluint"],["glint"]]]],[10,"framebuffer_texture_layer","","",4,[[["self"],["glenum"],["glenum"],["gluint"],["glint"],["glint"]]]],[10,"blit_framebuffer","","",4,[[["self"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glbitfield"],["glenum"]]]],[10,"vertex_attrib_4f","","",4,[[["self"],["gluint"],["glfloat"],["glfloat"],["glfloat"],["glfloat"]]]],[10,"vertex_attrib_pointer_f32","","",4,[[["self"],["gluint"],["glint"],["bool"],["glsizei"],["gluint"]]]],[10,"vertex_attrib_pointer","","",4,[[["self"],["gluint"],["glint"],["glenum"],["bool"],["glsizei"],["gluint"]]]],[10,"vertex_attrib_i_pointer","","",4,[[["self"],["gluint"],["glint"],["glenum"],["glsizei"],["gluint"]]]],[10,"vertex_attrib_divisor","","",4,[[["self"],["gluint"],["gluint"]]]],[10,"viewport","","",4,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[10,"scissor","","",4,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[10,"line_width","","",4,[[["self"],["glfloat"]]]],[10,"use_program","","",4,[[["self"],["gluint"]]]],[10,"validate_program","","",4,[[["self"],["gluint"]]]],[10,"draw_arrays","","",4,[[["self"],["glenum"],["glint"],["glsizei"]]]],[10,"draw_arrays_instanced","","",4,[[["self"],["glenum"],["glint"],["glsizei"],["glsizei"]]]],[10,"draw_elements","","",4,[[["self"],["glenum"],["glsizei"],["glenum"],["gluint"]]]],[10,"draw_elements_instanced","","",4,[[["self"],["glenum"],["glsizei"],["glenum"],["gluint"],["glsizei"]]]],[10,"blend_color","","",4,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[10,"blend_func","","",4,[[["self"],["glenum"],["glenum"]]]],[10,"blend_func_separate","","",4,[[["self"],["glenum"],["glenum"],["glenum"],["glenum"]]]],[10,"blend_equation","","",4,[[["self"],["glenum"]]]],[10,"blend_equation_separate","","",4,[[["self"],["glenum"],["glenum"]]]],[10,"color_mask","","",4,[[["self"],["bool"],["bool"],["bool"],["bool"]]]],[10,"cull_face","","",4,[[["self"],["glenum"]]]],[10,"front_face","","",4,[[["self"],["glenum"]]]],[10,"enable","","",4,[[["self"],["glenum"]]]],[10,"disable","","",4,[[["self"],["glenum"]]]],[10,"hint","","",4,[[["self"],["glenum"],["glenum"]]]],[10,"is_enabled","","",4,[[["self"],["glenum"]],["glboolean"]]],[10,"is_shader","","",4,[[["self"],["gluint"]],["glboolean"]]],[10,"is_texture","","",4,[[["self"],["glenum"]],["glboolean"]]],[10,"is_framebuffer","","",4,[[["self"],["glenum"]],["glboolean"]]],[10,"is_renderbuffer","","",4,[[["self"],["glenum"]],["glboolean"]]],[10,"check_frame_buffer_status","","",4,[[["self"],["glenum"]],["glenum"]]],[10,"enable_vertex_attrib_array","","",4,[[["self"],["gluint"]]]],[10,"disable_vertex_attrib_array","","",4,[[["self"],["gluint"]]]],[10,"uniform_1f","","",4,[[["self"],["glint"],["glfloat"]]]],[10,"uniform_1fv","","",4,N],[10,"uniform_1i","","",4,[[["self"],["glint"],["glint"]]]],[10,"uniform_1iv","","",4,N],[10,"uniform_1ui","","",4,[[["self"],["glint"],["gluint"]]]],[10,"uniform_2f","","",4,[[["self"],["glint"],["glfloat"],["glfloat"]]]],[10,"uniform_2fv","","",4,N],[10,"uniform_2i","","",4,[[["self"],["glint"],["glint"],["glint"]]]],[10,"uniform_2iv","","",4,N],[10,"uniform_2ui","","",4,[[["self"],["glint"],["gluint"],["gluint"]]]],[10,"uniform_3f","","",4,[[["self"],["glint"],["glfloat"],["glfloat"],["glfloat"]]]],[10,"uniform_3fv","","",4,N],[10,"uniform_3i","","",4,[[["self"],["glint"],["glint"],["glint"],["glint"]]]],[10,"uniform_3iv","","",4,N],[10,"uniform_3ui","","",4,[[["self"],["glint"],["gluint"],["gluint"],["gluint"]]]],[10,"uniform_4f","","",4,[[["self"],["glint"],["glfloat"],["glfloat"],["glfloat"],["glfloat"]]]],[10,"uniform_4i","","",4,[[["self"],["glint"],["glint"],["glint"],["glint"],["glint"]]]],[10,"uniform_4iv","","",4,N],[10,"uniform_4ui","","",4,[[["self"],["glint"],["gluint"],["gluint"],["gluint"],["gluint"]]]],[10,"uniform_4fv","","",4,N],[10,"uniform_matrix_2fv","","",4,N],[10,"uniform_matrix_3fv","","",4,N],[10,"uniform_matrix_4fv","","",4,N],[10,"depth_mask","","",4,[[["self"],["bool"]]]],[10,"depth_range","","",4,[[["self"],["f64"],["f64"]]]],[10,"get_active_attrib","","",4,N],[10,"get_active_uniform","","",4,N],[10,"get_active_uniforms_iv","","",4,[[["self"],["gluint"],["vec",["gluint"]],["glenum"]],["vec",["glint"]]]],[10,"get_active_uniform_block_i","","",4,[[["self"],["gluint"],["gluint"],["glenum"]],["glint"]]],[10,"get_active_uniform_block_iv","","",4,[[["self"],["gluint"],["gluint"],["glenum"]],["vec",["glint"]]]],[10,"get_active_uniform_block_name","","",4,[[["self"],["gluint"],["gluint"]],["string"]]],[10,"get_attrib_location","","",4,[[["self"],["gluint"],["str"]],["c_int"]]],[10,"get_frag_data_location","","",4,[[["self"],["gluint"],["str"]],["c_int"]]],[10,"get_uniform_location","","",4,[[["self"],["gluint"],["str"]],["c_int"]]],[10,"get_program_info_log","","",4,[[["self"],["gluint"]],["string"]]],[10,"get_program_iv","","",4,N],[10,"get_program_binary","","",4,N],[10,"program_binary","","",4,N],[10,"program_parameter_i","","",4,[[["self"],["gluint"],["glenum"],["glint"]]]],[10,"get_vertex_attrib_iv","","",4,N],[10,"get_vertex_attrib_fv","","",4,N],[10,"get_vertex_attrib_pointer_v","","",4,[[["self"],["gluint"],["glenum"]],["glsizeiptr"]]],[10,"get_buffer_parameter_iv","","",4,[[["self"],["gluint"],["glenum"]],["glint"]]],[10,"get_shader_info_log","","",4,[[["self"],["gluint"]],["string"]]],[10,"get_string","","",4,[[["self"],["glenum"]],["string"]]],[10,"get_string_i","","",4,[[["self"],["glenum"],["gluint"]],["string"]]],[10,"get_shader_iv","","",4,N],[10,"get_shader_precision_format","","",4,N],[10,"compile_shader","","",4,[[["self"],["gluint"]]]],[10,"create_program","","",4,[[["self"]],["gluint"]]],[10,"delete_program","","",4,[[["self"],["gluint"]]]],[10,"create_shader","","",4,[[["self"],["glenum"]],["gluint"]]],[10,"delete_shader","","",4,[[["self"],["gluint"]]]],[10,"detach_shader","","",4,[[["self"],["gluint"],["gluint"]]]],[10,"link_program","","",4,[[["self"],["gluint"]]]],[10,"clear_color","","",4,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[10,"clear","","",4,[[["self"],["glbitfield"]]]],[10,"clear_depth","","",4,[[["self"],["f64"]]]],[10,"clear_stencil","","",4,[[["self"],["glint"]]]],[10,"flush","","",4,[[["self"]]]],[10,"finish","","",4,[[["self"]]]],[10,"get_error","","",4,[[["self"]],["glenum"]]],[10,"stencil_mask","","",4,[[["self"],["gluint"]]]],[10,"stencil_mask_separate","","",4,[[["self"],["glenum"],["gluint"]]]],[10,"stencil_func","","",4,[[["self"],["glenum"],["glint"],["gluint"]]]],[10,"stencil_func_separate","","",4,[[["self"],["glenum"],["glenum"],["glint"],["gluint"]]]],[10,"stencil_op","","",4,[[["self"],["glenum"],["glenum"],["glenum"]]]],[10,"stencil_op_separate","","",4,[[["self"],["glenum"],["glenum"],["glenum"],["glenum"]]]],[10,"egl_image_target_texture2d_oes","","",4,[[["self"],["glenum"],["gleglimageoes"]]]],[10,"generate_mipmap","","",4,[[["self"],["glenum"]]]],[10,"insert_event_marker_ext","","",4,[[["self"],["str"]]]],[10,"push_group_marker_ext","","",4,[[["self"],["str"]]]],[10,"pop_group_marker_ext","","",4,[[["self"]]]],[10,"debug_message_insert_khr","","",4,[[["self"],["glenum"],["glenum"],["gluint"],["glenum"],["str"]]]],[10,"push_debug_group_khr","","",4,[[["self"],["glenum"],["gluint"],["str"]]]],[10,"pop_debug_group_khr","","",4,[[["self"]]]],[10,"fence_sync","","",4,[[["self"],["glenum"],["glbitfield"]],["glsync"]]],[10,"client_wait_sync","","",4,[[["self"],["glsync"],["glbitfield"],["gluint64"]]]],[10,"wait_sync","","",4,[[["self"],["glsync"],["glbitfield"],["gluint64"]]]],[10,"delete_sync","","",4,[[["self"],["glsync"]]]],[10,"texture_range_apple","","",4,N],[10,"gen_fences_apple","","",4,[[["self"],["glsizei"]],["vec",["gluint"]]]],[10,"delete_fences_apple","","",4,N],[10,"set_fence_apple","","",4,[[["self"],["gluint"]]]],[10,"finish_fence_apple","","",4,[[["self"],["gluint"]]]],[10,"test_fence_apple","","",4,[[["self"],["gluint"]]]],[10,"test_object_apple","","",4,[[["self"],["glenum"],["gluint"]],["glboolean"]]],[10,"finish_object_apple","","",4,[[["self"],["glenum"],["gluint"]]]],[10,"blend_barrier_khr","","",4,[[["self"]]]],[10,"bind_frag_data_location_indexed","","",4,[[["self"],["gluint"],["gluint"],["gluint"],["str"]]]],[10,"get_frag_data_index","","",4,[[["self"],["gluint"],["str"]],["glint"]]],[10,"get_debug_messages","","",4,[[["self"]],["vec",["debugmessage"]]]],[10,"provoking_vertex_angle","","",4,[[["self"],["glenum"]]]],[11,"wrap","","",5,[[["rc",["gl"]]],["rc",["gl"]]]],[11,"wrap","","",6,[[["rc",["gl"]],["f"]],["rc",["gl"]]]],[11,"wrap","","",7,[[["rc",["gl"]],["duration"],["f"]],["rc",["gl"]]]],[11,"load_with","","",8,[[["f"]],["rc",["gl"]]]],[11,"load_with","","",9,[[["f"]],["rc",["gl"]]]],[11,"is_loaded","","Returns `true` if the function has been successfully loaded.",10,[[["self"]],["bool"]]],[11,"load_with","","Load each OpenGL symbol using a custom load function. This…",0,[[["f"]],["gl"]]],[11,"Accum","","",0,N],[11,"ActiveTexture","","",0,N],[11,"AlphaFunc","","",0,N],[11,"AreTexturesResident","","",0,N],[11,"ArrayElement","","",0,N],[11,"AttachShader","","",0,N],[11,"Begin","","",0,N],[11,"BeginConditionalRender","","",0,N],[11,"BeginQuery","","",0,N],[11,"BeginTransformFeedback","","",0,N],[11,"BindAttribLocation","","",0,N],[11,"BindBuffer","","",0,N],[11,"BindBufferBase","","",0,N],[11,"BindBufferRange","","",0,N],[11,"BindFragDataLocation","","",0,N],[11,"BindFragDataLocationIndexed","","",0,N],[11,"BindFramebuffer","","",0,N],[11,"BindRenderbuffer","","",0,N],[11,"BindSampler","","",0,N],[11,"BindTexture","","",0,N],[11,"BindVertexArray","","",0,N],[11,"Bitmap","","",0,N],[11,"BlendBarrierKHR","","",0,N],[11,"BlendColor","","",0,N],[11,"BlendEquation","","",0,N],[11,"BlendEquationSeparate","","",0,N],[11,"BlendFunc","","",0,N],[11,"BlendFuncSeparate","","",0,N],[11,"BlitFramebuffer","","",0,N],[11,"BufferData","","",0,N],[11,"BufferSubData","","",0,N],[11,"CallList","","",0,N],[11,"CallLists","","",0,N],[11,"CheckFramebufferStatus","","",0,[[["self"],["c_uint"]],["c_uint"]]],[11,"ClampColor","","",0,N],[11,"Clear","","",0,N],[11,"ClearAccum","","",0,N],[11,"ClearBufferfi","","",0,N],[11,"ClearBufferfv","","",0,N],[11,"ClearBufferiv","","",0,N],[11,"ClearBufferuiv","","",0,N],[11,"ClearColor","","",0,N],[11,"ClearDepth","","",0,N],[11,"ClearIndex","","",0,N],[11,"ClearStencil","","",0,N],[11,"ClientActiveTexture","","",0,N],[11,"ClientWaitSync","","",0,N],[11,"ClipPlane","","",0,N],[11,"Color3b","","",0,N],[11,"Color3bv","","",0,N],[11,"Color3d","","",0,N],[11,"Color3dv","","",0,N],[11,"Color3f","","",0,N],[11,"Color3fv","","",0,N],[11,"Color3i","","",0,N],[11,"Color3iv","","",0,N],[11,"Color3s","","",0,N],[11,"Color3sv","","",0,N],[11,"Color3ub","","",0,N],[11,"Color3ubv","","",0,N],[11,"Color3ui","","",0,N],[11,"Color3uiv","","",0,N],[11,"Color3us","","",0,N],[11,"Color3usv","","",0,N],[11,"Color4b","","",0,N],[11,"Color4bv","","",0,N],[11,"Color4d","","",0,N],[11,"Color4dv","","",0,N],[11,"Color4f","","",0,N],[11,"Color4fv","","",0,N],[11,"Color4i","","",0,N],[11,"Color4iv","","",0,N],[11,"Color4s","","",0,N],[11,"Color4sv","","",0,N],[11,"Color4ub","","",0,N],[11,"Color4ubv","","",0,N],[11,"Color4ui","","",0,N],[11,"Color4uiv","","",0,N],[11,"Color4us","","",0,N],[11,"Color4usv","","",0,N],[11,"ColorMask","","",0,N],[11,"ColorMaski","","",0,N],[11,"ColorMaterial","","",0,N],[11,"ColorP3ui","","",0,N],[11,"ColorP3uiv","","",0,N],[11,"ColorP4ui","","",0,N],[11,"ColorP4uiv","","",0,N],[11,"ColorPointer","","",0,N],[11,"CompileShader","","",0,N],[11,"CompressedTexImage1D","","",0,N],[11,"CompressedTexImage2D","","",0,N],[11,"CompressedTexImage3D","","",0,N],[11,"CompressedTexSubImage1D","","",0,N],[11,"CompressedTexSubImage2D","","",0,N],[11,"CompressedTexSubImage3D","","",0,N],[11,"CopyBufferSubData","","",0,N],[11,"CopyImageSubData","","",0,N],[11,"CopyPixels","","",0,N],[11,"CopyTexImage1D","","",0,N],[11,"CopyTexImage2D","","",0,N],[11,"CopyTexSubImage1D","","",0,N],[11,"CopyTexSubImage2D","","",0,N],[11,"CopyTexSubImage3D","","",0,N],[11,"CreateProgram","","",0,[[["self"]],["c_uint"]]],[11,"CreateShader","","",0,[[["self"],["c_uint"]],["c_uint"]]],[11,"CullFace","","",0,N],[11,"DebugMessageCallback","","",0,N],[11,"DebugMessageCallbackKHR","","",0,N],[11,"DebugMessageControl","","",0,N],[11,"DebugMessageControlKHR","","",0,N],[11,"DebugMessageInsert","","",0,N],[11,"DebugMessageInsertKHR","","",0,N],[11,"DeleteBuffers","","",0,N],[11,"DeleteFencesAPPLE","","",0,N],[11,"DeleteFramebuffers","","",0,N],[11,"DeleteLists","","",0,N],[11,"DeleteProgram","","",0,N],[11,"DeleteQueries","","",0,N],[11,"DeleteRenderbuffers","","",0,N],[11,"DeleteSamplers","","",0,N],[11,"DeleteShader","","",0,N],[11,"DeleteSync","","",0,N],[11,"DeleteTextures","","",0,N],[11,"DeleteVertexArrays","","",0,N],[11,"DepthFunc","","",0,N],[11,"DepthMask","","",0,N],[11,"DepthRange","","",0,N],[11,"DetachShader","","",0,N],[11,"Disable","","",0,N],[11,"DisableClientState","","",0,N],[11,"DisableVertexAttribArray","","",0,N],[11,"Disablei","","",0,N],[11,"DrawArrays","","",0,N],[11,"DrawArraysInstanced","","",0,N],[11,"DrawBuffer","","",0,N],[11,"DrawBuffers","","",0,N],[11,"DrawElements","","",0,N],[11,"DrawElementsBaseVertex","","",0,N],[11,"DrawElementsInstanced","","",0,N],[11,"DrawElementsInstancedBaseVertex","","",0,N],[11,"DrawPixels","","",0,N],[11,"DrawRangeElements","","",0,N],[11,"DrawRangeElementsBaseVertex","","",0,N],[11,"EdgeFlag","","",0,N],[11,"EdgeFlagPointer","","",0,N],[11,"EdgeFlagv","","",0,N],[11,"Enable","","",0,N],[11,"EnableClientState","","",0,N],[11,"EnableVertexAttribArray","","",0,N],[11,"Enablei","","",0,N],[11,"End","","",0,N],[11,"EndConditionalRender","","",0,N],[11,"EndList","","",0,N],[11,"EndQuery","","",0,N],[11,"EndTransformFeedback","","",0,N],[11,"EvalCoord1d","","",0,N],[11,"EvalCoord1dv","","",0,N],[11,"EvalCoord1f","","",0,N],[11,"EvalCoord1fv","","",0,N],[11,"EvalCoord2d","","",0,N],[11,"EvalCoord2dv","","",0,N],[11,"EvalCoord2f","","",0,N],[11,"EvalCoord2fv","","",0,N],[11,"EvalMesh1","","",0,N],[11,"EvalMesh2","","",0,N],[11,"EvalPoint1","","",0,N],[11,"EvalPoint2","","",0,N],[11,"FeedbackBuffer","","",0,N],[11,"FenceSync","","",0,N],[11,"Finish","","",0,N],[11,"FinishFenceAPPLE","","",0,N],[11,"FinishObjectAPPLE","","",0,N],[11,"Flush","","",0,N],[11,"FlushMappedBufferRange","","",0,N],[11,"FogCoordPointer","","",0,N],[11,"FogCoordd","","",0,N],[11,"FogCoorddv","","",0,N],[11,"FogCoordf","","",0,N],[11,"FogCoordfv","","",0,N],[11,"Fogf","","",0,N],[11,"Fogfv","","",0,N],[11,"Fogi","","",0,N],[11,"Fogiv","","",0,N],[11,"FramebufferRenderbuffer","","",0,N],[11,"FramebufferTexture","","",0,N],[11,"FramebufferTexture1D","","",0,N],[11,"FramebufferTexture2D","","",0,N],[11,"FramebufferTexture3D","","",0,N],[11,"FramebufferTextureLayer","","",0,N],[11,"FrontFace","","",0,N],[11,"Frustum","","",0,N],[11,"GenBuffers","","",0,N],[11,"GenFencesAPPLE","","",0,N],[11,"GenFramebuffers","","",0,N],[11,"GenLists","","",0,[[["self"],["c_int"]],["c_uint"]]],[11,"GenQueries","","",0,N],[11,"GenRenderbuffers","","",0,N],[11,"GenSamplers","","",0,N],[11,"GenTextures","","",0,N],[11,"GenVertexArrays","","",0,N],[11,"GenerateMipmap","","",0,N],[11,"GetActiveAttrib","","",0,N],[11,"GetActiveUniform","","",0,N],[11,"GetActiveUniformBlockName","","",0,N],[11,"GetActiveUniformBlockiv","","",0,N],[11,"GetActiveUniformName","","",0,N],[11,"GetActiveUniformsiv","","",0,N],[11,"GetAttachedShaders","","",0,N],[11,"GetAttribLocation","","",0,N],[11,"GetBooleani_v","","",0,N],[11,"GetBooleanv","","",0,N],[11,"GetBufferParameteri64v","","",0,N],[11,"GetBufferParameteriv","","",0,N],[11,"GetBufferPointerv","","",0,N],[11,"GetBufferSubData","","",0,N],[11,"GetClipPlane","","",0,N],[11,"GetCompressedTexImage","","",0,N],[11,"GetDebugMessageLog","","",0,N],[11,"GetDebugMessageLogKHR","","",0,N],[11,"GetDoublev","","",0,N],[11,"GetError","","",0,[[["self"]],["c_uint"]]],[11,"GetFloatv","","",0,N],[11,"GetFragDataIndex","","",0,N],[11,"GetFragDataLocation","","",0,N],[11,"GetFramebufferAttachmentParameteriv","","",0,N],[11,"GetInteger64i_v","","",0,N],[11,"GetInteger64v","","",0,N],[11,"GetIntegeri_v","","",0,N],[11,"GetIntegerv","","",0,N],[11,"GetLightfv","","",0,N],[11,"GetLightiv","","",0,N],[11,"GetMapdv","","",0,N],[11,"GetMapfv","","",0,N],[11,"GetMapiv","","",0,N],[11,"GetMaterialfv","","",0,N],[11,"GetMaterialiv","","",0,N],[11,"GetMultisamplefv","","",0,N],[11,"GetObjectLabel","","",0,N],[11,"GetObjectLabelKHR","","",0,N],[11,"GetObjectPtrLabel","","",0,N],[11,"GetObjectPtrLabelKHR","","",0,N],[11,"GetPixelMapfv","","",0,N],[11,"GetPixelMapuiv","","",0,N],[11,"GetPixelMapusv","","",0,N],[11,"GetPointerv","","",0,N],[11,"GetPointervKHR","","",0,N],[11,"GetPolygonStipple","","",0,N],[11,"GetProgramBinary","","",0,N],[11,"GetProgramInfoLog","","",0,N],[11,"GetProgramiv","","",0,N],[11,"GetQueryObjecti64v","","",0,N],[11,"GetQueryObjectiv","","",0,N],[11,"GetQueryObjectui64v","","",0,N],[11,"GetQueryObjectuiv","","",0,N],[11,"GetQueryiv","","",0,N],[11,"GetRenderbufferParameteriv","","",0,N],[11,"GetSamplerParameterIiv","","",0,N],[11,"GetSamplerParameterIuiv","","",0,N],[11,"GetSamplerParameterfv","","",0,N],[11,"GetSamplerParameteriv","","",0,N],[11,"GetShaderInfoLog","","",0,N],[11,"GetShaderSource","","",0,N],[11,"GetShaderiv","","",0,N],[11,"GetString","","",0,N],[11,"GetStringi","","",0,N],[11,"GetSynciv","","",0,N],[11,"GetTexEnvfv","","",0,N],[11,"GetTexEnviv","","",0,N],[11,"GetTexGendv","","",0,N],[11,"GetTexGenfv","","",0,N],[11,"GetTexGeniv","","",0,N],[11,"GetTexImage","","",0,N],[11,"GetTexLevelParameterfv","","",0,N],[11,"GetTexLevelParameteriv","","",0,N],[11,"GetTexParameterIiv","","",0,N],[11,"GetTexParameterIuiv","","",0,N],[11,"GetTexParameterPointervAPPLE","","",0,N],[11,"GetTexParameterfv","","",0,N],[11,"GetTexParameteriv","","",0,N],[11,"GetTransformFeedbackVarying","","",0,N],[11,"GetUniformBlockIndex","","",0,N],[11,"GetUniformIndices","","",0,N],[11,"GetUniformLocation","","",0,N],[11,"GetUniformfv","","",0,N],[11,"GetUniformiv","","",0,N],[11,"GetUniformuiv","","",0,N],[11,"GetVertexAttribIiv","","",0,N],[11,"GetVertexAttribIuiv","","",0,N],[11,"GetVertexAttribPointerv","","",0,N],[11,"GetVertexAttribdv","","",0,N],[11,"GetVertexAttribfv","","",0,N],[11,"GetVertexAttribiv","","",0,N],[11,"Hint","","",0,N],[11,"IndexMask","","",0,N],[11,"IndexPointer","","",0,N],[11,"Indexd","","",0,N],[11,"Indexdv","","",0,N],[11,"Indexf","","",0,N],[11,"Indexfv","","",0,N],[11,"Indexi","","",0,N],[11,"Indexiv","","",0,N],[11,"Indexs","","",0,N],[11,"Indexsv","","",0,N],[11,"Indexub","","",0,N],[11,"Indexubv","","",0,N],[11,"InitNames","","",0,N],[11,"InsertEventMarkerEXT","","",0,N],[11,"InterleavedArrays","","",0,N],[11,"InvalidateBufferData","","",0,N],[11,"InvalidateBufferSubData","","",0,N],[11,"InvalidateFramebuffer","","",0,N],[11,"InvalidateSubFramebuffer","","",0,N],[11,"InvalidateTexImage","","",0,N],[11,"InvalidateTexSubImage","","",0,N],[11,"IsBuffer","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsEnabled","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsEnabledi","","",0,[[["self"],["c_uint"],["c_uint"]],["c_uchar"]]],[11,"IsFenceAPPLE","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsFramebuffer","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsList","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsProgram","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsQuery","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsRenderbuffer","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsSampler","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsShader","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsSync","","",0,N],[11,"IsTexture","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsVertexArray","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"LightModelf","","",0,N],[11,"LightModelfv","","",0,N],[11,"LightModeli","","",0,N],[11,"LightModeliv","","",0,N],[11,"Lightf","","",0,N],[11,"Lightfv","","",0,N],[11,"Lighti","","",0,N],[11,"Lightiv","","",0,N],[11,"LineStipple","","",0,N],[11,"LineWidth","","",0,N],[11,"LinkProgram","","",0,N],[11,"ListBase","","",0,N],[11,"LoadIdentity","","",0,N],[11,"LoadMatrixd","","",0,N],[11,"LoadMatrixf","","",0,N],[11,"LoadName","","",0,N],[11,"LoadTransposeMatrixd","","",0,N],[11,"LoadTransposeMatrixf","","",0,N],[11,"LogicOp","","",0,N],[11,"Map1d","","",0,N],[11,"Map1f","","",0,N],[11,"Map2d","","",0,N],[11,"Map2f","","",0,N],[11,"MapBuffer","","",0,N],[11,"MapBufferRange","","",0,N],[11,"MapGrid1d","","",0,N],[11,"MapGrid1f","","",0,N],[11,"MapGrid2d","","",0,N],[11,"MapGrid2f","","",0,N],[11,"Materialf","","",0,N],[11,"Materialfv","","",0,N],[11,"Materiali","","",0,N],[11,"Materialiv","","",0,N],[11,"MatrixMode","","",0,N],[11,"MultMatrixd","","",0,N],[11,"MultMatrixf","","",0,N],[11,"MultTransposeMatrixd","","",0,N],[11,"MultTransposeMatrixf","","",0,N],[11,"MultiDrawArrays","","",0,N],[11,"MultiDrawElements","","",0,N],[11,"MultiDrawElementsBaseVertex","","",0,N],[11,"MultiTexCoord1d","","",0,N],[11,"MultiTexCoord1dv","","",0,N],[11,"MultiTexCoord1f","","",0,N],[11,"MultiTexCoord1fv","","",0,N],[11,"MultiTexCoord1i","","",0,N],[11,"MultiTexCoord1iv","","",0,N],[11,"MultiTexCoord1s","","",0,N],[11,"MultiTexCoord1sv","","",0,N],[11,"MultiTexCoord2d","","",0,N],[11,"MultiTexCoord2dv","","",0,N],[11,"MultiTexCoord2f","","",0,N],[11,"MultiTexCoord2fv","","",0,N],[11,"MultiTexCoord2i","","",0,N],[11,"MultiTexCoord2iv","","",0,N],[11,"MultiTexCoord2s","","",0,N],[11,"MultiTexCoord2sv","","",0,N],[11,"MultiTexCoord3d","","",0,N],[11,"MultiTexCoord3dv","","",0,N],[11,"MultiTexCoord3f","","",0,N],[11,"MultiTexCoord3fv","","",0,N],[11,"MultiTexCoord3i","","",0,N],[11,"MultiTexCoord3iv","","",0,N],[11,"MultiTexCoord3s","","",0,N],[11,"MultiTexCoord3sv","","",0,N],[11,"MultiTexCoord4d","","",0,N],[11,"MultiTexCoord4dv","","",0,N],[11,"MultiTexCoord4f","","",0,N],[11,"MultiTexCoord4fv","","",0,N],[11,"MultiTexCoord4i","","",0,N],[11,"MultiTexCoord4iv","","",0,N],[11,"MultiTexCoord4s","","",0,N],[11,"MultiTexCoord4sv","","",0,N],[11,"MultiTexCoordP1ui","","",0,N],[11,"MultiTexCoordP1uiv","","",0,N],[11,"MultiTexCoordP2ui","","",0,N],[11,"MultiTexCoordP2uiv","","",0,N],[11,"MultiTexCoordP3ui","","",0,N],[11,"MultiTexCoordP3uiv","","",0,N],[11,"MultiTexCoordP4ui","","",0,N],[11,"MultiTexCoordP4uiv","","",0,N],[11,"NewList","","",0,N],[11,"Normal3b","","",0,N],[11,"Normal3bv","","",0,N],[11,"Normal3d","","",0,N],[11,"Normal3dv","","",0,N],[11,"Normal3f","","",0,N],[11,"Normal3fv","","",0,N],[11,"Normal3i","","",0,N],[11,"Normal3iv","","",0,N],[11,"Normal3s","","",0,N],[11,"Normal3sv","","",0,N],[11,"NormalP3ui","","",0,N],[11,"NormalP3uiv","","",0,N],[11,"NormalPointer","","",0,N],[11,"ObjectLabel","","",0,N],[11,"ObjectLabelKHR","","",0,N],[11,"ObjectPtrLabel","","",0,N],[11,"ObjectPtrLabelKHR","","",0,N],[11,"Ortho","","",0,N],[11,"PassThrough","","",0,N],[11,"PixelMapfv","","",0,N],[11,"PixelMapuiv","","",0,N],[11,"PixelMapusv","","",0,N],[11,"PixelStoref","","",0,N],[11,"PixelStorei","","",0,N],[11,"PixelTransferf","","",0,N],[11,"PixelTransferi","","",0,N],[11,"PixelZoom","","",0,N],[11,"PointParameterf","","",0,N],[11,"PointParameterfv","","",0,N],[11,"PointParameteri","","",0,N],[11,"PointParameteriv","","",0,N],[11,"PointSize","","",0,N],[11,"PolygonMode","","",0,N],[11,"PolygonOffset","","",0,N],[11,"PolygonStipple","","",0,N],[11,"PopAttrib","","",0,N],[11,"PopClientAttrib","","",0,N],[11,"PopDebugGroup","","",0,N],[11,"PopDebugGroupKHR","","",0,N],[11,"PopGroupMarkerEXT","","",0,N],[11,"PopMatrix","","",0,N],[11,"PopName","","",0,N],[11,"PrimitiveRestartIndex","","",0,N],[11,"PrioritizeTextures","","",0,N],[11,"ProgramBinary","","",0,N],[11,"ProgramParameteri","","",0,N],[11,"ProvokingVertex","","",0,N],[11,"PushAttrib","","",0,N],[11,"PushClientAttrib","","",0,N],[11,"PushDebugGroup","","",0,N],[11,"PushDebugGroupKHR","","",0,N],[11,"PushGroupMarkerEXT","","",0,N],[11,"PushMatrix","","",0,N],[11,"PushName","","",0,N],[11,"QueryCounter","","",0,N],[11,"RasterPos2d","","",0,N],[11,"RasterPos2dv","","",0,N],[11,"RasterPos2f","","",0,N],[11,"RasterPos2fv","","",0,N],[11,"RasterPos2i","","",0,N],[11,"RasterPos2iv","","",0,N],[11,"RasterPos2s","","",0,N],[11,"RasterPos2sv","","",0,N],[11,"RasterPos3d","","",0,N],[11,"RasterPos3dv","","",0,N],[11,"RasterPos3f","","",0,N],[11,"RasterPos3fv","","",0,N],[11,"RasterPos3i","","",0,N],[11,"RasterPos3iv","","",0,N],[11,"RasterPos3s","","",0,N],[11,"RasterPos3sv","","",0,N],[11,"RasterPos4d","","",0,N],[11,"RasterPos4dv","","",0,N],[11,"RasterPos4f","","",0,N],[11,"RasterPos4fv","","",0,N],[11,"RasterPos4i","","",0,N],[11,"RasterPos4iv","","",0,N],[11,"RasterPos4s","","",0,N],[11,"RasterPos4sv","","",0,N],[11,"ReadBuffer","","",0,N],[11,"ReadPixels","","",0,N],[11,"Rectd","","",0,N],[11,"Rectdv","","",0,N],[11,"Rectf","","",0,N],[11,"Rectfv","","",0,N],[11,"Recti","","",0,N],[11,"Rectiv","","",0,N],[11,"Rects","","",0,N],[11,"Rectsv","","",0,N],[11,"RenderMode","","",0,[[["self"],["c_uint"]],["c_int"]]],[11,"RenderbufferStorage","","",0,N],[11,"RenderbufferStorageMultisample","","",0,N],[11,"Rotated","","",0,N],[11,"Rotatef","","",0,N],[11,"SampleCoverage","","",0,N],[11,"SampleMaski","","",0,N],[11,"SamplerParameterIiv","","",0,N],[11,"SamplerParameterIuiv","","",0,N],[11,"SamplerParameterf","","",0,N],[11,"SamplerParameterfv","","",0,N],[11,"SamplerParameteri","","",0,N],[11,"SamplerParameteriv","","",0,N],[11,"Scaled","","",0,N],[11,"Scalef","","",0,N],[11,"Scissor","","",0,N],[11,"SecondaryColor3b","","",0,N],[11,"SecondaryColor3bv","","",0,N],[11,"SecondaryColor3d","","",0,N],[11,"SecondaryColor3dv","","",0,N],[11,"SecondaryColor3f","","",0,N],[11,"SecondaryColor3fv","","",0,N],[11,"SecondaryColor3i","","",0,N],[11,"SecondaryColor3iv","","",0,N],[11,"SecondaryColor3s","","",0,N],[11,"SecondaryColor3sv","","",0,N],[11,"SecondaryColor3ub","","",0,N],[11,"SecondaryColor3ubv","","",0,N],[11,"SecondaryColor3ui","","",0,N],[11,"SecondaryColor3uiv","","",0,N],[11,"SecondaryColor3us","","",0,N],[11,"SecondaryColor3usv","","",0,N],[11,"SecondaryColorP3ui","","",0,N],[11,"SecondaryColorP3uiv","","",0,N],[11,"SecondaryColorPointer","","",0,N],[11,"SelectBuffer","","",0,N],[11,"SetFenceAPPLE","","",0,N],[11,"ShadeModel","","",0,N],[11,"ShaderSource","","",0,N],[11,"StencilFunc","","",0,N],[11,"StencilFuncSeparate","","",0,N],[11,"StencilMask","","",0,N],[11,"StencilMaskSeparate","","",0,N],[11,"StencilOp","","",0,N],[11,"StencilOpSeparate","","",0,N],[11,"TestFenceAPPLE","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"TestObjectAPPLE","","",0,[[["self"],["c_uint"],["c_uint"]],["c_uchar"]]],[11,"TexBuffer","","",0,N],[11,"TexCoord1d","","",0,N],[11,"TexCoord1dv","","",0,N],[11,"TexCoord1f","","",0,N],[11,"TexCoord1fv","","",0,N],[11,"TexCoord1i","","",0,N],[11,"TexCoord1iv","","",0,N],[11,"TexCoord1s","","",0,N],[11,"TexCoord1sv","","",0,N],[11,"TexCoord2d","","",0,N],[11,"TexCoord2dv","","",0,N],[11,"TexCoord2f","","",0,N],[11,"TexCoord2fv","","",0,N],[11,"TexCoord2i","","",0,N],[11,"TexCoord2iv","","",0,N],[11,"TexCoord2s","","",0,N],[11,"TexCoord2sv","","",0,N],[11,"TexCoord3d","","",0,N],[11,"TexCoord3dv","","",0,N],[11,"TexCoord3f","","",0,N],[11,"TexCoord3fv","","",0,N],[11,"TexCoord3i","","",0,N],[11,"TexCoord3iv","","",0,N],[11,"TexCoord3s","","",0,N],[11,"TexCoord3sv","","",0,N],[11,"TexCoord4d","","",0,N],[11,"TexCoord4dv","","",0,N],[11,"TexCoord4f","","",0,N],[11,"TexCoord4fv","","",0,N],[11,"TexCoord4i","","",0,N],[11,"TexCoord4iv","","",0,N],[11,"TexCoord4s","","",0,N],[11,"TexCoord4sv","","",0,N],[11,"TexCoordP1ui","","",0,N],[11,"TexCoordP1uiv","","",0,N],[11,"TexCoordP2ui","","",0,N],[11,"TexCoordP2uiv","","",0,N],[11,"TexCoordP3ui","","",0,N],[11,"TexCoordP3uiv","","",0,N],[11,"TexCoordP4ui","","",0,N],[11,"TexCoordP4uiv","","",0,N],[11,"TexCoordPointer","","",0,N],[11,"TexEnvf","","",0,N],[11,"TexEnvfv","","",0,N],[11,"TexEnvi","","",0,N],[11,"TexEnviv","","",0,N],[11,"TexGend","","",0,N],[11,"TexGendv","","",0,N],[11,"TexGenf","","",0,N],[11,"TexGenfv","","",0,N],[11,"TexGeni","","",0,N],[11,"TexGeniv","","",0,N],[11,"TexImage1D","","",0,N],[11,"TexImage2D","","",0,N],[11,"TexImage2DMultisample","","",0,N],[11,"TexImage3D","","",0,N],[11,"TexImage3DMultisample","","",0,N],[11,"TexParameterIiv","","",0,N],[11,"TexParameterIuiv","","",0,N],[11,"TexParameterf","","",0,N],[11,"TexParameterfv","","",0,N],[11,"TexParameteri","","",0,N],[11,"TexParameteriv","","",0,N],[11,"TexStorage1D","","",0,N],[11,"TexStorage2D","","",0,N],[11,"TexStorage3D","","",0,N],[11,"TexSubImage1D","","",0,N],[11,"TexSubImage2D","","",0,N],[11,"TexSubImage3D","","",0,N],[11,"TextureRangeAPPLE","","",0,N],[11,"TransformFeedbackVaryings","","",0,N],[11,"Translated","","",0,N],[11,"Translatef","","",0,N],[11,"Uniform1f","","",0,N],[11,"Uniform1fv","","",0,N],[11,"Uniform1i","","",0,N],[11,"Uniform1iv","","",0,N],[11,"Uniform1ui","","",0,N],[11,"Uniform1uiv","","",0,N],[11,"Uniform2f","","",0,N],[11,"Uniform2fv","","",0,N],[11,"Uniform2i","","",0,N],[11,"Uniform2iv","","",0,N],[11,"Uniform2ui","","",0,N],[11,"Uniform2uiv","","",0,N],[11,"Uniform3f","","",0,N],[11,"Uniform3fv","","",0,N],[11,"Uniform3i","","",0,N],[11,"Uniform3iv","","",0,N],[11,"Uniform3ui","","",0,N],[11,"Uniform3uiv","","",0,N],[11,"Uniform4f","","",0,N],[11,"Uniform4fv","","",0,N],[11,"Uniform4i","","",0,N],[11,"Uniform4iv","","",0,N],[11,"Uniform4ui","","",0,N],[11,"Uniform4uiv","","",0,N],[11,"UniformBlockBinding","","",0,N],[11,"UniformMatrix2fv","","",0,N],[11,"UniformMatrix2x3fv","","",0,N],[11,"UniformMatrix2x4fv","","",0,N],[11,"UniformMatrix3fv","","",0,N],[11,"UniformMatrix3x2fv","","",0,N],[11,"UniformMatrix3x4fv","","",0,N],[11,"UniformMatrix4fv","","",0,N],[11,"UniformMatrix4x2fv","","",0,N],[11,"UniformMatrix4x3fv","","",0,N],[11,"UnmapBuffer","","",0,[[["self"],["c_uint"]],["c_uchar"]]],[11,"UseProgram","","",0,N],[11,"ValidateProgram","","",0,N],[11,"Vertex2d","","",0,N],[11,"Vertex2dv","","",0,N],[11,"Vertex2f","","",0,N],[11,"Vertex2fv","","",0,N],[11,"Vertex2i","","",0,N],[11,"Vertex2iv","","",0,N],[11,"Vertex2s","","",0,N],[11,"Vertex2sv","","",0,N],[11,"Vertex3d","","",0,N],[11,"Vertex3dv","","",0,N],[11,"Vertex3f","","",0,N],[11,"Vertex3fv","","",0,N],[11,"Vertex3i","","",0,N],[11,"Vertex3iv","","",0,N],[11,"Vertex3s","","",0,N],[11,"Vertex3sv","","",0,N],[11,"Vertex4d","","",0,N],[11,"Vertex4dv","","",0,N],[11,"Vertex4f","","",0,N],[11,"Vertex4fv","","",0,N],[11,"Vertex4i","","",0,N],[11,"Vertex4iv","","",0,N],[11,"Vertex4s","","",0,N],[11,"Vertex4sv","","",0,N],[11,"VertexAttrib1d","","",0,N],[11,"VertexAttrib1dv","","",0,N],[11,"VertexAttrib1f","","",0,N],[11,"VertexAttrib1fv","","",0,N],[11,"VertexAttrib1s","","",0,N],[11,"VertexAttrib1sv","","",0,N],[11,"VertexAttrib2d","","",0,N],[11,"VertexAttrib2dv","","",0,N],[11,"VertexAttrib2f","","",0,N],[11,"VertexAttrib2fv","","",0,N],[11,"VertexAttrib2s","","",0,N],[11,"VertexAttrib2sv","","",0,N],[11,"VertexAttrib3d","","",0,N],[11,"VertexAttrib3dv","","",0,N],[11,"VertexAttrib3f","","",0,N],[11,"VertexAttrib3fv","","",0,N],[11,"VertexAttrib3s","","",0,N],[11,"VertexAttrib3sv","","",0,N],[11,"VertexAttrib4Nbv","","",0,N],[11,"VertexAttrib4Niv","","",0,N],[11,"VertexAttrib4Nsv","","",0,N],[11,"VertexAttrib4Nub","","",0,N],[11,"VertexAttrib4Nubv","","",0,N],[11,"VertexAttrib4Nuiv","","",0,N],[11,"VertexAttrib4Nusv","","",0,N],[11,"VertexAttrib4bv","","",0,N],[11,"VertexAttrib4d","","",0,N],[11,"VertexAttrib4dv","","",0,N],[11,"VertexAttrib4f","","",0,N],[11,"VertexAttrib4fv","","",0,N],[11,"VertexAttrib4iv","","",0,N],[11,"VertexAttrib4s","","",0,N],[11,"VertexAttrib4sv","","",0,N],[11,"VertexAttrib4ubv","","",0,N],[11,"VertexAttrib4uiv","","",0,N],[11,"VertexAttrib4usv","","",0,N],[11,"VertexAttribDivisor","","",0,N],[11,"VertexAttribI1i","","",0,N],[11,"VertexAttribI1iv","","",0,N],[11,"VertexAttribI1ui","","",0,N],[11,"VertexAttribI1uiv","","",0,N],[11,"VertexAttribI2i","","",0,N],[11,"VertexAttribI2iv","","",0,N],[11,"VertexAttribI2ui","","",0,N],[11,"VertexAttribI2uiv","","",0,N],[11,"VertexAttribI3i","","",0,N],[11,"VertexAttribI3iv","","",0,N],[11,"VertexAttribI3ui","","",0,N],[11,"VertexAttribI3uiv","","",0,N],[11,"VertexAttribI4bv","","",0,N],[11,"VertexAttribI4i","","",0,N],[11,"VertexAttribI4iv","","",0,N],[11,"VertexAttribI4sv","","",0,N],[11,"VertexAttribI4ubv","","",0,N],[11,"VertexAttribI4ui","","",0,N],[11,"VertexAttribI4uiv","","",0,N],[11,"VertexAttribI4usv","","",0,N],[11,"VertexAttribIPointer","","",0,N],[11,"VertexAttribP1ui","","",0,N],[11,"VertexAttribP1uiv","","",0,N],[11,"VertexAttribP2ui","","",0,N],[11,"VertexAttribP2uiv","","",0,N],[11,"VertexAttribP3ui","","",0,N],[11,"VertexAttribP3uiv","","",0,N],[11,"VertexAttribP4ui","","",0,N],[11,"VertexAttribP4uiv","","",0,N],[11,"VertexAttribPointer","","",0,N],[11,"VertexP2ui","","",0,N],[11,"VertexP2uiv","","",0,N],[11,"VertexP3ui","","",0,N],[11,"VertexP3uiv","","",0,N],[11,"VertexP4ui","","",0,N],[11,"VertexP4uiv","","",0,N],[11,"VertexPointer","","",0,N],[11,"Viewport","","",0,N],[11,"WaitSync","","",0,N],[11,"WindowPos2d","","",0,N],[11,"WindowPos2dv","","",0,N],[11,"WindowPos2f","","",0,N],[11,"WindowPos2fv","","",0,N],[11,"WindowPos2i","","",0,N],[11,"WindowPos2iv","","",0,N],[11,"WindowPos2s","","",0,N],[11,"WindowPos2sv","","",0,N],[11,"WindowPos3d","","",0,N],[11,"WindowPos3dv","","",0,N],[11,"WindowPos3f","","",0,N],[11,"WindowPos3fv","","",0,N],[11,"WindowPos3i","","",0,N],[11,"WindowPos3iv","","",0,N],[11,"WindowPos3s","","",0,N],[11,"WindowPos3sv","","",0,N],[11,"load_with","","Load each OpenGL symbol using a custom load function. This…",1,[[["f"]],["gles2"]]],[11,"ActiveTexture","","",1,N],[11,"AttachShader","","",1,N],[11,"BeginQuery","","",1,N],[11,"BeginQueryEXT","","",1,N],[11,"BeginTransformFeedback","","",1,N],[11,"BindAttribLocation","","",1,N],[11,"BindBuffer","","",1,N],[11,"BindBufferBase","","",1,N],[11,"BindBufferRange","","",1,N],[11,"BindFramebuffer","","",1,N],[11,"BindRenderbuffer","","",1,N],[11,"BindSampler","","",1,N],[11,"BindTexture","","",1,N],[11,"BindTransformFeedback","","",1,N],[11,"BindVertexArray","","",1,N],[11,"BlendBarrierKHR","","",1,N],[11,"BlendColor","","",1,N],[11,"BlendEquation","","",1,N],[11,"BlendEquationSeparate","","",1,N],[11,"BlendFunc","","",1,N],[11,"BlendFuncSeparate","","",1,N],[11,"BlitFramebuffer","","",1,N],[11,"BufferData","","",1,N],[11,"BufferSubData","","",1,N],[11,"CheckFramebufferStatus","","",1,[[["self"],["c_uint"]],["c_uint"]]],[11,"Clear","","",1,N],[11,"ClearBufferfi","","",1,N],[11,"ClearBufferfv","","",1,N],[11,"ClearBufferiv","","",1,N],[11,"ClearBufferuiv","","",1,N],[11,"ClearColor","","",1,N],[11,"ClearDepthf","","",1,N],[11,"ClearStencil","","",1,N],[11,"ClientWaitSync","","",1,N],[11,"ColorMask","","",1,N],[11,"CompileShader","","",1,N],[11,"CompressedTexImage2D","","",1,N],[11,"CompressedTexImage3D","","",1,N],[11,"CompressedTexSubImage2D","","",1,N],[11,"CompressedTexSubImage3D","","",1,N],[11,"CopyBufferSubData","","",1,N],[11,"CopyImageSubDataEXT","","",1,N],[11,"CopyTexImage2D","","",1,N],[11,"CopyTexSubImage2D","","",1,N],[11,"CopyTexSubImage3D","","",1,N],[11,"CreateProgram","","",1,[[["self"]],["c_uint"]]],[11,"CreateShader","","",1,[[["self"],["c_uint"]],["c_uint"]]],[11,"CullFace","","",1,N],[11,"DebugMessageCallback","","",1,N],[11,"DebugMessageCallbackKHR","","",1,N],[11,"DebugMessageControl","","",1,N],[11,"DebugMessageControlKHR","","",1,N],[11,"DebugMessageInsert","","",1,N],[11,"DebugMessageInsertKHR","","",1,N],[11,"DeleteBuffers","","",1,N],[11,"DeleteFramebuffers","","",1,N],[11,"DeleteProgram","","",1,N],[11,"DeleteQueries","","",1,N],[11,"DeleteQueriesEXT","","",1,N],[11,"DeleteRenderbuffers","","",1,N],[11,"DeleteSamplers","","",1,N],[11,"DeleteShader","","",1,N],[11,"DeleteSync","","",1,N],[11,"DeleteTextures","","",1,N],[11,"DeleteTransformFeedbacks","","",1,N],[11,"DeleteVertexArrays","","",1,N],[11,"DepthFunc","","",1,N],[11,"DepthMask","","",1,N],[11,"DepthRangef","","",1,N],[11,"DetachShader","","",1,N],[11,"Disable","","",1,N],[11,"DisableVertexAttribArray","","",1,N],[11,"DrawArrays","","",1,N],[11,"DrawArraysInstanced","","",1,N],[11,"DrawBuffers","","",1,N],[11,"DrawElements","","",1,N],[11,"DrawElementsInstanced","","",1,N],[11,"DrawRangeElements","","",1,N],[11,"EGLImageTargetRenderbufferStorageOES","","",1,N],[11,"EGLImageTargetTexture2DOES","","",1,N],[11,"Enable","","",1,N],[11,"EnableVertexAttribArray","","",1,N],[11,"EndQuery","","",1,N],[11,"EndQueryEXT","","",1,N],[11,"EndTransformFeedback","","",1,N],[11,"FenceSync","","",1,N],[11,"Finish","","",1,N],[11,"Flush","","",1,N],[11,"FlushMappedBufferRange","","",1,N],[11,"FramebufferRenderbuffer","","",1,N],[11,"FramebufferTexture2D","","",1,N],[11,"FramebufferTextureLayer","","",1,N],[11,"FrontFace","","",1,N],[11,"GenBuffers","","",1,N],[11,"GenFramebuffers","","",1,N],[11,"GenQueries","","",1,N],[11,"GenQueriesEXT","","",1,N],[11,"GenRenderbuffers","","",1,N],[11,"GenSamplers","","",1,N],[11,"GenTextures","","",1,N],[11,"GenTransformFeedbacks","","",1,N],[11,"GenVertexArrays","","",1,N],[11,"GenerateMipmap","","",1,N],[11,"GetActiveAttrib","","",1,N],[11,"GetActiveUniform","","",1,N],[11,"GetActiveUniformBlockName","","",1,N],[11,"GetActiveUniformBlockiv","","",1,N],[11,"GetActiveUniformsiv","","",1,N],[11,"GetAttachedShaders","","",1,N],[11,"GetAttribLocation","","",1,N],[11,"GetBooleanv","","",1,N],[11,"GetBufferParameteri64v","","",1,N],[11,"GetBufferParameteriv","","",1,N],[11,"GetBufferPointerv","","",1,N],[11,"GetDebugMessageLog","","",1,N],[11,"GetDebugMessageLogKHR","","",1,N],[11,"GetError","","",1,[[["self"]],["c_uint"]]],[11,"GetFloatv","","",1,N],[11,"GetFragDataLocation","","",1,N],[11,"GetFramebufferAttachmentParameteriv","","",1,N],[11,"GetInteger64i_v","","",1,N],[11,"GetInteger64v","","",1,N],[11,"GetIntegeri_v","","",1,N],[11,"GetIntegerv","","",1,N],[11,"GetInternalformativ","","",1,N],[11,"GetObjectLabel","","",1,N],[11,"GetObjectLabelKHR","","",1,N],[11,"GetObjectPtrLabel","","",1,N],[11,"GetObjectPtrLabelKHR","","",1,N],[11,"GetPointerv","","",1,N],[11,"GetPointervKHR","","",1,N],[11,"GetProgramBinary","","",1,N],[11,"GetProgramInfoLog","","",1,N],[11,"GetProgramiv","","",1,N],[11,"GetQueryObjecti64vEXT","","",1,N],[11,"GetQueryObjectivEXT","","",1,N],[11,"GetQueryObjectui64vEXT","","",1,N],[11,"GetQueryObjectuiv","","",1,N],[11,"GetQueryObjectuivEXT","","",1,N],[11,"GetQueryiv","","",1,N],[11,"GetQueryivEXT","","",1,N],[11,"GetRenderbufferParameteriv","","",1,N],[11,"GetSamplerParameterfv","","",1,N],[11,"GetSamplerParameteriv","","",1,N],[11,"GetShaderInfoLog","","",1,N],[11,"GetShaderPrecisionFormat","","",1,N],[11,"GetShaderSource","","",1,N],[11,"GetShaderiv","","",1,N],[11,"GetString","","",1,N],[11,"GetStringi","","",1,N],[11,"GetSynciv","","",1,N],[11,"GetTexParameterfv","","",1,N],[11,"GetTexParameteriv","","",1,N],[11,"GetTransformFeedbackVarying","","",1,N],[11,"GetUniformBlockIndex","","",1,N],[11,"GetUniformIndices","","",1,N],[11,"GetUniformLocation","","",1,N],[11,"GetUniformfv","","",1,N],[11,"GetUniformiv","","",1,N],[11,"GetUniformuiv","","",1,N],[11,"GetVertexAttribIiv","","",1,N],[11,"GetVertexAttribIuiv","","",1,N],[11,"GetVertexAttribPointerv","","",1,N],[11,"GetVertexAttribfv","","",1,N],[11,"GetVertexAttribiv","","",1,N],[11,"Hint","","",1,N],[11,"InsertEventMarkerEXT","","",1,N],[11,"InvalidateFramebuffer","","",1,N],[11,"InvalidateSubFramebuffer","","",1,N],[11,"IsBuffer","","",1,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsEnabled","","",1,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsFramebuffer","","",1,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsProgram","","",1,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsQuery","","",1,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsQueryEXT","","",1,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsRenderbuffer","","",1,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsSampler","","",1,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsShader","","",1,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsSync","","",1,N],[11,"IsTexture","","",1,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsTransformFeedback","","",1,[[["self"],["c_uint"]],["c_uchar"]]],[11,"IsVertexArray","","",1,[[["self"],["c_uint"]],["c_uchar"]]],[11,"LineWidth","","",1,N],[11,"LinkProgram","","",1,N],[11,"MapBufferRange","","",1,N],[11,"ObjectLabel","","",1,N],[11,"ObjectLabelKHR","","",1,N],[11,"ObjectPtrLabel","","",1,N],[11,"ObjectPtrLabelKHR","","",1,N],[11,"PauseTransformFeedback","","",1,N],[11,"PixelStorei","","",1,N],[11,"PolygonOffset","","",1,N],[11,"PopDebugGroup","","",1,N],[11,"PopDebugGroupKHR","","",1,N],[11,"PopGroupMarkerEXT","","",1,N],[11,"ProgramBinary","","",1,N],[11,"ProgramParameteri","","",1,N],[11,"ProvokingVertexANGLE","","",1,N],[11,"PushDebugGroup","","",1,N],[11,"PushDebugGroupKHR","","",1,N],[11,"PushGroupMarkerEXT","","",1,N],[11,"QueryCounterEXT","","",1,N],[11,"ReadBuffer","","",1,N],[11,"ReadPixels","","",1,N],[11,"ReleaseShaderCompiler","","",1,N],[11,"RenderbufferStorage","","",1,N],[11,"RenderbufferStorageMultisample","","",1,N],[11,"ResumeTransformFeedback","","",1,N],[11,"SampleCoverage","","",1,N],[11,"SamplerParameterf","","",1,N],[11,"SamplerParameterfv","","",1,N],[11,"SamplerParameteri","","",1,N],[11,"SamplerParameteriv","","",1,N],[11,"Scissor","","",1,N],[11,"ShaderBinary","","",1,N],[11,"ShaderSource","","",1,N],[11,"StencilFunc","","",1,N],[11,"StencilFuncSeparate","","",1,N],[11,"StencilMask","","",1,N],[11,"StencilMaskSeparate","","",1,N],[11,"StencilOp","","",1,N],[11,"StencilOpSeparate","","",1,N],[11,"TexImage2D","","",1,N],[11,"TexImage3D","","",1,N],[11,"TexParameterf","","",1,N],[11,"TexParameterfv","","",1,N],[11,"TexParameteri","","",1,N],[11,"TexParameteriv","","",1,N],[11,"TexStorage1DEXT","","",1,N],[11,"TexStorage2D","","",1,N],[11,"TexStorage2DEXT","","",1,N],[11,"TexStorage3D","","",1,N],[11,"TexStorage3DEXT","","",1,N],[11,"TexSubImage2D","","",1,N],[11,"TexSubImage3D","","",1,N],[11,"TextureStorage1DEXT","","",1,N],[11,"TextureStorage2DEXT","","",1,N],[11,"TextureStorage3DEXT","","",1,N],[11,"TransformFeedbackVaryings","","",1,N],[11,"Uniform1f","","",1,N],[11,"Uniform1fv","","",1,N],[11,"Uniform1i","","",1,N],[11,"Uniform1iv","","",1,N],[11,"Uniform1ui","","",1,N],[11,"Uniform1uiv","","",1,N],[11,"Uniform2f","","",1,N],[11,"Uniform2fv","","",1,N],[11,"Uniform2i","","",1,N],[11,"Uniform2iv","","",1,N],[11,"Uniform2ui","","",1,N],[11,"Uniform2uiv","","",1,N],[11,"Uniform3f","","",1,N],[11,"Uniform3fv","","",1,N],[11,"Uniform3i","","",1,N],[11,"Uniform3iv","","",1,N],[11,"Uniform3ui","","",1,N],[11,"Uniform3uiv","","",1,N],[11,"Uniform4f","","",1,N],[11,"Uniform4fv","","",1,N],[11,"Uniform4i","","",1,N],[11,"Uniform4iv","","",1,N],[11,"Uniform4ui","","",1,N],[11,"Uniform4uiv","","",1,N],[11,"UniformBlockBinding","","",1,N],[11,"UniformMatrix2fv","","",1,N],[11,"UniformMatrix2x3fv","","",1,N],[11,"UniformMatrix2x4fv","","",1,N],[11,"UniformMatrix3fv","","",1,N],[11,"UniformMatrix3x2fv","","",1,N],[11,"UniformMatrix3x4fv","","",1,N],[11,"UniformMatrix4fv","","",1,N],[11,"UniformMatrix4x2fv","","",1,N],[11,"UniformMatrix4x3fv","","",1,N],[11,"UnmapBuffer","","",1,[[["self"],["c_uint"]],["c_uchar"]]],[11,"UseProgram","","",1,N],[11,"ValidateProgram","","",1,N],[11,"VertexAttrib1f","","",1,N],[11,"VertexAttrib1fv","","",1,N],[11,"VertexAttrib2f","","",1,N],[11,"VertexAttrib2fv","","",1,N],[11,"VertexAttrib3f","","",1,N],[11,"VertexAttrib3fv","","",1,N],[11,"VertexAttrib4f","","",1,N],[11,"VertexAttrib4fv","","",1,N],[11,"VertexAttribDivisor","","",1,N],[11,"VertexAttribI4i","","",1,N],[11,"VertexAttribI4iv","","",1,N],[11,"VertexAttribI4ui","","",1,N],[11,"VertexAttribI4uiv","","",1,N],[11,"VertexAttribIPointer","","",1,N],[11,"VertexAttribPointer","","",1,N],[11,"Viewport","","",1,N],[11,"WaitSync","","",1,N],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"get_type","","",5,[[["self"]],["gltype"]]],[11,"buffer_data_untyped","","",5,N],[11,"buffer_sub_data_untyped","","",5,N],[11,"map_buffer","","",5,N],[11,"map_buffer_range","","",5,N],[11,"unmap_buffer","","",5,[[["self"],["glenum"]],["glboolean"]]],[11,"tex_buffer","","",5,[[["self"],["glenum"],["glenum"],["gluint"]]]],[11,"shader_source","","",5,N],[11,"read_buffer","","",5,[[["self"],["glenum"]]]],[11,"read_pixels_into_buffer","","",5,N],[11,"read_pixels","","",5,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"]],["vec",["u8"]]]],[11,"read_pixels_into_pbo","","",5,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"]]]],[11,"sample_coverage","","",5,[[["self"],["glclampf"],["bool"]]]],[11,"polygon_offset","","",5,[[["self"],["glfloat"],["glfloat"]]]],[11,"pixel_store_i","","",5,[[["self"],["glenum"],["glint"]]]],[11,"gen_buffers","","",5,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_renderbuffers","","",5,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_framebuffers","","",5,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_textures","","",5,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_vertex_arrays","","",5,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_queries","","",5,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"begin_query","","",5,[[["self"],["glenum"],["gluint"]]]],[11,"end_query","","",5,[[["self"],["glenum"]]]],[11,"query_counter","","",5,[[["self"],["gluint"],["glenum"]]]],[11,"get_query_object_iv","","",5,[[["self"],["gluint"],["glenum"]],["i32"]]],[11,"get_query_object_uiv","","",5,[[["self"],["gluint"],["glenum"]],["u32"]]],[11,"get_query_object_i64v","","",5,[[["self"],["gluint"],["glenum"]],["i64"]]],[11,"get_query_object_ui64v","","",5,[[["self"],["gluint"],["glenum"]],["u64"]]],[11,"delete_queries","","",5,N],[11,"delete_vertex_arrays","","",5,N],[11,"delete_buffers","","",5,N],[11,"delete_renderbuffers","","",5,N],[11,"delete_framebuffers","","",5,N],[11,"delete_textures","","",5,N],[11,"framebuffer_renderbuffer","","",5,[[["self"],["glenum"],["glenum"],["glenum"],["gluint"]]]],[11,"renderbuffer_storage","","",5,[[["self"],["glenum"],["glenum"],["glsizei"],["glsizei"]]]],[11,"depth_func","","",5,[[["self"],["glenum"]]]],[11,"active_texture","","",5,[[["self"],["glenum"]]]],[11,"attach_shader","","",5,[[["self"],["gluint"],["gluint"]]]],[11,"bind_attrib_location","","",5,[[["self"],["gluint"],["gluint"],["str"]]]],[11,"get_uniform_iv","","",5,N],[11,"get_uniform_fv","","",5,N],[11,"get_uniform_block_index","","",5,[[["self"],["gluint"],["str"]],["gluint"]]],[11,"get_uniform_indices","","",5,N],[11,"bind_buffer_base","","",5,[[["self"],["glenum"],["gluint"],["gluint"]]]],[11,"bind_buffer_range","","",5,[[["self"],["glenum"],["gluint"],["gluint"],["glintptr"],["glsizeiptr"]]]],[11,"uniform_block_binding","","",5,[[["self"],["gluint"],["gluint"],["gluint"]]]],[11,"bind_buffer","","",5,[[["self"],["glenum"],["gluint"]]]],[11,"bind_vertex_array","","",5,[[["self"],["gluint"]]]],[11,"bind_renderbuffer","","",5,[[["self"],["glenum"],["gluint"]]]],[11,"bind_framebuffer","","",5,[[["self"],["glenum"],["gluint"]]]],[11,"bind_texture","","",5,[[["self"],["glenum"],["gluint"]]]],[11,"draw_buffers","","",5,N],[11,"tex_image_2d","","",5,[[["self"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glint"],["glenum"],["glenum"],["option"]]]],[11,"compressed_tex_image_2d","","",5,N],[11,"compressed_tex_sub_image_2d","","",5,N],[11,"tex_image_3d","","",5,[[["self"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"],["glint"],["glenum"],["glenum"],["option"]]]],[11,"copy_tex_image_2d","","",5,[[["self"],["glenum"],["glint"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glint"]]]],[11,"copy_tex_sub_image_2d","","",5,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"copy_tex_sub_image_3d","","",5,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"tex_sub_image_2d","","",5,N],[11,"tex_sub_image_2d_pbo","","",5,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"],["usize"]]]],[11,"tex_sub_image_3d","","",5,N],[11,"tex_sub_image_3d_pbo","","",5,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"],["glenum"],["glenum"],["usize"]]]],[11,"tex_storage_2d","","",5,[[["self"],["glenum"],["glint"],["glenum"],["glsizei"],["glsizei"]]]],[11,"tex_storage_3d","","",5,[[["self"],["glenum"],["glint"],["glenum"],["glsizei"],["glsizei"],["glsizei"]]]],[11,"get_tex_image_into_buffer","","",5,N],[11,"copy_image_sub_data","","",5,[[["self"],["gluint"],["glenum"],["glint"],["glint"],["glint"],["glint"],["gluint"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"]]]],[11,"invalidate_framebuffer","","",5,N],[11,"invalidate_sub_framebuffer","","",5,N],[11,"get_integer_v","","",5,N],[11,"get_integer_64v","","",5,N],[11,"get_integer_iv","","",5,N],[11,"get_integer_64iv","","",5,N],[11,"get_boolean_v","","",5,N],[11,"get_float_v","","",5,N],[11,"get_framebuffer_attachment_parameter_iv","","",5,[[["self"],["glenum"],["glenum"],["glenum"]],["glint"]]],[11,"get_renderbuffer_parameter_iv","","",5,[[["self"],["glenum"],["glenum"]],["glint"]]],[11,"get_tex_parameter_iv","","",5,[[["self"],["glenum"],["glenum"]],["glint"]]],[11,"get_tex_parameter_fv","","",5,[[["self"],["glenum"],["glenum"]],["glfloat"]]],[11,"tex_parameter_i","","",5,[[["self"],["glenum"],["glenum"],["glint"]]]],[11,"tex_parameter_f","","",5,[[["self"],["glenum"],["glenum"],["glfloat"]]]],[11,"framebuffer_texture_2d","","",5,[[["self"],["glenum"],["glenum"],["glenum"],["gluint"],["glint"]]]],[11,"framebuffer_texture_layer","","",5,[[["self"],["glenum"],["glenum"],["gluint"],["glint"],["glint"]]]],[11,"blit_framebuffer","","",5,[[["self"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glbitfield"],["glenum"]]]],[11,"vertex_attrib_4f","","",5,[[["self"],["gluint"],["glfloat"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"vertex_attrib_pointer_f32","","",5,[[["self"],["gluint"],["glint"],["bool"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_pointer","","",5,[[["self"],["gluint"],["glint"],["glenum"],["bool"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_i_pointer","","",5,[[["self"],["gluint"],["glint"],["glenum"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_divisor","","",5,[[["self"],["gluint"],["gluint"]]]],[11,"viewport","","",5,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"scissor","","",5,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"line_width","","",5,[[["self"],["glfloat"]]]],[11,"use_program","","",5,[[["self"],["gluint"]]]],[11,"validate_program","","",5,[[["self"],["gluint"]]]],[11,"draw_arrays","","",5,[[["self"],["glenum"],["glint"],["glsizei"]]]],[11,"draw_arrays_instanced","","",5,[[["self"],["glenum"],["glint"],["glsizei"],["glsizei"]]]],[11,"draw_elements","","",5,[[["self"],["glenum"],["glsizei"],["glenum"],["gluint"]]]],[11,"draw_elements_instanced","","",5,[[["self"],["glenum"],["glsizei"],["glenum"],["gluint"],["glsizei"]]]],[11,"blend_color","","",5,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"blend_func","","",5,[[["self"],["glenum"],["glenum"]]]],[11,"blend_func_separate","","",5,[[["self"],["glenum"],["glenum"],["glenum"],["glenum"]]]],[11,"blend_equation","","",5,[[["self"],["glenum"]]]],[11,"blend_equation_separate","","",5,[[["self"],["glenum"],["glenum"]]]],[11,"color_mask","","",5,[[["self"],["bool"],["bool"],["bool"],["bool"]]]],[11,"cull_face","","",5,[[["self"],["glenum"]]]],[11,"front_face","","",5,[[["self"],["glenum"]]]],[11,"enable","","",5,[[["self"],["glenum"]]]],[11,"disable","","",5,[[["self"],["glenum"]]]],[11,"hint","","",5,[[["self"],["glenum"],["glenum"]]]],[11,"is_enabled","","",5,[[["self"],["glenum"]],["glboolean"]]],[11,"is_shader","","",5,[[["self"],["gluint"]],["glboolean"]]],[11,"is_texture","","",5,[[["self"],["glenum"]],["glboolean"]]],[11,"is_framebuffer","","",5,[[["self"],["glenum"]],["glboolean"]]],[11,"is_renderbuffer","","",5,[[["self"],["glenum"]],["glboolean"]]],[11,"check_frame_buffer_status","","",5,[[["self"],["glenum"]],["glenum"]]],[11,"enable_vertex_attrib_array","","",5,[[["self"],["gluint"]]]],[11,"disable_vertex_attrib_array","","",5,[[["self"],["gluint"]]]],[11,"uniform_1f","","",5,[[["self"],["glint"],["glfloat"]]]],[11,"uniform_1fv","","",5,N],[11,"uniform_1i","","",5,[[["self"],["glint"],["glint"]]]],[11,"uniform_1iv","","",5,N],[11,"uniform_1ui","","",5,[[["self"],["glint"],["gluint"]]]],[11,"uniform_2f","","",5,[[["self"],["glint"],["glfloat"],["glfloat"]]]],[11,"uniform_2fv","","",5,N],[11,"uniform_2i","","",5,[[["self"],["glint"],["glint"],["glint"]]]],[11,"uniform_2iv","","",5,N],[11,"uniform_2ui","","",5,[[["self"],["glint"],["gluint"],["gluint"]]]],[11,"uniform_3f","","",5,[[["self"],["glint"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"uniform_3fv","","",5,N],[11,"uniform_3i","","",5,[[["self"],["glint"],["glint"],["glint"],["glint"]]]],[11,"uniform_3iv","","",5,N],[11,"uniform_3ui","","",5,[[["self"],["glint"],["gluint"],["gluint"],["gluint"]]]],[11,"uniform_4f","","",5,[[["self"],["glint"],["glfloat"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"uniform_4i","","",5,[[["self"],["glint"],["glint"],["glint"],["glint"],["glint"]]]],[11,"uniform_4iv","","",5,N],[11,"uniform_4ui","","",5,[[["self"],["glint"],["gluint"],["gluint"],["gluint"],["gluint"]]]],[11,"uniform_4fv","","",5,N],[11,"uniform_matrix_2fv","","",5,N],[11,"uniform_matrix_3fv","","",5,N],[11,"uniform_matrix_4fv","","",5,N],[11,"depth_mask","","",5,[[["self"],["bool"]]]],[11,"depth_range","","",5,[[["self"],["f64"],["f64"]]]],[11,"get_active_attrib","","",5,N],[11,"get_active_uniform","","",5,N],[11,"get_active_uniforms_iv","","",5,[[["self"],["gluint"],["vec",["gluint"]],["glenum"]],["vec",["glint"]]]],[11,"get_active_uniform_block_i","","",5,[[["self"],["gluint"],["gluint"],["glenum"]],["glint"]]],[11,"get_active_uniform_block_iv","","",5,[[["self"],["gluint"],["gluint"],["glenum"]],["vec",["glint"]]]],[11,"get_active_uniform_block_name","","",5,[[["self"],["gluint"],["gluint"]],["string"]]],[11,"get_attrib_location","","",5,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_frag_data_location","","",5,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_uniform_location","","",5,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_program_info_log","","",5,[[["self"],["gluint"]],["string"]]],[11,"get_program_iv","","",5,N],[11,"get_program_binary","","",5,N],[11,"program_binary","","",5,N],[11,"program_parameter_i","","",5,[[["self"],["gluint"],["glenum"],["glint"]]]],[11,"get_vertex_attrib_iv","","",5,N],[11,"get_vertex_attrib_fv","","",5,N],[11,"get_vertex_attrib_pointer_v","","",5,[[["self"],["gluint"],["glenum"]],["glsizeiptr"]]],[11,"get_buffer_parameter_iv","","",5,[[["self"],["gluint"],["glenum"]],["glint"]]],[11,"get_shader_info_log","","",5,[[["self"],["gluint"]],["string"]]],[11,"get_string","","",5,[[["self"],["glenum"]],["string"]]],[11,"get_string_i","","",5,[[["self"],["glenum"],["gluint"]],["string"]]],[11,"get_shader_iv","","",5,N],[11,"get_shader_precision_format","","",5,N],[11,"compile_shader","","",5,[[["self"],["gluint"]]]],[11,"create_program","","",5,[[["self"]],["gluint"]]],[11,"delete_program","","",5,[[["self"],["gluint"]]]],[11,"create_shader","","",5,[[["self"],["glenum"]],["gluint"]]],[11,"delete_shader","","",5,[[["self"],["gluint"]]]],[11,"detach_shader","","",5,[[["self"],["gluint"],["gluint"]]]],[11,"link_program","","",5,[[["self"],["gluint"]]]],[11,"clear_color","","",5,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"clear","","",5,[[["self"],["glbitfield"]]]],[11,"clear_depth","","",5,[[["self"],["f64"]]]],[11,"clear_stencil","","",5,[[["self"],["glint"]]]],[11,"flush","","",5,[[["self"]]]],[11,"finish","","",5,[[["self"]]]],[11,"get_error","","",5,[[["self"]],["glenum"]]],[11,"stencil_mask","","",5,[[["self"],["gluint"]]]],[11,"stencil_mask_separate","","",5,[[["self"],["glenum"],["gluint"]]]],[11,"stencil_func","","",5,[[["self"],["glenum"],["glint"],["gluint"]]]],[11,"stencil_func_separate","","",5,[[["self"],["glenum"],["glenum"],["glint"],["gluint"]]]],[11,"stencil_op","","",5,[[["self"],["glenum"],["glenum"],["glenum"]]]],[11,"stencil_op_separate","","",5,[[["self"],["glenum"],["glenum"],["glenum"],["glenum"]]]],[11,"egl_image_target_texture2d_oes","","",5,[[["self"],["glenum"],["gleglimageoes"]]]],[11,"generate_mipmap","","",5,[[["self"],["glenum"]]]],[11,"insert_event_marker_ext","","",5,[[["self"],["str"]]]],[11,"push_group_marker_ext","","",5,[[["self"],["str"]]]],[11,"pop_group_marker_ext","","",5,[[["self"]]]],[11,"debug_message_insert_khr","","",5,[[["self"],["glenum"],["glenum"],["gluint"],["glenum"],["str"]]]],[11,"push_debug_group_khr","","",5,[[["self"],["glenum"],["gluint"],["str"]]]],[11,"pop_debug_group_khr","","",5,[[["self"]]]],[11,"fence_sync","","",5,[[["self"],["glenum"],["glbitfield"]],["glsync"]]],[11,"client_wait_sync","","",5,[[["self"],["glsync"],["glbitfield"],["gluint64"]]]],[11,"wait_sync","","",5,[[["self"],["glsync"],["glbitfield"],["gluint64"]]]],[11,"delete_sync","","",5,[[["self"],["glsync"]]]],[11,"texture_range_apple","","",5,N],[11,"gen_fences_apple","","",5,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"delete_fences_apple","","",5,N],[11,"set_fence_apple","","",5,[[["self"],["gluint"]]]],[11,"finish_fence_apple","","",5,[[["self"],["gluint"]]]],[11,"test_fence_apple","","",5,[[["self"],["gluint"]]]],[11,"test_object_apple","","",5,[[["self"],["glenum"],["gluint"]],["glboolean"]]],[11,"finish_object_apple","","",5,[[["self"],["glenum"],["gluint"]]]],[11,"blend_barrier_khr","","",5,[[["self"]]]],[11,"bind_frag_data_location_indexed","","",5,[[["self"],["gluint"],["gluint"],["gluint"],["str"]]]],[11,"get_frag_data_index","","",5,[[["self"],["gluint"],["str"]],["glint"]]],[11,"get_debug_messages","","",5,[[["self"]],["vec",["debugmessage"]]]],[11,"provoking_vertex_angle","","",5,[[["self"],["glenum"]]]],[11,"get_type","","",6,[[["self"]],["gltype"]]],[11,"buffer_data_untyped","","",6,N],[11,"buffer_sub_data_untyped","","",6,N],[11,"map_buffer","","",6,N],[11,"map_buffer_range","","",6,N],[11,"unmap_buffer","","",6,[[["self"],["glenum"]],["glboolean"]]],[11,"tex_buffer","","",6,[[["self"],["glenum"],["glenum"],["gluint"]]]],[11,"shader_source","","",6,N],[11,"read_buffer","","",6,[[["self"],["glenum"]]]],[11,"read_pixels_into_buffer","","",6,N],[11,"read_pixels","","",6,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"]],["vec",["u8"]]]],[11,"read_pixels_into_pbo","","",6,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"]]]],[11,"sample_coverage","","",6,[[["self"],["glclampf"],["bool"]]]],[11,"polygon_offset","","",6,[[["self"],["glfloat"],["glfloat"]]]],[11,"pixel_store_i","","",6,[[["self"],["glenum"],["glint"]]]],[11,"gen_buffers","","",6,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_renderbuffers","","",6,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_framebuffers","","",6,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_textures","","",6,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_vertex_arrays","","",6,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_queries","","",6,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"begin_query","","",6,[[["self"],["glenum"],["gluint"]]]],[11,"end_query","","",6,[[["self"],["glenum"]]]],[11,"query_counter","","",6,[[["self"],["gluint"],["glenum"]]]],[11,"get_query_object_iv","","",6,[[["self"],["gluint"],["glenum"]],["i32"]]],[11,"get_query_object_uiv","","",6,[[["self"],["gluint"],["glenum"]],["u32"]]],[11,"get_query_object_i64v","","",6,[[["self"],["gluint"],["glenum"]],["i64"]]],[11,"get_query_object_ui64v","","",6,[[["self"],["gluint"],["glenum"]],["u64"]]],[11,"delete_queries","","",6,N],[11,"delete_vertex_arrays","","",6,N],[11,"delete_buffers","","",6,N],[11,"delete_renderbuffers","","",6,N],[11,"delete_framebuffers","","",6,N],[11,"delete_textures","","",6,N],[11,"framebuffer_renderbuffer","","",6,[[["self"],["glenum"],["glenum"],["glenum"],["gluint"]]]],[11,"renderbuffer_storage","","",6,[[["self"],["glenum"],["glenum"],["glsizei"],["glsizei"]]]],[11,"depth_func","","",6,[[["self"],["glenum"]]]],[11,"active_texture","","",6,[[["self"],["glenum"]]]],[11,"attach_shader","","",6,[[["self"],["gluint"],["gluint"]]]],[11,"bind_attrib_location","","",6,[[["self"],["gluint"],["gluint"],["str"]]]],[11,"get_uniform_iv","","",6,N],[11,"get_uniform_fv","","",6,N],[11,"get_uniform_block_index","","",6,[[["self"],["gluint"],["str"]],["gluint"]]],[11,"get_uniform_indices","","",6,N],[11,"bind_buffer_base","","",6,[[["self"],["glenum"],["gluint"],["gluint"]]]],[11,"bind_buffer_range","","",6,[[["self"],["glenum"],["gluint"],["gluint"],["glintptr"],["glsizeiptr"]]]],[11,"uniform_block_binding","","",6,[[["self"],["gluint"],["gluint"],["gluint"]]]],[11,"bind_buffer","","",6,[[["self"],["glenum"],["gluint"]]]],[11,"bind_vertex_array","","",6,[[["self"],["gluint"]]]],[11,"bind_renderbuffer","","",6,[[["self"],["glenum"],["gluint"]]]],[11,"bind_framebuffer","","",6,[[["self"],["glenum"],["gluint"]]]],[11,"bind_texture","","",6,[[["self"],["glenum"],["gluint"]]]],[11,"draw_buffers","","",6,N],[11,"tex_image_2d","","",6,[[["self"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glint"],["glenum"],["glenum"],["option"]]]],[11,"compressed_tex_image_2d","","",6,N],[11,"compressed_tex_sub_image_2d","","",6,N],[11,"tex_image_3d","","",6,[[["self"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"],["glint"],["glenum"],["glenum"],["option"]]]],[11,"copy_tex_image_2d","","",6,[[["self"],["glenum"],["glint"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glint"]]]],[11,"copy_tex_sub_image_2d","","",6,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"copy_tex_sub_image_3d","","",6,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"tex_sub_image_2d","","",6,N],[11,"tex_sub_image_2d_pbo","","",6,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"],["usize"]]]],[11,"tex_sub_image_3d","","",6,N],[11,"tex_sub_image_3d_pbo","","",6,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"],["glenum"],["glenum"],["usize"]]]],[11,"tex_storage_2d","","",6,[[["self"],["glenum"],["glint"],["glenum"],["glsizei"],["glsizei"]]]],[11,"tex_storage_3d","","",6,[[["self"],["glenum"],["glint"],["glenum"],["glsizei"],["glsizei"],["glsizei"]]]],[11,"get_tex_image_into_buffer","","",6,N],[11,"copy_image_sub_data","","",6,[[["self"],["gluint"],["glenum"],["glint"],["glint"],["glint"],["glint"],["gluint"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"]]]],[11,"invalidate_framebuffer","","",6,N],[11,"invalidate_sub_framebuffer","","",6,N],[11,"get_integer_v","","",6,N],[11,"get_integer_64v","","",6,N],[11,"get_integer_iv","","",6,N],[11,"get_integer_64iv","","",6,N],[11,"get_boolean_v","","",6,N],[11,"get_float_v","","",6,N],[11,"get_framebuffer_attachment_parameter_iv","","",6,[[["self"],["glenum"],["glenum"],["glenum"]],["glint"]]],[11,"get_renderbuffer_parameter_iv","","",6,[[["self"],["glenum"],["glenum"]],["glint"]]],[11,"get_tex_parameter_iv","","",6,[[["self"],["glenum"],["glenum"]],["glint"]]],[11,"get_tex_parameter_fv","","",6,[[["self"],["glenum"],["glenum"]],["glfloat"]]],[11,"tex_parameter_i","","",6,[[["self"],["glenum"],["glenum"],["glint"]]]],[11,"tex_parameter_f","","",6,[[["self"],["glenum"],["glenum"],["glfloat"]]]],[11,"framebuffer_texture_2d","","",6,[[["self"],["glenum"],["glenum"],["glenum"],["gluint"],["glint"]]]],[11,"framebuffer_texture_layer","","",6,[[["self"],["glenum"],["glenum"],["gluint"],["glint"],["glint"]]]],[11,"blit_framebuffer","","",6,[[["self"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glbitfield"],["glenum"]]]],[11,"vertex_attrib_4f","","",6,[[["self"],["gluint"],["glfloat"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"vertex_attrib_pointer_f32","","",6,[[["self"],["gluint"],["glint"],["bool"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_pointer","","",6,[[["self"],["gluint"],["glint"],["glenum"],["bool"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_i_pointer","","",6,[[["self"],["gluint"],["glint"],["glenum"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_divisor","","",6,[[["self"],["gluint"],["gluint"]]]],[11,"viewport","","",6,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"scissor","","",6,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"line_width","","",6,[[["self"],["glfloat"]]]],[11,"use_program","","",6,[[["self"],["gluint"]]]],[11,"validate_program","","",6,[[["self"],["gluint"]]]],[11,"draw_arrays","","",6,[[["self"],["glenum"],["glint"],["glsizei"]]]],[11,"draw_arrays_instanced","","",6,[[["self"],["glenum"],["glint"],["glsizei"],["glsizei"]]]],[11,"draw_elements","","",6,[[["self"],["glenum"],["glsizei"],["glenum"],["gluint"]]]],[11,"draw_elements_instanced","","",6,[[["self"],["glenum"],["glsizei"],["glenum"],["gluint"],["glsizei"]]]],[11,"blend_color","","",6,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"blend_func","","",6,[[["self"],["glenum"],["glenum"]]]],[11,"blend_func_separate","","",6,[[["self"],["glenum"],["glenum"],["glenum"],["glenum"]]]],[11,"blend_equation","","",6,[[["self"],["glenum"]]]],[11,"blend_equation_separate","","",6,[[["self"],["glenum"],["glenum"]]]],[11,"color_mask","","",6,[[["self"],["bool"],["bool"],["bool"],["bool"]]]],[11,"cull_face","","",6,[[["self"],["glenum"]]]],[11,"front_face","","",6,[[["self"],["glenum"]]]],[11,"enable","","",6,[[["self"],["glenum"]]]],[11,"disable","","",6,[[["self"],["glenum"]]]],[11,"hint","","",6,[[["self"],["glenum"],["glenum"]]]],[11,"is_enabled","","",6,[[["self"],["glenum"]],["glboolean"]]],[11,"is_shader","","",6,[[["self"],["gluint"]],["glboolean"]]],[11,"is_texture","","",6,[[["self"],["glenum"]],["glboolean"]]],[11,"is_framebuffer","","",6,[[["self"],["glenum"]],["glboolean"]]],[11,"is_renderbuffer","","",6,[[["self"],["glenum"]],["glboolean"]]],[11,"check_frame_buffer_status","","",6,[[["self"],["glenum"]],["glenum"]]],[11,"enable_vertex_attrib_array","","",6,[[["self"],["gluint"]]]],[11,"disable_vertex_attrib_array","","",6,[[["self"],["gluint"]]]],[11,"uniform_1f","","",6,[[["self"],["glint"],["glfloat"]]]],[11,"uniform_1fv","","",6,N],[11,"uniform_1i","","",6,[[["self"],["glint"],["glint"]]]],[11,"uniform_1iv","","",6,N],[11,"uniform_1ui","","",6,[[["self"],["glint"],["gluint"]]]],[11,"uniform_2f","","",6,[[["self"],["glint"],["glfloat"],["glfloat"]]]],[11,"uniform_2fv","","",6,N],[11,"uniform_2i","","",6,[[["self"],["glint"],["glint"],["glint"]]]],[11,"uniform_2iv","","",6,N],[11,"uniform_2ui","","",6,[[["self"],["glint"],["gluint"],["gluint"]]]],[11,"uniform_3f","","",6,[[["self"],["glint"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"uniform_3fv","","",6,N],[11,"uniform_3i","","",6,[[["self"],["glint"],["glint"],["glint"],["glint"]]]],[11,"uniform_3iv","","",6,N],[11,"uniform_3ui","","",6,[[["self"],["glint"],["gluint"],["gluint"],["gluint"]]]],[11,"uniform_4f","","",6,[[["self"],["glint"],["glfloat"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"uniform_4i","","",6,[[["self"],["glint"],["glint"],["glint"],["glint"],["glint"]]]],[11,"uniform_4iv","","",6,N],[11,"uniform_4ui","","",6,[[["self"],["glint"],["gluint"],["gluint"],["gluint"],["gluint"]]]],[11,"uniform_4fv","","",6,N],[11,"uniform_matrix_2fv","","",6,N],[11,"uniform_matrix_3fv","","",6,N],[11,"uniform_matrix_4fv","","",6,N],[11,"depth_mask","","",6,[[["self"],["bool"]]]],[11,"depth_range","","",6,[[["self"],["f64"],["f64"]]]],[11,"get_active_attrib","","",6,N],[11,"get_active_uniform","","",6,N],[11,"get_active_uniforms_iv","","",6,[[["self"],["gluint"],["vec",["gluint"]],["glenum"]],["vec",["glint"]]]],[11,"get_active_uniform_block_i","","",6,[[["self"],["gluint"],["gluint"],["glenum"]],["glint"]]],[11,"get_active_uniform_block_iv","","",6,[[["self"],["gluint"],["gluint"],["glenum"]],["vec",["glint"]]]],[11,"get_active_uniform_block_name","","",6,[[["self"],["gluint"],["gluint"]],["string"]]],[11,"get_attrib_location","","",6,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_frag_data_location","","",6,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_uniform_location","","",6,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_program_info_log","","",6,[[["self"],["gluint"]],["string"]]],[11,"get_program_iv","","",6,N],[11,"get_program_binary","","",6,N],[11,"program_binary","","",6,N],[11,"program_parameter_i","","",6,[[["self"],["gluint"],["glenum"],["glint"]]]],[11,"get_vertex_attrib_iv","","",6,N],[11,"get_vertex_attrib_fv","","",6,N],[11,"get_vertex_attrib_pointer_v","","",6,[[["self"],["gluint"],["glenum"]],["glsizeiptr"]]],[11,"get_buffer_parameter_iv","","",6,[[["self"],["gluint"],["glenum"]],["glint"]]],[11,"get_shader_info_log","","",6,[[["self"],["gluint"]],["string"]]],[11,"get_string","","",6,[[["self"],["glenum"]],["string"]]],[11,"get_string_i","","",6,[[["self"],["glenum"],["gluint"]],["string"]]],[11,"get_shader_iv","","",6,N],[11,"get_shader_precision_format","","",6,N],[11,"compile_shader","","",6,[[["self"],["gluint"]]]],[11,"create_program","","",6,[[["self"]],["gluint"]]],[11,"delete_program","","",6,[[["self"],["gluint"]]]],[11,"create_shader","","",6,[[["self"],["glenum"]],["gluint"]]],[11,"delete_shader","","",6,[[["self"],["gluint"]]]],[11,"detach_shader","","",6,[[["self"],["gluint"],["gluint"]]]],[11,"link_program","","",6,[[["self"],["gluint"]]]],[11,"clear_color","","",6,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"clear","","",6,[[["self"],["glbitfield"]]]],[11,"clear_depth","","",6,[[["self"],["f64"]]]],[11,"clear_stencil","","",6,[[["self"],["glint"]]]],[11,"flush","","",6,[[["self"]]]],[11,"finish","","",6,[[["self"]]]],[11,"get_error","","",6,[[["self"]],["glenum"]]],[11,"stencil_mask","","",6,[[["self"],["gluint"]]]],[11,"stencil_mask_separate","","",6,[[["self"],["glenum"],["gluint"]]]],[11,"stencil_func","","",6,[[["self"],["glenum"],["glint"],["gluint"]]]],[11,"stencil_func_separate","","",6,[[["self"],["glenum"],["glenum"],["glint"],["gluint"]]]],[11,"stencil_op","","",6,[[["self"],["glenum"],["glenum"],["glenum"]]]],[11,"stencil_op_separate","","",6,[[["self"],["glenum"],["glenum"],["glenum"],["glenum"]]]],[11,"egl_image_target_texture2d_oes","","",6,[[["self"],["glenum"],["gleglimageoes"]]]],[11,"generate_mipmap","","",6,[[["self"],["glenum"]]]],[11,"insert_event_marker_ext","","",6,[[["self"],["str"]]]],[11,"push_group_marker_ext","","",6,[[["self"],["str"]]]],[11,"pop_group_marker_ext","","",6,[[["self"]]]],[11,"debug_message_insert_khr","","",6,[[["self"],["glenum"],["glenum"],["gluint"],["glenum"],["str"]]]],[11,"push_debug_group_khr","","",6,[[["self"],["glenum"],["gluint"],["str"]]]],[11,"pop_debug_group_khr","","",6,[[["self"]]]],[11,"fence_sync","","",6,[[["self"],["glenum"],["glbitfield"]],["glsync"]]],[11,"client_wait_sync","","",6,[[["self"],["glsync"],["glbitfield"],["gluint64"]]]],[11,"wait_sync","","",6,[[["self"],["glsync"],["glbitfield"],["gluint64"]]]],[11,"delete_sync","","",6,[[["self"],["glsync"]]]],[11,"texture_range_apple","","",6,N],[11,"gen_fences_apple","","",6,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"delete_fences_apple","","",6,N],[11,"set_fence_apple","","",6,[[["self"],["gluint"]]]],[11,"finish_fence_apple","","",6,[[["self"],["gluint"]]]],[11,"test_fence_apple","","",6,[[["self"],["gluint"]]]],[11,"test_object_apple","","",6,[[["self"],["glenum"],["gluint"]],["glboolean"]]],[11,"finish_object_apple","","",6,[[["self"],["glenum"],["gluint"]]]],[11,"blend_barrier_khr","","",6,[[["self"]]]],[11,"bind_frag_data_location_indexed","","",6,[[["self"],["gluint"],["gluint"],["gluint"],["str"]]]],[11,"get_frag_data_index","","",6,[[["self"],["gluint"],["str"]],["glint"]]],[11,"get_debug_messages","","",6,[[["self"]],["vec",["debugmessage"]]]],[11,"provoking_vertex_angle","","",6,[[["self"],["glenum"]]]],[11,"get_type","","",7,[[["self"]],["gltype"]]],[11,"buffer_data_untyped","","",7,N],[11,"buffer_sub_data_untyped","","",7,N],[11,"map_buffer","","",7,N],[11,"map_buffer_range","","",7,N],[11,"unmap_buffer","","",7,[[["self"],["glenum"]],["glboolean"]]],[11,"tex_buffer","","",7,[[["self"],["glenum"],["glenum"],["gluint"]]]],[11,"shader_source","","",7,N],[11,"read_buffer","","",7,[[["self"],["glenum"]]]],[11,"read_pixels_into_buffer","","",7,N],[11,"read_pixels","","",7,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"]],["vec",["u8"]]]],[11,"read_pixels_into_pbo","","",7,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"]]]],[11,"sample_coverage","","",7,[[["self"],["glclampf"],["bool"]]]],[11,"polygon_offset","","",7,[[["self"],["glfloat"],["glfloat"]]]],[11,"pixel_store_i","","",7,[[["self"],["glenum"],["glint"]]]],[11,"gen_buffers","","",7,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_renderbuffers","","",7,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_framebuffers","","",7,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_textures","","",7,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_vertex_arrays","","",7,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_queries","","",7,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"begin_query","","",7,[[["self"],["glenum"],["gluint"]]]],[11,"end_query","","",7,[[["self"],["glenum"]]]],[11,"query_counter","","",7,[[["self"],["gluint"],["glenum"]]]],[11,"get_query_object_iv","","",7,[[["self"],["gluint"],["glenum"]],["i32"]]],[11,"get_query_object_uiv","","",7,[[["self"],["gluint"],["glenum"]],["u32"]]],[11,"get_query_object_i64v","","",7,[[["self"],["gluint"],["glenum"]],["i64"]]],[11,"get_query_object_ui64v","","",7,[[["self"],["gluint"],["glenum"]],["u64"]]],[11,"delete_queries","","",7,N],[11,"delete_vertex_arrays","","",7,N],[11,"delete_buffers","","",7,N],[11,"delete_renderbuffers","","",7,N],[11,"delete_framebuffers","","",7,N],[11,"delete_textures","","",7,N],[11,"framebuffer_renderbuffer","","",7,[[["self"],["glenum"],["glenum"],["glenum"],["gluint"]]]],[11,"renderbuffer_storage","","",7,[[["self"],["glenum"],["glenum"],["glsizei"],["glsizei"]]]],[11,"depth_func","","",7,[[["self"],["glenum"]]]],[11,"active_texture","","",7,[[["self"],["glenum"]]]],[11,"attach_shader","","",7,[[["self"],["gluint"],["gluint"]]]],[11,"bind_attrib_location","","",7,[[["self"],["gluint"],["gluint"],["str"]]]],[11,"get_uniform_iv","","",7,N],[11,"get_uniform_fv","","",7,N],[11,"get_uniform_block_index","","",7,[[["self"],["gluint"],["str"]],["gluint"]]],[11,"get_uniform_indices","","",7,N],[11,"bind_buffer_base","","",7,[[["self"],["glenum"],["gluint"],["gluint"]]]],[11,"bind_buffer_range","","",7,[[["self"],["glenum"],["gluint"],["gluint"],["glintptr"],["glsizeiptr"]]]],[11,"uniform_block_binding","","",7,[[["self"],["gluint"],["gluint"],["gluint"]]]],[11,"bind_buffer","","",7,[[["self"],["glenum"],["gluint"]]]],[11,"bind_vertex_array","","",7,[[["self"],["gluint"]]]],[11,"bind_renderbuffer","","",7,[[["self"],["glenum"],["gluint"]]]],[11,"bind_framebuffer","","",7,[[["self"],["glenum"],["gluint"]]]],[11,"bind_texture","","",7,[[["self"],["glenum"],["gluint"]]]],[11,"draw_buffers","","",7,N],[11,"tex_image_2d","","",7,[[["self"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glint"],["glenum"],["glenum"],["option"]]]],[11,"compressed_tex_image_2d","","",7,N],[11,"compressed_tex_sub_image_2d","","",7,N],[11,"tex_image_3d","","",7,[[["self"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"],["glint"],["glenum"],["glenum"],["option"]]]],[11,"copy_tex_image_2d","","",7,[[["self"],["glenum"],["glint"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glint"]]]],[11,"copy_tex_sub_image_2d","","",7,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"copy_tex_sub_image_3d","","",7,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"tex_sub_image_2d","","",7,N],[11,"tex_sub_image_2d_pbo","","",7,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"],["usize"]]]],[11,"tex_sub_image_3d","","",7,N],[11,"tex_sub_image_3d_pbo","","",7,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"],["glenum"],["glenum"],["usize"]]]],[11,"tex_storage_2d","","",7,[[["self"],["glenum"],["glint"],["glenum"],["glsizei"],["glsizei"]]]],[11,"tex_storage_3d","","",7,[[["self"],["glenum"],["glint"],["glenum"],["glsizei"],["glsizei"],["glsizei"]]]],[11,"get_tex_image_into_buffer","","",7,N],[11,"copy_image_sub_data","","",7,[[["self"],["gluint"],["glenum"],["glint"],["glint"],["glint"],["glint"],["gluint"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"]]]],[11,"invalidate_framebuffer","","",7,N],[11,"invalidate_sub_framebuffer","","",7,N],[11,"get_integer_v","","",7,N],[11,"get_integer_64v","","",7,N],[11,"get_integer_iv","","",7,N],[11,"get_integer_64iv","","",7,N],[11,"get_boolean_v","","",7,N],[11,"get_float_v","","",7,N],[11,"get_framebuffer_attachment_parameter_iv","","",7,[[["self"],["glenum"],["glenum"],["glenum"]],["glint"]]],[11,"get_renderbuffer_parameter_iv","","",7,[[["self"],["glenum"],["glenum"]],["glint"]]],[11,"get_tex_parameter_iv","","",7,[[["self"],["glenum"],["glenum"]],["glint"]]],[11,"get_tex_parameter_fv","","",7,[[["self"],["glenum"],["glenum"]],["glfloat"]]],[11,"tex_parameter_i","","",7,[[["self"],["glenum"],["glenum"],["glint"]]]],[11,"tex_parameter_f","","",7,[[["self"],["glenum"],["glenum"],["glfloat"]]]],[11,"framebuffer_texture_2d","","",7,[[["self"],["glenum"],["glenum"],["glenum"],["gluint"],["glint"]]]],[11,"framebuffer_texture_layer","","",7,[[["self"],["glenum"],["glenum"],["gluint"],["glint"],["glint"]]]],[11,"blit_framebuffer","","",7,[[["self"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glbitfield"],["glenum"]]]],[11,"vertex_attrib_4f","","",7,[[["self"],["gluint"],["glfloat"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"vertex_attrib_pointer_f32","","",7,[[["self"],["gluint"],["glint"],["bool"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_pointer","","",7,[[["self"],["gluint"],["glint"],["glenum"],["bool"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_i_pointer","","",7,[[["self"],["gluint"],["glint"],["glenum"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_divisor","","",7,[[["self"],["gluint"],["gluint"]]]],[11,"viewport","","",7,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"scissor","","",7,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"line_width","","",7,[[["self"],["glfloat"]]]],[11,"use_program","","",7,[[["self"],["gluint"]]]],[11,"validate_program","","",7,[[["self"],["gluint"]]]],[11,"draw_arrays","","",7,[[["self"],["glenum"],["glint"],["glsizei"]]]],[11,"draw_arrays_instanced","","",7,[[["self"],["glenum"],["glint"],["glsizei"],["glsizei"]]]],[11,"draw_elements","","",7,[[["self"],["glenum"],["glsizei"],["glenum"],["gluint"]]]],[11,"draw_elements_instanced","","",7,[[["self"],["glenum"],["glsizei"],["glenum"],["gluint"],["glsizei"]]]],[11,"blend_color","","",7,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"blend_func","","",7,[[["self"],["glenum"],["glenum"]]]],[11,"blend_func_separate","","",7,[[["self"],["glenum"],["glenum"],["glenum"],["glenum"]]]],[11,"blend_equation","","",7,[[["self"],["glenum"]]]],[11,"blend_equation_separate","","",7,[[["self"],["glenum"],["glenum"]]]],[11,"color_mask","","",7,[[["self"],["bool"],["bool"],["bool"],["bool"]]]],[11,"cull_face","","",7,[[["self"],["glenum"]]]],[11,"front_face","","",7,[[["self"],["glenum"]]]],[11,"enable","","",7,[[["self"],["glenum"]]]],[11,"disable","","",7,[[["self"],["glenum"]]]],[11,"hint","","",7,[[["self"],["glenum"],["glenum"]]]],[11,"is_enabled","","",7,[[["self"],["glenum"]],["glboolean"]]],[11,"is_shader","","",7,[[["self"],["gluint"]],["glboolean"]]],[11,"is_texture","","",7,[[["self"],["glenum"]],["glboolean"]]],[11,"is_framebuffer","","",7,[[["self"],["glenum"]],["glboolean"]]],[11,"is_renderbuffer","","",7,[[["self"],["glenum"]],["glboolean"]]],[11,"check_frame_buffer_status","","",7,[[["self"],["glenum"]],["glenum"]]],[11,"enable_vertex_attrib_array","","",7,[[["self"],["gluint"]]]],[11,"disable_vertex_attrib_array","","",7,[[["self"],["gluint"]]]],[11,"uniform_1f","","",7,[[["self"],["glint"],["glfloat"]]]],[11,"uniform_1fv","","",7,N],[11,"uniform_1i","","",7,[[["self"],["glint"],["glint"]]]],[11,"uniform_1iv","","",7,N],[11,"uniform_1ui","","",7,[[["self"],["glint"],["gluint"]]]],[11,"uniform_2f","","",7,[[["self"],["glint"],["glfloat"],["glfloat"]]]],[11,"uniform_2fv","","",7,N],[11,"uniform_2i","","",7,[[["self"],["glint"],["glint"],["glint"]]]],[11,"uniform_2iv","","",7,N],[11,"uniform_2ui","","",7,[[["self"],["glint"],["gluint"],["gluint"]]]],[11,"uniform_3f","","",7,[[["self"],["glint"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"uniform_3fv","","",7,N],[11,"uniform_3i","","",7,[[["self"],["glint"],["glint"],["glint"],["glint"]]]],[11,"uniform_3iv","","",7,N],[11,"uniform_3ui","","",7,[[["self"],["glint"],["gluint"],["gluint"],["gluint"]]]],[11,"uniform_4f","","",7,[[["self"],["glint"],["glfloat"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"uniform_4i","","",7,[[["self"],["glint"],["glint"],["glint"],["glint"],["glint"]]]],[11,"uniform_4iv","","",7,N],[11,"uniform_4ui","","",7,[[["self"],["glint"],["gluint"],["gluint"],["gluint"],["gluint"]]]],[11,"uniform_4fv","","",7,N],[11,"uniform_matrix_2fv","","",7,N],[11,"uniform_matrix_3fv","","",7,N],[11,"uniform_matrix_4fv","","",7,N],[11,"depth_mask","","",7,[[["self"],["bool"]]]],[11,"depth_range","","",7,[[["self"],["f64"],["f64"]]]],[11,"get_active_attrib","","",7,N],[11,"get_active_uniform","","",7,N],[11,"get_active_uniforms_iv","","",7,[[["self"],["gluint"],["vec",["gluint"]],["glenum"]],["vec",["glint"]]]],[11,"get_active_uniform_block_i","","",7,[[["self"],["gluint"],["gluint"],["glenum"]],["glint"]]],[11,"get_active_uniform_block_iv","","",7,[[["self"],["gluint"],["gluint"],["glenum"]],["vec",["glint"]]]],[11,"get_active_uniform_block_name","","",7,[[["self"],["gluint"],["gluint"]],["string"]]],[11,"get_attrib_location","","",7,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_frag_data_location","","",7,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_uniform_location","","",7,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_program_info_log","","",7,[[["self"],["gluint"]],["string"]]],[11,"get_program_iv","","",7,N],[11,"get_program_binary","","",7,N],[11,"program_binary","","",7,N],[11,"program_parameter_i","","",7,[[["self"],["gluint"],["glenum"],["glint"]]]],[11,"get_vertex_attrib_iv","","",7,N],[11,"get_vertex_attrib_fv","","",7,N],[11,"get_vertex_attrib_pointer_v","","",7,[[["self"],["gluint"],["glenum"]],["glsizeiptr"]]],[11,"get_buffer_parameter_iv","","",7,[[["self"],["gluint"],["glenum"]],["glint"]]],[11,"get_shader_info_log","","",7,[[["self"],["gluint"]],["string"]]],[11,"get_string","","",7,[[["self"],["glenum"]],["string"]]],[11,"get_string_i","","",7,[[["self"],["glenum"],["gluint"]],["string"]]],[11,"get_shader_iv","","",7,N],[11,"get_shader_precision_format","","",7,N],[11,"compile_shader","","",7,[[["self"],["gluint"]]]],[11,"create_program","","",7,[[["self"]],["gluint"]]],[11,"delete_program","","",7,[[["self"],["gluint"]]]],[11,"create_shader","","",7,[[["self"],["glenum"]],["gluint"]]],[11,"delete_shader","","",7,[[["self"],["gluint"]]]],[11,"detach_shader","","",7,[[["self"],["gluint"],["gluint"]]]],[11,"link_program","","",7,[[["self"],["gluint"]]]],[11,"clear_color","","",7,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"clear","","",7,[[["self"],["glbitfield"]]]],[11,"clear_depth","","",7,[[["self"],["f64"]]]],[11,"clear_stencil","","",7,[[["self"],["glint"]]]],[11,"flush","","",7,[[["self"]]]],[11,"finish","","",7,[[["self"]]]],[11,"get_error","","",7,[[["self"]],["glenum"]]],[11,"stencil_mask","","",7,[[["self"],["gluint"]]]],[11,"stencil_mask_separate","","",7,[[["self"],["glenum"],["gluint"]]]],[11,"stencil_func","","",7,[[["self"],["glenum"],["glint"],["gluint"]]]],[11,"stencil_func_separate","","",7,[[["self"],["glenum"],["glenum"],["glint"],["gluint"]]]],[11,"stencil_op","","",7,[[["self"],["glenum"],["glenum"],["glenum"]]]],[11,"stencil_op_separate","","",7,[[["self"],["glenum"],["glenum"],["glenum"],["glenum"]]]],[11,"egl_image_target_texture2d_oes","","",7,[[["self"],["glenum"],["gleglimageoes"]]]],[11,"generate_mipmap","","",7,[[["self"],["glenum"]]]],[11,"insert_event_marker_ext","","",7,[[["self"],["str"]]]],[11,"push_group_marker_ext","","",7,[[["self"],["str"]]]],[11,"pop_group_marker_ext","","",7,[[["self"]]]],[11,"debug_message_insert_khr","","",7,[[["self"],["glenum"],["glenum"],["gluint"],["glenum"],["str"]]]],[11,"push_debug_group_khr","","",7,[[["self"],["glenum"],["gluint"],["str"]]]],[11,"pop_debug_group_khr","","",7,[[["self"]]]],[11,"fence_sync","","",7,[[["self"],["glenum"],["glbitfield"]],["glsync"]]],[11,"client_wait_sync","","",7,[[["self"],["glsync"],["glbitfield"],["gluint64"]]]],[11,"wait_sync","","",7,[[["self"],["glsync"],["glbitfield"],["gluint64"]]]],[11,"delete_sync","","",7,[[["self"],["glsync"]]]],[11,"texture_range_apple","","",7,N],[11,"gen_fences_apple","","",7,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"delete_fences_apple","","",7,N],[11,"set_fence_apple","","",7,[[["self"],["gluint"]]]],[11,"finish_fence_apple","","",7,[[["self"],["gluint"]]]],[11,"test_fence_apple","","",7,[[["self"],["gluint"]]]],[11,"test_object_apple","","",7,[[["self"],["glenum"],["gluint"]],["glboolean"]]],[11,"finish_object_apple","","",7,[[["self"],["glenum"],["gluint"]]]],[11,"blend_barrier_khr","","",7,[[["self"]]]],[11,"bind_frag_data_location_indexed","","",7,[[["self"],["gluint"],["gluint"],["gluint"],["str"]]]],[11,"get_frag_data_index","","",7,[[["self"],["gluint"],["str"]],["glint"]]],[11,"get_debug_messages","","",7,[[["self"]],["vec",["debugmessage"]]]],[11,"provoking_vertex_angle","","",7,[[["self"],["glenum"]]]],[11,"get_type","","",8,[[["self"]],["gltype"]]],[11,"buffer_data_untyped","","",8,N],[11,"buffer_sub_data_untyped","","",8,N],[11,"map_buffer","","",8,N],[11,"map_buffer_range","","",8,N],[11,"unmap_buffer","","",8,[[["self"],["glenum"]],["glboolean"]]],[11,"shader_source","","",8,N],[11,"tex_buffer","","",8,[[["self"],["glenum"],["glenum"],["gluint"]]]],[11,"read_buffer","","",8,[[["self"],["glenum"]]]],[11,"read_pixels_into_buffer","","",8,N],[11,"read_pixels","","",8,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"]],["vec",["u8"]]]],[11,"read_pixels_into_pbo","","",8,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"]]]],[11,"sample_coverage","","",8,[[["self"],["glclampf"],["bool"]]]],[11,"polygon_offset","","",8,[[["self"],["glfloat"],["glfloat"]]]],[11,"pixel_store_i","","",8,[[["self"],["glenum"],["glint"]]]],[11,"gen_buffers","","",8,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_renderbuffers","","",8,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_framebuffers","","",8,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_textures","","",8,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_vertex_arrays","","",8,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_queries","","",8,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"begin_query","","",8,[[["self"],["glenum"],["gluint"]]]],[11,"end_query","","",8,[[["self"],["glenum"]]]],[11,"query_counter","","",8,[[["self"],["gluint"],["glenum"]]]],[11,"get_query_object_iv","","",8,[[["self"],["gluint"],["glenum"]],["i32"]]],[11,"get_query_object_uiv","","",8,[[["self"],["gluint"],["glenum"]],["u32"]]],[11,"get_query_object_i64v","","",8,[[["self"],["gluint"],["glenum"]],["i64"]]],[11,"get_query_object_ui64v","","",8,[[["self"],["gluint"],["glenum"]],["u64"]]],[11,"delete_queries","","",8,N],[11,"delete_vertex_arrays","","",8,N],[11,"delete_buffers","","",8,N],[11,"delete_renderbuffers","","",8,N],[11,"delete_framebuffers","","",8,N],[11,"delete_textures","","",8,N],[11,"framebuffer_renderbuffer","","",8,[[["self"],["glenum"],["glenum"],["glenum"],["gluint"]]]],[11,"renderbuffer_storage","","",8,[[["self"],["glenum"],["glenum"],["glsizei"],["glsizei"]]]],[11,"depth_func","","",8,[[["self"],["glenum"]]]],[11,"active_texture","","",8,[[["self"],["glenum"]]]],[11,"attach_shader","","",8,[[["self"],["gluint"],["gluint"]]]],[11,"bind_attrib_location","","",8,[[["self"],["gluint"],["gluint"],["str"]]]],[11,"get_uniform_iv","","",8,N],[11,"get_uniform_fv","","",8,N],[11,"get_uniform_block_index","","",8,[[["self"],["gluint"],["str"]],["gluint"]]],[11,"get_uniform_indices","","",8,N],[11,"bind_buffer_base","","",8,[[["self"],["glenum"],["gluint"],["gluint"]]]],[11,"bind_buffer_range","","",8,[[["self"],["glenum"],["gluint"],["gluint"],["glintptr"],["glsizeiptr"]]]],[11,"uniform_block_binding","","",8,[[["self"],["gluint"],["gluint"],["gluint"]]]],[11,"bind_buffer","","",8,[[["self"],["glenum"],["gluint"]]]],[11,"bind_vertex_array","","",8,[[["self"],["gluint"]]]],[11,"bind_renderbuffer","","",8,[[["self"],["glenum"],["gluint"]]]],[11,"bind_framebuffer","","",8,[[["self"],["glenum"],["gluint"]]]],[11,"bind_texture","","",8,[[["self"],["glenum"],["gluint"]]]],[11,"draw_buffers","","",8,N],[11,"tex_image_2d","","",8,[[["self"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glint"],["glenum"],["glenum"],["option"]]]],[11,"compressed_tex_image_2d","","",8,N],[11,"compressed_tex_sub_image_2d","","",8,N],[11,"tex_image_3d","","",8,[[["self"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"],["glint"],["glenum"],["glenum"],["option"]]]],[11,"copy_tex_image_2d","","",8,[[["self"],["glenum"],["glint"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glint"]]]],[11,"copy_tex_sub_image_2d","","",8,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"copy_tex_sub_image_3d","","",8,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"tex_sub_image_2d","","",8,N],[11,"tex_sub_image_2d_pbo","","",8,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"],["usize"]]]],[11,"tex_sub_image_3d","","",8,N],[11,"tex_sub_image_3d_pbo","","",8,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"],["glenum"],["glenum"],["usize"]]]],[11,"tex_storage_2d","","",8,[[["self"],["glenum"],["glint"],["glenum"],["glsizei"],["glsizei"]]]],[11,"tex_storage_3d","","",8,[[["self"],["glenum"],["glint"],["glenum"],["glsizei"],["glsizei"],["glsizei"]]]],[11,"get_tex_image_into_buffer","","",8,N],[11,"copy_image_sub_data","","",8,[[["self"],["gluint"],["glenum"],["glint"],["glint"],["glint"],["glint"],["gluint"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"]]]],[11,"invalidate_framebuffer","","",8,N],[11,"invalidate_sub_framebuffer","","",8,N],[11,"get_integer_v","","",8,N],[11,"get_integer_64v","","",8,N],[11,"get_integer_iv","","",8,N],[11,"get_integer_64iv","","",8,N],[11,"get_boolean_v","","",8,N],[11,"get_float_v","","",8,N],[11,"get_framebuffer_attachment_parameter_iv","","",8,[[["self"],["glenum"],["glenum"],["glenum"]],["glint"]]],[11,"get_renderbuffer_parameter_iv","","",8,[[["self"],["glenum"],["glenum"]],["glint"]]],[11,"get_tex_parameter_iv","","",8,[[["self"],["glenum"],["glenum"]],["glint"]]],[11,"get_tex_parameter_fv","","",8,[[["self"],["glenum"],["glenum"]],["glfloat"]]],[11,"tex_parameter_i","","",8,[[["self"],["glenum"],["glenum"],["glint"]]]],[11,"tex_parameter_f","","",8,[[["self"],["glenum"],["glenum"],["glfloat"]]]],[11,"framebuffer_texture_2d","","",8,[[["self"],["glenum"],["glenum"],["glenum"],["gluint"],["glint"]]]],[11,"framebuffer_texture_layer","","",8,[[["self"],["glenum"],["glenum"],["gluint"],["glint"],["glint"]]]],[11,"blit_framebuffer","","",8,[[["self"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glbitfield"],["glenum"]]]],[11,"vertex_attrib_4f","","",8,[[["self"],["gluint"],["glfloat"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"vertex_attrib_pointer_f32","","",8,[[["self"],["gluint"],["glint"],["bool"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_pointer","","",8,[[["self"],["gluint"],["glint"],["glenum"],["bool"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_i_pointer","","",8,[[["self"],["gluint"],["glint"],["glenum"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_divisor","","",8,[[["self"],["gluint"],["gluint"]]]],[11,"viewport","","",8,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"scissor","","",8,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"line_width","","",8,[[["self"],["glfloat"]]]],[11,"use_program","","",8,[[["self"],["gluint"]]]],[11,"validate_program","","",8,[[["self"],["gluint"]]]],[11,"draw_arrays","","",8,[[["self"],["glenum"],["glint"],["glsizei"]]]],[11,"draw_arrays_instanced","","",8,[[["self"],["glenum"],["glint"],["glsizei"],["glsizei"]]]],[11,"draw_elements","","",8,[[["self"],["glenum"],["glsizei"],["glenum"],["gluint"]]]],[11,"draw_elements_instanced","","",8,[[["self"],["glenum"],["glsizei"],["glenum"],["gluint"],["glsizei"]]]],[11,"blend_color","","",8,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"blend_func","","",8,[[["self"],["glenum"],["glenum"]]]],[11,"blend_func_separate","","",8,[[["self"],["glenum"],["glenum"],["glenum"],["glenum"]]]],[11,"blend_equation","","",8,[[["self"],["glenum"]]]],[11,"blend_equation_separate","","",8,[[["self"],["glenum"],["glenum"]]]],[11,"color_mask","","",8,[[["self"],["bool"],["bool"],["bool"],["bool"]]]],[11,"cull_face","","",8,[[["self"],["glenum"]]]],[11,"front_face","","",8,[[["self"],["glenum"]]]],[11,"enable","","",8,[[["self"],["glenum"]]]],[11,"disable","","",8,[[["self"],["glenum"]]]],[11,"hint","","",8,[[["self"],["glenum"],["glenum"]]]],[11,"is_enabled","","",8,[[["self"],["glenum"]],["glboolean"]]],[11,"is_shader","","",8,[[["self"],["gluint"]],["glboolean"]]],[11,"is_texture","","",8,[[["self"],["glenum"]],["glboolean"]]],[11,"is_framebuffer","","",8,[[["self"],["glenum"]],["glboolean"]]],[11,"is_renderbuffer","","",8,[[["self"],["glenum"]],["glboolean"]]],[11,"check_frame_buffer_status","","",8,[[["self"],["glenum"]],["glenum"]]],[11,"enable_vertex_attrib_array","","",8,[[["self"],["gluint"]]]],[11,"disable_vertex_attrib_array","","",8,[[["self"],["gluint"]]]],[11,"uniform_1f","","",8,[[["self"],["glint"],["glfloat"]]]],[11,"uniform_1fv","","",8,N],[11,"uniform_1i","","",8,[[["self"],["glint"],["glint"]]]],[11,"uniform_1iv","","",8,N],[11,"uniform_1ui","","",8,[[["self"],["glint"],["gluint"]]]],[11,"uniform_2f","","",8,[[["self"],["glint"],["glfloat"],["glfloat"]]]],[11,"uniform_2fv","","",8,N],[11,"uniform_2i","","",8,[[["self"],["glint"],["glint"],["glint"]]]],[11,"uniform_2iv","","",8,N],[11,"uniform_2ui","","",8,[[["self"],["glint"],["gluint"],["gluint"]]]],[11,"uniform_3f","","",8,[[["self"],["glint"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"uniform_3fv","","",8,N],[11,"uniform_3i","","",8,[[["self"],["glint"],["glint"],["glint"],["glint"]]]],[11,"uniform_3iv","","",8,N],[11,"uniform_3ui","","",8,[[["self"],["glint"],["gluint"],["gluint"],["gluint"]]]],[11,"uniform_4f","","",8,[[["self"],["glint"],["glfloat"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"uniform_4i","","",8,[[["self"],["glint"],["glint"],["glint"],["glint"],["glint"]]]],[11,"uniform_4iv","","",8,N],[11,"uniform_4ui","","",8,[[["self"],["glint"],["gluint"],["gluint"],["gluint"],["gluint"]]]],[11,"uniform_4fv","","",8,N],[11,"uniform_matrix_2fv","","",8,N],[11,"uniform_matrix_3fv","","",8,N],[11,"uniform_matrix_4fv","","",8,N],[11,"depth_mask","","",8,[[["self"],["bool"]]]],[11,"depth_range","","",8,[[["self"],["f64"],["f64"]]]],[11,"get_active_attrib","","",8,N],[11,"get_active_uniform","","",8,N],[11,"get_active_uniforms_iv","","",8,[[["self"],["gluint"],["vec",["gluint"]],["glenum"]],["vec",["glint"]]]],[11,"get_active_uniform_block_i","","",8,[[["self"],["gluint"],["gluint"],["glenum"]],["glint"]]],[11,"get_active_uniform_block_iv","","",8,[[["self"],["gluint"],["gluint"],["glenum"]],["vec",["glint"]]]],[11,"get_active_uniform_block_name","","",8,[[["self"],["gluint"],["gluint"]],["string"]]],[11,"get_attrib_location","","",8,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_frag_data_location","","",8,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_uniform_location","","",8,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_program_info_log","","",8,[[["self"],["gluint"]],["string"]]],[11,"get_program_iv","","",8,N],[11,"get_program_binary","","",8,N],[11,"program_binary","","",8,N],[11,"program_parameter_i","","",8,[[["self"],["gluint"],["glenum"],["glint"]]]],[11,"get_vertex_attrib_iv","","",8,N],[11,"get_vertex_attrib_fv","","",8,N],[11,"get_vertex_attrib_pointer_v","","",8,[[["self"],["gluint"],["glenum"]],["glsizeiptr"]]],[11,"get_buffer_parameter_iv","","",8,[[["self"],["gluint"],["glenum"]],["glint"]]],[11,"get_shader_info_log","","",8,[[["self"],["gluint"]],["string"]]],[11,"get_string","","",8,[[["self"],["glenum"]],["string"]]],[11,"get_string_i","","",8,[[["self"],["glenum"],["gluint"]],["string"]]],[11,"get_shader_iv","","",8,N],[11,"get_shader_precision_format","","",8,N],[11,"compile_shader","","",8,[[["self"],["gluint"]]]],[11,"create_program","","",8,[[["self"]],["gluint"]]],[11,"delete_program","","",8,[[["self"],["gluint"]]]],[11,"create_shader","","",8,[[["self"],["glenum"]],["gluint"]]],[11,"delete_shader","","",8,[[["self"],["gluint"]]]],[11,"detach_shader","","",8,[[["self"],["gluint"],["gluint"]]]],[11,"link_program","","",8,[[["self"],["gluint"]]]],[11,"clear_color","","",8,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"clear","","",8,[[["self"],["glbitfield"]]]],[11,"clear_depth","","",8,[[["self"],["f64"]]]],[11,"clear_stencil","","",8,[[["self"],["glint"]]]],[11,"flush","","",8,[[["self"]]]],[11,"finish","","",8,[[["self"]]]],[11,"get_error","","",8,[[["self"]],["glenum"]]],[11,"stencil_mask","","",8,[[["self"],["gluint"]]]],[11,"stencil_mask_separate","","",8,[[["self"],["glenum"],["gluint"]]]],[11,"stencil_func","","",8,[[["self"],["glenum"],["glint"],["gluint"]]]],[11,"stencil_func_separate","","",8,[[["self"],["glenum"],["glenum"],["glint"],["gluint"]]]],[11,"stencil_op","","",8,[[["self"],["glenum"],["glenum"],["glenum"]]]],[11,"stencil_op_separate","","",8,[[["self"],["glenum"],["glenum"],["glenum"],["glenum"]]]],[11,"egl_image_target_texture2d_oes","","",8,[[["self"],["glenum"],["gleglimageoes"]]]],[11,"generate_mipmap","","",8,[[["self"],["glenum"]]]],[11,"insert_event_marker_ext","","",8,[[["self"],["str"]]]],[11,"push_group_marker_ext","","",8,[[["self"],["str"]]]],[11,"pop_group_marker_ext","","",8,[[["self"]]]],[11,"debug_message_insert_khr","","",8,[[["self"],["glenum"],["glenum"],["gluint"],["glenum"],["str"]]]],[11,"push_debug_group_khr","","",8,[[["self"],["glenum"],["gluint"],["str"]]]],[11,"pop_debug_group_khr","","",8,[[["self"]]]],[11,"fence_sync","","",8,[[["self"],["glenum"],["glbitfield"]],["glsync"]]],[11,"client_wait_sync","","",8,[[["self"],["glsync"],["glbitfield"],["gluint64"]]]],[11,"wait_sync","","",8,[[["self"],["glsync"],["glbitfield"],["gluint64"]]]],[11,"texture_range_apple","","",8,N],[11,"delete_sync","","",8,[[["self"],["glsync"]]]],[11,"gen_fences_apple","","",8,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"delete_fences_apple","","",8,N],[11,"set_fence_apple","","",8,[[["self"],["gluint"]]]],[11,"finish_fence_apple","","",8,[[["self"],["gluint"]]]],[11,"test_fence_apple","","",8,[[["self"],["gluint"]]]],[11,"test_object_apple","","",8,[[["self"],["glenum"],["gluint"]],["glboolean"]]],[11,"finish_object_apple","","",8,[[["self"],["glenum"],["gluint"]]]],[11,"bind_frag_data_location_indexed","","",8,[[["self"],["gluint"],["gluint"],["gluint"],["str"]]]],[11,"get_frag_data_index","","",8,[[["self"],["gluint"],["str"]],["glint"]]],[11,"get_debug_messages","","",8,[[["self"]],["vec",["debugmessage"]]]],[11,"provoking_vertex_angle","","",8,[[["self"],["glenum"]]]],[11,"blend_barrier_khr","","",8,[[["self"]]]],[11,"get_type","","",9,[[["self"]],["gltype"]]],[11,"buffer_data_untyped","","",9,N],[11,"tex_buffer","","",9,[[["self"],["glenum"],["glenum"],["gluint"]]]],[11,"buffer_sub_data_untyped","","",9,N],[11,"map_buffer","","",9,N],[11,"map_buffer_range","","",9,N],[11,"unmap_buffer","","",9,[[["self"],["glenum"]],["glboolean"]]],[11,"shader_source","","",9,N],[11,"read_buffer","","",9,[[["self"],["glenum"]]]],[11,"read_pixels_into_buffer","","",9,N],[11,"read_pixels","","",9,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"]],["vec",["u8"]]]],[11,"read_pixels_into_pbo","","",9,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"]]]],[11,"sample_coverage","","",9,[[["self"],["glclampf"],["bool"]]]],[11,"polygon_offset","","",9,[[["self"],["glfloat"],["glfloat"]]]],[11,"pixel_store_i","","",9,[[["self"],["glenum"],["glint"]]]],[11,"gen_buffers","","",9,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_renderbuffers","","",9,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_framebuffers","","",9,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_textures","","",9,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_vertex_arrays","","",9,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"gen_queries","","",9,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"begin_query","","",9,[[["self"],["glenum"],["gluint"]]]],[11,"end_query","","",9,[[["self"],["glenum"]]]],[11,"query_counter","","",9,[[["self"],["gluint"],["glenum"]]]],[11,"get_query_object_iv","","",9,[[["self"],["gluint"],["glenum"]],["i32"]]],[11,"get_query_object_uiv","","",9,[[["self"],["gluint"],["glenum"]],["u32"]]],[11,"get_query_object_i64v","","",9,[[["self"],["gluint"],["glenum"]],["i64"]]],[11,"get_query_object_ui64v","","",9,[[["self"],["gluint"],["glenum"]],["u64"]]],[11,"delete_queries","","",9,N],[11,"delete_vertex_arrays","","",9,N],[11,"delete_buffers","","",9,N],[11,"delete_renderbuffers","","",9,N],[11,"delete_framebuffers","","",9,N],[11,"delete_textures","","",9,N],[11,"framebuffer_renderbuffer","","",9,[[["self"],["glenum"],["glenum"],["glenum"],["gluint"]]]],[11,"renderbuffer_storage","","",9,[[["self"],["glenum"],["glenum"],["glsizei"],["glsizei"]]]],[11,"depth_func","","",9,[[["self"],["glenum"]]]],[11,"active_texture","","",9,[[["self"],["glenum"]]]],[11,"attach_shader","","",9,[[["self"],["gluint"],["gluint"]]]],[11,"bind_attrib_location","","",9,[[["self"],["gluint"],["gluint"],["str"]]]],[11,"get_uniform_iv","","",9,N],[11,"get_uniform_fv","","",9,N],[11,"get_uniform_block_index","","",9,[[["self"],["gluint"],["str"]],["gluint"]]],[11,"get_uniform_indices","","",9,N],[11,"bind_buffer_base","","",9,[[["self"],["glenum"],["gluint"],["gluint"]]]],[11,"bind_buffer_range","","",9,[[["self"],["glenum"],["gluint"],["gluint"],["glintptr"],["glsizeiptr"]]]],[11,"uniform_block_binding","","",9,[[["self"],["gluint"],["gluint"],["gluint"]]]],[11,"bind_buffer","","",9,[[["self"],["glenum"],["gluint"]]]],[11,"bind_vertex_array","","",9,[[["self"],["gluint"]]]],[11,"bind_renderbuffer","","",9,[[["self"],["glenum"],["gluint"]]]],[11,"bind_framebuffer","","",9,[[["self"],["glenum"],["gluint"]]]],[11,"bind_texture","","",9,[[["self"],["glenum"],["gluint"]]]],[11,"draw_buffers","","",9,N],[11,"tex_image_2d","","",9,[[["self"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glint"],["glenum"],["glenum"],["option"]]]],[11,"compressed_tex_image_2d","","",9,N],[11,"compressed_tex_sub_image_2d","","",9,N],[11,"tex_image_3d","","",9,[[["self"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"],["glint"],["glenum"],["glenum"],["option"]]]],[11,"copy_tex_image_2d","","",9,[[["self"],["glenum"],["glint"],["glenum"],["glint"],["glint"],["glsizei"],["glsizei"],["glint"]]]],[11,"copy_tex_sub_image_2d","","",9,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"copy_tex_sub_image_3d","","",9,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"tex_sub_image_2d","","",9,N],[11,"tex_sub_image_2d_pbo","","",9,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glenum"],["glenum"],["usize"]]]],[11,"tex_sub_image_3d","","",9,N],[11,"tex_sub_image_3d_pbo","","",9,[[["self"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"],["glenum"],["glenum"],["usize"]]]],[11,"tex_storage_2d","","",9,[[["self"],["glenum"],["glint"],["glenum"],["glsizei"],["glsizei"]]]],[11,"tex_storage_3d","","",9,[[["self"],["glenum"],["glint"],["glenum"],["glsizei"],["glsizei"],["glsizei"]]]],[11,"get_tex_image_into_buffer","","",9,N],[11,"copy_image_sub_data","","",9,[[["self"],["gluint"],["glenum"],["glint"],["glint"],["glint"],["glint"],["gluint"],["glenum"],["glint"],["glint"],["glint"],["glint"],["glsizei"],["glsizei"],["glsizei"]]]],[11,"invalidate_framebuffer","","",9,N],[11,"invalidate_sub_framebuffer","","",9,N],[11,"get_integer_v","","",9,N],[11,"get_integer_64v","","",9,N],[11,"get_integer_iv","","",9,N],[11,"get_integer_64iv","","",9,N],[11,"get_boolean_v","","",9,N],[11,"get_float_v","","",9,N],[11,"get_renderbuffer_parameter_iv","","",9,[[["self"],["glenum"],["glenum"]],["glint"]]],[11,"get_framebuffer_attachment_parameter_iv","","",9,[[["self"],["glenum"],["glenum"],["glenum"]],["glint"]]],[11,"get_tex_parameter_iv","","",9,[[["self"],["glenum"],["glenum"]],["glint"]]],[11,"get_tex_parameter_fv","","",9,[[["self"],["glenum"],["glenum"]],["glfloat"]]],[11,"tex_parameter_i","","",9,[[["self"],["glenum"],["glenum"],["glint"]]]],[11,"tex_parameter_f","","",9,[[["self"],["glenum"],["glenum"],["glfloat"]]]],[11,"framebuffer_texture_2d","","",9,[[["self"],["glenum"],["glenum"],["glenum"],["gluint"],["glint"]]]],[11,"framebuffer_texture_layer","","",9,[[["self"],["glenum"],["glenum"],["gluint"],["glint"],["glint"]]]],[11,"blit_framebuffer","","",9,[[["self"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glint"],["glbitfield"],["glenum"]]]],[11,"vertex_attrib_4f","","",9,[[["self"],["gluint"],["glfloat"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"vertex_attrib_pointer_f32","","",9,[[["self"],["gluint"],["glint"],["bool"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_pointer","","",9,[[["self"],["gluint"],["glint"],["glenum"],["bool"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_i_pointer","","",9,[[["self"],["gluint"],["glint"],["glenum"],["glsizei"],["gluint"]]]],[11,"vertex_attrib_divisor","","",9,[[["self"],["gluint"],["gluint"]]]],[11,"viewport","","",9,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"scissor","","",9,[[["self"],["glint"],["glint"],["glsizei"],["glsizei"]]]],[11,"line_width","","",9,[[["self"],["glfloat"]]]],[11,"use_program","","",9,[[["self"],["gluint"]]]],[11,"validate_program","","",9,[[["self"],["gluint"]]]],[11,"draw_arrays","","",9,[[["self"],["glenum"],["glint"],["glsizei"]]]],[11,"draw_arrays_instanced","","",9,[[["self"],["glenum"],["glint"],["glsizei"],["glsizei"]]]],[11,"draw_elements","","",9,[[["self"],["glenum"],["glsizei"],["glenum"],["gluint"]]]],[11,"draw_elements_instanced","","",9,[[["self"],["glenum"],["glsizei"],["glenum"],["gluint"],["glsizei"]]]],[11,"blend_color","","",9,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"blend_func","","",9,[[["self"],["glenum"],["glenum"]]]],[11,"blend_func_separate","","",9,[[["self"],["glenum"],["glenum"],["glenum"],["glenum"]]]],[11,"blend_equation","","",9,[[["self"],["glenum"]]]],[11,"blend_equation_separate","","",9,[[["self"],["glenum"],["glenum"]]]],[11,"color_mask","","",9,[[["self"],["bool"],["bool"],["bool"],["bool"]]]],[11,"cull_face","","",9,[[["self"],["glenum"]]]],[11,"front_face","","",9,[[["self"],["glenum"]]]],[11,"enable","","",9,[[["self"],["glenum"]]]],[11,"disable","","",9,[[["self"],["glenum"]]]],[11,"hint","","",9,[[["self"],["glenum"],["glenum"]]]],[11,"is_enabled","","",9,[[["self"],["glenum"]],["glboolean"]]],[11,"is_shader","","",9,[[["self"],["gluint"]],["glboolean"]]],[11,"is_texture","","",9,[[["self"],["glenum"]],["glboolean"]]],[11,"is_framebuffer","","",9,[[["self"],["glenum"]],["glboolean"]]],[11,"is_renderbuffer","","",9,[[["self"],["glenum"]],["glboolean"]]],[11,"check_frame_buffer_status","","",9,[[["self"],["glenum"]],["glenum"]]],[11,"enable_vertex_attrib_array","","",9,[[["self"],["gluint"]]]],[11,"disable_vertex_attrib_array","","",9,[[["self"],["gluint"]]]],[11,"uniform_1f","","",9,[[["self"],["glint"],["glfloat"]]]],[11,"uniform_1fv","","",9,N],[11,"uniform_1i","","",9,[[["self"],["glint"],["glint"]]]],[11,"uniform_1iv","","",9,N],[11,"uniform_1ui","","",9,[[["self"],["glint"],["gluint"]]]],[11,"uniform_2f","","",9,[[["self"],["glint"],["glfloat"],["glfloat"]]]],[11,"uniform_2fv","","",9,N],[11,"uniform_2i","","",9,[[["self"],["glint"],["glint"],["glint"]]]],[11,"uniform_2iv","","",9,N],[11,"uniform_2ui","","",9,[[["self"],["glint"],["gluint"],["gluint"]]]],[11,"uniform_3f","","",9,[[["self"],["glint"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"uniform_3fv","","",9,N],[11,"uniform_3i","","",9,[[["self"],["glint"],["glint"],["glint"],["glint"]]]],[11,"uniform_3iv","","",9,N],[11,"uniform_3ui","","",9,[[["self"],["glint"],["gluint"],["gluint"],["gluint"]]]],[11,"uniform_4f","","",9,[[["self"],["glint"],["glfloat"],["glfloat"],["glfloat"],["glfloat"]]]],[11,"uniform_4i","","",9,[[["self"],["glint"],["glint"],["glint"],["glint"],["glint"]]]],[11,"uniform_4iv","","",9,N],[11,"uniform_4ui","","",9,[[["self"],["glint"],["gluint"],["gluint"],["gluint"],["gluint"]]]],[11,"uniform_4fv","","",9,N],[11,"uniform_matrix_2fv","","",9,N],[11,"uniform_matrix_3fv","","",9,N],[11,"uniform_matrix_4fv","","",9,N],[11,"depth_mask","","",9,[[["self"],["bool"]]]],[11,"depth_range","","",9,[[["self"],["f64"],["f64"]]]],[11,"get_active_attrib","","",9,N],[11,"get_active_uniform","","",9,N],[11,"get_active_uniforms_iv","","",9,[[["self"],["gluint"],["vec",["gluint"]],["glenum"]],["vec",["glint"]]]],[11,"get_active_uniform_block_i","","",9,[[["self"],["gluint"],["gluint"],["glenum"]],["glint"]]],[11,"get_active_uniform_block_iv","","",9,[[["self"],["gluint"],["gluint"],["glenum"]],["vec",["glint"]]]],[11,"get_active_uniform_block_name","","",9,[[["self"],["gluint"],["gluint"]],["string"]]],[11,"get_attrib_location","","",9,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_frag_data_location","","",9,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_uniform_location","","",9,[[["self"],["gluint"],["str"]],["c_int"]]],[11,"get_program_info_log","","",9,[[["self"],["gluint"]],["string"]]],[11,"get_program_iv","","",9,N],[11,"get_program_binary","","",9,N],[11,"program_binary","","",9,N],[11,"program_parameter_i","","",9,[[["self"],["gluint"],["glenum"],["glint"]]]],[11,"get_vertex_attrib_iv","","",9,N],[11,"get_vertex_attrib_fv","","",9,N],[11,"get_vertex_attrib_pointer_v","","",9,[[["self"],["gluint"],["glenum"]],["glsizeiptr"]]],[11,"get_buffer_parameter_iv","","",9,[[["self"],["gluint"],["glenum"]],["glint"]]],[11,"get_shader_info_log","","",9,[[["self"],["gluint"]],["string"]]],[11,"get_string","","",9,[[["self"],["glenum"]],["string"]]],[11,"get_string_i","","",9,[[["self"],["glenum"],["gluint"]],["string"]]],[11,"get_shader_iv","","",9,N],[11,"get_shader_precision_format","","",9,N],[11,"compile_shader","","",9,[[["self"],["gluint"]]]],[11,"create_program","","",9,[[["self"]],["gluint"]]],[11,"delete_program","","",9,[[["self"],["gluint"]]]],[11,"create_shader","","",9,[[["self"],["glenum"]],["gluint"]]],[11,"delete_shader","","",9,[[["self"],["gluint"]]]],[11,"detach_shader","","",9,[[["self"],["gluint"],["gluint"]]]],[11,"link_program","","",9,[[["self"],["gluint"]]]],[11,"clear_color","","",9,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"clear","","",9,[[["self"],["glbitfield"]]]],[11,"clear_depth","","",9,[[["self"],["f64"]]]],[11,"clear_stencil","","",9,[[["self"],["glint"]]]],[11,"flush","","",9,[[["self"]]]],[11,"finish","","",9,[[["self"]]]],[11,"get_error","","",9,[[["self"]],["glenum"]]],[11,"stencil_mask","","",9,[[["self"],["gluint"]]]],[11,"stencil_mask_separate","","",9,[[["self"],["glenum"],["gluint"]]]],[11,"stencil_func","","",9,[[["self"],["glenum"],["glint"],["gluint"]]]],[11,"stencil_func_separate","","",9,[[["self"],["glenum"],["glenum"],["glint"],["gluint"]]]],[11,"stencil_op","","",9,[[["self"],["glenum"],["glenum"],["glenum"]]]],[11,"stencil_op_separate","","",9,[[["self"],["glenum"],["glenum"],["glenum"],["glenum"]]]],[11,"egl_image_target_texture2d_oes","","",9,[[["self"],["glenum"],["gleglimageoes"]]]],[11,"generate_mipmap","","",9,[[["self"],["glenum"]]]],[11,"insert_event_marker_ext","","",9,[[["self"],["str"]]]],[11,"push_group_marker_ext","","",9,[[["self"],["str"]]]],[11,"pop_group_marker_ext","","",9,[[["self"]]]],[11,"debug_message_insert_khr","","",9,[[["self"],["glenum"],["glenum"],["gluint"],["glenum"],["str"]]]],[11,"push_debug_group_khr","","",9,[[["self"],["glenum"],["gluint"],["str"]]]],[11,"pop_debug_group_khr","","",9,[[["self"]]]],[11,"fence_sync","","",9,[[["self"],["glenum"],["glbitfield"]],["glsync"]]],[11,"client_wait_sync","","",9,[[["self"],["glsync"],["glbitfield"],["gluint64"]]]],[11,"wait_sync","","",9,[[["self"],["glsync"],["glbitfield"],["gluint64"]]]],[11,"delete_sync","","",9,[[["self"],["glsync"]]]],[11,"texture_range_apple","","",9,N],[11,"gen_fences_apple","","",9,[[["self"],["glsizei"]],["vec",["gluint"]]]],[11,"delete_fences_apple","","",9,N],[11,"set_fence_apple","","",9,[[["self"],["gluint"]]]],[11,"finish_fence_apple","","",9,[[["self"],["gluint"]]]],[11,"test_fence_apple","","",9,[[["self"],["gluint"]]]],[11,"test_object_apple","","",9,[[["self"],["glenum"],["gluint"]],["glboolean"]]],[11,"finish_object_apple","","",9,[[["self"],["glenum"],["gluint"]]]],[11,"bind_frag_data_location_indexed","","",9,[[["self"],["gluint"],["gluint"],["gluint"],["str"]]]],[11,"get_frag_data_index","","",9,[[["self"],["gluint"],["str"]],["glint"]]],[11,"get_debug_messages","","",9,[[["self"]],["vec",["debugmessage"]]]],[11,"provoking_vertex_angle","","",9,[[["self"],["glenum"]]]],[11,"blend_barrier_khr","","",9,[[["self"]]]],[11,"default","","",3,[[],["gltype"]]],[11,"eq","","",3,[[["self"],["gltype"]],["bool"]]],[11,"clone","","",10,[[["self"]],["fnptr"]]],[11,"clone","","",0,[[["self"]],["gl"]]],[11,"clone","","",1,[[["self"]],["gles2"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"GlFfi"],[3,"GlesFfi"],[3,"DebugMessage"],[4,"GlType"],[8,"Gl"],[3,"ErrorCheckingGl"],[3,"ErrorReactingGl"],[3,"ProfilingGl"],[3,"GlFns"],[3,"GlesFns"],[3,"FnPtr"],[4,"__GLsync"],[4,"_cl_context"],[4,"_cl_event"]]};
searchIndex["glium"]={"doc":"Easy-to-use, high-level, OpenGL3+ wrapper.","items":[[3,"Blend","glium","Blend effect that the GPU will use for blending.",N,N],[12,"color","","The blending function for color channels.",0,N],[12,"alpha","","The blending function for alpha channels.",0,N],[12,"constant_value","","A constant color that can be used in the blending functions.",0,N],[3,"Depth","","Represents the depth parameters of a draw command.",N,N],[12,"test","","The function that the GPU will use to determine whether to…",1,N],[12,"write","","Sets whether the GPU will write the depth values on the…",1,N],[12,"range","","The range of possible Z values in surface coordinates.",1,N],[12,"clamp","","Sets whether the depth values of samples should be clamped…",1,N],[3,"IndexBuffer","","A list of indices loaded in the graphics card's memory.",N,N],[3,"VertexBuffer","","A list of vertices loaded in the graphics card's memory.",N,N],[3,"Program","","A combination of shaders linked together.",N,N],[3,"LinearSyncFence","","Prototype for a `SyncFence`.",N,N],[3,"SyncFence","","Provides a way to wait for a server-side operation to be…",N,N],[3,"Version","","Describes a version.",N,N],[12,"0","","",2,N],[12,"1","","",2,N],[12,"2","","",2,N],[3,"Rect","","Area of a surface in pixels.",N,N],[12,"left","","Number of pixels between the left border of the surface…",3,N],[12,"bottom","","Number of pixels between the bottom border of the surface…",3,N],[12,"width","","Width of the area in pixels.",3,N],[12,"height","","Height of the area in pixels.",3,N],[3,"BlitTarget","","Area of a surface in pixels. Similar to a `Rect` except…",N,N],[12,"left","","Number of pixels between the left border of the surface…",4,N],[12,"bottom","","Number of pixels between the bottom border of the surface…",4,N],[12,"width","","Width of the area in pixels. Can be negative.",4,N],[12,"height","","Height of the area in pixels. Can be negative.",4,N],[3,"Frame","","Implementation of `Surface`, targeting the default…",N,N],[3,"IncompatibleOpenGl","","Returned during Context creation if the OpenGL…",N,N],[12,"0","","",5,N],[4,"Profile","","Describes the OpenGL context profile.",N,N],[13,"Core","","The context uses only future-compatible functions and…",6,N],[13,"Compatibility","","The context includes all immediate mode functions and…",6,N],[4,"BlendingFunction","","Function that the GPU will use for blending.",N,N],[13,"AlwaysReplace","","Simply overwrite the destination pixel with the source…",7,N],[13,"Min","","For each individual component (red, green, blue, and…",7,N],[13,"Max","","For each individual component (red, green, blue, and…",7,N],[13,"Addition","","For each individual component (red, green, blue, and…",7,N],[12,"source","glium::BlendingFunction","The factor to apply to the source pixel.",7,N],[12,"destination","","The factor to apply to the destination pixel.",7,N],[13,"Subtraction","glium","For each individual component (red, green, blue, and…",7,N],[12,"source","glium::BlendingFunction","The factor to apply to the source pixel.",7,N],[12,"destination","","The factor to apply to the destination pixel.",7,N],[13,"ReverseSubtraction","glium","For each individual component (red, green, blue, and…",7,N],[12,"source","glium::BlendingFunction","The factor to apply to the source pixel.",7,N],[12,"destination","","The factor to apply to the destination pixel.",7,N],[4,"LinearBlendingFactor","glium","Indicates which value to multiply each component with.",N,N],[13,"Zero","","Multiply the source or destination component by zero,…",8,N],[13,"One","","Multiply the source or destination component by one, which…",8,N],[13,"SourceColor","","Multiply the source or destination component by its…",8,N],[13,"OneMinusSourceColor","","Equivalent to `1 - SourceColor`.",8,N],[13,"DestinationColor","","Multiply the source or destination component by its…",8,N],[13,"OneMinusDestinationColor","","Equivalent to `1 - DestinationColor`.",8,N],[13,"SourceAlpha","","Multiply the source or destination component by the alpha…",8,N],[13,"SourceAlphaSaturate","","Multiply the source or destination component by the…",8,N],[13,"OneMinusSourceAlpha","","Multiply the source or destination component by `1.0`…",8,N],[13,"DestinationAlpha","","Multiply the source or destination component by the alpha…",8,N],[13,"OneMinusDestinationAlpha","","Multiply the source or destination component by `1.0`…",8,N],[13,"ConstantColor","","Multiply the source or destination component by the…",8,N],[13,"OneMinusConstantColor","","Multiply the source or destination component by `1.0`…",8,N],[13,"ConstantAlpha","","Multiply the source or destination component by the alpha…",8,N],[13,"OneMinusConstantAlpha","","Multiply the source or destination component by `1.0`…",8,N],[4,"DepthTest","","The function that the GPU will use to determine whether to…",N,N],[13,"Ignore","","Never replace the target pixel.",9,N],[13,"Overwrite","","Always replace the target pixel.",9,N],[13,"IfEqual","","Replace if the z-value of the source is equal to the…",9,N],[13,"IfNotEqual","","Replace if the z-value of the source is different than the…",9,N],[13,"IfMore","","Replace if the z-value of the source is more than the…",9,N],[13,"IfMoreOrEqual","","Replace if the z-value of the source is more than, or…",9,N],[13,"IfLess","","Replace if the z-value of the source is less than the…",9,N],[13,"IfLessOrEqual","","Replace if the z-value of the source is less than, or…",9,N],[4,"StencilTest","","Specifies which comparison the GPU will do to determine…",N,N],[13,"AlwaysPass","","The stencil test always passes.",10,N],[13,"AlwaysFail","","The stencil test always fails.",10,N],[13,"IfLess","","`(ref & mask) < (stencil & mask)`",10,N],[12,"mask","glium::StencilTest","The mask that is and'ed with the reference value and…",10,N],[13,"IfLessOrEqual","glium","`(ref & mask) <= (stencil & mask)`",10,N],[12,"mask","glium::StencilTest","The mask that is and'ed with the reference value and…",10,N],[13,"IfMore","glium","`(ref & mask) > (stencil & mask)`",10,N],[12,"mask","glium::StencilTest","The mask that is and'ed with the reference value and…",10,N],[13,"IfMoreOrEqual","glium","`(ref & mask) >= (stencil & mask)`",10,N],[12,"mask","glium::StencilTest","The mask that is and'ed with the reference value and…",10,N],[13,"IfEqual","glium","`(ref & mask) == (stencil & mask)`",10,N],[12,"mask","glium::StencilTest","The mask that is and'ed with the reference value and…",10,N],[13,"IfNotEqual","glium","`(ref & mask) != (stencil & mask)`",10,N],[12,"mask","glium::StencilTest","The mask that is and'ed with the reference value and…",10,N],[4,"StencilOperation","glium","Specificies which operation the GPU will do depending on…",N,N],[13,"Keep","","Keeps the value currently in the stencil buffer.",11,N],[13,"Zero","","Writes zero in the stencil buffer.",11,N],[13,"Replace","","Writes the reference value…",11,N],[13,"Increment","","Increments the value currently in the stencil buffer. If…",11,N],[13,"IncrementWrap","","Increments the value currently in the stencil buffer. If…",11,N],[13,"Decrement","","Decrements the value currently in the stencil buffer. If…",11,N],[13,"DecrementWrap","","Decrements the value currently in the stencil buffer. If…",11,N],[13,"Invert","","Inverts each bit of the value.",11,N],[4,"Api","","Describes an OpenGL-related API.",N,N],[13,"Gl","","Regular OpenGL.",12,N],[13,"GlEs","","OpenGL embedded system.",12,N],[4,"Handle","","Handle to a shader or a program.",N,N],[13,"Id","","A numeric identifier.",13,N],[13,"Handle","","A `GLhandleARB`.",13,N],[4,"RawUniformValue","","A raw value of a uniform. \"Raw\" means that it's passed…",N,N],[13,"SignedInt","","",14,N],[13,"UnsignedInt","","",14,N],[13,"Float","","",14,N],[13,"Mat2","","2x2 column-major matrix.",14,N],[13,"Mat3","","3x3 column-major matrix.",14,N],[13,"Mat4","","4x4 column-major matrix.",14,N],[13,"Vec2","","",14,N],[13,"Vec3","","",14,N],[13,"Vec4","","",14,N],[13,"IntVec2","","",14,N],[13,"IntVec3","","",14,N],[13,"IntVec4","","",14,N],[13,"UnsignedIntVec2","","",14,N],[13,"UnsignedIntVec3","","",14,N],[13,"UnsignedIntVec4","","",14,N],[13,"Double","","",14,N],[13,"DoubleMat2","","",14,N],[13,"DoubleMat3","","",14,N],[13,"DoubleMat4","","",14,N],[13,"DoubleVec2","","",14,N],[13,"DoubleVec3","","",14,N],[13,"DoubleVec4","","",14,N],[13,"Int64","","",14,N],[13,"Int64Vec2","","",14,N],[13,"Int64Vec3","","",14,N],[13,"Int64Vec4","","",14,N],[13,"UnsignedInt64","","",14,N],[13,"UnsignedInt64Vec2","","",14,N],[13,"UnsignedInt64Vec3","","",14,N],[13,"UnsignedInt64Vec4","","",14,N],[4,"DrawError","","Error that can happen while drawing.",N,N],[13,"NoDepthBuffer","","A depth function has been requested but no depth buffer is…",15,N],[13,"AttributeTypeMismatch","","The type of a vertex attribute in the vertices source…",15,N],[13,"AttributeMissing","","One of the attributes required by the program is missing…",15,N],[13,"ViewportTooLarge","","The viewport's dimensions are not supported by the backend.",15,N],[13,"InvalidDepthRange","","The depth range is outside of the `(0, 1)` range.",15,N],[13,"UniformTypeMismatch","","The type of a uniform doesn't match what the program…",15,N],[12,"name","glium::DrawError","Name of the uniform you are trying to bind.",15,N],[12,"expected","","The expected type.",15,N],[13,"UniformBufferToValue","glium","Tried to bind a uniform buffer to a single uniform value.",15,N],[12,"name","glium::DrawError","Name of the uniform you are trying to bind.",15,N],[13,"UniformValueToBlock","glium","Tried to bind a single uniform value to a uniform block.",15,N],[12,"name","glium::DrawError","Name of the uniform you are trying to bind.",15,N],[13,"UniformBlockLayoutMismatch","glium","The layout of the content of the uniform buffer does not…",15,N],[12,"name","glium::DrawError","Name of the block you are trying to bind.",15,N],[12,"err","","The error giving more details about the mismatch.",15,N],[13,"SubroutineUniformToValue","glium","Tried to bind a subroutine uniform like a regular uniform…",15,N],[12,"name","glium::DrawError","Name of the uniform you are trying to bind.",15,N],[13,"SubroutineUniformMissing","glium","Not all subroutine uniforms of a shader stage were set.",15,N],[12,"stage","glium::DrawError","Shader stage with missing bindings.",15,N],[12,"expected_count","","The expected number of bindings.",15,N],[12,"real_count","","The number of bindings defined by the user.",15,N],[13,"SubroutineNotFound","glium","A non-existent subroutine was referenced.",15,N],[12,"stage","glium::DrawError","The stage the subroutine was searched for.",15,N],[12,"name","","The invalid name of the subroutine.",15,N],[13,"UnsupportedVerticesPerPatch","glium","The number of vertices per patch that has been requested…",15,N],[13,"TessellationNotSupported","","Trying to use tessellation, but this is not supported by…",15,N],[13,"TessellationWithoutPatches","","Using a program which contains tessellation shaders, but…",15,N],[13,"SamplersNotSupported","","Trying to use a sampler, but they are not supported by the…",15,N],[13,"InstancesCountMismatch","","When you use instancing, all vertices sources must have…",15,N],[13,"VerticesSourcesLengthMismatch","","If you don't use indices, then all vertices sources must…",15,N],[13,"TransformFeedbackNotSupported","","You requested not to draw primitives, but this is not…",15,N],[13,"WrongQueryOperation","","See the documentation of the `draw_parameters` module for…",15,N],[13,"SmoothingNotSupported","","You requested smoothing, but this is not supported by the…",15,N],[13,"ProvokingVertexNotSupported","","The requested provoking vertex is not supported by the…",15,N],[13,"RasterizerDiscardNotSupported","","Discarding rasterizer output isn't supported by the backend.",15,N],[13,"DepthClampNotSupported","","Depth clamping isn't supported by the backend.",15,N],[13,"BlendingParameterNotSupported","","One of the blending parameters is not supported by the…",15,N],[13,"FixedIndexRestartingNotSupported","","Restarting indices (multiple objects per draw call) is not…",15,N],[13,"ClipPlaneIndexOutOfBounds","","Tried to enable a clip plane that does not exist.",15,N],[4,"SwapBuffersError","","Error that can happen when swapping buffers.",N,N],[13,"ContextLost","","The OpenGL context has been lost and needs to be…",16,N],[13,"AlreadySwapped","","The buffers have already been swapped.",16,N],[5,"get_supported_glsl_version","","Given an API version, this function returns the GLSL…",N,[[["version"]],["version"]]],[0,"backend","","The `backend` module allows one to link between glium and…",N,N],[3,"Context","glium::backend","Stores the state and information required for glium to…",N,N],[4,"ReleaseBehavior","","Defines what happens when you change the current context.",N,N],[13,"None","","Nothing is done when using another context.",17,N],[13,"Flush","","The commands queue of the current context is flushed.",17,N],[0,"glutin","","Backend implementation for the glutin library",N,N],[3,"Display","glium::backend::glutin","A GL context combined with a facade for drawing upon.",N,N],[3,"GlutinBackend","","An implementation of the `Backend` trait for glutin.",N,N],[4,"DisplayCreationError","","Error that can happen while creating a glium display.",N,N],[13,"GlutinCreationError","","An error has happened while creating the backend.",18,N],[13,"IncompatibleOpenGl","","The OpenGL implementation is too old.",18,N],[0,"headless","","Backend implementation for a glutin headless renderer.",N,N],[3,"Headless","glium::backend::glutin::headless","A headless glutin context.",N,N],[3,"GlutinBackend","","An implementation of the `Backend` trait for a glutin…",N,N],[11,"new","","Create a new glium `Headless` context.",19,[[["context"]],["result",["incompatibleopengl"]]]],[11,"unchecked","","Create a new glium `Headless` context.",19,[[["context"]],["result",["incompatibleopengl"]]]],[11,"with_debug","","The same as the `new` constructor, but allows for…",19,[[["context"],["debugcallbackbehavior"]],["result",["incompatibleopengl"]]]],[11,"unchecked_with_debug","","The same as the `unchecked` constructor, but allows for…",19,[[["context"],["debugcallbackbehavior"]],["result",["incompatibleopengl"]]]],[11,"draw","","Start drawing on the backbuffer.",19,[[["self"]],["frame"]]],[11,"new","glium::backend::glutin","Create a new glium `Display` from the given context and…",20,[[["windowbuilder"],["contextbuilder"],["eventsloop"]],["result",["displaycreationerror"]]]],[11,"from_gl_window","","Create a new glium `Display`.",20,[[["glwindow"]],["result",["incompatibleopengl"]]]],[11,"unchecked","","Create a new glium `Display`.",20,[[["glwindow"]],["result",["incompatibleopengl"]]]],[11,"with_debug","","The same as the `new` constructor, but allows for…",20,[[["glwindow"],["debugcallbackbehavior"]],["result",["incompatibleopengl"]]]],[11,"unchecked_with_debug","","The same as the `unchecked` constructor, but allows for…",20,[[["glwindow"],["debugcallbackbehavior"]],["result",["incompatibleopengl"]]]],[11,"rebuild","","Rebuilds the Display's `GlWindow` with the given window…",20,[[["self"],["windowbuilder"],["contextbuilder"],["eventsloop"]],["result",["displaycreationerror"]]]],[11,"gl_window","","Borrow the inner glutin GlWindow.",20,[[["self"]],["ref",["glwindow"]]]],[11,"draw","","Start drawing on the backbuffer.",20,[[["self"]],["frame"]]],[8,"Backend","glium::backend","Trait for types that can be used as a backend for a glium…",N,N],[10,"swap_buffers","","Swaps buffers at the end of a frame.",21,[[["self"]],["result",["swapbufferserror"]]]],[10,"get_proc_address","","Returns the address of an OpenGL function.",21,N],[10,"get_framebuffer_dimensions","","Returns the dimensions of the window, or screen, etc.",21,N],[10,"is_current","","Returns true if the OpenGL context is the current one in…",21,[[["self"]],["bool"]]],[10,"make_current","","Makes the OpenGL context the current context in the…",21,[[["self"]]]],[8,"Facade","","Trait for types that provide a safe access for glium…",N,N],[10,"get_context","","Returns an opaque type that contains the OpenGL state,…",22,[[["self"]],["rc"]]],[0,"buffer","glium","A buffer is a memory location accessible to the video card.",N,N],[3,"Buffer","glium::buffer","Represents a view of a buffer.",N,N],[3,"BufferAny","","Represents a sub-part of a buffer.",N,N],[3,"BufferMutSlice","","Represents a sub-part of a buffer.",N,N],[3,"BufferSlice","","Represents a sub-part of a buffer.",N,N],[3,"BufferAnySlice","","Slice of a `Buffer` without any type info.",N,N],[3,"Mapping","","A mapping of a buffer for reading and writing.",N,N],[3,"WriteMapping","","A mapping of a buffer for write only.",N,N],[3,"ReadMapping","","A mapping of a buffer for reading.",N,N],[3,"Inserter","","Allows inserting a fence in the list.",N,N],[3,"BufferView","","Represents a view of a buffer.",N,N],[3,"BufferViewSlice","","Represents a sub-part of a buffer.",N,N],[3,"BufferViewMutSlice","","Represents a sub-part of a buffer.",N,N],[3,"BufferViewAny","","Represents a sub-part of a buffer.",N,N],[3,"BufferViewAnySlice","","Slice of a `Buffer` without any type info.",N,N],[4,"ReadError","","Error that can happen when reading from a buffer.",N,N],[13,"NotSupported","","The backend doesn't support reading from a buffer.",23,N],[13,"ContextLost","","The context has been lost. Reading from the buffer would…",23,N],[4,"CopyError","","Error that can happen when copying data between buffers.",N,N],[13,"NotSupported","","The backend doesn't support copying between buffers.",24,N],[4,"BufferCreationError","","Error that can happen when creating a buffer.",N,N],[13,"OutOfMemory","","Not enough memory to create the buffer.",25,N],[13,"BufferTypeNotSupported","","This type of buffer is not supported.",25,N],[4,"BufferMode","","How the buffer is created.",N,N],[13,"Default","","This is the default mode suitable for any usage. Will…",26,N],[13,"Dynamic","","The mode to use when you modify a buffer multiple times…",26,N],[13,"Persistent","","Optimized for when you modify a buffer exactly once per…",26,N],[13,"Immutable","","Optimized when you will never touch the content of the…",26,N],[4,"BufferType","","Type of a buffer.",N,N],[13,"ArrayBuffer","","",27,N],[13,"PixelPackBuffer","","",27,N],[13,"PixelUnpackBuffer","","",27,N],[13,"UniformBuffer","","",27,N],[13,"CopyReadBuffer","","",27,N],[13,"CopyWriteBuffer","","",27,N],[13,"AtomicCounterBuffer","","",27,N],[13,"DispatchIndirectBuffer","","",27,N],[13,"DrawIndirectBuffer","","",27,N],[13,"QueryBuffer","","",27,N],[13,"ShaderStorageBuffer","","",27,N],[13,"TextureBuffer","","",27,N],[13,"TransformFeedbackBuffer","","",27,N],[13,"ElementArrayBuffer","","",27,N],[5,"is_buffer_read_supported","","Returns true if reading from a buffer is supported by the…",N,[[["c"]],["bool"]]],[11,"write","","Writes the whole content.",28,[[["self"],["d"]]]],[11,"len","","Returns the length of the mapping.",28,[[["self"]],["usize"]]],[11,"set","","Changes an element of the mapping.",28,[[["self"],["usize"],["d"]]]],[11,"insert","","Inserts a new fence.",29,[[["self"],["commandcontext"]]]],[11,"new","","Builds a new buffer containing the given data. The size of…",30,[[["f"],["t"],["buffertype"],["buffermode"]],["result",["buffer","buffercreationerror"]]]],[11,"empty_unsized","","Builds a new buffer of the given size.",30,[[["f"],["buffertype"],["usize"],["buffermode"]],["result",["buffer","buffercreationerror"]]]],[11,"get_context","","Returns the context corresponding to this buffer.",30,[[["self"]],["rc"]]],[11,"get_size","","Returns the size in bytes of this buffer.",30,[[["self"]],["usize"]]],[11,"is_persistent","","Returns true if this buffer uses persistent mapping.",30,[[["self"]],["bool"]]],[11,"write","","Uploads some data in this buffer.",30,[[["self"],["t"]]]],[11,"invalidate","","Invalidates the content of the buffer. The data becomes…",30,[[["self"]]]],[11,"read","","Reads the content of the buffer.",30,[[["self"]],["result",["readerror"]]]],[11,"map","","Maps the buffer in memory for both reading and writing.",30,[[["self"]],["mapping"]]],[11,"map_read","","Maps the buffer in memory for reading.",30,[[["self"]],["readmapping"]]],[11,"map_write","","Maps the buffer in memory for writing only.",30,[[["self"]],["writemapping"]]],[11,"copy_to","","Copies the content of the buffer to another buffer.",30,[[["self"],["s"]],["result",["copyerror"]]]],[11,"slice_custom","","Builds a slice that contains an element from inside the…",30,[[["self"],["f"]],["bufferslice"]]],[11,"slice_custom_mut","","Same as `slice_custom` but returns a mutable slice.",30,[[["self"],["f"]],["buffermutslice"]]],[11,"as_slice","","Builds a slice containing the whole subbuffer.",30,[[["self"]],["bufferslice"]]],[11,"as_mut_slice","","Builds a slice containing the whole subbuffer.",30,[[["self"]],["buffermutslice"]]],[11,"as_slice_any","","Builds a slice-any containing the whole subbuffer.",30,[[["self"]],["bufferanyslice"]]],[11,"empty","","Builds a new buffer of the given size.",30,[[["f"],["buffertype"],["buffermode"]],["result",["buffer","buffercreationerror"]]]],[11,"empty_array","","Builds a new buffer of the given size.",30,[[["f"],["buffertype"],["usize"],["buffermode"]],["result",["buffer","buffercreationerror"]]]],[11,"len","","Returns the number of elements in this buffer.",30,[[["self"]],["usize"]]],[11,"slice","","Builds a slice of this subbuffer. Returns `None` if out of…",30,[[["self"],["r"]],["option",["bufferslice"]]]],[11,"slice_mut","","Builds a slice of this subbuffer. Returns `None` if out of…",30,[[["self"],["r"]],["option",["buffermutslice"]]]],[11,"read_as_texture_1d","","Reads the content of the buffer.",30,[[["self"]],["result",["readerror"]]]],[11,"get_size","","Returns the size in bytes of this slice.",31,[[["self"]],["usize"]]],[11,"get_context","","Returns the context corresponding to this buffer.",31,[[["self"]],["rc"]]],[11,"write","","Uploads some data in this buffer.",31,[[["self"],["t"]]]],[11,"invalidate","","Invalidates the content of the slice. The data becomes…",31,[[["self"]]]],[11,"read","","Reads the content of the buffer.",31,[[["self"]],["result",["readerror"]]]],[11,"copy_to","","Copies the content of this slice to another slice.",31,[[["self"],["s"]],["result",["copyerror"]]]],[11,"slice_custom","","Builds a slice that contains an element from inside the…",31,[[["self"],["f"]],["bufferslice"]]],[11,"as_slice_any","","Builds a slice-any containing the whole subbuffer.",31,[[["self"]],["bufferanyslice"]]],[11,"len","","Returns the number of elements in this slice.",31,[[["self"]],["usize"]]],[11,"slice","","Builds a subslice of this slice. Returns `None` if out of…",31,[[["self"],["r"]],["option",["bufferslice"]]]],[11,"read_as_texture_1d","","Reads the content of the buffer.",31,[[["self"]],["result",["readerror"]]]],[11,"get_size","","Returns the size in bytes of this slice.",32,[[["self"]],["usize"]]],[11,"map","","Maps the buffer in memory for both reading and writing.",32,[[["self"]],["mapping"]]],[11,"map_read","","Maps the buffer in memory for reading.",32,[[["self"]],["readmapping"]]],[11,"map_write","","Maps the buffer in memory for writing only.",32,[[["self"]],["writemapping"]]],[11,"write","","Uploads some data in this buffer.",32,[[["self"],["t"]]]],[11,"invalidate","","Invalidates the content of the slice. The data becomes…",32,[[["self"]]]],[11,"read","","Reads the content of the buffer.",32,[[["self"]],["result",["readerror"]]]],[11,"copy_to","","Copies the content of this slice to another slice.",32,[[["self"],["s"]],["result",["copyerror"]]]],[11,"slice_custom","","Builds a slice that contains an element from inside the…",32,[[["self"],["f"]],["buffermutslice"]]],[11,"as_slice_any","","Builds a slice-any containing the whole subbuffer.",32,[[["self"]],["bufferanyslice"]]],[11,"len","","Returns the number of elements in this slice.",32,[[["self"]],["usize"]]],[11,"slice","","Builds a subslice of this slice. Returns `None` if out of…",32,[[["self"],["r"]],["option",["buffermutslice"]]]],[11,"read_as_texture_1d","","Reads the content of the buffer.",32,[[["self"]],["result",["readerror"]]]],[11,"as_slice_any","","Builds a slice-any containing the whole subbuffer.",33,[[["self"]],["bufferanyslice"]]],[11,"as_typed_slice_mut","","Builds a mutable typed slice containing the whole…",33,[[["self"]],["buffermutslice"]]],[11,"as_typed_slice","","Builds a typed slice containing the whole subbuffer,…",33,[[["self"]],["bufferslice"]]],[11,"get_elements_size","","Returns the size in bytes of each element in the buffer.",33,[[["self"]],["usize"]]],[11,"get_elements_count","","Returns the number of elements in the buffer.",33,[[["self"]],["usize"]]],[11,"get_context","","Returns the context corresponding to this buffer.",33,[[["self"]],["rc"]]],[11,"get_size","","Returns the number of bytes in this subbuffer.",33,[[["self"]],["usize"]]],[11,"invalidate","","Invalidates the content of the buffer. The data becomes…",33,[[["self"]]]],[11,"read","","UNSTABLE. This function can be removed at any moment…",33,[[["self"]],["result",["readerror"]]]],[11,"get_size","","Returns the number of bytes in this slice.",34,[[["self"]],["usize"]]],[11,"get_elements_size","","Returns the size in bytes of each element in the buffer.",34,[[["self"]],["usize"]]],[11,"get_elements_count","","Returns the number of elements in the buffer.",34,[[["self"]],["usize"]]],[11,"invalidate","","Invalidates the content of the slice. The data becomes…",34,[[["self"]]]],[11,"get_context","","Returns the context corresponding to this buffer.",34,[[["self"]],["rc"]]],[8,"Content","","Trait for types of data that can be put inside buffers.",N,N],[16,"Owned","","A type that holds a sized version of the content.",35,N],[10,"read","","Prepares an output buffer, then turns this buffer into an…",35,[[["usize"],["f"]],["result"]]],[10,"get_elements_size","","Returns the size of each element.",35,[[],["usize"]]],[10,"to_void_ptr","","Produces a pointer to the data.",35,N],[10,"ref_from_ptr","","Builds a pointer to this type from a raw pointer.",35,N],[10,"is_size_suitable","","Returns true if the size is suitable to store a type like…",35,[[["usize"]],["bool"]]],[0,"debug","glium","",N,N],[3,"TimestampQuery","glium::debug","Allows you to obtain the timestamp inside the OpenGL…",N,N],[4,"DebugCallbackBehavior","","Describes the behavior that the debug output should have.",N,N],[13,"Ignore","","Don't do anything. This is the default behavior in release.",36,N],[13,"DebugMessageOnError","","Print a message on stdout on error, except in some…",36,N],[13,"PrintAll","","Print every single output received by the driver.",36,N],[13,"Custom","","Use a custom callback.",36,N],[12,"callback","glium::debug::DebugCallbackBehavior","The function to be called.",36,N],[12,"synchronous","","Whether or not it should be called immediately (true) or…",36,N],[4,"Severity","glium::debug","Severity of a debug message.",N,N],[13,"Notification","","Anything that isn't an error or performance issue.",37,N],[13,"Low","","Redundant state-change performance warning, or unimportant…",37,N],[13,"Medium","","Major performance warnings, shader compilation/linking…",37,N],[13,"High","","All OpenGL Errors, shader compilation/linking errors, or…",37,N],[4,"Source","","Source of a debug message.",N,N],[13,"Api","","Calls to the OpenGL API.",38,N],[13,"WindowSystem","","Calls to a window-system API.",38,N],[13,"ShaderCompiler","","A compiler for a shading language.",38,N],[13,"ThirdParty","","An application associated with Openctxt.gl.",38,N],[13,"Application","","Explicitly generated by Glium or the application.",38,N],[13,"OtherSource","","",38,N],[4,"MessageType","","Type of a debug message.",N,N],[13,"Error","","An error, typically from the API",39,N],[13,"DeprecatedBehavior","","Some behavior marked deprecated has been used",39,N],[13,"UndefinedBehavior","","Something has invoked undefined behavior",39,N],[13,"Portability","","Some functionality the user relies upon is not portable",39,N],[13,"Performance","","Code has triggered possible performance issues",39,N],[13,"Marker","","Command stream annotation",39,N],[13,"PushGroup","","Entering a debug group",39,N],[13,"PopGroup","","Leaving a debug group",39,N],[13,"Other","","Any other event",39,N],[6,"DebugCallback","","Represents a callback that can be used for the debug…",N,N],[11,"new","","Creates a new `TimestampQuery`. Returns `None` if the…",40,[[["f"]],["option",["timestampquery"]]]],[11,"is_ready","","Queries the counter to see if the timestamp is already…",40,[[["self"]],["bool"]]],[11,"get","","Returns the value of the timestamp. Blocks until it is…",40,[[["self"]],["u64"]]],[0,"draw_parameters","glium","Describes miscellaneous parameters to be used when drawing.",N,N],[3,"Blend","glium::draw_parameters","Blend effect that the GPU will use for blending.",N,N],[12,"color","","The blending function for color channels.",0,N],[12,"alpha","","The blending function for alpha channels.",0,N],[12,"constant_value","","A constant color that can be used in the blending functions.",0,N],[3,"Depth","","Represents the depth parameters of a draw command.",N,N],[12,"test","","The function that the GPU will use to determine whether to…",1,N],[12,"write","","Sets whether the GPU will write the depth values on the…",1,N],[12,"range","","The range of possible Z values in surface coordinates.",1,N],[12,"clamp","","Sets whether the depth values of samples should be clamped…",1,N],[3,"SamplesPassedQuery","","A query that allows you to know the number of samples…",N,N],[3,"TimeElapsedQuery","","A query that allows you to know the number of nanoseconds…",N,N],[3,"PrimitivesGeneratedQuery","","Query that allows you to know the number of primitives…",N,N],[3,"AnySamplesPassedQuery","","A query type that allows you to know whether any sample…",N,N],[3,"TransformFeedbackPrimitivesWrittenQuery","","Query that allows you to know the number of primitives…",N,N],[3,"Stencil","","Describes the parameters that must be used for the stencil…",N,N],[12,"test_clockwise","","A comparison against the existing value in the stencil…",41,N],[12,"reference_value_clockwise","","Reference value that is used by `stencil_test_clockwise`,…",41,N],[12,"write_mask_clockwise","","Allows specifying a mask when writing data on the stencil…",41,N],[12,"fail_operation_clockwise","","Specifies the operation to do when a fragment fails the…",41,N],[12,"pass_depth_fail_operation_clockwise","","Specifies the operation to do when a fragment passes the…",41,N],[12,"depth_pass_operation_clockwise","","Specifies the operation to do when a fragment passes both…",41,N],[12,"test_counter_clockwise","","A comparaison against the existing value in the stencil…",41,N],[12,"reference_value_counter_clockwise","","Reference value that is used by…",41,N],[12,"write_mask_counter_clockwise","","Allows specifying a mask when writing data on the stencil…",41,N],[12,"fail_operation_counter_clockwise","","Specifies the operation to do when a fragment fails the…",41,N],[12,"pass_depth_fail_operation_counter_clockwise","","Specifies the operation to do when a fragment passes the…",41,N],[12,"depth_pass_operation_counter_clockwise","","Specifies the operation to do when a fragment passes both…",41,N],[3,"DrawParameters","","Represents the parameters to use when drawing.",N,N],[12,"depth","","How the fragment will interact with the depth buffer.",42,N],[12,"stencil","","How the fragment will interact with the stencil buffer.",42,N],[12,"blend","","The effect that the GPU will use to merge the existing…",42,N],[12,"color_mask","","Allows you to disable some color components.",42,N],[12,"line_width","","Width in pixels of the lines to draw when drawing lines.",42,N],[12,"point_size","","Diameter in pixels of the points to draw when drawing…",42,N],[12,"clip_planes_bitmask","","If the bit corresponding to 2^i is 1 in the bitmask, then…",42,N],[12,"backface_culling","","Whether or not the GPU should filter out some faces.",42,N],[12,"polygon_mode","","How to render polygons. The default value is `Fill`.",42,N],[12,"multisampling","","Whether multisample antialiasing (MSAA) should be used.…",42,N],[12,"dithering","","Whether dithering is activated. Default value is `true`.",42,N],[12,"viewport","","The viewport to use when drawing.",42,N],[12,"scissor","","If specified, only pixels in this rect will be displayed.…",42,N],[12,"draw_primitives","","If `false`, the pipeline will stop after the primitives…",42,N],[12,"samples_passed_query","","If set, each sample (ie. usually each pixel) written to…",42,N],[12,"time_elapsed_query","","If set, the time it took for the GPU to execute this draw…",42,N],[12,"primitives_generated_query","","If set, the number of primitives generated is added to the…",42,N],[12,"transform_feedback_primitives_written_query","","If set, the number of vertices written by transform…",42,N],[12,"condition","","If set, the commands will only be executed if the…",42,N],[12,"transform_feedback","","If set, then the generated primitives will be written back…",42,N],[12,"smooth","","If set, then the generated primitives will be smoothed.",42,N],[12,"provoking_vertex","","In your vertex shader or geometry shader, you have the…",42,N],[12,"primitive_bounding_box","","Hint for the GPU of the bounding box of the geometry.",42,N],[12,"primitive_restart_index","","If enabled, will split the index buffer (if any is used in…",42,N],[3,"ConditionalRendering","","Condition whether to render or not.",N,N],[12,"query","","The query to use.",43,N],[12,"wait","","If true, the GPU will wait until the query result has been…",43,N],[12,"per_region","","If true, only samples that match those that were written…",43,N],[4,"BlendingFunction","","Function that the GPU will use for blending.",N,N],[13,"AlwaysReplace","","Simply overwrite the destination pixel with the source…",7,N],[13,"Min","","For each individual component (red, green, blue, and…",7,N],[13,"Max","","For each individual component (red, green, blue, and…",7,N],[13,"Addition","","For each individual component (red, green, blue, and…",7,N],[12,"source","glium::draw_parameters::BlendingFunction","The factor to apply to the source pixel.",7,N],[12,"destination","","The factor to apply to the destination pixel.",7,N],[13,"Subtraction","glium::draw_parameters","For each individual component (red, green, blue, and…",7,N],[12,"source","glium::draw_parameters::BlendingFunction","The factor to apply to the source pixel.",7,N],[12,"destination","","The factor to apply to the destination pixel.",7,N],[13,"ReverseSubtraction","glium::draw_parameters","For each individual component (red, green, blue, and…",7,N],[12,"source","glium::draw_parameters::BlendingFunction","The factor to apply to the source pixel.",7,N],[12,"destination","","The factor to apply to the destination pixel.",7,N],[4,"LinearBlendingFactor","glium::draw_parameters","Indicates which value to multiply each component with.",N,N],[13,"Zero","","Multiply the source or destination component by zero,…",8,N],[13,"One","","Multiply the source or destination component by one, which…",8,N],[13,"SourceColor","","Multiply the source or destination component by its…",8,N],[13,"OneMinusSourceColor","","Equivalent to `1 - SourceColor`.",8,N],[13,"DestinationColor","","Multiply the source or destination component by its…",8,N],[13,"OneMinusDestinationColor","","Equivalent to `1 - DestinationColor`.",8,N],[13,"SourceAlpha","","Multiply the source or destination component by the alpha…",8,N],[13,"SourceAlphaSaturate","","Multiply the source or destination component by the…",8,N],[13,"OneMinusSourceAlpha","","Multiply the source or destination component by `1.0`…",8,N],[13,"DestinationAlpha","","Multiply the source or destination component by the alpha…",8,N],[13,"OneMinusDestinationAlpha","","Multiply the source or destination component by `1.0`…",8,N],[13,"ConstantColor","","Multiply the source or destination component by the…",8,N],[13,"OneMinusConstantColor","","Multiply the source or destination component by `1.0`…",8,N],[13,"ConstantAlpha","","Multiply the source or destination component by the alpha…",8,N],[13,"OneMinusConstantAlpha","","Multiply the source or destination component by `1.0`…",8,N],[4,"DepthTest","","The function that the GPU will use to determine whether to…",N,N],[13,"Ignore","","Never replace the target pixel.",9,N],[13,"Overwrite","","Always replace the target pixel.",9,N],[13,"IfEqual","","Replace if the z-value of the source is equal to the…",9,N],[13,"IfNotEqual","","Replace if the z-value of the source is different than the…",9,N],[13,"IfMore","","Replace if the z-value of the source is more than the…",9,N],[13,"IfMoreOrEqual","","Replace if the z-value of the source is more than, or…",9,N],[13,"IfLess","","Replace if the z-value of the source is less than the…",9,N],[13,"IfLessOrEqual","","Replace if the z-value of the source is less than, or…",9,N],[4,"DepthClamp","","Specifies whether the depth value of samples should be…",N,N],[13,"NoClamp","","Do not clamp. Samples with values outside of the `[0.0,…",44,N],[13,"Clamp","","Clamp the depth values. All samples will always be drawn.",44,N],[13,"ClampNear","","Depth values inferior to `0.0` will be clamped to `0.0`.",44,N],[13,"ClampFar","","Depth values superior to `1.0` will be clamped to `1.0`.",44,N],[4,"QueryCreationError","","Error that can happen when creating a query object.",N,N],[13,"NotSupported","","The given query type is not supported.",45,N],[4,"StencilTest","","Specifies which comparison the GPU will do to determine…",N,N],[13,"AlwaysPass","","The stencil test always passes.",10,N],[13,"AlwaysFail","","The stencil test always fails.",10,N],[13,"IfLess","","`(ref & mask) < (stencil & mask)`",10,N],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and'ed with the reference value and…",10,N],[13,"IfLessOrEqual","glium::draw_parameters","`(ref & mask) <= (stencil & mask)`",10,N],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and'ed with the reference value and…",10,N],[13,"IfMore","glium::draw_parameters","`(ref & mask) > (stencil & mask)`",10,N],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and'ed with the reference value and…",10,N],[13,"IfMoreOrEqual","glium::draw_parameters","`(ref & mask) >= (stencil & mask)`",10,N],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and'ed with the reference value and…",10,N],[13,"IfEqual","glium::draw_parameters","`(ref & mask) == (stencil & mask)`",10,N],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and'ed with the reference value and…",10,N],[13,"IfNotEqual","glium::draw_parameters","`(ref & mask) != (stencil & mask)`",10,N],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and'ed with the reference value and…",10,N],[4,"StencilOperation","glium::draw_parameters","Specificies which operation the GPU will do depending on…",N,N],[13,"Keep","","Keeps the value currently in the stencil buffer.",11,N],[13,"Zero","","Writes zero in the stencil buffer.",11,N],[13,"Replace","","Writes the reference value…",11,N],[13,"Increment","","Increments the value currently in the stencil buffer. If…",11,N],[13,"IncrementWrap","","Increments the value currently in the stencil buffer. If…",11,N],[13,"Decrement","","Decrements the value currently in the stencil buffer. If…",11,N],[13,"DecrementWrap","","Decrements the value currently in the stencil buffer. If…",11,N],[13,"Invert","","Inverts each bit of the value.",11,N],[4,"BackfaceCullingMode","","Describes how triangles should be filtered before the…",N,N],[13,"CullingDisabled","","All triangles are always drawn.",46,N],[13,"CullCounterClockwise","","Triangles whose vertices are counterclockwise won't be…",46,N],[13,"CullClockwise","","Triangles whose vertices are clockwise won't be drawn.",46,N],[4,"PolygonMode","","Defines how the device should render polygons.",N,N],[13,"Point","","Only draw a single point at each vertex.",47,N],[13,"Line","","Only draw a line in the boundaries of each polygon.",47,N],[13,"Fill","","Fill the content of the polygon. This is the default mode.",47,N],[4,"Smooth","","Specifies a hint for the smoothing.",N,N],[13,"Fastest","","The most efficient option should be chosen.",48,N],[13,"Nicest","","The most correct, or highest quality, option should be…",48,N],[13,"DontCare","","No preference.",48,N],[4,"ProvokingVertex","","The vertex to use for flat shading.",N,N],[13,"LastVertex","","Use the last vertex of each primitive.",49,N],[13,"FirstVertex","","Use the first vertex of each primitive.",49,N],[4,"SamplesQueryParam","","The query to use for samples counting.",N,N],[13,"SamplesPassedQuery","","A `SamplesPassedQuery`.",50,N],[13,"AnySamplesPassedQuery","","A `AnySamplesPassedQuery`.",50,N],[5,"validate","","DEPRECATED. Checks parameters and returns an error if…",N,[[["context"],["drawparameters"]],["result",["drawerror"]]]],[11,"alpha_blending","glium","Returns a blend effect to add transparent objects over…",0,[[],["blend"]]],[11,"requires_depth_buffer","","Returns true if the function requires a depth buffer to be…",9,[[["self"]],["bool"]]],[11,"new","glium::draw_parameters","Builds a new query.",51,[[["f"]],["result",["samplespassedquery","querycreationerror"]]]],[11,"is_ready","","Queries the counter to see if the result is already…",51,[[["self"]],["bool"]]],[11,"get","","Returns the value of the query. Blocks until it is…",51,[[["self"]],["u32"]]],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is…",51,[[["self"],["bufferslice",["u32"]]],["result",["tobuffererror"]]]],[11,"new","","Builds a new query.",52,[[["f"]],["result",["timeelapsedquery","querycreationerror"]]]],[11,"is_ready","","Queries the counter to see if the result is already…",52,[[["self"]],["bool"]]],[11,"get","","Returns the value of the query. Blocks until it is…",52,[[["self"]],["u32"]]],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is…",52,[[["self"],["bufferslice",["u32"]]],["result",["tobuffererror"]]]],[11,"new","","Builds a new query.",53,[[["f"],["bool"]],["result",["anysamplespassedquery","querycreationerror"]]]],[11,"is_ready","","Queries the counter to see if the result is already…",53,[[["self"]],["bool"]]],[11,"get","","Returns the value of the query. Blocks until it is…",53,[[["self"]],["bool"]]],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is…",53,[[["self"],["bufferslice",["u32"]]],["result",["tobuffererror"]]]],[11,"new","","Builds a new query.",54,[[["f"]],["result",["primitivesgeneratedquery","querycreationerror"]]]],[11,"is_ready","","Queries the counter to see if the result is already…",54,[[["self"]],["bool"]]],[11,"get","","Returns the value of the query. Blocks until it is…",54,[[["self"]],["u32"]]],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is…",54,[[["self"],["bufferslice",["u32"]]],["result",["tobuffererror"]]]],[11,"new","","Builds a new query.",55,[[["f"]],["result",["transformfeedbackprimitiveswrittenquery","querycreationerror"]]]],[11,"is_ready","","Queries the counter to see if the result is already…",55,[[["self"]],["bool"]]],[11,"get","","Returns the value of the query. Blocks until it is…",55,[[["self"]],["u32"]]],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is…",55,[[["self"],["bufferslice",["u32"]]],["result",["tobuffererror"]]]],[0,"framebuffer","glium","Framebuffers allow you to customize the color, depth and…",N,N],[3,"DefaultFramebuffer","glium::framebuffer","A framebuffer which has only one color attachment.",N,N],[3,"RenderBuffer","","A render buffer is similar to a texture, but is optimized…",N,N],[3,"RenderBufferAny","","A RenderBuffer of indeterminate type.",N,N],[3,"DepthRenderBuffer","","A render buffer is similar to a texture, but is optimized…",N,N],[3,"StencilRenderBuffer","","A render buffer is similar to a texture, but is optimized…",N,N],[3,"DepthStencilRenderBuffer","","A render buffer is similar to a texture, but is optimized…",N,N],[3,"SimpleFrameBuffer","","A framebuffer which has only one color attachment.",N,N],[3,"MultiOutputFrameBuffer","","This struct is useless for the moment.",N,N],[3,"EmptyFrameBuffer","","A framebuffer with no attachment at all.",N,N],[4,"DefaultFramebufferAttachment","","One of the color attachments on the default framebuffer.",N,N],[13,"BackLeft","","The backbuffer for the left eye. Equivalent to the…",56,N],[13,"BackRight","","The backbuffer for the right eye. May not be present.",56,N],[13,"FrontLeft","","The frontbuffer for the left eye. Equivalent to the…",56,N],[13,"FrontRight","","The frontbuffer for the right eye. May not be present or…",56,N],[4,"RenderBufferCreationError","","Error while creating a render buffer.",N,N],[13,"FormatNotSupported","","The requested format is not supported.",57,N],[4,"ValidationError","","An error that can happen while validating attachments.",N,N],[13,"EmptyFramebufferObjectsNotSupported","","You requested an empty framebuffer object, but they are…",58,N],[13,"EmptyFramebufferUnsupportedDimensions","","The requested characteristics of an empty framebuffer…",58,N],[13,"DimensionsMismatchNotSupported","","The backend doesn't support attachments with various…",58,N],[13,"SamplesCountMismatch","","All attachments must have the same number of samples.",58,N],[13,"TooManyColorAttachments","","Backends only support a certain number of color attachments.",58,N],[12,"maximum","glium::framebuffer::ValidationError","Maximum number of attachments.",58,N],[12,"obtained","","Number of attachments that were given.",58,N],[4,"ColorAttachment","glium::framebuffer","Describes an attachment for a color buffer.",N,N],[13,"Texture","","A texture.",59,N],[13,"RenderBuffer","","A render buffer.",59,N],[4,"DepthAttachment","","Describes an attachment for a depth buffer.",N,N],[13,"Texture","","A texture.",60,N],[13,"RenderBuffer","","A render buffer.",60,N],[4,"StencilAttachment","","Describes an attachment for a stencil buffer.",N,N],[13,"Texture","","A texture.",61,N],[13,"RenderBuffer","","A render buffer.",61,N],[4,"DepthStencilAttachment","","Describes an attachment for a depth and stencil buffer.",N,N],[13,"Texture","","A texture.",62,N],[13,"RenderBuffer","","A render buffer.",62,N],[5,"is_dimensions_mismatch_supported","","Returns true if the backend supports attachments with…",N,[[["c"]],["bool"]]],[11,"back_left","","Creates a `DefaultFramebuffer` with the back left buffer.",63,[[["f"]],["defaultframebuffer"]]],[11,"new","","Builds a new render buffer.",64,[[["f"],["uncompressedfloatformat"],["u32"],["u32"]],["result",["renderbuffer","creationerror"]]]],[11,"new","","Builds a new render buffer.",65,[[["f"],["depthformat"],["u32"],["u32"]],["result",["depthrenderbuffer","creationerror"]]]],[11,"new","","Builds a new render buffer.",66,[[["f"],["stencilformat"],["u32"],["u32"]],["result",["stencilrenderbuffer","creationerror"]]]],[11,"new","","Builds a new render buffer.",67,[[["f"],["depthstencilformat"],["u32"],["u32"]],["result",["depthstencilrenderbuffer","creationerror"]]]],[11,"get_dimensions","","Returns the dimensions of the render buffer.",68,N],[11,"get_samples","","Returns the number of samples of the render buffer, or…",68,[[["self"]],["option",["u32"]]]],[11,"get_context","","Returns the context used to create this renderbuffer.",68,[[["self"]],["rc"]]],[11,"kind","","Returns the kind of renderbuffer.",68,[[["self"]],["texturekind"]]],[11,"get_depth_stencil_bits","","Determines the number of depth and stencil bits in the…",68,N],[8,"ToColorAttachment","","Trait for objects that can be used as color attachments.",N,N],[10,"to_color_attachment","","Builds the `ColorAttachment`.",69,[[["self"]],["colorattachment"]]],[8,"ToDepthAttachment","","Trait for objects that can be used as depth attachments.",N,N],[10,"to_depth_attachment","","Builds the `DepthAttachment`.",70,[[["self"]],["depthattachment"]]],[8,"ToStencilAttachment","","Trait for objects that can be used as stencil attachments.",N,N],[10,"to_stencil_attachment","","Builds the `StencilAttachment`.",71,[[["self"]],["stencilattachment"]]],[8,"ToDepthStencilAttachment","","Trait for objects that can be used as depth and stencil…",N,N],[10,"to_depth_stencil_attachment","","Builds the `DepthStencilAttachment`.",72,[[["self"]],["depthstencilattachment"]]],[11,"new","","Creates a `SimpleFrameBuffer` with a single color…",73,[[["f"],["c"]],["result",["simpleframebuffer","validationerror"]]]],[11,"with_depth_buffer","","Creates a `SimpleFrameBuffer` with a single color…",73,[[["f"],["c"],["d"]],["result",["simpleframebuffer","validationerror"]]]],[11,"depth_only","","Creates a `SimpleFrameBuffer` with a single color…",73,[[["f"],["d"]],["result",["simpleframebuffer","validationerror"]]]],[11,"with_depth_and_stencil_buffer","","Creates a `SimpleFrameBuffer` with a single color…",73,[[["f"],["c"],["d"],["s"]],["result",["simpleframebuffer","validationerror"]]]],[11,"depth_and_stencil_only","","Creates a `SimpleFrameBuffer` with a single color…",73,[[["f"],["d"],["s"]],["result",["simpleframebuffer","validationerror"]]]],[11,"with_stencil_buffer","","Creates a `SimpleFrameBuffer` with a single color…",73,[[["f"],["c"],["s"]],["result",["simpleframebuffer","validationerror"]]]],[11,"stencil_only","","Creates a `SimpleFrameBuffer` with a single color…",73,[[["f"],["s"]],["result",["simpleframebuffer","validationerror"]]]],[11,"with_depth_stencil_buffer","","Creates a `SimpleFrameBuffer` with a single color…",73,[[["f"],["c"],["d"]],["result",["simpleframebuffer","validationerror"]]]],[11,"depth_stencil_only","","Creates a `SimpleFrameBuffer` with a single color…",73,[[["f"],["d"]],["result",["simpleframebuffer","validationerror"]]]],[11,"new","","Creates a new `MultiOutputFrameBuffer`.",74,[[["f"],["i"]],["result",["multioutputframebuffer","validationerror"]]]],[11,"with_depth_buffer","","Creates a `MultiOutputFrameBuffer` with a depth buffer.",74,[[["f"],["i"],["d"]],["result",["multioutputframebuffer","validationerror"]]]],[11,"with_depth_and_stencil_buffer","","Creates a `MultiOutputFrameBuffer` with a depth buffer,…",74,[[["f"],["i"],["d"],["s"]],["result",["multioutputframebuffer","validationerror"]]]],[11,"with_stencil_buffer","","Creates a `MultiOutputFrameBuffer` with a stencil buffer,…",74,[[["f"],["i"],["s"]],["result",["multioutputframebuffer","validationerror"]]]],[11,"with_depth_stencil_buffer","","Creates a `MultiOutputFrameBuffer` with a depth-stencil…",74,[[["f"],["i"],["d"]],["result",["multioutputframebuffer","validationerror"]]]],[11,"is_supported","","Returns true if empty framebuffers are supported by the…",75,[[["c"]],["bool"]]],[11,"is_layered_supported","","Returns true if layered empty framebuffers are supported…",75,[[["c"]],["bool"]]],[11,"get_max_supported_width","","Returns the maximum width of empty framebuffers that the…",75,[[["c"]],["option",["u32"]]]],[11,"get_max_supported_height","","Returns the maximum height of empty framebuffers that the…",75,[[["c"]],["option",["u32"]]]],[11,"get_max_supported_samples","","Returns the maximum number of samples of empty…",75,[[["c"]],["option",["u32"]]]],[11,"get_max_supported_layers","","Returns the maximum number of layers of empty framebuffers…",75,[[["c"]],["option",["u32"]]]],[11,"new","","Creates a `EmptyFrameBuffer`.",75,[[["f"],["u32"],["u32"],["option",["u32"]],["option",["u32"]],["bool"]],["result",["emptyframebuffer","validationerror"]]]],[0,"index","glium","In order to draw, you need to provide a way for the video…",N,N],[3,"IndexBuffer","glium::index","A list of indices loaded in the graphics card's memory.",N,N],[3,"IndexBufferSlice","","Slice of an `IndexBuffer`.",N,N],[3,"IndexBufferAny","","An `IndexBuffer` without any type information.",N,N],[3,"DrawCommandsNoIndicesBuffer","","A buffer containing a list of draw commands.",N,N],[3,"DrawCommandNoIndices","","Represents an element in a list of draw commands.",N,N],[12,"count","","Number of vertices to draw.",76,N],[12,"instance_count","","Number of instances to draw. If it's `0`, nothing will be…",76,N],[12,"first_index","","First vertex to draw in the vertices source.",76,N],[12,"base_instance","","Numero of the first instance to draw.",76,N],[3,"DrawCommandsIndicesBuffer","","A buffer containing a list of draw commands.",N,N],[3,"DrawCommandIndices","","Represents an element in a list of draw commands.",N,N],[12,"count","","Number of indices to use in the index buffer.",77,N],[12,"instance_count","","Number of instances to draw. If it's `0`, nothing will be…",77,N],[12,"first_index","","First index to draw in the index buffer.",77,N],[12,"base_vertex","","Value to add to each index.",77,N],[12,"base_instance","","Numero of the first instance to draw.",77,N],[3,"NoIndices","","Marker that can be used as an indices source when you…",N,N],[12,"0","","",78,N],[4,"BufferCreationError","","Error that can happen while creating an index buffer.",N,N],[13,"IndexTypeNotSupported","","The type of index is not supported by the backend.",79,N],[13,"PrimitiveTypeNotSupported","","The type of primitives is not supported by the backend.",79,N],[13,"BufferCreationError","","An error happened while creating the buffer.",79,N],[4,"IndicesSource","","Describes a source of indices used for drawing.",N,N],[13,"IndexBuffer","","A buffer uploaded in video memory.",80,N],[12,"buffer","glium::index::IndicesSource","The buffer.",80,N],[12,"data_type","","Type of indices in the buffer.",80,N],[12,"primitives","","Type of primitives contained in the vertex source.",80,N],[13,"MultidrawArray","glium::index","Use a multidraw indirect buffer without indices.",80,N],[12,"buffer","glium::index::IndicesSource","The buffer.",80,N],[12,"primitives","","Type of primitives contained in the vertex source.",80,N],[13,"MultidrawElement","glium::index","Use a multidraw indirect buffer with indices.",80,N],[12,"commands","glium::index::IndicesSource","The buffer of the commands.",80,N],[12,"indices","","The buffer of the indices.",80,N],[12,"data_type","","Type of indices in the buffer.",80,N],[12,"primitives","","Type of primitives contained in the vertex source.",80,N],[13,"NoIndices","glium::index","Don't use indices. Assemble primitives by using the order…",80,N],[12,"primitives","glium::index::IndicesSource","Type of primitives contained in the vertex source.",80,N],[4,"PrimitiveType","glium::index","List of available primitives.",N,N],[13,"Points","","Each vertex is an individual point.",81,N],[13,"LinesList","","Vertices are grouped by chunks of two vertices. Each chunk…",81,N],[13,"LinesListAdjacency","","Vertices are grouped by chunks of four vertices. The…",81,N],[13,"LineStrip","","Each vertex (except the last one) forms a line with the…",81,N],[13,"LineStripAdjacency","","Similar to `LineStrip`, but with an additional vertex at…",81,N],[13,"LineLoop","","Each vertex forms a line with the next vertex. The last…",81,N],[13,"TrianglesList","","Vertices are grouped by chunks of three vertices. Each…",81,N],[13,"TrianglesListAdjacency","","Vertices are grouped by chunks of six vertices. The first,…",81,N],[13,"TriangleStrip","","Each vertex (except the first one and the last one) forms…",81,N],[13,"TriangleStripAdjacency","","Each even vertex forms a triangle with vertices `n+2` and…",81,N],[13,"TriangleFan","","Starting at the second vertex, each vertex forms a…",81,N],[13,"Patches","","Vertices are grouped by chunks of `vertices_per_patch`…",81,N],[12,"vertices_per_patch","glium::index::PrimitiveType","Number of vertices per patch.",81,N],[4,"IndexType","glium::index","Type of the indices in an index source.",N,N],[13,"U8","","u8",82,N],[13,"U16","","u16",82,N],[13,"U32","","u32",82,N],[11,"new","glium","Builds a new index buffer from a list of indices and a…",83,N],[11,"dynamic","","Builds a new index buffer from a list of indices and a…",83,N],[11,"persistent","","Builds a new index buffer from a list of indices and a…",83,N],[11,"immutable","","Builds a new index buffer from a list of indices and a…",83,N],[11,"empty","","Builds a new empty index buffer.",83,[[["f"],["primitivetype"],["usize"]],["result",["indexbuffer","creationerror"]]]],[11,"empty_dynamic","","Builds a new empty index buffer.",83,[[["f"],["primitivetype"],["usize"]],["result",["indexbuffer","creationerror"]]]],[11,"empty_persistent","","Builds a new empty index buffer.",83,[[["f"],["primitivetype"],["usize"]],["result",["indexbuffer","creationerror"]]]],[11,"empty_immutable","","Builds a new empty index buffer.",83,[[["f"],["primitivetype"],["usize"]],["result",["indexbuffer","creationerror"]]]],[11,"get_primitives_type","","Returns the type of primitives associated with this index…",83,[[["self"]],["primitivetype"]]],[11,"get_indices_type","","Returns the data type of the indices inside this index…",83,[[["self"]],["indextype"]]],[11,"slice","","Returns `None` if out of range.",83,[[["self"],["r"]],["option",["indexbufferslice"]]]],[11,"get_primitives_type","glium::index","Returns the type of primitives associated with this index…",84,[[["self"]],["primitivetype"]]],[11,"get_indices_type","","Returns the data type of the indices inside this index…",84,[[["self"]],["indextype"]]],[11,"slice","","Returns `None` if out of range.",84,[[["self"],["r"]],["option",["indexbufferslice"]]]],[11,"get_primitives_type","","Returns the type of primitives associated with this index…",85,[[["self"]],["primitivetype"]]],[11,"get_indices_type","","Returns the data type of the indices inside this index…",85,[[["self"]],["indextype"]]],[11,"empty","","Builds an empty buffer.",86,[[["f"],["usize"]],["result",["drawcommandsnoindicesbuffer","buffercreationerror"]]]],[11,"empty_dynamic","","Builds an empty buffer.",86,[[["f"],["usize"]],["result",["drawcommandsnoindicesbuffer","buffercreationerror"]]]],[11,"empty_persistent","","Builds an empty buffer.",86,[[["f"],["usize"]],["result",["drawcommandsnoindicesbuffer","buffercreationerror"]]]],[11,"empty_immutable","","Builds an empty buffer.",86,[[["f"],["usize"]],["result",["drawcommandsnoindicesbuffer","buffercreationerror"]]]],[11,"with_primitive_type","","Builds an indices source from this buffer and a primitives…",86,[[["self"],["primitivetype"]],["indicessource"]]],[11,"empty","","Builds an empty buffer.",87,[[["f"],["usize"]],["result",["drawcommandsindicesbuffer","buffercreationerror"]]]],[11,"empty_dynamic","","Builds an empty buffer.",87,[[["f"],["usize"]],["result",["drawcommandsindicesbuffer","buffercreationerror"]]]],[11,"empty_persistent","","Builds an empty buffer.",87,[[["f"],["usize"]],["result",["drawcommandsindicesbuffer","buffercreationerror"]]]],[11,"empty_immutable","","Builds an empty buffer.",87,[[["f"],["usize"]],["result",["drawcommandsindicesbuffer","buffercreationerror"]]]],[11,"with_index_buffer","","Builds an indices source from this buffer and a primitives…",87,[[["self"],["indexbuffer"]],["indicessource"]]],[8,"Index","","An index from the index buffer.",N,N],[10,"get_type","","Returns the `IndexType` corresponding to this type.",88,[[],["indextype"]]],[11,"is_supported","","Returns true if this type of index is supported by the…",88,[[["c"]],["bool"]]],[11,"get_primitives_type","","Returns the type of the primitives.",80,[[["self"]],["primitivetype"]]],[11,"is_supported","","Returns true if the backend supports this type of…",81,[[["self"],["c"]],["bool"]]],[11,"get_size","","Returns the size in bytes of each index of this type.",82,[[["self"]],["usize"]]],[11,"is_supported","","Returns true if the backend supports this type of index.",82,[[["self"],["c"]],["bool"]]],[0,"pixel_buffer","glium","DEPRECATED. Moved to the `texture` module.",N,N],[0,"program","","Items related to creating an OpenGL program.",N,N],[3,"ComputeShader","glium::program","A combination of compute shaders linked together.",N,N],[3,"ComputeCommand","","Represents a compute shader command waiting to be…",N,N],[12,"num_groups_x","","Number of X groups.",89,N],[12,"num_groups_y","","Number of Y groups.",89,N],[12,"num_groups_z","","Number of Z groups.",89,N],[3,"Program","","A combination of shaders linked together.",N,N],[3,"Uniform","","Information about a uniform (except its name).",N,N],[12,"location","","The location of the uniform.",90,N],[12,"ty","","Type of the uniform.",90,N],[12,"size","","If it is an array, the number of elements.",90,N],[3,"UniformBlock","","Information about a uniform block (except its name).",N,N],[12,"id","","Identifier of the block.",91,N],[12,"initial_binding","","Initial bind point of the block.",91,N],[12,"size","","Size in bytes of the data in the block.",91,N],[12,"layout","","Layout of the block.",91,N],[3,"Attribute","","Information about an attribute of a program (except its…",N,N],[12,"location","","The index of the uniform.",92,N],[12,"ty","","Type of the attribute.",92,N],[12,"size","","Number of elements of the attribute.",92,N],[3,"TransformFeedbackVarying","","Describes a varying that is being output with transform…",N,N],[12,"name","","Name of the variable.",93,N],[12,"offset","","Number of bytes between the start of the first element and…",93,N],[12,"size","","Size in bytes of this value.",93,N],[12,"ty","","Type of the value.",93,N],[3,"TransformFeedbackBuffer","","Describes the layout of a buffer that can receive…",N,N],[12,"id","","Slot of this buffer.",94,N],[12,"elements","","List of elements inside the buffer.",94,N],[12,"stride","","Size in bytes between two consecutive elements.",94,N],[3,"SubroutineData","","Contains all subroutine data of a program.",N,N],[12,"location_counts","","Number of subroutine uniform locations per shader stage.…",95,N],[12,"subroutine_uniforms","","The list of all subroutine uniforms of the program stored…",95,N],[3,"SubroutineUniform","","Information about a Subroutine Uniform (except name)",N,N],[12,"index","","The index of the subroutine uniform. Needed to query…",96,N],[12,"location","","The location of the uniform. This is used to bind…",96,N],[12,"size","","If the uniform is an array, the size of the array.",96,N],[12,"compatible_subroutines","","A list of subroutines that can potentially be used with…",96,N],[3,"SourceCode","","Represents the source code of a program.",N,N],[12,"vertex_shader","","Source code of the vertex shader.",97,N],[12,"tessellation_control_shader","","Source code of the optional tessellation control shader.",97,N],[12,"tessellation_evaluation_shader","","Source code of the optional tessellation evaluation shader.",97,N],[12,"geometry_shader","","Source code of the optional geometry shader.",97,N],[12,"fragment_shader","","Source code of the fragment shader.",97,N],[3,"Binary","","Represents the compiled binary data of a program.",N,N],[12,"format","","An implementation-defined format.",98,N],[12,"content","","The binary data.",98,N],[4,"BlockLayout","","Layout of a shader storage buffer or a uniform buffer.",N,N],[13,"Struct","","Multiple elements, each having a name.",99,N],[12,"members","glium::program::BlockLayout","The list of elements, with `name`/`layout` pairs.",99,N],[13,"BasicType","glium::program","A basic element.",99,N],[12,"ty","glium::program::BlockLayout","Type of data.",99,N],[12,"offset_in_buffer","","Offset of this element in bytes from the start of the…",99,N],[13,"Array","glium::program","A fixed-size array.",99,N],[12,"content","glium::program::BlockLayout","Type of data of each element.",99,N],[12,"length","","Number of elements in the array.",99,N],[13,"DynamicSizedArray","glium::program","An array whose size isn't known at compile-time. Can only…",99,N],[12,"content","glium::program::BlockLayout","Type of data of each element.",99,N],[4,"OutputPrimitives","glium::program","Type of primitives that is being output by transform…",N,N],[13,"Points","","Points.",100,N],[13,"Lines","","Lines.",100,N],[13,"Triangles","","Triangles.",100,N],[13,"Quads","","Quads.",100,N],[4,"TransformFeedbackMode","","Type of transform feedback. Only used with the legacy…",N,N],[13,"Interleaved","","Each value is interleaved in the same buffer.",101,N],[13,"Separate","","Each value will go in a separate buffer.",101,N],[4,"ShaderStage","","The different stages of the program pipeline.",N,N],[13,"Vertex","","",102,N],[13,"Fragment","","",102,N],[13,"TessellationControl","","",102,N],[13,"TessellationEvaluation","","",102,N],[13,"Geometry","","",102,N],[4,"ProgramCreationError","","Error that can be triggered when creating a `Program`.",N,N],[13,"CompilationError","","Error while compiling one of the shaders.",103,N],[13,"LinkingError","","Error while linking the program.",103,N],[13,"ShaderTypeNotSupported","","One of the requested shader types is not supported by the…",103,N],[13,"CompilationNotSupported","","The OpenGL implementation doesn't provide a compiler.",103,N],[13,"TransformFeedbackNotSupported","","You have requested transform feedback varyings, but…",103,N],[13,"PointSizeNotSupported","","You have requested point size setting from the shader, but…",103,N],[13,"BinaryHeaderError","","The glium-specific binary header was not found or is…",103,N],[4,"ProgramChooserCreationError","","Error type that is returned by the `program!` macro.",N,N],[13,"NoVersion","","No available version has been found.",104,N],[13,"ProgramCreationError","","A version has been found but it triggered the given error.",104,N],[4,"GetBinaryError","","Error while retrieving the binary representation of a…",N,N],[13,"NotSupported","","The backend doesn't support binary.",105,N],[13,"NoFormats","","The backend does not supply any binary formats.",105,N],[4,"ProgramCreationInput","","Input when creating a program.",N,N],[13,"SourceCode","","Use GLSL source code.",106,N],[12,"vertex_shader","glium::program::ProgramCreationInput","Source code of the vertex shader.",106,N],[12,"tessellation_control_shader","","Source code of the optional tessellation control shader.",106,N],[12,"tessellation_evaluation_shader","","Source code of the optional tessellation evaluation shader.",106,N],[12,"geometry_shader","","Source code of the optional geometry shader.",106,N],[12,"fragment_shader","","Source code of the fragment shader.",106,N],[12,"transform_feedback_varyings","","The list of variables and mode to use for transform…",106,N],[12,"outputs_srgb","","Whether the fragment shader outputs colors in `sRGB` or…",106,N],[12,"uses_point_size","","Whether the shader uses point size.",106,N],[13,"Binary","glium::program","Use a precompiled binary.",106,N],[12,"data","glium::program::ProgramCreationInput","The data.",106,N],[12,"outputs_srgb","","See `SourceCode::outputs_srgb`.",106,N],[12,"uses_point_size","","Whether the shader uses point size.",106,N],[5,"is_geometry_shader_supported","glium::program","Returns true if the backend supports geometry shaders.",N,[[["c"]],["bool"]]],[5,"is_tessellation_shader_supported","","Returns true if the backend supports tessellation shaders.",N,[[["c"]],["bool"]]],[5,"is_binary_supported","","Returns true if the backend supports creating and…",N,[[["c"]],["bool"]]],[5,"is_subroutine_supported","","Returns true if the backend supports shader subroutines.",N,[[["c"]],["bool"]]],[11,"is_supported","","Returns true if the backend supports compute shaders.",107,[[["c"]],["bool"]]],[11,"from_source","","Builds a new compute shader from some source code.",107,[[["f"],["str"]],["result",["computeshader","programcreationerror"]]]],[11,"from_binary","","Builds a new compute shader from some binary.",107,[[["f"],["binary"]],["result",["computeshader","programcreationerror"]]]],[11,"execute","","Executes the compute shader.",107,[[["self"],["u"],["u32"],["u32"],["u32"]]]],[11,"execute_indirect","","Executes the compute shader.",107,[[["self"],["u"],["bufferslice",["computecommand"]]]]],[11,"get_binary","","Returns the program's compiled binary.",107,[[["self"]],["result",["binary","getbinaryerror"]]]],[11,"get_uniform","","Returns informations about a uniform variable, if it exists.",107,[[["self"],["str"]],["option",["uniform"]]]],[11,"uniforms","","Returns an iterator to the list of uniforms.",107,[[["self"]],["iter",["string","uniform"]]]],[11,"get_uniform_blocks","","Returns a list of uniform blocks.",107,[[["self"]],["hashmap"]]],[11,"get_shader_storage_blocks","","Returns the list of shader storage blocks.",107,[[["self"]],["hashmap"]]],[11,"new","glium","Builds a new program.",108,[[["f"],["i"]],["result",["program","programcreationerror"]]]],[11,"from_source","","Builds a new program from GLSL source code.",108,[[["f"],["str"],["str"],["option",["str"]]],["result",["program","programcreationerror"]]]],[11,"get_binary","","Returns the program's compiled binary.",108,[[["self"]],["result",["binary","getbinaryerror"]]]],[11,"get_frag_data_location","","Returns the location of an output fragment, if it exists.",108,[[["self"],["str"]],["option",["u32"]]]],[11,"get_uniform","","Returns informations about a uniform variable, if it exists.",108,[[["self"],["str"]],["option",["uniform"]]]],[11,"uniforms","","Returns an iterator to the list of uniforms.",108,[[["self"]],["iter",["string","uniform"]]]],[11,"get_uniform_blocks","","Returns a list of uniform blocks.",108,[[["self"]],["hashmap"]]],[11,"get_transform_feedback_buffers","","Returns the list of transform feedback varyings.",108,N],[11,"transform_feedback_matches","","True if the transform feedback output of this program…",108,[[["self"],["vertexformat"],["usize"]],["bool"]]],[11,"get_output_primitives","","Returns the type of geometry that transform feedback would…",108,[[["self"]],["option",["outputprimitives"]]]],[11,"has_tessellation_shaders","","Returns true if the program contains a tessellation stage.",108,[[["self"]],["bool"]]],[11,"has_tessellation_control_shader","","Returns true if the program contains a tessellation…",108,[[["self"]],["bool"]]],[11,"has_tessellation_evaluation_shader","","Returns true if the program contains a tessellation…",108,[[["self"]],["bool"]]],[11,"has_geometry_shader","","Returns true if the program contains a geometry shader.",108,[[["self"]],["bool"]]],[11,"get_attribute","","Returns informations about an attribute, if it exists.",108,[[["self"],["str"]],["option",["attribute"]]]],[11,"attributes","","Returns an iterator to the list of attributes.",108,[[["self"]],["iter",["string","attribute"]]]],[11,"has_srgb_output","","Returns true if the program has been configured to output…",108,[[["self"]],["bool"]]],[11,"get_shader_storage_blocks","","Returns the list of shader storage blocks.",108,[[["self"]],["hashmap"]]],[11,"get_subroutine_uniforms","","Returns the subroutine uniforms of this program.",108,[[["self"]],["hashmap"]]],[11,"uses_point_size","","Returns true if the program has been configured to use the…",108,[[["self"]],["bool"]]],[11,"to_gl_enum","glium::program","Converts the `ShaderStage` to its GLenum equivalent",102,[[["self"]],["c_uint"]]],[0,"uniforms","glium","A uniform is a global variable in your program. In order…",N,N],[3,"UniformBuffer","glium::uniforms","Buffer that contains a uniform block.",N,N],[3,"Sampler","","A sampler.",N,N],[12,"0","","",109,N],[12,"1","","",109,N],[3,"SamplerBehavior","","Behavior of a sampler.",N,N],[12,"wrap_function","","Functions to use for the X, Y, and Z coordinates.",110,N],[12,"minify_filter","","Filter to use when minifying the texture.",110,N],[12,"magnify_filter","","Filter to use when magnifying the texture.",110,N],[12,"max_anisotropy","","`1` means no anisotropic filtering, any value above `1`…",110,N],[3,"EmptyUniforms","","Object that can be used when you don't have any uniforms.",N,N],[3,"UniformsStorage","","Stores uniforms.",N,N],[4,"SamplerWrapFunction","","Function to use for out-of-bounds samples.",N,N],[13,"Repeat","","Samples at coord `x + 1` map to coord `x`.",111,N],[13,"Mirror","","Samples at coord `x + 1` map to coord `1 - x`.",111,N],[13,"Clamp","","Samples at coord `x + 1` map to coord `1`.",111,N],[13,"MirrorClamp","","Same as Mirror, but only for one repetition,",111,N],[4,"MagnifySamplerFilter","","The function that the GPU will use when loading the value…",N,N],[13,"Nearest","","The nearest texel will be loaded.",112,N],[13,"Linear","","All nearby texels will be loaded and their values will be…",112,N],[4,"MinifySamplerFilter","","The function that the GPU will use when loading the value…",N,N],[13,"Nearest","","The nearest texel will be loaded.",113,N],[13,"Linear","","All nearby texels will be loaded and their values will be…",113,N],[13,"NearestMipmapNearest","","The nearest texel of the nearest mipmap will be loaded.",113,N],[13,"LinearMipmapNearest","","Takes the nearest texel from the two nearest mipmaps, and…",113,N],[13,"NearestMipmapLinear","","Same as `Linear`, but from the nearest mipmap.",113,N],[13,"LinearMipmapLinear","","Same as `Linear`, but from the two nearest mipmaps.",113,N],[4,"UniformValue","","Represents a value to bind to a uniform.",N,N],[13,"Block","","Contains a handle to the buffer, and a function that…",114,N],[13,"Subroutine","","",114,N],[13,"SignedInt","","",114,N],[13,"UnsignedInt","","",114,N],[13,"Float","","",114,N],[13,"Mat2","","2x2 column-major matrix.",114,N],[13,"Mat3","","3x3 column-major matrix.",114,N],[13,"Mat4","","4x4 column-major matrix.",114,N],[13,"Vec2","","",114,N],[13,"Vec3","","",114,N],[13,"Vec4","","",114,N],[13,"IntVec2","","",114,N],[13,"IntVec3","","",114,N],[13,"IntVec4","","",114,N],[13,"UnsignedIntVec2","","",114,N],[13,"UnsignedIntVec3","","",114,N],[13,"UnsignedIntVec4","","",114,N],[13,"Bool","","",114,N],[13,"BoolVec2","","",114,N],[13,"BoolVec3","","",114,N],[13,"BoolVec4","","",114,N],[13,"Double","","",114,N],[13,"DoubleVec2","","",114,N],[13,"DoubleVec3","","",114,N],[13,"DoubleVec4","","",114,N],[13,"DoubleMat2","","",114,N],[13,"DoubleMat3","","",114,N],[13,"DoubleMat4","","",114,N],[13,"Int64","","",114,N],[13,"Int64Vec2","","",114,N],[13,"Int64Vec3","","",114,N],[13,"Int64Vec4","","",114,N],[13,"UnsignedInt64","","",114,N],[13,"UnsignedInt64Vec2","","",114,N],[13,"UnsignedInt64Vec3","","",114,N],[13,"UnsignedInt64Vec4","","",114,N],[13,"Texture1d","","",114,N],[13,"CompressedTexture1d","","",114,N],[13,"SrgbTexture1d","","",114,N],[13,"CompressedSrgbTexture1d","","",114,N],[13,"IntegralTexture1d","","",114,N],[13,"UnsignedTexture1d","","",114,N],[13,"DepthTexture1d","","",114,N],[13,"Texture2d","","",114,N],[13,"CompressedTexture2d","","",114,N],[13,"SrgbTexture2d","","",114,N],[13,"CompressedSrgbTexture2d","","",114,N],[13,"IntegralTexture2d","","",114,N],[13,"UnsignedTexture2d","","",114,N],[13,"DepthTexture2d","","",114,N],[13,"Texture2dMultisample","","",114,N],[13,"SrgbTexture2dMultisample","","",114,N],[13,"IntegralTexture2dMultisample","","",114,N],[13,"UnsignedTexture2dMultisample","","",114,N],[13,"DepthTexture2dMultisample","","",114,N],[13,"Texture3d","","",114,N],[13,"CompressedTexture3d","","",114,N],[13,"SrgbTexture3d","","",114,N],[13,"CompressedSrgbTexture3d","","",114,N],[13,"IntegralTexture3d","","",114,N],[13,"UnsignedTexture3d","","",114,N],[13,"DepthTexture3d","","",114,N],[13,"Texture1dArray","","",114,N],[13,"CompressedTexture1dArray","","",114,N],[13,"SrgbTexture1dArray","","",114,N],[13,"CompressedSrgbTexture1dArray","","",114,N],[13,"IntegralTexture1dArray","","",114,N],[13,"UnsignedTexture1dArray","","",114,N],[13,"DepthTexture1dArray","","",114,N],[13,"Texture2dArray","","",114,N],[13,"CompressedTexture2dArray","","",114,N],[13,"SrgbTexture2dArray","","",114,N],[13,"CompressedSrgbTexture2dArray","","",114,N],[13,"IntegralTexture2dArray","","",114,N],[13,"UnsignedTexture2dArray","","",114,N],[13,"DepthTexture2dArray","","",114,N],[13,"Texture2dMultisampleArray","","",114,N],[13,"SrgbTexture2dMultisampleArray","","",114,N],[13,"IntegralTexture2dMultisampleArray","","",114,N],[13,"UnsignedTexture2dMultisampleArray","","",114,N],[13,"DepthTexture2dMultisampleArray","","",114,N],[13,"Cubemap","","",114,N],[13,"CompressedCubemap","","",114,N],[13,"SrgbCubemap","","",114,N],[13,"CompressedSrgbCubemap","","",114,N],[13,"IntegralCubemap","","",114,N],[13,"UnsignedCubemap","","",114,N],[13,"DepthCubemap","","",114,N],[13,"CubemapArray","","",114,N],[13,"CompressedCubemapArray","","",114,N],[13,"SrgbCubemapArray","","",114,N],[13,"CompressedSrgbCubemapArray","","",114,N],[13,"IntegralCubemapArray","","",114,N],[13,"UnsignedCubemapArray","","",114,N],[13,"DepthCubemapArray","","",114,N],[13,"BufferTexture","","",114,N],[4,"UniformType","","Type of a uniform in a program.",N,N],[13,"Float","","",115,N],[13,"FloatVec2","","",115,N],[13,"FloatVec3","","",115,N],[13,"FloatVec4","","",115,N],[13,"Double","","",115,N],[13,"DoubleVec2","","",115,N],[13,"DoubleVec3","","",115,N],[13,"DoubleVec4","","",115,N],[13,"Int","","",115,N],[13,"IntVec2","","",115,N],[13,"IntVec3","","",115,N],[13,"IntVec4","","",115,N],[13,"UnsignedInt","","",115,N],[13,"UnsignedIntVec2","","",115,N],[13,"UnsignedIntVec3","","",115,N],[13,"UnsignedIntVec4","","",115,N],[13,"Int64","","",115,N],[13,"Int64Vec2","","",115,N],[13,"Int64Vec3","","",115,N],[13,"Int64Vec4","","",115,N],[13,"UnsignedInt64","","",115,N],[13,"UnsignedInt64Vec2","","",115,N],[13,"UnsignedInt64Vec3","","",115,N],[13,"UnsignedInt64Vec4","","",115,N],[13,"Bool","","",115,N],[13,"BoolVec2","","",115,N],[13,"BoolVec3","","",115,N],[13,"BoolVec4","","",115,N],[13,"FloatMat2","","",115,N],[13,"FloatMat3","","",115,N],[13,"FloatMat4","","",115,N],[13,"FloatMat2x3","","",115,N],[13,"FloatMat2x4","","",115,N],[13,"FloatMat3x2","","",115,N],[13,"FloatMat3x4","","",115,N],[13,"FloatMat4x2","","",115,N],[13,"FloatMat4x3","","",115,N],[13,"DoubleMat2","","",115,N],[13,"DoubleMat3","","",115,N],[13,"DoubleMat4","","",115,N],[13,"DoubleMat2x3","","",115,N],[13,"DoubleMat2x4","","",115,N],[13,"DoubleMat3x2","","",115,N],[13,"DoubleMat3x4","","",115,N],[13,"DoubleMat4x2","","",115,N],[13,"DoubleMat4x3","","",115,N],[13,"Sampler1d","","",115,N],[13,"ISampler1d","","",115,N],[13,"USampler1d","","",115,N],[13,"Sampler2d","","",115,N],[13,"ISampler2d","","",115,N],[13,"USampler2d","","",115,N],[13,"Sampler3d","","",115,N],[13,"ISampler3d","","",115,N],[13,"USampler3d","","",115,N],[13,"Sampler1dArray","","",115,N],[13,"ISampler1dArray","","",115,N],[13,"USampler1dArray","","",115,N],[13,"Sampler2dArray","","",115,N],[13,"ISampler2dArray","","",115,N],[13,"USampler2dArray","","",115,N],[13,"SamplerCube","","",115,N],[13,"ISamplerCube","","",115,N],[13,"USamplerCube","","",115,N],[13,"Sampler2dRect","","",115,N],[13,"ISampler2dRect","","",115,N],[13,"USampler2dRect","","",115,N],[13,"Sampler2dRectShadow","","",115,N],[13,"SamplerCubeArray","","",115,N],[13,"ISamplerCubeArray","","",115,N],[13,"USamplerCubeArray","","",115,N],[13,"SamplerBuffer","","",115,N],[13,"ISamplerBuffer","","",115,N],[13,"USamplerBuffer","","",115,N],[13,"Sampler2dMultisample","","",115,N],[13,"ISampler2dMultisample","","",115,N],[13,"USampler2dMultisample","","",115,N],[13,"Sampler2dMultisampleArray","","",115,N],[13,"ISampler2dMultisampleArray","","",115,N],[13,"USampler2dMultisampleArray","","",115,N],[13,"Sampler1dShadow","","",115,N],[13,"Sampler2dShadow","","",115,N],[13,"SamplerCubeShadow","","",115,N],[13,"Sampler1dArrayShadow","","",115,N],[13,"Sampler2dArrayShadow","","",115,N],[13,"SamplerCubeArrayShadow","","",115,N],[13,"Image1d","","",115,N],[13,"IImage1d","","",115,N],[13,"UImage1d","","",115,N],[13,"Image2d","","",115,N],[13,"IImage2d","","",115,N],[13,"UImage2d","","",115,N],[13,"Image3d","","",115,N],[13,"IImage3d","","",115,N],[13,"UImage3d","","",115,N],[13,"Image2dRect","","",115,N],[13,"IImage2dRect","","",115,N],[13,"UImage2dRect","","",115,N],[13,"ImageCube","","",115,N],[13,"IImageCube","","",115,N],[13,"UImageCube","","",115,N],[13,"ImageBuffer","","",115,N],[13,"IImageBuffer","","",115,N],[13,"UImageBuffer","","",115,N],[13,"Image1dArray","","",115,N],[13,"IImage1dArray","","",115,N],[13,"UImage1dArray","","",115,N],[13,"Image2dArray","","",115,N],[13,"IImage2dArray","","",115,N],[13,"UImage2dArray","","",115,N],[13,"Image2dMultisample","","",115,N],[13,"IImage2dMultisample","","",115,N],[13,"UImage2dMultisample","","",115,N],[13,"Image2dMultisampleArray","","",115,N],[13,"IImage2dMultisampleArray","","",115,N],[13,"UImage2dMultisampleArray","","",115,N],[13,"AtomicCounterUint","","",115,N],[4,"LayoutMismatchError","","Error about a block layout mismatch.",N,N],[13,"TypeMismatch","","There is a mismatch in the type of one element.",116,N],[12,"expected","glium::uniforms::LayoutMismatchError","Type expected by the shader.",116,N],[12,"obtained","","Type that you gave.",116,N],[13,"LayoutMismatch","glium::uniforms","The expected layout is totally different from what we have.",116,N],[12,"expected","glium::uniforms::LayoutMismatchError","Layout expected by the shader.",116,N],[12,"obtained","","Layout of the input.",116,N],[13,"OffsetMismatch","glium::uniforms","The type of data is good, but there is a misalignment.",116,N],[12,"expected","glium::uniforms::LayoutMismatchError","Expected offset of a member.",116,N],[12,"obtained","","Offset of the same member in the input.",116,N],[13,"MemberMismatch","glium::uniforms","There is a mismatch in a submember of this layout.",116,N],[12,"member","glium::uniforms::LayoutMismatchError","Name of the field.",116,N],[12,"err","","The sub-error.",116,N],[13,"MissingField","glium::uniforms","A field is missing in either the expected of the input…",116,N],[12,"name","glium::uniforms::LayoutMismatchError","Name of the field.",116,N],[11,"new","glium::uniforms","Uploads data in the uniforms buffer.",117,[[["f"],["t"]],["result",["uniformbuffer","buffercreationerror"]]]],[11,"dynamic","","Uploads data in the uniforms buffer.",117,[[["f"],["t"]],["result",["uniformbuffer","buffercreationerror"]]]],[11,"persistent","","Uploads data in the uniforms buffer.",117,[[["f"],["t"]],["result",["uniformbuffer","buffercreationerror"]]]],[11,"immutable","","Uploads data in the uniforms buffer.",117,[[["f"],["t"]],["result",["uniformbuffer","buffercreationerror"]]]],[11,"empty","","Creates an empty buffer.",117,[[["f"]],["result",["uniformbuffer","buffercreationerror"]]]],[11,"empty_dynamic","","Creates an empty buffer.",117,[[["f"]],["result",["uniformbuffer","buffercreationerror"]]]],[11,"empty_persistent","","Creates an empty buffer.",117,[[["f"]],["result",["uniformbuffer","buffercreationerror"]]]],[11,"empty_immutable","","Creates an empty buffer.",117,[[["f"]],["result",["uniformbuffer","buffercreationerror"]]]],[11,"empty_unsized","","Creates an empty buffer.",117,[[["f"],["usize"]],["result",["uniformbuffer","buffercreationerror"]]]],[11,"empty_unsized_dynamic","","Creates an empty buffer.",117,[[["f"],["usize"]],["result",["uniformbuffer","buffercreationerror"]]]],[11,"empty_unsized_persistent","","Creates an empty buffer.",117,[[["f"],["usize"]],["result",["uniformbuffer","buffercreationerror"]]]],[11,"empty_unsized_immutable","","Creates an empty buffer.",117,[[["f"],["usize"]],["result",["uniformbuffer","buffercreationerror"]]]],[11,"new","","Builds a new `Sampler` with default parameters.",109,[[["t"]],["sampler"]]],[11,"wrap_function","","Changes the wrap functions of all three coordinates.",109,[[["self"],["samplerwrapfunction"]],["sampler"]]],[11,"minify_filter","","Changes the minifying filter of the sampler.",109,[[["self"],["minifysamplerfilter"]],["sampler"]]],[11,"magnify_filter","","Changes the magnifying filter of the sampler.",109,[[["self"],["magnifysamplerfilter"]],["sampler"]]],[11,"anisotropy","","Changes the magnifying filter of the sampler.",109,[[["self"],["u16"]],["sampler"]]],[11,"new","","Builds a new storage with a value.",118,[[["str"],["t"]],["uniformsstorage",["emptyuniforms"]]]],[11,"add","","Adds a value to the storage.",118,[[["self"],["str"],["u"]],["uniformsstorage",["uniformsstorage"]]]],[11,"is_usable_with","","Returns true if this value can be used with a uniform of…",114,[[["self"],["uniformtype"]],["bool"]]],[8,"Uniforms","","Object that contains the values of all the uniforms to…",N,N],[10,"visit_values","","Calls the parameter once with the name and value of each…",119,[[["self"],["f"]]]],[8,"AsUniformValue","","Value that can be used as the value of a uniform.",N,N],[10,"as_uniform_value","","Builds a `UniformValue`.",120,[[["self"]],["uniformvalue"]]],[8,"UniformBlock","","Objects that are suitable for being inside a uniform block…",N,N],[10,"matches","","Checks whether the uniforms' layout matches the given…",121,[[["blocklayout"],["usize"]],["result",["layoutmismatcherror"]]]],[10,"build_layout","","Builds the `BlockLayout` corresponding to the current…",121,[[["usize"]],["blocklayout"]]],[0,"vertex","glium","Contains everything related to vertex sources.",N,N],[3,"VertexBuffer","glium::vertex","A list of vertices loaded in the graphics card's memory.",N,N],[3,"VertexBufferAny","","A list of vertices loaded in the graphics card's memory.",N,N],[3,"VertexBufferSlice","","Represents a slice of a `VertexBuffer`.",N,N],[3,"TransformFeedbackSession","","Transform feedback allows you to obtain in a buffer the…",N,N],[3,"EmptyVertexAttributes","","Marker that can be passed instead of a buffer to indicate…",N,N],[12,"len","","Number of phantom vertices.",122,N],[3,"EmptyInstanceAttributes","","Marker that can be passed instead of a buffer to indicate…",N,N],[12,"len","","Number of phantom vertices.",123,N],[3,"PerInstance","","Marker that instructs glium that the buffer is to be used…",N,N],[4,"BufferCreationError","","Error that can happen when creating a vertex buffer.",N,N],[13,"FormatNotSupported","","The vertex format is not supported by the backend.",124,N],[13,"BufferCreationError","","Error while creating the vertex buffer.",124,N],[4,"AttributeType","","",N,N],[13,"I8","","",125,N],[13,"I8I8","","",125,N],[13,"I8I8I8","","",125,N],[13,"I8I8I8I8","","",125,N],[13,"U8","","",125,N],[13,"U8U8","","",125,N],[13,"U8U8U8","","",125,N],[13,"U8U8U8U8","","",125,N],[13,"I16","","",125,N],[13,"I16I16","","",125,N],[13,"I16I16I16","","",125,N],[13,"I16I16I16I16","","",125,N],[13,"U16","","",125,N],[13,"U16U16","","",125,N],[13,"U16U16U16","","",125,N],[13,"U16U16U16U16","","",125,N],[13,"I32","","",125,N],[13,"I32I32","","",125,N],[13,"I32I32I32","","",125,N],[13,"I32I32I32I32","","",125,N],[13,"U32","","",125,N],[13,"U32U32","","",125,N],[13,"U32U32U32","","",125,N],[13,"U32U32U32U32","","",125,N],[13,"I64","","",125,N],[13,"I64I64","","",125,N],[13,"I64I64I64","","",125,N],[13,"I64I64I64I64","","",125,N],[13,"U64","","",125,N],[13,"U64U64","","",125,N],[13,"U64U64U64","","",125,N],[13,"U64U64U64U64","","",125,N],[13,"F16","","",125,N],[13,"F16F16","","",125,N],[13,"F16F16F16","","",125,N],[13,"F16F16F16F16","","",125,N],[13,"F16x2x2","","2x2 matrix of `f16`s",125,N],[13,"F16x2x3","","2x3 matrix of `f16`s",125,N],[13,"F16x2x4","","2x3 matrix of `f16`s",125,N],[13,"F16x3x2","","3x2 matrix of `f16`s",125,N],[13,"F16x3x3","","3x3 matrix of `f16`s",125,N],[13,"F16x3x4","","3x4 matrix of `f16`s",125,N],[13,"F16x4x2","","4x2 matrix of `f16`s",125,N],[13,"F16x4x3","","4x3 matrix of `f16`s",125,N],[13,"F16x4x4","","4x4 matrix of `f16`s",125,N],[13,"F32","","",125,N],[13,"F32F32","","",125,N],[13,"F32F32F32","","",125,N],[13,"F32F32F32F32","","",125,N],[13,"F32x2x2","","2x2 matrix of `f32`s",125,N],[13,"F32x2x3","","2x3 matrix of `f32`s",125,N],[13,"F32x2x4","","2x3 matrix of `f32`s",125,N],[13,"F32x3x2","","3x2 matrix of `f32`s",125,N],[13,"F32x3x3","","3x3 matrix of `f32`s",125,N],[13,"F32x3x4","","3x4 matrix of `f32`s",125,N],[13,"F32x4x2","","4x2 matrix of `f32`s",125,N],[13,"F32x4x3","","4x3 matrix of `f32`s",125,N],[13,"F32x4x4","","4x4 matrix of `f32`s",125,N],[13,"F64","","Warning: using `f64`s can be very slow.",125,N],[13,"F64F64","","Warning: using `f64`s can be very slow.",125,N],[13,"F64F64F64","","Warning: using `f64`s can be very slow.",125,N],[13,"F64F64F64F64","","Warning: using `f64`s can be very slow.",125,N],[13,"F64x2x2","","2x2 matrix of `f64`s Warning: using `f64`s can be very slow.",125,N],[13,"F64x2x3","","2x3 matrix of `f64`s Warning: using `f64`s can be very slow.",125,N],[13,"F64x2x4","","2x3 matrix of `f64`s Warning: using `f64`s can be very slow.",125,N],[13,"F64x3x2","","3x2 matrix of `f64`s Warning: using `f64`s can be very slow.",125,N],[13,"F64x3x3","","3x3 matrix of `f64`s Warning: using `f64`s can be very slow.",125,N],[13,"F64x3x4","","3x4 matrix of `f64`s Warning: using `f64`s can be very slow.",125,N],[13,"F64x4x2","","4x2 matrix of `f64`s Warning: using `f64`s can be very slow.",125,N],[13,"F64x4x3","","4x3 matrix of `f64`s Warning: using `f64`s can be very slow.",125,N],[13,"F64x4x4","","4x4 matrix of `f64`s Warning: using `f64`s can be very slow.",125,N],[13,"I2I10I10I10Reversed","","From MSB to LSB: two bits for the alpha, ten bits for the…",125,N],[13,"U2U10U10U10Reversed","","From MSB to LSB: two bits for the alpha, ten bits for the…",125,N],[13,"I10I10I10I2","","Corresponds to `GL_INT_10_10_10_2`.",125,N],[13,"U10U10U10U2","","Corresponds to `GL_UNSIGNED_INT_10_10_10_2`.",125,N],[13,"F10F11F11UnsignedIntReversed","","Three floating points values turned into unsigned integers./",125,N],[13,"FixedFloatI16U16","","Fixed floating points. A 16bits signed value followed by…",125,N],[4,"VerticesSource","","Describes the source to use for the vertices when drawing.",N,N],[13,"VertexBuffer","","A buffer uploaded in the video memory.",126,N],[13,"Marker","","A marker indicating a \"phantom list of attributes\".",126,N],[12,"len","glium::vertex::VerticesSource","Number of attributes.",126,N],[12,"per_instance","","Whether or not this buffer is \"per instance\" (true) or…",126,N],[5,"is_transform_feedback_supported","glium::vertex","Returns true if transform feedback is supported by the…",N,[[["f"]],["bool"]]],[11,"per_instance","","Creates a marker that instructs glium to use multiple…",127,[[["self"]],["result",["perinstance","instancingnotsupported"]]]],[11,"new","glium","Builds a new vertex buffer.",128,N],[11,"dynamic","","Builds a new vertex buffer.",128,N],[11,"persistent","","Builds a new vertex buffer.",128,N],[11,"immutable","","Builds a new vertex buffer.",128,N],[11,"empty","","Builds an empty vertex buffer.",128,[[["f"],["usize"]],["result",["vertexbuffer","creationerror"]]]],[11,"empty_dynamic","","Builds an empty vertex buffer.",128,[[["f"],["usize"]],["result",["vertexbuffer","creationerror"]]]],[11,"empty_persistent","","Builds an empty vertex buffer.",128,[[["f"],["usize"]],["result",["vertexbuffer","creationerror"]]]],[11,"empty_immutable","","Builds an empty vertex buffer.",128,[[["f"],["usize"]],["result",["vertexbuffer","creationerror"]]]],[11,"new_raw","","Builds a new vertex buffer from an indeterminate data type…",128,N],[11,"new_raw_dynamic","","Dynamic version of `new_raw`.",128,N],[11,"slice","","Accesses a slice of the buffer.",128,[[["self"],["r"]],["option",["vertexbufferslice"]]]],[11,"get_bindings","","Returns the associated `VertexFormat`.",128,[[["self"]],["vertexformat"]]],[11,"per_instance","","Creates a marker that instructs glium to use multiple…",128,[[["self"]],["result",["perinstance","instancingnotsupported"]]]],[11,"into_vertex_buffer_any","","DEPRECATED: use `.into()` instead. Discard the type…",128,[[["self"]],["vertexbufferany"]]],[11,"get_elements_size","glium::vertex","Returns the number of bytes between two consecutive…",129,[[["self"]],["usize"]]],[11,"len","","Returns the number of elements in the buffer.",129,[[["self"]],["usize"]]],[11,"get_bindings","","Returns the associated `VertexFormat`.",129,[[["self"]],["vertexformat"]]],[11,"into_vertex_buffer","","Turns the vertex buffer into a `VertexBuffer` without…",129,[[["self"]],["vertexbuffer"]]],[11,"per_instance","","Creates a marker that instructs glium to use multiple…",129,[[["self"]],["result",["perinstance","instancingnotsupported"]]]],[11,"is_supported","","Returns true if the backend supports this type of attribute.",125,[[["self"],["c"]],["bool"]]],[11,"get_size_bytes","","Returns the size in bytes of a value of this type.",125,[[["self"]],["usize"]]],[11,"get_num_components","","Returns the number of values for this type.",125,[[["self"]],["usize"]]],[11,"new","","Builds a new transform feedback session.",130,[[["f"],["program"],["buffer"]],["result",["transformfeedbacksession","transformfeedbacksessioncreationerror"]]]],[6,"VertexFormat","","Describes the layout of each vertex in a vertex buffer.",N,N],[8,"MultiVerticesSource","","Objects that describe multiple vertex sources.",N,N],[16,"Iterator","","Iterator that enumerates each source.",131,N],[10,"iter","","Iterates over the `VerticesSource`.",131,N],[8,"Vertex","","Trait for structures that represent a vertex.",N,N],[10,"build_bindings","","Builds the `VertexFormat` representing the layout of this…",132,[[],["vertexformat"]]],[11,"is_supported","","Returns true if the backend supports this vertex format.",132,[[["c"]],["bool"]]],[8,"Attribute","","Trait for types that can be used as vertex attributes.",N,N],[10,"get_type","","Get the type of data.",133,[[],["attributetype"]]],[11,"is_supported","","Returns true if the backend supports this type of attribute.",133,[[["c"]],["bool"]]],[0,"texture","glium","A texture is an image loaded in video memory, which can be…",N,N],[3,"TextureAny","glium::texture","A texture whose type isn't fixed at compile-time.",N,N],[3,"TextureAnyMipmap","","Represents a specific mipmap of a texture.",N,N],[3,"TextureAnyLayer","","Represents a specific layer of an array texture and 3D…",N,N],[3,"TextureAnyLayerMipmap","","Represents a specific layer of a specific mipmap. This is…",N,N],[3,"TextureAnyImage","","Represents a specific 2D image of a texture. 1D textures…",N,N],[3,"RawImage1d","","Represents raw data for a two-dimensional image.",N,N],[12,"data","","A contiguous array of pixel data.",134,N],[12,"width","","Number of pixels per column.",134,N],[12,"format","","Formats of the pixels.",134,N],[3,"RawImage2d","","Represents raw data for a two-dimensional image.",N,N],[12,"data","","A contiguous array of pixel data.",135,N],[12,"width","","Number of pixels per column.",135,N],[12,"height","","Number of pixels per row.",135,N],[12,"format","","Formats of the pixels.",135,N],[3,"RawImage3d","","Represents raw data for a two-dimensional image.",N,N],[12,"data","","A contiguous array of pixel data.",136,N],[12,"width","","Number of pixels per column.",136,N],[12,"height","","Number of pixels per row.",136,N],[12,"depth","","Number of pixels per depth.",136,N],[12,"format","","Formats of the pixels.",136,N],[4,"ClientFormat","","List of client-side pixel formats.",N,N],[13,"U8","","",137,N],[13,"U8U8","","",137,N],[13,"U8U8U8","","",137,N],[13,"U8U8U8U8","","",137,N],[13,"I8","","",137,N],[13,"I8I8","","",137,N],[13,"I8I8I8","","",137,N],[13,"I8I8I8I8","","",137,N],[13,"U16","","",137,N],[13,"U16U16","","",137,N],[13,"U16U16U16","","",137,N],[13,"U16U16U16U16","","",137,N],[13,"I16","","",137,N],[13,"I16I16","","",137,N],[13,"I16I16I16","","",137,N],[13,"I16I16I16I16","","",137,N],[13,"U32","","",137,N],[13,"U32U32","","",137,N],[13,"U32U32U32","","",137,N],[13,"U32U32U32U32","","",137,N],[13,"I32","","",137,N],[13,"I32I32","","",137,N],[13,"I32I32I32","","",137,N],[13,"I32I32I32I32","","",137,N],[13,"U3U3U2","","",137,N],[13,"U5U6U5","","",137,N],[13,"U4U4U4U4","","",137,N],[13,"U5U5U5U1","","",137,N],[13,"U10U10U10U2","","",137,N],[13,"F16","","",137,N],[13,"F16F16","","",137,N],[13,"F16F16F16","","",137,N],[13,"F16F16F16F16","","",137,N],[13,"F32","","",137,N],[13,"F32F32","","",137,N],[13,"F32F32F32","","",137,N],[13,"F32F32F32F32","","",137,N],[4,"TextureFormat","","Format of the internal representation of a texture.",N,N],[13,"UncompressedFloat","","",138,N],[13,"UncompressedIntegral","","",138,N],[13,"UncompressedUnsigned","","",138,N],[13,"Srgb","","",138,N],[13,"CompressedFormat","","",138,N],[13,"CompressedSrgbFormat","","",138,N],[13,"DepthFormat","","",138,N],[13,"StencilFormat","","",138,N],[13,"DepthStencilFormat","","",138,N],[4,"UncompressedFloatFormat","","List of uncompressed pixel formats that contain…",N,N],[13,"U8","","Guaranteed to be supported for both textures and…",139,N],[13,"I8","","Guaranteed to be supported for textures.",139,N],[13,"U16","","Guaranteed to be supported for both textures and…",139,N],[13,"I16","","Guaranteed to be supported for textures.",139,N],[13,"U8U8","","Guaranteed to be supported for both textures and…",139,N],[13,"I8I8","","Guaranteed to be supported for textures.",139,N],[13,"U16U16","","Guaranteed to be supported for both textures and…",139,N],[13,"I16I16","","Guaranteed to be supported for textures.",139,N],[13,"U3U3U2","","",139,N],[13,"U4U4U4","","",139,N],[13,"U5U5U5","","",139,N],[13,"U8U8U8","","Guaranteed to be supported for textures.",139,N],[13,"I8I8I8","","Guaranteed to be supported for textures.",139,N],[13,"U10U10U10","","",139,N],[13,"U12U12U12","","",139,N],[13,"U16U16U16","","Guaranteed to be supported for both textures and…",139,N],[13,"I16I16I16","","Guaranteed to be supported for textures.",139,N],[13,"U2U2U2U2","","",139,N],[13,"U4U4U4U4","","",139,N],[13,"U5U5U5U1","","",139,N],[13,"U8U8U8U8","","Guaranteed to be supported for both textures and…",139,N],[13,"I8I8I8I8","","Guaranteed to be supported for textures.",139,N],[13,"U10U10U10U2","","Guaranteed to be supported for both textures and…",139,N],[13,"U12U12U12U12","","",139,N],[13,"U16U16U16U16","","Guaranteed to be supported for both textures and…",139,N],[13,"I16I16I16I16","","Guaranteed to be supported for both textures and…",139,N],[13,"F16","","Guaranteed to be supported for both textures and…",139,N],[13,"F16F16","","Guaranteed to be supported for both textures and…",139,N],[13,"F16F16F16","","Guaranteed to be supported for textures.",139,N],[13,"F16F16F16F16","","Guaranteed to be supported for both textures and…",139,N],[13,"F32","","Guaranteed to be supported for both textures and…",139,N],[13,"F32F32","","Guaranteed to be supported for both textures and…",139,N],[13,"F32F32F32","","Guaranteed to be supported for textures.",139,N],[13,"F32F32F32F32","","Guaranteed to be supported for both textures and…",139,N],[13,"F11F11F10","","Guaranteed to be supported for both textures and…",139,N],[13,"F9F9F9","","Uses three components of 9 bits of precision that all…",139,N],[4,"UncompressedIntFormat","","List of uncompressed pixel formats that contain signed…",N,N],[13,"I8","","",140,N],[13,"I16","","",140,N],[13,"I32","","",140,N],[13,"I8I8","","",140,N],[13,"I16I16","","",140,N],[13,"I32I32","","",140,N],[13,"I8I8I8","","",140,N],[13,"I16I16I16","","May not be supported by renderbuffers.",140,N],[13,"I32I32I32","","May not be supported by renderbuffers.",140,N],[13,"I8I8I8I8","","May not be supported by renderbuffers.",140,N],[13,"I16I16I16I16","","",140,N],[13,"I32I32I32I32","","",140,N],[4,"UncompressedUintFormat","","List of uncompressed pixel formats that contain unsigned…",N,N],[13,"U8","","",141,N],[13,"U16","","",141,N],[13,"U32","","",141,N],[13,"U8U8","","",141,N],[13,"U16U16","","",141,N],[13,"U32U32","","",141,N],[13,"U8U8U8","","",141,N],[13,"U16U16U16","","May not be supported by renderbuffers.",141,N],[13,"U32U32U32","","May not be supported by renderbuffers.",141,N],[13,"U8U8U8U8","","May not be supported by renderbuffers.",141,N],[13,"U16U16U16U16","","",141,N],[13,"U32U32U32U32","","",141,N],[13,"U10U10U10U2","","",141,N],[4,"CompressedFormat","","List of compressed texture formats.",N,N],[13,"RgtcFormatU","","Red/green compressed texture with one unsigned component.",142,N],[13,"RgtcFormatI","","Red/green compressed texture with one signed component.",142,N],[13,"RgtcFormatUU","","Red/green compressed texture with two unsigned components.",142,N],[13,"RgtcFormatII","","Red/green compressed texture with two signed components.",142,N],[13,"BptcUnorm4","","BPTC format with four components represented as integers.",142,N],[13,"BptcSignedFloat3","","BPTC format with three components (no alpha) represented…",142,N],[13,"BptcUnsignedFloat3","","BPTC format with three components (no alpha) represented…",142,N],[13,"S3tcDxt1NoAlpha","","S3TC DXT1 without alpha, see…",142,N],[13,"S3tcDxt1Alpha","","S3TC DXT1 with 1-bit alpha, see…",142,N],[13,"S3tcDxt3Alpha","","S3TC DXT3, see…",142,N],[13,"S3tcDxt5Alpha","","S3TC DXT5, see…",142,N],[4,"DepthFormat","","List of formats available for depth textures.",N,N],[13,"I16","","",143,N],[13,"I24","","",143,N],[13,"I32","","May not be supported by all hardware.",143,N],[13,"F32","","",143,N],[4,"DepthStencilFormat","","List of formats available for depth-stencil textures.",N,N],[13,"I24I8","","",144,N],[13,"F32I8","","",144,N],[4,"StencilFormat","","List of formats available for stencil textures.",N,N],[13,"I1","","",145,N],[13,"I4","","",145,N],[13,"I8","","",145,N],[13,"I16","","",145,N],[4,"CompressedSrgbFormat","","List of compressed pixel formats in the sRGB color space.",N,N],[13,"Bptc","","BPTC format. sRGB with alpha. Also called `BC7` by DirectX.",146,N],[13,"S3tcDxt1NoAlpha","","",146,N],[13,"S3tcDxt1Alpha","","",146,N],[13,"S3tcDxt3Alpha","","",146,N],[13,"S3tcDxt5Alpha","","",146,N],[4,"SrgbFormat","","List of uncompressed pixel formats that contain…",N,N],[13,"U8U8U8","","",147,N],[13,"U8U8U8U8","","",147,N],[4,"Dimensions","","Type of a texture.",N,N],[13,"Texture1d","","",148,N],[12,"width","glium::texture::Dimensions","",148,N],[13,"Texture1dArray","glium::texture","",148,N],[12,"width","glium::texture::Dimensions","",148,N],[12,"array_size","","",148,N],[13,"Texture2d","glium::texture","",148,N],[12,"width","glium::texture::Dimensions","",148,N],[12,"height","","",148,N],[13,"Texture2dArray","glium::texture","",148,N],[12,"width","glium::texture::Dimensions","",148,N],[12,"height","","",148,N],[12,"array_size","","",148,N],[13,"Texture2dMultisample","glium::texture","",148,N],[12,"width","glium::texture::Dimensions","",148,N],[12,"height","","",148,N],[12,"samples","","",148,N],[13,"Texture2dMultisampleArray","glium::texture","",148,N],[12,"width","glium::texture::Dimensions","",148,N],[12,"height","","",148,N],[12,"array_size","","",148,N],[12,"samples","","",148,N],[13,"Texture3d","glium::texture","",148,N],[12,"width","glium::texture::Dimensions","",148,N],[12,"height","","",148,N],[12,"depth","","",148,N],[13,"Cubemap","glium::texture","",148,N],[12,"dimension","glium::texture::Dimensions","",148,N],[13,"CubemapArray","glium::texture","",148,N],[12,"dimension","glium::texture::Dimensions","",148,N],[12,"array_size","","",148,N],[4,"InternalFormat","glium::texture","Internal format of a texture.",N,N],[13,"OneComponent","","The format has one component.",149,N],[12,"ty1","glium::texture::InternalFormat","Type of the first component of the format.",149,N],[12,"bits1","","Number of bits of the first component.",149,N],[13,"TwoComponents","glium::texture","The format has two components.",149,N],[12,"ty1","glium::texture::InternalFormat","Type of the first component of the format.",149,N],[12,"bits1","","Number of bits of the first component.",149,N],[12,"ty2","","Type of the second component.",149,N],[12,"bits2","","Number of bits of the second component.",149,N],[13,"ThreeComponents","glium::texture","The format has three components.",149,N],[12,"ty1","glium::texture::InternalFormat","Type of the first component of the format.",149,N],[12,"bits1","","Number of bits of the first component.",149,N],[12,"ty2","","Type of the second component.",149,N],[12,"bits2","","Number of bits of the second component.",149,N],[12,"ty3","","Type of the third component.",149,N],[12,"bits3","","Number of bits of the third component.",149,N],[13,"FourComponents","glium::texture","The format has four components.",149,N],[12,"ty1","glium::texture::InternalFormat","Type of the first component of the format.",149,N],[12,"bits1","","Number of bits of the first component.",149,N],[12,"ty2","","Type of the second component.",149,N],[12,"bits2","","Number of bits of the second component.",149,N],[12,"ty3","","Type of the third component.",149,N],[12,"bits3","","Number of bits of the third component.",149,N],[12,"ty4","","Type of the fourth component.",149,N],[12,"bits4","","Number of bits of the fourth component.",149,N],[4,"InternalFormatType","glium::texture","Format of a component of an internal format.",N,N],[13,"SignedNormalized","","Floating point texture with signed components.",150,N],[13,"UnsignedNormalized","","Floating point texture with unsigned components.",150,N],[13,"Float","","Floating point texture with floats.",150,N],[13,"Int","","Integral texture.",150,N],[13,"UnsignedInt","","Unsigned texture.",150,N],[4,"GetFormatError","","Error that can happen when retrieving the internal format…",N,N],[13,"NotSupported","","The backend doesn't support retrieving the internal format.",151,N],[4,"CubeLayer","","Represents a layer of a cubemap.",N,N],[13,"PositiveX","","",152,N],[13,"NegativeX","","",152,N],[13,"PositiveY","","",152,N],[13,"NegativeY","","",152,N],[13,"PositiveZ","","",152,N],[13,"NegativeZ","","",152,N],[4,"TextureKind","","Represents a kind of texture.",N,N],[13,"Float","","",153,N],[13,"Integral","","",153,N],[13,"Unsigned","","",153,N],[13,"Depth","","",153,N],[13,"Stencil","","",153,N],[13,"DepthStencil","","",153,N],[4,"MipmapsOption","","Describes what to do about mipmaps during texture creation.",N,N],[13,"NoMipmap","","No mipmap will be allocated or generated.",154,N],[13,"EmptyMipmaps","","Allocates space for all the possible amount of mipmaps…",154,N],[13,"EmptyMipmapsMax","","Allocates space for the specified amount of mipmaps…",154,N],[13,"AutoGeneratedMipmaps","","Allocates and generates mipmaps for all the possible…",154,N],[13,"AutoGeneratedMipmapsMax","","Allocates and generates mipmaps for the specified amount…",154,N],[4,"CompressedMipmapsOption","","Describes what to do about mipmaps during compressed…",N,N],[13,"NoMipmap","","No mipmaps will be allocated or generated.",155,N],[13,"EmptyMipmaps","","Allocates space for all the possible amount of mipmaps…",155,N],[13,"EmptyMipmapsMax","","Allocates space for the specified amount of mipmaps…",155,N],[4,"TextureCreationError","","Error that can happen when creating a texture.",N,N],[13,"FormatNotSupported","","The requested format is not supported by the backend.",156,N],[13,"DimensionsNotSupported","","The requested texture dimensions are not supported.",156,N],[13,"TypeNotSupported","","The texture format is not supported by the backend.",156,N],[5,"is_texture_1d_supported","","Returns true is one-dimensional textures are supported.",N,[[["c"]],["bool"]]],[5,"is_texture_2d_supported","","Returns true is two-dimensional textures are supported.",N,[[["c"]],["bool"]]],[5,"is_texture_3d_supported","","Returns true is three-dimensional textures are supported.",N,[[["c"]],["bool"]]],[5,"is_texture_1d_array_supported","","Returns true is one-dimensional texture arrays are…",N,[[["c"]],["bool"]]],[5,"is_texture_2d_array_supported","","Returns true is two-dimensional texture arrays are…",N,[[["c"]],["bool"]]],[5,"is_texture_2d_multisample_supported","","Returns true is two-dimensional multisample textures are…",N,[[["c"]],["bool"]]],[5,"is_texture_2d_multisample_array_supported","","Returns true is two-dimensional multisample texture arrays…",N,[[["c"]],["bool"]]],[5,"is_cubemaps_supported","","Returns true is cubemaps are supported.",N,[[["c"]],["bool"]]],[5,"is_cubemap_arrays_supported","","Returns true is cubemap arrays are supported.",N,[[["c"]],["bool"]]],[0,"bindless","","Without bindless textures, using a texture in a shader…",N,N],[3,"ResidentTexture","glium::texture::bindless","A texture that is resident in video memory. This allows…",N,N],[3,"TextureHandle","","Represents a handle to a texture. Contains a raw pointer…",N,N],[3,"BindlessTexturesNotSupportedError","","Bindless textures are not supported.",N,N],[11,"new","","Takes ownership of the given texture and makes it resident.",157,[[["textureany"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"into_inner","","Unwraps the texture and restores it.",157,[[["self"]],["textureany"]]],[11,"new","","Builds a new handle.",158,[[["residenttexture"],["samplerbehavior"]],["texturehandle"]]],[11,"set","","Sets the value to the given texture.",158,[[["self"],["residenttexture"],["samplerbehavior"]]]],[0,"buffer_texture","glium::texture","A `BufferTexture` is a special kind of one-dimensional…",N,N],[3,"BufferTexture","glium::texture::buffer_texture","A one-dimensional texture that gets its data from a buffer.",N,N],[3,"BufferTextureRef","","Holds a reference to a `BufferTexture`.",N,N],[4,"TextureCreationError","","Error that can happen while building the texture part of a…",N,N],[13,"NotSupported","","Buffer textures are not supported at all.",159,N],[13,"FormatNotSupported","","The requested format is not supported in combination with…",159,N],[13,"TooLarge","","The size of the buffer that you are trying to bind exceeds…",159,N],[4,"CreationError","","Error that can happen while building a buffer texture.",N,N],[13,"BufferCreationError","","Failed to create the buffer.",160,N],[13,"TextureCreationError","","Failed to create the texture.",160,N],[4,"BufferTextureType","","Type of a buffer texture.",N,N],[13,"Float","","The texture will behave as if it contained floating-point…",161,N],[13,"Integral","","The texture will behave as if it contained signed integral…",161,N],[13,"Unsigned","","The texture will behave as if it contained unsigned…",161,N],[4,"TextureBufferContentType","","Note that some three-component types are missing. This is…",N,N],[13,"U8","","",162,N],[13,"I8","","",162,N],[13,"U16","","",162,N],[13,"I16","","",162,N],[13,"U32","","",162,N],[13,"I32","","",162,N],[13,"U8U8","","",162,N],[13,"I8I8","","",162,N],[13,"U16U16","","",162,N],[13,"I16I16","","",162,N],[13,"U32U32","","",162,N],[13,"I32I32","","",162,N],[13,"U32U32U32","","",162,N],[13,"I32I32I32","","",162,N],[13,"U8U8U8U8","","",162,N],[13,"I8I8I8I8","","",162,N],[13,"U16U16U16U16","","",162,N],[13,"I16I16I16I16","","",162,N],[13,"U32U32U32U32","","",162,N],[13,"I32I32I32I32","","",162,N],[13,"F16","","",162,N],[13,"F32","","",162,N],[13,"F16F16","","",162,N],[13,"F32F32","","",162,N],[13,"F32F32F32","","",162,N],[13,"F16F16F16F16","","",162,N],[13,"F32F32F32F32","","",162,N],[8,"TextureBufferContent","","Trait for data types that can be interpreted by a buffer…",N,N],[10,"get_type","","Returns the enumeration corresponding to elements of this…",163,[[],["texturebuffercontenttype"]]],[11,"new","","Builds a new texture buffer from data.",164,N],[11,"dynamic","","Builds a new texture buffer from data.",164,N],[11,"persistent","","Builds a new texture buffer from data.",164,N],[11,"immutable","","Builds a new texture buffer from data.",164,N],[11,"empty","","Builds a new empty buffer buffer.",164,[[["f"],["usize"],["buffertexturetype"]],["result",["buffertexture","creationerror"]]]],[11,"empty_dynamic","","Builds a new empty buffer buffer.",164,[[["f"],["usize"],["buffertexturetype"]],["result",["buffertexture","creationerror"]]]],[11,"empty_persistent","","Builds a new empty buffer buffer.",164,[[["f"],["usize"],["buffertexturetype"]],["result",["buffertexture","creationerror"]]]],[11,"empty_immutable","","Builds a new empty buffer buffer.",164,[[["f"],["usize"],["buffertexturetype"]],["result",["buffertexture","creationerror"]]]],[11,"from_buffer","","Builds a new buffer texture by taking ownership of a buffer.",164,[[["f"],["buffer"],["buffertexturetype"]],["result",["buffertexture"]]]],[11,"as_buffer_texture_ref","","Builds a `BufferTextureRef`.",164,[[["self"]],["buffertextureref"]]],[11,"get_texture_type","","Return the type of the texture.",165,[[["self"]],["buffertexturetype"]]],[0,"pixel_buffer","glium::texture","Pixel buffers are buffers that contain two-dimensional…",N,N],[3,"PixelBuffer","glium::texture::pixel_buffer","Buffer that stores the content of a texture.",N,N],[11,"new_empty","","Builds a new buffer with an uninitialized content.",166,[[["f"],["usize"]],["pixelbuffer"]]],[11,"read_as_texture_2d","","Reads the content of the pixel buffer.",166,[[["self"]],["result",["readerror"]]]],[11,"get_width","glium::texture","Returns the width of the texture.",167,[[["self"]],["u32"]]],[11,"get_height","","Returns the height of the texture.",167,[[["self"]],["option",["u32"]]]],[11,"get_depth","","Returns the depth of the texture.",167,[[["self"]],["option",["u32"]]]],[11,"kind","","Returns the kind of texture.",167,[[["self"]],["texturekind"]]],[11,"dimensions","","Returns the dimensions of the texture.",167,[[["self"]],["dimensions"]]],[11,"get_array_size","","Returns the array size of the texture.",167,[[["self"]],["option",["u32"]]]],[11,"get_samples","","Returns the number of samples of the texture if it is a…",167,[[["self"]],["option",["u32"]]]],[11,"first_layer","","Returns a structure that represents the first layer of the…",167,[[["self"]],["textureanylayer"]]],[11,"layer","","Returns a structure that represents a specific layer of…",167,[[["self"],["u32"]],["option",["textureanylayer"]]]],[11,"get_texture_type","","Returns the type of the texture (1D, 2D, 3D, etc.).",167,[[["self"]],["dimensions"]]],[11,"get_internal_format","","Determines the internal format of this texture.",167,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"get_depth_stencil_bits","","Determines the number of depth and stencil bits in the…",167,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",167,[[["self"]],["u32"]]],[11,"main_level","","Returns a structure that represents the main mipmap level…",167,[[["self"]],["textureanymipmap"]]],[11,"mipmap","","Returns a structure that represents a specific mipmap of…",167,[[["self"],["u32"]],["option",["textureanymipmap"]]]],[11,"generate_mipmaps","","Binds this texture and generates mipmaps.",167,[[["self"]]]],[11,"get_texture","","Returns the texture.",168,[[["self"]],["textureany"]]],[11,"get_samples","","Returns the number of samples of the texture.",168,[[["self"]],["option",["u32"]]]],[11,"get_layer","","Returns the layer of the texture.",168,[[["self"]],["u32"]]],[11,"main_level","","Returns a structure that represents the main mipmap level…",168,[[["self"]],["textureanylayermipmap"]]],[11,"mipmap","","Returns a structure that represents a specific mipmap of…",168,[[["self"],["u32"]],["option",["textureanylayermipmap"]]]],[11,"get_width","","Returns the width of the mipmap.",169,[[["self"]],["u32"]]],[11,"get_height","","Returns the height of the mipmap.",169,[[["self"]],["option",["u32"]]]],[11,"get_depth","","Returns the depth of the mipmap.",169,[[["self"]],["option",["u32"]]]],[11,"get_samples","","Returns the number of samples of the texture.",169,[[["self"]],["option",["u32"]]]],[11,"get_texture","","Returns the texture.",169,[[["self"]],["textureany"]]],[11,"get_level","","Returns the level of the texture.",169,[[["self"]],["u32"]]],[11,"first_layer","","Returns a structure that represents the first layer of…",169,[[["self"]],["textureanylayermipmap"]]],[11,"layer","","Returns a structure that represents a specific layer of…",169,[[["self"],["u32"]],["option",["textureanylayermipmap"]]]],[11,"get_array_size","","Returns the array size of the texture.",169,[[["self"]],["option",["u32"]]]],[11,"raw_upload_from_pixel_buffer","","Uploads data to the texture from a buffer.",169,[[["self"],["bufferslice"],["range",["u32"]],["range",["u32"]],["range",["u32"]]]]],[11,"raw_upload_from_pixel_buffer_inverted","","Uploads data to the texture from a buffer. The R, G and B…",169,[[["self"],["bufferslice"],["range",["u32"]],["range",["u32"]],["range",["u32"]]]]],[11,"get_texture","","Returns the texture.",170,[[["self"]],["textureany"]]],[11,"get_level","","Returns the level of the texture.",170,[[["self"]],["u32"]]],[11,"get_layer","","Returns the layer of the texture.",170,[[["self"]],["u32"]]],[11,"get_width","","Returns the width of this texture slice.",170,[[["self"]],["u32"]]],[11,"get_height","","Returns the height of this texture slice.",170,[[["self"]],["option",["u32"]]]],[11,"get_samples","","Returns the number of samples of the texture.",170,[[["self"]],["option",["u32"]]]],[11,"into_image","","Turns this into an image.",170,[[["self"],["option",["cubelayer"]]],["option",["textureanyimage"]]]],[11,"get_texture","","Returns the texture.",171,[[["self"]],["textureany"]]],[11,"get_level","","Returns the level of the texture.",171,[[["self"]],["u32"]]],[11,"get_layer","","Returns the layer of the texture.",171,[[["self"]],["u32"]]],[11,"get_cubemap_layer","","Returns the cubemap layer of this image, or `None` if the…",171,[[["self"]],["option",["cubelayer"]]]],[11,"get_width","","Returns the width of this texture slice.",171,[[["self"]],["u32"]]],[11,"get_height","","Returns the height of this texture slice.",171,[[["self"]],["option",["u32"]]]],[11,"get_samples","","Returns the number of samples of the texture.",171,[[["self"]],["option",["u32"]]]],[11,"raw_read","","Reads the content of the image.",171,[[["self"],["rect"]],["t"]]],[11,"raw_read_to_pixel_buffer","","Reads the content of the image to a pixel buffer.",171,[[["self"],["rect"],["pixelbuffer"]]]],[11,"raw_clear_buffer","","Clears the content of the texture to a specific value.",171,[[["self"],["d"]]]],[11,"get_total_bits","","Returns the total number of bits of this format.",149,[[["self"]],["usize"]]],[0,"texture1d","","Contains the implementation of `Texture1d`.",N,N],[3,"Texture1d","glium::texture::texture1d","A one-dimensional texture  containing floating-point data.",N,N],[3,"Texture1dMipmap","","Represents a single mipmap level of a `Texture1d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",172,[[["self"]],["sampler",["texture1d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",172,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",172,[[["f"],["t"]],["result",["texture1d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",172,[[["f"],["t"],["mipmapsoption"]],["result",["texture1d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",172,[[["f"],["t"],["uncompressedfloatformat"],["mipmapsoption"]],["result",["texture1d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",172,[[["f"],["u32"]],["result",["texture1d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",172,[[["f"],["uncompressedfloatformat"],["mipmapsoption"],["u32"]],["result",["texture1d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",172,[[["f"],["mipmapsoption"],["u32"]],["result",["texture1d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",172,[[["f"],["uncompressedfloatformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["texture1d"]]],[11,"width","","Returns the width of that image.",172,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",172,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",172,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",172,[[["self"],["u32"]],["option",["texture1dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",172,[[["self"]],["texture1dmipmap"]]],[11,"width","","Returns the width of that image.",173,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",173,[[["self"]],["texture1d"]]],[11,"get_level","","Returns the texture level.",173,[[["self"]],["u32"]]],[0,"compressed_texture1d","glium::texture","Contains the implementation of `CompressedTexture1d`.",N,N],[3,"CompressedTexture1d","glium::texture::compressed_texture1d","A compressed one-dimensional texture containing…",N,N],[3,"CompressedTexture1dMipmap","","Represents a single mipmap level of a `CompressedTexture1d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",174,[[["self"]],["sampler",["compressedtexture1d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",174,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",174,[[["f"],["t"]],["result",["compressedtexture1d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",174,[[["f"],["t"],["compressedmipmapsoption"]],["result",["compressedtexture1d","texturecreationerror"]]]],[11,"with_compressed_data","","Builds a new texture with a specific format. The input…",174,N],[11,"with_format","","Builds a new texture with a specific format.",174,[[["f"],["t"],["compressedformat"],["compressedmipmapsoption"]],["result",["compressedtexture1d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",174,[[["f"],["compressedformat"],["compressedmipmapsoption"],["u32"]],["result",["compressedtexture1d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",174,[[["f"],["compressedformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedtexture1d"]]],[11,"width","","Returns the width of that image.",174,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",174,[[["self"]],["u32"]]],[11,"read_compressed_data","","Reads the content of the texture to RAM without…",174,[[["self"]],["option"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",174,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",174,[[["self"],["u32"]],["option",["compressedtexture1dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",174,[[["self"]],["compressedtexture1dmipmap"]]],[11,"width","","Returns the width of that image.",175,[[["self"]],["u32"]]],[11,"read_compressed_data","","Reads the content of the texture level to RAM without…",175,[[["self"]],["option"]]],[11,"get_texture","","Returns the corresponding texture.",175,[[["self"]],["compressedtexture1d"]]],[11,"get_level","","Returns the texture level.",175,[[["self"]],["u32"]]],[0,"srgb_texture1d","glium::texture","Contains the implementation of `SrgbTexture1d`.",N,N],[3,"SrgbTexture1d","glium::texture::srgb_texture1d","A one-dimensional texture containing sRGB floating-point…",N,N],[3,"SrgbTexture1dMipmap","","Represents a single mipmap level of a `SrgbTexture1d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",176,[[["self"]],["sampler",["srgbtexture1d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",176,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",176,[[["f"],["t"]],["result",["srgbtexture1d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",176,[[["f"],["t"],["mipmapsoption"]],["result",["srgbtexture1d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",176,[[["f"],["t"],["srgbformat"],["mipmapsoption"]],["result",["srgbtexture1d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",176,[[["f"],["u32"]],["result",["srgbtexture1d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",176,[[["f"],["srgbformat"],["mipmapsoption"],["u32"]],["result",["srgbtexture1d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",176,[[["f"],["mipmapsoption"],["u32"]],["result",["srgbtexture1d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",176,[[["f"],["srgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["srgbtexture1d"]]],[11,"width","","Returns the width of that image.",176,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",176,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",176,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",176,[[["self"],["u32"]],["option",["srgbtexture1dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",176,[[["self"]],["srgbtexture1dmipmap"]]],[11,"width","","Returns the width of that image.",177,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",177,[[["self"]],["srgbtexture1d"]]],[11,"get_level","","Returns the texture level.",177,[[["self"]],["u32"]]],[0,"compressed_srgb_texture1d","glium::texture","Contains the implementation of `CompressedSrgbTexture1d`.",N,N],[3,"CompressedSrgbTexture1d","glium::texture::compressed_srgb_texture1d","A compressed one-dimensional texture containing sRGB…",N,N],[3,"CompressedSrgbTexture1dMipmap","","Represents a single mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",178,[[["self"]],["sampler",["compressedsrgbtexture1d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",178,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",178,[[["f"],["t"]],["result",["compressedsrgbtexture1d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",178,[[["f"],["t"],["compressedmipmapsoption"]],["result",["compressedsrgbtexture1d","texturecreationerror"]]]],[11,"with_compressed_data","","Builds a new texture with a specific format. The input…",178,N],[11,"with_format","","Builds a new texture with a specific format.",178,[[["f"],["t"],["compressedsrgbformat"],["compressedmipmapsoption"]],["result",["compressedsrgbtexture1d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",178,[[["f"],["compressedsrgbformat"],["compressedmipmapsoption"],["u32"]],["result",["compressedsrgbtexture1d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",178,[[["f"],["compressedsrgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedsrgbtexture1d"]]],[11,"width","","Returns the width of that image.",178,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",178,[[["self"]],["u32"]]],[11,"read_compressed_data","","Reads the content of the texture to RAM without…",178,[[["self"]],["option"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",178,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",178,[[["self"],["u32"]],["option",["compressedsrgbtexture1dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",178,[[["self"]],["compressedsrgbtexture1dmipmap"]]],[11,"width","","Returns the width of that image.",179,[[["self"]],["u32"]]],[11,"read_compressed_data","","Reads the content of the texture level to RAM without…",179,[[["self"]],["option"]]],[11,"get_texture","","Returns the corresponding texture.",179,[[["self"]],["compressedsrgbtexture1d"]]],[11,"get_level","","Returns the texture level.",179,[[["self"]],["u32"]]],[0,"integral_texture1d","glium::texture","Contains the implementation of `IntegralTexture1d`.",N,N],[3,"IntegralTexture1d","glium::texture::integral_texture1d","A one-dimensional texture  containing signed integral data.",N,N],[3,"IntegralTexture1dMipmap","","Represents a single mipmap level of a `IntegralTexture1d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",180,[[["self"]],["sampler",["integraltexture1d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",180,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",180,[[["f"],["t"]],["result",["integraltexture1d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",180,[[["f"],["t"],["mipmapsoption"]],["result",["integraltexture1d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",180,[[["f"],["t"],["uncompressedintformat"],["mipmapsoption"]],["result",["integraltexture1d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",180,[[["f"],["u32"]],["result",["integraltexture1d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",180,[[["f"],["uncompressedintformat"],["mipmapsoption"],["u32"]],["result",["integraltexture1d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",180,[[["f"],["mipmapsoption"],["u32"]],["result",["integraltexture1d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",180,[[["f"],["uncompressedintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["integraltexture1d"]]],[11,"width","","Returns the width of that image.",180,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",180,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",180,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",180,[[["self"],["u32"]],["option",["integraltexture1dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",180,[[["self"]],["integraltexture1dmipmap"]]],[11,"width","","Returns the width of that image.",181,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",181,[[["self"]],["integraltexture1d"]]],[11,"get_level","","Returns the texture level.",181,[[["self"]],["u32"]]],[0,"unsigned_texture1d","glium::texture","Contains the implementation of `UnsignedTexture1d`.",N,N],[3,"UnsignedTexture1d","glium::texture::unsigned_texture1d","A one-dimensional texture containing unsigned integral…",N,N],[3,"UnsignedTexture1dMipmap","","Represents a single mipmap level of a `UnsignedTexture1d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",182,[[["self"]],["sampler",["unsignedtexture1d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",182,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",182,[[["f"],["t"]],["result",["unsignedtexture1d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",182,[[["f"],["t"],["mipmapsoption"]],["result",["unsignedtexture1d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",182,[[["f"],["t"],["uncompresseduintformat"],["mipmapsoption"]],["result",["unsignedtexture1d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",182,[[["f"],["u32"]],["result",["unsignedtexture1d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",182,[[["f"],["uncompresseduintformat"],["mipmapsoption"],["u32"]],["result",["unsignedtexture1d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",182,[[["f"],["mipmapsoption"],["u32"]],["result",["unsignedtexture1d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",182,[[["f"],["uncompresseduintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["unsignedtexture1d"]]],[11,"width","","Returns the width of that image.",182,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",182,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",182,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",182,[[["self"],["u32"]],["option",["unsignedtexture1dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",182,[[["self"]],["unsignedtexture1dmipmap"]]],[11,"width","","Returns the width of that image.",183,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",183,[[["self"]],["unsignedtexture1d"]]],[11,"get_level","","Returns the texture level.",183,[[["self"]],["u32"]]],[0,"depth_texture1d","glium::texture","Contains the implementation of `DepthTexture1d`.",N,N],[3,"DepthTexture1d","glium::texture::depth_texture1d","A one-dimensional texture  containing depth data.",N,N],[3,"DepthTexture1dMipmap","","Represents a single mipmap level of a `DepthTexture1d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",184,[[["self"]],["sampler",["depthtexture1d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",184,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",184,[[["f"],["t"]],["result",["depthtexture1d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",184,[[["f"],["t"],["mipmapsoption"]],["result",["depthtexture1d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",184,[[["f"],["t"],["depthformat"],["mipmapsoption"]],["result",["depthtexture1d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",184,[[["f"],["u32"]],["result",["depthtexture1d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",184,[[["f"],["depthformat"],["mipmapsoption"],["u32"]],["result",["depthtexture1d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",184,[[["f"],["mipmapsoption"],["u32"]],["result",["depthtexture1d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",184,[[["f"],["depthformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthtexture1d"]]],[11,"width","","Returns the width of that image.",184,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",184,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",184,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",184,[[["self"],["u32"]],["option",["depthtexture1dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",184,[[["self"]],["depthtexture1dmipmap"]]],[11,"width","","Returns the width of that image.",185,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",185,[[["self"]],["depthtexture1d"]]],[11,"get_level","","Returns the texture level.",185,[[["self"]],["u32"]]],[0,"stencil_texture1d","glium::texture","Contains the implementation of `StencilTexture1d`.",N,N],[3,"StencilTexture1d","glium::texture::stencil_texture1d","A one-dimensional texture  containing stencil data.",N,N],[3,"StencilTexture1dMipmap","","Represents a single mipmap level of a `StencilTexture1d`.",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",186,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",186,[[["f"],["t"]],["result",["stenciltexture1d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",186,[[["f"],["t"],["mipmapsoption"]],["result",["stenciltexture1d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",186,[[["f"],["t"],["stencilformat"],["mipmapsoption"]],["result",["stenciltexture1d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",186,[[["f"],["u32"]],["result",["stenciltexture1d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",186,[[["f"],["stencilformat"],["mipmapsoption"],["u32"]],["result",["stenciltexture1d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",186,[[["f"],["mipmapsoption"],["u32"]],["result",["stenciltexture1d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",186,[[["f"],["stencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["stenciltexture1d"]]],[11,"width","","Returns the width of that image.",186,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",186,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",186,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",186,[[["self"],["u32"]],["option",["stenciltexture1dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",186,[[["self"]],["stenciltexture1dmipmap"]]],[11,"width","","Returns the width of that image.",187,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",187,[[["self"]],["stenciltexture1d"]]],[11,"get_level","","Returns the texture level.",187,[[["self"]],["u32"]]],[0,"depth_stencil_texture1d","glium::texture","Contains the implementation of `DepthStencilTexture1d`.",N,N],[3,"DepthStencilTexture1d","glium::texture::depth_stencil_texture1d","A one-dimensional texture containing both depth and…",N,N],[3,"DepthStencilTexture1dMipmap","","Represents a single mipmap level of a…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",188,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",188,[[["f"],["t"]],["result",["depthstenciltexture1d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",188,[[["f"],["t"],["mipmapsoption"]],["result",["depthstenciltexture1d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",188,[[["f"],["t"],["depthstencilformat"],["mipmapsoption"]],["result",["depthstenciltexture1d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",188,[[["f"],["u32"]],["result",["depthstenciltexture1d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",188,[[["f"],["depthstencilformat"],["mipmapsoption"],["u32"]],["result",["depthstenciltexture1d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",188,[[["f"],["mipmapsoption"],["u32"]],["result",["depthstenciltexture1d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",188,[[["f"],["depthstencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthstenciltexture1d"]]],[11,"width","","Returns the width of that image.",188,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",188,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",188,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",188,[[["self"],["u32"]],["option",["depthstenciltexture1dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",188,[[["self"]],["depthstenciltexture1dmipmap"]]],[11,"width","","Returns the width of that image.",189,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",189,[[["self"]],["depthstenciltexture1d"]]],[11,"get_level","","Returns the texture level.",189,[[["self"]],["u32"]]],[0,"texture2d","glium::texture","Contains the implementation of `Texture2d`.",N,N],[3,"Texture2d","glium::texture::texture2d","A two-dimensional texture  containing floating-point data.",N,N],[3,"Texture2dMipmap","","Represents a single mipmap level of a `Texture2d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",190,[[["self"]],["sampler",["texture2d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",190,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",190,[[["f"],["t"]],["result",["texture2d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",190,[[["f"],["t"],["mipmapsoption"]],["result",["texture2d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",190,[[["f"],["t"],["uncompressedfloatformat"],["mipmapsoption"]],["result",["texture2d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",190,[[["f"],["u32"],["u32"]],["result",["texture2d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",190,[[["f"],["uncompressedfloatformat"],["mipmapsoption"],["u32"],["u32"]],["result",["texture2d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",190,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["texture2d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",190,[[["f"],["uncompressedfloatformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["texture2d"]]],[11,"width","","Returns the width of that image.",190,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",190,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",190,N],[11,"as_surface","","Starts drawing on the texture.",190,[[["self"]],["simpleframebuffer"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",190,[[["self"]],["u32"]]],[11,"read","","Reads the content of the texture to RAM. This method may…",190,[[["self"]],["t"]]],[11,"read_to_pixel_buffer","","Reads the content of the texture into a buffer in video…",190,[[["self"]],["pixelbuffer"]]],[11,"unchecked_read","","Unsafely reads the content of the texture to RAM in the…",190,[[["self"]],["t"]]],[11,"unchecked_read_to_pixel_buffer","","Unsafely reads the content of the texture into a buffer in…",190,[[["self"]],["pixelbuffer"]]],[11,"write","","Uploads some data in the texture.",190,[[["self"],["rect"],["t"]]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",190,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",190,[[["self"],["u32"]],["option",["texture2dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",190,[[["self"]],["texture2dmipmap"]]],[11,"width","","Returns the width of that image.",191,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",191,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",191,N],[11,"write","","Uploads some data in the texture level.",191,[[["self"],["rect"],["t"]]]],[11,"get_texture","","Returns the corresponding texture.",191,[[["self"]],["texture2d"]]],[11,"get_level","","Returns the texture level.",191,[[["self"]],["u32"]]],[0,"compressed_texture2d","glium::texture","Contains the implementation of `CompressedTexture2d`.",N,N],[3,"CompressedTexture2d","glium::texture::compressed_texture2d","A compressed two-dimensional texture containing…",N,N],[3,"CompressedTexture2dMipmap","","Represents a single mipmap level of a `CompressedTexture2d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",192,[[["self"]],["sampler",["compressedtexture2d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",192,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",192,[[["f"],["t"]],["result",["compressedtexture2d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",192,[[["f"],["t"],["compressedmipmapsoption"]],["result",["compressedtexture2d","texturecreationerror"]]]],[11,"with_compressed_data","","Builds a new texture with a specific format. The input…",192,N],[11,"with_format","","Builds a new texture with a specific format.",192,[[["f"],["t"],["compressedformat"],["compressedmipmapsoption"]],["result",["compressedtexture2d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",192,[[["f"],["compressedformat"],["compressedmipmapsoption"],["u32"],["u32"]],["result",["compressedtexture2d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",192,[[["f"],["compressedformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedtexture2d"]]],[11,"width","","Returns the width of that image.",192,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",192,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",192,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",192,[[["self"]],["u32"]]],[11,"read","","Reads the content of the texture to RAM. This method may…",192,[[["self"]],["t"]]],[11,"read_to_pixel_buffer","","Reads the content of the texture into a buffer in video…",192,[[["self"]],["pixelbuffer"]]],[11,"unchecked_read","","Unsafely reads the content of the texture to RAM in the…",192,[[["self"]],["t"]]],[11,"unchecked_read_to_pixel_buffer","","Unsafely reads the content of the texture into a buffer in…",192,[[["self"]],["pixelbuffer"]]],[11,"read_compressed_data","","Reads the content of the texture to RAM without…",192,[[["self"]],["option"]]],[11,"write","","Uploads some data in the texture.",192,[[["self"],["rect"],["t"]]]],[11,"write_compressed_data","","Uploads some data in the texture by using a compressed…",192,N],[11,"resident","","Turns the texture into a `ResidentTexture`.",192,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",192,[[["self"],["u32"]],["option",["compressedtexture2dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",192,[[["self"]],["compressedtexture2dmipmap"]]],[11,"width","","Returns the width of that image.",193,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",193,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",193,N],[11,"write","","Uploads some data in the texture level.",193,[[["self"],["rect"],["t"]]]],[11,"write_compressed_data","","Uploads some data in the texture level by using a…",193,N],[11,"read_compressed_data","","Reads the content of the texture level to RAM without…",193,[[["self"]],["option"]]],[11,"get_texture","","Returns the corresponding texture.",193,[[["self"]],["compressedtexture2d"]]],[11,"get_level","","Returns the texture level.",193,[[["self"]],["u32"]]],[0,"srgb_texture2d","glium::texture","Contains the implementation of `SrgbTexture2d`.",N,N],[3,"SrgbTexture2d","glium::texture::srgb_texture2d","A two-dimensional texture containing sRGB floating-point…",N,N],[3,"SrgbTexture2dMipmap","","Represents a single mipmap level of a `SrgbTexture2d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",194,[[["self"]],["sampler",["srgbtexture2d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",194,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",194,[[["f"],["t"]],["result",["srgbtexture2d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",194,[[["f"],["t"],["mipmapsoption"]],["result",["srgbtexture2d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",194,[[["f"],["t"],["srgbformat"],["mipmapsoption"]],["result",["srgbtexture2d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",194,[[["f"],["u32"],["u32"]],["result",["srgbtexture2d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",194,[[["f"],["srgbformat"],["mipmapsoption"],["u32"],["u32"]],["result",["srgbtexture2d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",194,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["srgbtexture2d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",194,[[["f"],["srgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["srgbtexture2d"]]],[11,"width","","Returns the width of that image.",194,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",194,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",194,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",194,[[["self"]],["u32"]]],[11,"read","","Reads the content of the texture to RAM. This method may…",194,[[["self"]],["t"]]],[11,"read_to_pixel_buffer","","Reads the content of the texture into a buffer in video…",194,[[["self"]],["pixelbuffer"]]],[11,"unchecked_read","","Unsafely reads the content of the texture to RAM in the…",194,[[["self"]],["t"]]],[11,"unchecked_read_to_pixel_buffer","","Unsafely reads the content of the texture into a buffer in…",194,[[["self"]],["pixelbuffer"]]],[11,"write","","Uploads some data in the texture.",194,[[["self"],["rect"],["t"]]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",194,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",194,[[["self"],["u32"]],["option",["srgbtexture2dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",194,[[["self"]],["srgbtexture2dmipmap"]]],[11,"width","","Returns the width of that image.",195,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",195,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",195,N],[11,"write","","Uploads some data in the texture level.",195,[[["self"],["rect"],["t"]]]],[11,"get_texture","","Returns the corresponding texture.",195,[[["self"]],["srgbtexture2d"]]],[11,"get_level","","Returns the texture level.",195,[[["self"]],["u32"]]],[0,"compressed_srgb_texture2d","glium::texture","Contains the implementation of `CompressedSrgbTexture2d`.",N,N],[3,"CompressedSrgbTexture2d","glium::texture::compressed_srgb_texture2d","A compressed two-dimensional texture containing sRGB…",N,N],[3,"CompressedSrgbTexture2dMipmap","","Represents a single mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",196,[[["self"]],["sampler",["compressedsrgbtexture2d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",196,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",196,[[["f"],["t"]],["result",["compressedsrgbtexture2d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",196,[[["f"],["t"],["compressedmipmapsoption"]],["result",["compressedsrgbtexture2d","texturecreationerror"]]]],[11,"with_compressed_data","","Builds a new texture with a specific format. The input…",196,N],[11,"with_format","","Builds a new texture with a specific format.",196,[[["f"],["t"],["compressedsrgbformat"],["compressedmipmapsoption"]],["result",["compressedsrgbtexture2d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",196,[[["f"],["compressedsrgbformat"],["compressedmipmapsoption"],["u32"],["u32"]],["result",["compressedsrgbtexture2d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",196,[[["f"],["compressedsrgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedsrgbtexture2d"]]],[11,"width","","Returns the width of that image.",196,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",196,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",196,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",196,[[["self"]],["u32"]]],[11,"read","","Reads the content of the texture to RAM. This method may…",196,[[["self"]],["t"]]],[11,"read_to_pixel_buffer","","Reads the content of the texture into a buffer in video…",196,[[["self"]],["pixelbuffer"]]],[11,"unchecked_read","","Unsafely reads the content of the texture to RAM in the…",196,[[["self"]],["t"]]],[11,"unchecked_read_to_pixel_buffer","","Unsafely reads the content of the texture into a buffer in…",196,[[["self"]],["pixelbuffer"]]],[11,"read_compressed_data","","Reads the content of the texture to RAM without…",196,[[["self"]],["option"]]],[11,"write","","Uploads some data in the texture.",196,[[["self"],["rect"],["t"]]]],[11,"write_compressed_data","","Uploads some data in the texture by using a compressed…",196,N],[11,"resident","","Turns the texture into a `ResidentTexture`.",196,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",196,[[["self"],["u32"]],["option",["compressedsrgbtexture2dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",196,[[["self"]],["compressedsrgbtexture2dmipmap"]]],[11,"width","","Returns the width of that image.",197,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",197,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",197,N],[11,"write","","Uploads some data in the texture level.",197,[[["self"],["rect"],["t"]]]],[11,"write_compressed_data","","Uploads some data in the texture level by using a…",197,N],[11,"read_compressed_data","","Reads the content of the texture level to RAM without…",197,[[["self"]],["option"]]],[11,"get_texture","","Returns the corresponding texture.",197,[[["self"]],["compressedsrgbtexture2d"]]],[11,"get_level","","Returns the texture level.",197,[[["self"]],["u32"]]],[0,"integral_texture2d","glium::texture","Contains the implementation of `IntegralTexture2d`.",N,N],[3,"IntegralTexture2d","glium::texture::integral_texture2d","A two-dimensional texture  containing signed integral data.",N,N],[3,"IntegralTexture2dMipmap","","Represents a single mipmap level of a `IntegralTexture2d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",198,[[["self"]],["sampler",["integraltexture2d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",198,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",198,[[["f"],["t"]],["result",["integraltexture2d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",198,[[["f"],["t"],["mipmapsoption"]],["result",["integraltexture2d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",198,[[["f"],["t"],["uncompressedintformat"],["mipmapsoption"]],["result",["integraltexture2d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",198,[[["f"],["u32"],["u32"]],["result",["integraltexture2d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",198,[[["f"],["uncompressedintformat"],["mipmapsoption"],["u32"],["u32"]],["result",["integraltexture2d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",198,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["integraltexture2d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",198,[[["f"],["uncompressedintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["integraltexture2d"]]],[11,"width","","Returns the width of that image.",198,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",198,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",198,N],[11,"as_surface","","Starts drawing on the texture.",198,[[["self"]],["simpleframebuffer"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",198,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",198,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",198,[[["self"],["u32"]],["option",["integraltexture2dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",198,[[["self"]],["integraltexture2dmipmap"]]],[11,"width","","Returns the width of that image.",199,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",199,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",199,N],[11,"get_texture","","Returns the corresponding texture.",199,[[["self"]],["integraltexture2d"]]],[11,"get_level","","Returns the texture level.",199,[[["self"]],["u32"]]],[0,"unsigned_texture2d","glium::texture","Contains the implementation of `UnsignedTexture2d`.",N,N],[3,"UnsignedTexture2d","glium::texture::unsigned_texture2d","A two-dimensional texture containing unsigned integral…",N,N],[3,"UnsignedTexture2dMipmap","","Represents a single mipmap level of a `UnsignedTexture2d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",200,[[["self"]],["sampler",["unsignedtexture2d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",200,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",200,[[["f"],["t"]],["result",["unsignedtexture2d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",200,[[["f"],["t"],["mipmapsoption"]],["result",["unsignedtexture2d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",200,[[["f"],["t"],["uncompresseduintformat"],["mipmapsoption"]],["result",["unsignedtexture2d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",200,[[["f"],["u32"],["u32"]],["result",["unsignedtexture2d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",200,[[["f"],["uncompresseduintformat"],["mipmapsoption"],["u32"],["u32"]],["result",["unsignedtexture2d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",200,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["unsignedtexture2d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",200,[[["f"],["uncompresseduintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["unsignedtexture2d"]]],[11,"width","","Returns the width of that image.",200,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",200,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",200,N],[11,"as_surface","","Starts drawing on the texture.",200,[[["self"]],["simpleframebuffer"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",200,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",200,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",200,[[["self"],["u32"]],["option",["unsignedtexture2dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",200,[[["self"]],["unsignedtexture2dmipmap"]]],[11,"width","","Returns the width of that image.",201,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",201,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",201,N],[11,"get_texture","","Returns the corresponding texture.",201,[[["self"]],["unsignedtexture2d"]]],[11,"get_level","","Returns the texture level.",201,[[["self"]],["u32"]]],[0,"depth_texture2d","glium::texture","Contains the implementation of `DepthTexture2d`.",N,N],[3,"DepthTexture2d","glium::texture::depth_texture2d","A two-dimensional texture  containing depth data.",N,N],[3,"DepthTexture2dMipmap","","Represents a single mipmap level of a `DepthTexture2d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",202,[[["self"]],["sampler",["depthtexture2d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",202,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",202,[[["f"],["t"]],["result",["depthtexture2d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",202,[[["f"],["t"],["mipmapsoption"]],["result",["depthtexture2d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",202,[[["f"],["t"],["depthformat"],["mipmapsoption"]],["result",["depthtexture2d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",202,[[["f"],["u32"],["u32"]],["result",["depthtexture2d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",202,[[["f"],["depthformat"],["mipmapsoption"],["u32"],["u32"]],["result",["depthtexture2d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",202,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["depthtexture2d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",202,[[["f"],["depthformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthtexture2d"]]],[11,"width","","Returns the width of that image.",202,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",202,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",202,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",202,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",202,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",202,[[["self"],["u32"]],["option",["depthtexture2dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",202,[[["self"]],["depthtexture2dmipmap"]]],[11,"width","","Returns the width of that image.",203,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",203,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",203,N],[11,"get_texture","","Returns the corresponding texture.",203,[[["self"]],["depthtexture2d"]]],[11,"get_level","","Returns the texture level.",203,[[["self"]],["u32"]]],[0,"stencil_texture2d","glium::texture","Contains the implementation of `StencilTexture2d`.",N,N],[3,"StencilTexture2d","glium::texture::stencil_texture2d","A two-dimensional texture  containing stencil data.",N,N],[3,"StencilTexture2dMipmap","","Represents a single mipmap level of a `StencilTexture2d`.",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",204,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",204,[[["f"],["t"]],["result",["stenciltexture2d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",204,[[["f"],["t"],["mipmapsoption"]],["result",["stenciltexture2d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",204,[[["f"],["t"],["stencilformat"],["mipmapsoption"]],["result",["stenciltexture2d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",204,[[["f"],["u32"],["u32"]],["result",["stenciltexture2d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",204,[[["f"],["stencilformat"],["mipmapsoption"],["u32"],["u32"]],["result",["stenciltexture2d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",204,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["stenciltexture2d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",204,[[["f"],["stencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["stenciltexture2d"]]],[11,"width","","Returns the width of that image.",204,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",204,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",204,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",204,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",204,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",204,[[["self"],["u32"]],["option",["stenciltexture2dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",204,[[["self"]],["stenciltexture2dmipmap"]]],[11,"width","","Returns the width of that image.",205,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",205,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",205,N],[11,"get_texture","","Returns the corresponding texture.",205,[[["self"]],["stenciltexture2d"]]],[11,"get_level","","Returns the texture level.",205,[[["self"]],["u32"]]],[0,"depth_stencil_texture2d","glium::texture","Contains the implementation of `DepthStencilTexture2d`.",N,N],[3,"DepthStencilTexture2d","glium::texture::depth_stencil_texture2d","A two-dimensional texture containing both depth and…",N,N],[3,"DepthStencilTexture2dMipmap","","Represents a single mipmap level of a…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",206,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",206,[[["f"],["t"]],["result",["depthstenciltexture2d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",206,[[["f"],["t"],["mipmapsoption"]],["result",["depthstenciltexture2d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",206,[[["f"],["t"],["depthstencilformat"],["mipmapsoption"]],["result",["depthstenciltexture2d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",206,[[["f"],["u32"],["u32"]],["result",["depthstenciltexture2d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",206,[[["f"],["depthstencilformat"],["mipmapsoption"],["u32"],["u32"]],["result",["depthstenciltexture2d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",206,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["depthstenciltexture2d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",206,[[["f"],["depthstencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthstenciltexture2d"]]],[11,"width","","Returns the width of that image.",206,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",206,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",206,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",206,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",206,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",206,[[["self"],["u32"]],["option",["depthstenciltexture2dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",206,[[["self"]],["depthstenciltexture2dmipmap"]]],[11,"width","","Returns the width of that image.",207,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",207,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",207,N],[11,"get_texture","","Returns the corresponding texture.",207,[[["self"]],["depthstenciltexture2d"]]],[11,"get_level","","Returns the texture level.",207,[[["self"]],["u32"]]],[0,"texture2d_multisample","glium::texture","Contains the implementation of `Texture2dMultisample`.",N,N],[3,"Texture2dMultisample","glium::texture::texture2d_multisample","A two-dimensional texture  containing floating-point data.",N,N],[3,"Texture2dMultisampleMipmap","","Represents a single mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",208,[[["self"]],["sampler",["texture2dmultisample"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",208,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",208,[[["f"],["u32"],["u32"],["u32"]],["result",["texture2dmultisample","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",208,[[["f"],["uncompressedfloatformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["texture2dmultisample","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",208,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["texture2dmultisample","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",208,[[["f"],["uncompressedfloatformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["texture2dmultisample"]]],[11,"width","","Returns the width of that image.",208,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",208,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",208,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",208,N],[11,"as_surface","","Starts drawing on the texture.",208,[[["self"]],["simpleframebuffer"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",208,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",208,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",208,[[["self"],["u32"]],["option",["texture2dmultisamplemipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",208,[[["self"]],["texture2dmultisamplemipmap"]]],[11,"width","","Returns the width of that image.",209,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",209,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",209,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",209,N],[11,"get_texture","","Returns the corresponding texture.",209,[[["self"]],["texture2dmultisample"]]],[11,"get_level","","Returns the texture level.",209,[[["self"]],["u32"]]],[0,"integral_texture2d_multisample","glium::texture","Contains the implementation of…",N,N],[3,"IntegralTexture2dMultisample","glium::texture::integral_texture2d_multisample","A two-dimensional texture  containing signed integral data.",N,N],[3,"IntegralTexture2dMultisampleMipmap","","Represents a single mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",210,[[["self"]],["sampler",["integraltexture2dmultisample"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",210,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",210,[[["f"],["u32"],["u32"],["u32"]],["result",["integraltexture2dmultisample","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",210,[[["f"],["uncompressedintformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["integraltexture2dmultisample","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",210,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["integraltexture2dmultisample","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",210,[[["f"],["uncompressedintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["integraltexture2dmultisample"]]],[11,"width","","Returns the width of that image.",210,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",210,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",210,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",210,N],[11,"as_surface","","Starts drawing on the texture.",210,[[["self"]],["simpleframebuffer"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",210,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",210,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",210,[[["self"],["u32"]],["option",["integraltexture2dmultisamplemipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",210,[[["self"]],["integraltexture2dmultisamplemipmap"]]],[11,"width","","Returns the width of that image.",211,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",211,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",211,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",211,N],[11,"get_texture","","Returns the corresponding texture.",211,[[["self"]],["integraltexture2dmultisample"]]],[11,"get_level","","Returns the texture level.",211,[[["self"]],["u32"]]],[0,"srgb_texture2d_multisample","glium::texture","Contains the implementation of `SrgbTexture2dMultisample`.",N,N],[3,"SrgbTexture2dMultisample","glium::texture::srgb_texture2d_multisample","A two-dimensional texture containing sRGB floating-point…",N,N],[3,"SrgbTexture2dMultisampleMipmap","","Represents a single mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",212,[[["self"]],["sampler",["srgbtexture2dmultisample"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",212,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",212,[[["f"],["u32"],["u32"],["u32"]],["result",["srgbtexture2dmultisample","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",212,[[["f"],["srgbformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["srgbtexture2dmultisample","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",212,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["srgbtexture2dmultisample","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",212,[[["f"],["srgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["srgbtexture2dmultisample"]]],[11,"width","","Returns the width of that image.",212,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",212,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",212,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",212,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",212,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",212,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",212,[[["self"],["u32"]],["option",["srgbtexture2dmultisamplemipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",212,[[["self"]],["srgbtexture2dmultisamplemipmap"]]],[11,"width","","Returns the width of that image.",213,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",213,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",213,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",213,N],[11,"get_texture","","Returns the corresponding texture.",213,[[["self"]],["srgbtexture2dmultisample"]]],[11,"get_level","","Returns the texture level.",213,[[["self"]],["u32"]]],[0,"unsigned_texture2d_multisample","glium::texture","Contains the implementation of…",N,N],[3,"UnsignedTexture2dMultisample","glium::texture::unsigned_texture2d_multisample","A two-dimensional texture containing unsigned integral…",N,N],[3,"UnsignedTexture2dMultisampleMipmap","","Represents a single mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",214,[[["self"]],["sampler",["unsignedtexture2dmultisample"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",214,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",214,[[["f"],["u32"],["u32"],["u32"]],["result",["unsignedtexture2dmultisample","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",214,[[["f"],["uncompresseduintformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["unsignedtexture2dmultisample","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",214,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["unsignedtexture2dmultisample","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",214,[[["f"],["uncompresseduintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["unsignedtexture2dmultisample"]]],[11,"width","","Returns the width of that image.",214,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",214,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",214,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",214,N],[11,"as_surface","","Starts drawing on the texture.",214,[[["self"]],["simpleframebuffer"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",214,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",214,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",214,[[["self"],["u32"]],["option",["unsignedtexture2dmultisamplemipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",214,[[["self"]],["unsignedtexture2dmultisamplemipmap"]]],[11,"width","","Returns the width of that image.",215,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",215,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",215,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",215,N],[11,"get_texture","","Returns the corresponding texture.",215,[[["self"]],["unsignedtexture2dmultisample"]]],[11,"get_level","","Returns the texture level.",215,[[["self"]],["u32"]]],[0,"depth_texture2d_multisample","glium::texture","Contains the implementation of `DepthTexture2dMultisample`.",N,N],[3,"DepthTexture2dMultisample","glium::texture::depth_texture2d_multisample","A two-dimensional texture  containing depth data.",N,N],[3,"DepthTexture2dMultisampleMipmap","","Represents a single mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",216,[[["self"]],["sampler",["depthtexture2dmultisample"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",216,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",216,[[["f"],["u32"],["u32"],["u32"]],["result",["depthtexture2dmultisample","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",216,[[["f"],["depthformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["depthtexture2dmultisample","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",216,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["depthtexture2dmultisample","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",216,[[["f"],["depthformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthtexture2dmultisample"]]],[11,"width","","Returns the width of that image.",216,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",216,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",216,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",216,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",216,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",216,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",216,[[["self"],["u32"]],["option",["depthtexture2dmultisamplemipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",216,[[["self"]],["depthtexture2dmultisamplemipmap"]]],[11,"width","","Returns the width of that image.",217,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",217,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",217,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",217,N],[11,"get_texture","","Returns the corresponding texture.",217,[[["self"]],["depthtexture2dmultisample"]]],[11,"get_level","","Returns the texture level.",217,[[["self"]],["u32"]]],[0,"stencil_texture2d_multisample","glium::texture","Contains the implementation of…",N,N],[3,"StencilTexture2dMultisample","glium::texture::stencil_texture2d_multisample","A two-dimensional texture  containing stencil data.",N,N],[3,"StencilTexture2dMultisampleMipmap","","Represents a single mipmap level of a…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",218,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",218,[[["f"],["u32"],["u32"],["u32"]],["result",["stenciltexture2dmultisample","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",218,[[["f"],["stencilformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["stenciltexture2dmultisample","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",218,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["stenciltexture2dmultisample","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",218,[[["f"],["stencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["stenciltexture2dmultisample"]]],[11,"width","","Returns the width of that image.",218,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",218,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",218,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",218,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",218,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",218,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",218,[[["self"],["u32"]],["option",["stenciltexture2dmultisamplemipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",218,[[["self"]],["stenciltexture2dmultisamplemipmap"]]],[11,"width","","Returns the width of that image.",219,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",219,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",219,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",219,N],[11,"get_texture","","Returns the corresponding texture.",219,[[["self"]],["stenciltexture2dmultisample"]]],[11,"get_level","","Returns the texture level.",219,[[["self"]],["u32"]]],[0,"depth_stencil_texture2d_multisample","glium::texture","Contains the implementation of…",N,N],[3,"DepthStencilTexture2dMultisample","glium::texture::depth_stencil_texture2d_multisample","A two-dimensional texture containing both depth and…",N,N],[3,"DepthStencilTexture2dMultisampleMipmap","","Represents a single mipmap level of a…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",220,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",220,[[["f"],["u32"],["u32"],["u32"]],["result",["depthstenciltexture2dmultisample","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",220,[[["f"],["depthstencilformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["depthstenciltexture2dmultisample","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",220,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["depthstenciltexture2dmultisample","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",220,[[["f"],["depthstencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthstenciltexture2dmultisample"]]],[11,"width","","Returns the width of that image.",220,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",220,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",220,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",220,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",220,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",220,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",220,[[["self"],["u32"]],["option",["depthstenciltexture2dmultisamplemipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",220,[[["self"]],["depthstenciltexture2dmultisamplemipmap"]]],[11,"width","","Returns the width of that image.",221,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",221,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",221,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",221,N],[11,"get_texture","","Returns the corresponding texture.",221,[[["self"]],["depthstenciltexture2dmultisample"]]],[11,"get_level","","Returns the texture level.",221,[[["self"]],["u32"]]],[0,"texture3d","glium::texture","Contains the implementation of `Texture3d`.",N,N],[3,"Texture3d","glium::texture::texture3d","A three-dimensional texture  containing floating-point data.",N,N],[3,"Texture3dMipmap","","Represents a single mipmap level of a `Texture3d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",222,[[["self"]],["sampler",["texture3d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",222,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",222,[[["f"],["t"]],["result",["texture3d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",222,[[["f"],["t"],["mipmapsoption"]],["result",["texture3d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",222,[[["f"],["t"],["uncompressedfloatformat"],["mipmapsoption"]],["result",["texture3d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",222,[[["f"],["u32"],["u32"],["u32"]],["result",["texture3d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",222,[[["f"],["uncompressedfloatformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["texture3d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",222,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["texture3d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",222,[[["f"],["uncompressedfloatformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["texture3d"]]],[11,"width","","Returns the width of that image.",222,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",222,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",222,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",222,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",222,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",222,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",222,[[["self"],["u32"]],["option",["texture3dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",222,[[["self"]],["texture3dmipmap"]]],[11,"width","","Returns the width of that image.",223,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",223,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",223,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",223,N],[11,"get_texture","","Returns the corresponding texture.",223,[[["self"]],["texture3d"]]],[11,"get_level","","Returns the texture level.",223,[[["self"]],["u32"]]],[0,"compressed_texture3d","glium::texture","Contains the implementation of `CompressedTexture3d`.",N,N],[3,"CompressedTexture3d","glium::texture::compressed_texture3d","A compressed three-dimensional texture containing…",N,N],[3,"CompressedTexture3dMipmap","","Represents a single mipmap level of a `CompressedTexture3d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",224,[[["self"]],["sampler",["compressedtexture3d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",224,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",224,[[["f"],["t"]],["result",["compressedtexture3d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",224,[[["f"],["t"],["compressedmipmapsoption"]],["result",["compressedtexture3d","texturecreationerror"]]]],[11,"with_compressed_data","","Builds a new texture with a specific format. The input…",224,N],[11,"with_format","","Builds a new texture with a specific format.",224,[[["f"],["t"],["compressedformat"],["compressedmipmapsoption"]],["result",["compressedtexture3d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",224,[[["f"],["compressedformat"],["compressedmipmapsoption"],["u32"],["u32"],["u32"]],["result",["compressedtexture3d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",224,[[["f"],["compressedformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedtexture3d"]]],[11,"width","","Returns the width of that image.",224,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",224,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",224,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",224,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",224,[[["self"]],["u32"]]],[11,"read_compressed_data","","Reads the content of the texture to RAM without…",224,[[["self"]],["option"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",224,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",224,[[["self"],["u32"]],["option",["compressedtexture3dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",224,[[["self"]],["compressedtexture3dmipmap"]]],[11,"width","","Returns the width of that image.",225,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",225,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",225,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",225,N],[11,"read_compressed_data","","Reads the content of the texture level to RAM without…",225,[[["self"]],["option"]]],[11,"get_texture","","Returns the corresponding texture.",225,[[["self"]],["compressedtexture3d"]]],[11,"get_level","","Returns the texture level.",225,[[["self"]],["u32"]]],[0,"srgb_texture3d","glium::texture","Contains the implementation of `SrgbTexture3d`.",N,N],[3,"SrgbTexture3d","glium::texture::srgb_texture3d","A three-dimensional texture containing sRGB floating-point…",N,N],[3,"SrgbTexture3dMipmap","","Represents a single mipmap level of a `SrgbTexture3d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",226,[[["self"]],["sampler",["srgbtexture3d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",226,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",226,[[["f"],["t"]],["result",["srgbtexture3d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",226,[[["f"],["t"],["mipmapsoption"]],["result",["srgbtexture3d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",226,[[["f"],["t"],["srgbformat"],["mipmapsoption"]],["result",["srgbtexture3d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",226,[[["f"],["u32"],["u32"],["u32"]],["result",["srgbtexture3d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",226,[[["f"],["srgbformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["srgbtexture3d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",226,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["srgbtexture3d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",226,[[["f"],["srgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["srgbtexture3d"]]],[11,"width","","Returns the width of that image.",226,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",226,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",226,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",226,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",226,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",226,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",226,[[["self"],["u32"]],["option",["srgbtexture3dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",226,[[["self"]],["srgbtexture3dmipmap"]]],[11,"width","","Returns the width of that image.",227,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",227,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",227,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",227,N],[11,"get_texture","","Returns the corresponding texture.",227,[[["self"]],["srgbtexture3d"]]],[11,"get_level","","Returns the texture level.",227,[[["self"]],["u32"]]],[0,"compressed_srgb_texture3d","glium::texture","Contains the implementation of `CompressedSrgbTexture3d`.",N,N],[3,"CompressedSrgbTexture3d","glium::texture::compressed_srgb_texture3d","A compressed three-dimensional texture containing sRGB…",N,N],[3,"CompressedSrgbTexture3dMipmap","","Represents a single mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",228,[[["self"]],["sampler",["compressedsrgbtexture3d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",228,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",228,[[["f"],["t"]],["result",["compressedsrgbtexture3d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",228,[[["f"],["t"],["compressedmipmapsoption"]],["result",["compressedsrgbtexture3d","texturecreationerror"]]]],[11,"with_compressed_data","","Builds a new texture with a specific format. The input…",228,N],[11,"with_format","","Builds a new texture with a specific format.",228,[[["f"],["t"],["compressedsrgbformat"],["compressedmipmapsoption"]],["result",["compressedsrgbtexture3d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",228,[[["f"],["compressedsrgbformat"],["compressedmipmapsoption"],["u32"],["u32"],["u32"]],["result",["compressedsrgbtexture3d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",228,[[["f"],["compressedsrgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedsrgbtexture3d"]]],[11,"width","","Returns the width of that image.",228,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",228,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",228,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",228,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",228,[[["self"]],["u32"]]],[11,"read_compressed_data","","Reads the content of the texture to RAM without…",228,[[["self"]],["option"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",228,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",228,[[["self"],["u32"]],["option",["compressedsrgbtexture3dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",228,[[["self"]],["compressedsrgbtexture3dmipmap"]]],[11,"width","","Returns the width of that image.",229,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",229,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",229,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",229,N],[11,"read_compressed_data","","Reads the content of the texture level to RAM without…",229,[[["self"]],["option"]]],[11,"get_texture","","Returns the corresponding texture.",229,[[["self"]],["compressedsrgbtexture3d"]]],[11,"get_level","","Returns the texture level.",229,[[["self"]],["u32"]]],[0,"integral_texture3d","glium::texture","Contains the implementation of `IntegralTexture3d`.",N,N],[3,"IntegralTexture3d","glium::texture::integral_texture3d","A three-dimensional texture containing signed integral…",N,N],[3,"IntegralTexture3dMipmap","","Represents a single mipmap level of a `IntegralTexture3d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",230,[[["self"]],["sampler",["integraltexture3d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",230,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",230,[[["f"],["t"]],["result",["integraltexture3d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",230,[[["f"],["t"],["mipmapsoption"]],["result",["integraltexture3d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",230,[[["f"],["t"],["uncompressedintformat"],["mipmapsoption"]],["result",["integraltexture3d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",230,[[["f"],["u32"],["u32"],["u32"]],["result",["integraltexture3d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",230,[[["f"],["uncompressedintformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["integraltexture3d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",230,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["integraltexture3d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",230,[[["f"],["uncompressedintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["integraltexture3d"]]],[11,"width","","Returns the width of that image.",230,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",230,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",230,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",230,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",230,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",230,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",230,[[["self"],["u32"]],["option",["integraltexture3dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",230,[[["self"]],["integraltexture3dmipmap"]]],[11,"width","","Returns the width of that image.",231,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",231,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",231,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",231,N],[11,"get_texture","","Returns the corresponding texture.",231,[[["self"]],["integraltexture3d"]]],[11,"get_level","","Returns the texture level.",231,[[["self"]],["u32"]]],[0,"unsigned_texture3d","glium::texture","Contains the implementation of `UnsignedTexture3d`.",N,N],[3,"UnsignedTexture3d","glium::texture::unsigned_texture3d","A three-dimensional texture containing unsigned integral…",N,N],[3,"UnsignedTexture3dMipmap","","Represents a single mipmap level of a `UnsignedTexture3d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",232,[[["self"]],["sampler",["unsignedtexture3d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",232,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",232,[[["f"],["t"]],["result",["unsignedtexture3d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",232,[[["f"],["t"],["mipmapsoption"]],["result",["unsignedtexture3d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",232,[[["f"],["t"],["uncompresseduintformat"],["mipmapsoption"]],["result",["unsignedtexture3d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",232,[[["f"],["u32"],["u32"],["u32"]],["result",["unsignedtexture3d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",232,[[["f"],["uncompresseduintformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["unsignedtexture3d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",232,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["unsignedtexture3d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",232,[[["f"],["uncompresseduintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["unsignedtexture3d"]]],[11,"width","","Returns the width of that image.",232,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",232,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",232,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",232,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",232,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",232,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",232,[[["self"],["u32"]],["option",["unsignedtexture3dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",232,[[["self"]],["unsignedtexture3dmipmap"]]],[11,"width","","Returns the width of that image.",233,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",233,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",233,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",233,N],[11,"get_texture","","Returns the corresponding texture.",233,[[["self"]],["unsignedtexture3d"]]],[11,"get_level","","Returns the texture level.",233,[[["self"]],["u32"]]],[0,"depth_texture3d","glium::texture","Contains the implementation of `DepthTexture3d`.",N,N],[3,"DepthTexture3d","glium::texture::depth_texture3d","A three-dimensional texture  containing depth data.",N,N],[3,"DepthTexture3dMipmap","","Represents a single mipmap level of a `DepthTexture3d`.",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",234,[[["self"]],["sampler",["depthtexture3d"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",234,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",234,[[["f"],["t"]],["result",["depthtexture3d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",234,[[["f"],["t"],["mipmapsoption"]],["result",["depthtexture3d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",234,[[["f"],["t"],["depthformat"],["mipmapsoption"]],["result",["depthtexture3d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",234,[[["f"],["u32"],["u32"],["u32"]],["result",["depthtexture3d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",234,[[["f"],["depthformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["depthtexture3d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",234,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["depthtexture3d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",234,[[["f"],["depthformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthtexture3d"]]],[11,"width","","Returns the width of that image.",234,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",234,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",234,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",234,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",234,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",234,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",234,[[["self"],["u32"]],["option",["depthtexture3dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",234,[[["self"]],["depthtexture3dmipmap"]]],[11,"width","","Returns the width of that image.",235,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",235,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",235,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",235,N],[11,"get_texture","","Returns the corresponding texture.",235,[[["self"]],["depthtexture3d"]]],[11,"get_level","","Returns the texture level.",235,[[["self"]],["u32"]]],[0,"depth_stencil_texture3d","glium::texture","Contains the implementation of `DepthStencilTexture3d`.",N,N],[3,"DepthStencilTexture3d","glium::texture::depth_stencil_texture3d","A three-dimensional texture containing both depth and…",N,N],[3,"DepthStencilTexture3dMipmap","","Represents a single mipmap level of a…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",236,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",236,[[["f"],["t"]],["result",["depthstenciltexture3d","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",236,[[["f"],["t"],["mipmapsoption"]],["result",["depthstenciltexture3d","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",236,[[["f"],["t"],["depthstencilformat"],["mipmapsoption"]],["result",["depthstenciltexture3d","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",236,[[["f"],["u32"],["u32"],["u32"]],["result",["depthstenciltexture3d","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",236,[[["f"],["depthstencilformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["depthstenciltexture3d","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",236,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["depthstenciltexture3d","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",236,[[["f"],["depthstencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthstenciltexture3d"]]],[11,"width","","Returns the width of that image.",236,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",236,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",236,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",236,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",236,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",236,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",236,[[["self"],["u32"]],["option",["depthstenciltexture3dmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",236,[[["self"]],["depthstenciltexture3dmipmap"]]],[11,"width","","Returns the width of that image.",237,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",237,[[["self"]],["u32"]]],[11,"depth","","Returns the depth of that image.",237,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width, height and depth of that image.",237,N],[11,"get_texture","","Returns the corresponding texture.",237,[[["self"]],["depthstenciltexture3d"]]],[11,"get_level","","Returns the texture level.",237,[[["self"]],["u32"]]],[0,"texture1d_array","glium::texture","Contains the implementation of `Texture1dArray`.",N,N],[3,"Texture1dArray","glium::texture::texture1d_array","An array of one-dimensional textures containing…",N,N],[3,"Texture1dArrayLayer","","Represents a single layer of a `Texture1dArray`.",N,N],[3,"Texture1dArrayMipmap","","Represents a single mipmap level of a `Texture1dArray`.",N,N],[3,"Texture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",238,[[["self"]],["sampler",["texture1darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",238,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",238,[[["f"],["vec"]],["result",["texture1darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",238,[[["f"],["vec"],["mipmapsoption"]],["result",["texture1darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",238,[[["f"],["vec"],["uncompressedfloatformat"],["mipmapsoption"]],["result",["texture1darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",238,[[["f"],["u32"],["u32"]],["result",["texture1darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",238,[[["f"],["uncompressedfloatformat"],["mipmapsoption"],["u32"],["u32"]],["result",["texture1darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",238,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["texture1darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",238,[[["f"],["uncompressedfloatformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["texture1darray"]]],[11,"width","","Returns the width of that image.",238,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",238,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",238,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",238,[[["self"]],["texture1darraylayer"]]],[11,"layer","","Access a single layer of this texture.",238,[[["self"],["u32"]],["option",["texture1darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",238,[[["self"],["u32"]],["option",["texture1darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",238,[[["self"]],["texture1darraymipmap"]]],[11,"width","","Returns the width of that image.",239,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",239,[[["self"]],["texture1darray"]]],[11,"get_layer","","Returns the layer index.",239,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",239,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",239,[[["self"],["u32"]],["option",["texture1darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",239,[[["self"]],["texture1darraylayermipmap"]]],[11,"width","","Returns the width of that image.",240,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",240,[[["self"]],["texture1darray"]]],[11,"get_level","","Returns the texture level.",240,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",240,[[["self"]],["texture1darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",240,[[["self"],["u32"]],["option",["texture1darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",241,[[["self"]],["u32"]]],[0,"compressed_texture1d_array","glium::texture","Contains the implementation of `CompressedTexture1dArray`.",N,N],[3,"CompressedTexture1dArray","glium::texture::compressed_texture1d_array","An array of compressed one-dimensional textures containing…",N,N],[3,"CompressedTexture1dArrayLayer","","Represents a single layer of a `CompressedTexture1dArray`.",N,N],[3,"CompressedTexture1dArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"CompressedTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",242,[[["self"]],["sampler",["compressedtexture1darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",242,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",242,[[["f"],["vec"]],["result",["compressedtexture1darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",242,[[["f"],["vec"],["compressedmipmapsoption"]],["result",["compressedtexture1darray","texturecreationerror"]]]],[11,"with_compressed_data","","Builds a new texture with a specific format. The input…",242,[[["f"],["vec"],["u32"],["u32"],["compressedformat"],["compressedmipmapsoption"]],["result",["compressedtexture1darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",242,[[["f"],["vec"],["compressedformat"],["compressedmipmapsoption"]],["result",["compressedtexture1darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",242,[[["f"],["compressedformat"],["compressedmipmapsoption"],["u32"],["u32"]],["result",["compressedtexture1darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",242,[[["f"],["compressedformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedtexture1darray"]]],[11,"width","","Returns the width of that image.",242,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",242,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",242,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",242,[[["self"]],["compressedtexture1darraylayer"]]],[11,"layer","","Access a single layer of this texture.",242,[[["self"],["u32"]],["option",["compressedtexture1darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",242,[[["self"],["u32"]],["option",["compressedtexture1darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",242,[[["self"]],["compressedtexture1darraymipmap"]]],[11,"width","","Returns the width of that image.",243,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",243,[[["self"]],["compressedtexture1darray"]]],[11,"get_layer","","Returns the layer index.",243,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",243,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",243,[[["self"],["u32"]],["option",["compressedtexture1darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",243,[[["self"]],["compressedtexture1darraylayermipmap"]]],[11,"width","","Returns the width of that image.",244,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",244,[[["self"]],["compressedtexture1darray"]]],[11,"get_level","","Returns the texture level.",244,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",244,[[["self"]],["compressedtexture1darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",244,[[["self"],["u32"]],["option",["compressedtexture1darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",245,[[["self"]],["u32"]]],[0,"srgb_texture1d_array","glium::texture","Contains the implementation of `SrgbTexture1dArray`.",N,N],[3,"SrgbTexture1dArray","glium::texture::srgb_texture1d_array","An array of one-dimensional textures containing sRGB…",N,N],[3,"SrgbTexture1dArrayLayer","","Represents a single layer of a `SrgbTexture1dArray`.",N,N],[3,"SrgbTexture1dArrayMipmap","","Represents a single mipmap level of a `SrgbTexture1dArray`.",N,N],[3,"SrgbTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",246,[[["self"]],["sampler",["srgbtexture1darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",246,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",246,[[["f"],["vec"]],["result",["srgbtexture1darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",246,[[["f"],["vec"],["mipmapsoption"]],["result",["srgbtexture1darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",246,[[["f"],["vec"],["srgbformat"],["mipmapsoption"]],["result",["srgbtexture1darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",246,[[["f"],["u32"],["u32"]],["result",["srgbtexture1darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",246,[[["f"],["srgbformat"],["mipmapsoption"],["u32"],["u32"]],["result",["srgbtexture1darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",246,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["srgbtexture1darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",246,[[["f"],["srgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["srgbtexture1darray"]]],[11,"width","","Returns the width of that image.",246,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",246,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",246,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",246,[[["self"]],["srgbtexture1darraylayer"]]],[11,"layer","","Access a single layer of this texture.",246,[[["self"],["u32"]],["option",["srgbtexture1darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",246,[[["self"],["u32"]],["option",["srgbtexture1darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",246,[[["self"]],["srgbtexture1darraymipmap"]]],[11,"width","","Returns the width of that image.",247,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",247,[[["self"]],["srgbtexture1darray"]]],[11,"get_layer","","Returns the layer index.",247,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",247,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",247,[[["self"],["u32"]],["option",["srgbtexture1darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",247,[[["self"]],["srgbtexture1darraylayermipmap"]]],[11,"width","","Returns the width of that image.",248,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",248,[[["self"]],["srgbtexture1darray"]]],[11,"get_level","","Returns the texture level.",248,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",248,[[["self"]],["srgbtexture1darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",248,[[["self"],["u32"]],["option",["srgbtexture1darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",249,[[["self"]],["u32"]]],[0,"compressed_srgb_texture1d_array","glium::texture","Contains the implementation of…",N,N],[3,"CompressedSrgbTexture1dArray","glium::texture::compressed_srgb_texture1d_array","An array of compressed one-dimensional textures containing…",N,N],[3,"CompressedSrgbTexture1dArrayLayer","","Represents a single layer of a…",N,N],[3,"CompressedSrgbTexture1dArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"CompressedSrgbTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",250,[[["self"]],["sampler",["compressedsrgbtexture1darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",250,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",250,[[["f"],["vec"]],["result",["compressedsrgbtexture1darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",250,[[["f"],["vec"],["compressedmipmapsoption"]],["result",["compressedsrgbtexture1darray","texturecreationerror"]]]],[11,"with_compressed_data","","Builds a new texture with a specific format. The input…",250,[[["f"],["vec"],["u32"],["u32"],["compressedsrgbformat"],["compressedmipmapsoption"]],["result",["compressedsrgbtexture1darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",250,[[["f"],["vec"],["compressedsrgbformat"],["compressedmipmapsoption"]],["result",["compressedsrgbtexture1darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",250,[[["f"],["compressedsrgbformat"],["compressedmipmapsoption"],["u32"],["u32"]],["result",["compressedsrgbtexture1darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",250,[[["f"],["compressedsrgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedsrgbtexture1darray"]]],[11,"width","","Returns the width of that image.",250,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",250,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",250,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",250,[[["self"]],["compressedsrgbtexture1darraylayer"]]],[11,"layer","","Access a single layer of this texture.",250,[[["self"],["u32"]],["option",["compressedsrgbtexture1darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",250,[[["self"],["u32"]],["option",["compressedsrgbtexture1darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",250,[[["self"]],["compressedsrgbtexture1darraymipmap"]]],[11,"width","","Returns the width of that image.",251,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",251,[[["self"]],["compressedsrgbtexture1darray"]]],[11,"get_layer","","Returns the layer index.",251,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",251,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",251,[[["self"],["u32"]],["option",["compressedsrgbtexture1darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",251,[[["self"]],["compressedsrgbtexture1darraylayermipmap"]]],[11,"width","","Returns the width of that image.",252,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",252,[[["self"]],["compressedsrgbtexture1darray"]]],[11,"get_level","","Returns the texture level.",252,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",252,[[["self"]],["compressedsrgbtexture1darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",252,[[["self"],["u32"]],["option",["compressedsrgbtexture1darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",253,[[["self"]],["u32"]]],[0,"integral_texture1d_array","glium::texture","Contains the implementation of `IntegralTexture1dArray`.",N,N],[3,"IntegralTexture1dArray","glium::texture::integral_texture1d_array","An array of one-dimensional textures containing signed…",N,N],[3,"IntegralTexture1dArrayLayer","","Represents a single layer of a `IntegralTexture1dArray`.",N,N],[3,"IntegralTexture1dArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"IntegralTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",254,[[["self"]],["sampler",["integraltexture1darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",254,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",254,[[["f"],["vec"]],["result",["integraltexture1darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",254,[[["f"],["vec"],["mipmapsoption"]],["result",["integraltexture1darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",254,[[["f"],["vec"],["uncompressedintformat"],["mipmapsoption"]],["result",["integraltexture1darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",254,[[["f"],["u32"],["u32"]],["result",["integraltexture1darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",254,[[["f"],["uncompressedintformat"],["mipmapsoption"],["u32"],["u32"]],["result",["integraltexture1darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",254,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["integraltexture1darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",254,[[["f"],["uncompressedintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["integraltexture1darray"]]],[11,"width","","Returns the width of that image.",254,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",254,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",254,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",254,[[["self"]],["integraltexture1darraylayer"]]],[11,"layer","","Access a single layer of this texture.",254,[[["self"],["u32"]],["option",["integraltexture1darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",254,[[["self"],["u32"]],["option",["integraltexture1darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",254,[[["self"]],["integraltexture1darraymipmap"]]],[11,"width","","Returns the width of that image.",255,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",255,[[["self"]],["integraltexture1darray"]]],[11,"get_layer","","Returns the layer index.",255,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",255,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",255,[[["self"],["u32"]],["option",["integraltexture1darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",255,[[["self"]],["integraltexture1darraylayermipmap"]]],[11,"width","","Returns the width of that image.",256,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",256,[[["self"]],["integraltexture1darray"]]],[11,"get_level","","Returns the texture level.",256,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",256,[[["self"]],["integraltexture1darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",256,[[["self"],["u32"]],["option",["integraltexture1darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",257,[[["self"]],["u32"]]],[0,"unsigned_texture1d_array","glium::texture","Contains the implementation of `UnsignedTexture1dArray`.",N,N],[3,"UnsignedTexture1dArray","glium::texture::unsigned_texture1d_array","An array of one-dimensional textures containing unsigned…",N,N],[3,"UnsignedTexture1dArrayLayer","","Represents a single layer of a `UnsignedTexture1dArray`.",N,N],[3,"UnsignedTexture1dArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"UnsignedTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",258,[[["self"]],["sampler",["unsignedtexture1darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",258,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",258,[[["f"],["vec"]],["result",["unsignedtexture1darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",258,[[["f"],["vec"],["mipmapsoption"]],["result",["unsignedtexture1darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",258,[[["f"],["vec"],["uncompresseduintformat"],["mipmapsoption"]],["result",["unsignedtexture1darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",258,[[["f"],["u32"],["u32"]],["result",["unsignedtexture1darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",258,[[["f"],["uncompresseduintformat"],["mipmapsoption"],["u32"],["u32"]],["result",["unsignedtexture1darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",258,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["unsignedtexture1darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",258,[[["f"],["uncompresseduintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["unsignedtexture1darray"]]],[11,"width","","Returns the width of that image.",258,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",258,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",258,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",258,[[["self"]],["unsignedtexture1darraylayer"]]],[11,"layer","","Access a single layer of this texture.",258,[[["self"],["u32"]],["option",["unsignedtexture1darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",258,[[["self"],["u32"]],["option",["unsignedtexture1darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",258,[[["self"]],["unsignedtexture1darraymipmap"]]],[11,"width","","Returns the width of that image.",259,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",259,[[["self"]],["unsignedtexture1darray"]]],[11,"get_layer","","Returns the layer index.",259,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",259,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",259,[[["self"],["u32"]],["option",["unsignedtexture1darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",259,[[["self"]],["unsignedtexture1darraylayermipmap"]]],[11,"width","","Returns the width of that image.",260,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",260,[[["self"]],["unsignedtexture1darray"]]],[11,"get_level","","Returns the texture level.",260,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",260,[[["self"]],["unsignedtexture1darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",260,[[["self"],["u32"]],["option",["unsignedtexture1darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",261,[[["self"]],["u32"]]],[0,"depth_texture1d_array","glium::texture","Contains the implementation of `DepthTexture1dArray`.",N,N],[3,"DepthTexture1dArray","glium::texture::depth_texture1d_array","An array of one-dimensional textures  containing depth data.",N,N],[3,"DepthTexture1dArrayLayer","","Represents a single layer of a `DepthTexture1dArray`.",N,N],[3,"DepthTexture1dArrayMipmap","","Represents a single mipmap level of a `DepthTexture1dArray`.",N,N],[3,"DepthTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",262,[[["self"]],["sampler",["depthtexture1darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",262,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",262,[[["f"],["vec"]],["result",["depthtexture1darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",262,[[["f"],["vec"],["mipmapsoption"]],["result",["depthtexture1darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",262,[[["f"],["vec"],["depthformat"],["mipmapsoption"]],["result",["depthtexture1darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",262,[[["f"],["u32"],["u32"]],["result",["depthtexture1darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",262,[[["f"],["depthformat"],["mipmapsoption"],["u32"],["u32"]],["result",["depthtexture1darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",262,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["depthtexture1darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",262,[[["f"],["depthformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthtexture1darray"]]],[11,"width","","Returns the width of that image.",262,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",262,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",262,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",262,[[["self"]],["depthtexture1darraylayer"]]],[11,"layer","","Access a single layer of this texture.",262,[[["self"],["u32"]],["option",["depthtexture1darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",262,[[["self"],["u32"]],["option",["depthtexture1darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",262,[[["self"]],["depthtexture1darraymipmap"]]],[11,"width","","Returns the width of that image.",263,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",263,[[["self"]],["depthtexture1darray"]]],[11,"get_layer","","Returns the layer index.",263,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",263,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",263,[[["self"],["u32"]],["option",["depthtexture1darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",263,[[["self"]],["depthtexture1darraylayermipmap"]]],[11,"width","","Returns the width of that image.",264,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",264,[[["self"]],["depthtexture1darray"]]],[11,"get_level","","Returns the texture level.",264,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",264,[[["self"]],["depthtexture1darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",264,[[["self"],["u32"]],["option",["depthtexture1darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",265,[[["self"]],["u32"]]],[0,"stencil_texture1d_array","glium::texture","Contains the implementation of `StencilTexture1dArray`.",N,N],[3,"StencilTexture1dArray","glium::texture::stencil_texture1d_array","An array of one-dimensional textures containing stencil…",N,N],[3,"StencilTexture1dArrayLayer","","Represents a single layer of a `StencilTexture1dArray`.",N,N],[3,"StencilTexture1dArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"StencilTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",266,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",266,[[["f"],["vec"]],["result",["stenciltexture1darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",266,[[["f"],["vec"],["mipmapsoption"]],["result",["stenciltexture1darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",266,[[["f"],["vec"],["stencilformat"],["mipmapsoption"]],["result",["stenciltexture1darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",266,[[["f"],["u32"],["u32"]],["result",["stenciltexture1darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",266,[[["f"],["stencilformat"],["mipmapsoption"],["u32"],["u32"]],["result",["stenciltexture1darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",266,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["stenciltexture1darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",266,[[["f"],["stencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["stenciltexture1darray"]]],[11,"width","","Returns the width of that image.",266,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",266,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",266,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",266,[[["self"]],["stenciltexture1darraylayer"]]],[11,"layer","","Access a single layer of this texture.",266,[[["self"],["u32"]],["option",["stenciltexture1darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",266,[[["self"],["u32"]],["option",["stenciltexture1darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",266,[[["self"]],["stenciltexture1darraymipmap"]]],[11,"width","","Returns the width of that image.",267,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",267,[[["self"]],["stenciltexture1darray"]]],[11,"get_layer","","Returns the layer index.",267,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",267,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",267,[[["self"],["u32"]],["option",["stenciltexture1darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",267,[[["self"]],["stenciltexture1darraylayermipmap"]]],[11,"width","","Returns the width of that image.",268,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",268,[[["self"]],["stenciltexture1darray"]]],[11,"get_level","","Returns the texture level.",268,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",268,[[["self"]],["stenciltexture1darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",268,[[["self"],["u32"]],["option",["stenciltexture1darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",269,[[["self"]],["u32"]]],[0,"depth_stencil_texture1d_array","glium::texture","Contains the implementation of `DepthStencilTexture1dArray`.",N,N],[3,"DepthStencilTexture1dArray","glium::texture::depth_stencil_texture1d_array","An array of one-dimensional textures containing both depth…",N,N],[3,"DepthStencilTexture1dArrayLayer","","Represents a single layer of a `DepthStencilTexture1dArray`.",N,N],[3,"DepthStencilTexture1dArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"DepthStencilTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",270,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",270,[[["f"],["vec"]],["result",["depthstenciltexture1darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",270,[[["f"],["vec"],["mipmapsoption"]],["result",["depthstenciltexture1darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",270,[[["f"],["vec"],["depthstencilformat"],["mipmapsoption"]],["result",["depthstenciltexture1darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",270,[[["f"],["u32"],["u32"]],["result",["depthstenciltexture1darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",270,[[["f"],["depthstencilformat"],["mipmapsoption"],["u32"],["u32"]],["result",["depthstenciltexture1darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",270,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["depthstenciltexture1darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",270,[[["f"],["depthstencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthstenciltexture1darray"]]],[11,"width","","Returns the width of that image.",270,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",270,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",270,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",270,[[["self"]],["depthstenciltexture1darraylayer"]]],[11,"layer","","Access a single layer of this texture.",270,[[["self"],["u32"]],["option",["depthstenciltexture1darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",270,[[["self"],["u32"]],["option",["depthstenciltexture1darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",270,[[["self"]],["depthstenciltexture1darraymipmap"]]],[11,"width","","Returns the width of that image.",271,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",271,[[["self"]],["depthstenciltexture1darray"]]],[11,"get_layer","","Returns the layer index.",271,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",271,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",271,[[["self"],["u32"]],["option",["depthstenciltexture1darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",271,[[["self"]],["depthstenciltexture1darraylayermipmap"]]],[11,"width","","Returns the width of that image.",272,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",272,[[["self"]],["depthstenciltexture1darray"]]],[11,"get_level","","Returns the texture level.",272,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",272,[[["self"]],["depthstenciltexture1darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",272,[[["self"],["u32"]],["option",["depthstenciltexture1darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",273,[[["self"]],["u32"]]],[0,"texture2d_array","glium::texture","Contains the implementation of `Texture2dArray`.",N,N],[3,"Texture2dArray","glium::texture::texture2d_array","An array of two-dimensional textures containing…",N,N],[3,"Texture2dArrayLayer","","Represents a single layer of a `Texture2dArray`.",N,N],[3,"Texture2dArrayMipmap","","Represents a single mipmap level of a `Texture2dArray`.",N,N],[3,"Texture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",274,[[["self"]],["sampler",["texture2darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",274,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",274,[[["f"],["vec"]],["result",["texture2darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",274,[[["f"],["vec"],["mipmapsoption"]],["result",["texture2darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",274,[[["f"],["vec"],["uncompressedfloatformat"],["mipmapsoption"]],["result",["texture2darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",274,[[["f"],["u32"],["u32"],["u32"]],["result",["texture2darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",274,[[["f"],["uncompressedfloatformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["texture2darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",274,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["texture2darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",274,[[["f"],["uncompressedfloatformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["texture2darray"]]],[11,"width","","Returns the width of that image.",274,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",274,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",274,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",274,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",274,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",274,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",274,[[["self"]],["texture2darraylayer"]]],[11,"layer","","Access a single layer of this texture.",274,[[["self"],["u32"]],["option",["texture2darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",274,[[["self"],["u32"]],["option",["texture2darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",274,[[["self"]],["texture2darraymipmap"]]],[11,"width","","Returns the width of that image.",275,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",275,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",275,N],[11,"get_texture","","Returns the corresponding texture.",275,[[["self"]],["texture2darray"]]],[11,"get_layer","","Returns the layer index.",275,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",275,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",275,[[["self"],["u32"]],["option",["texture2darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",275,[[["self"]],["texture2darraylayermipmap"]]],[11,"width","","Returns the width of that image.",276,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",276,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",276,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",276,N],[11,"get_texture","","Returns the corresponding texture.",276,[[["self"]],["texture2darray"]]],[11,"get_level","","Returns the texture level.",276,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",276,[[["self"]],["texture2darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",276,[[["self"],["u32"]],["option",["texture2darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",277,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",277,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",277,N],[0,"compressed_texture2d_array","glium::texture","Contains the implementation of `CompressedTexture2dArray`.",N,N],[3,"CompressedTexture2dArray","glium::texture::compressed_texture2d_array","An array of compressed two-dimensional textures containing…",N,N],[3,"CompressedTexture2dArrayLayer","","Represents a single layer of a `CompressedTexture2dArray`.",N,N],[3,"CompressedTexture2dArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"CompressedTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",278,[[["self"]],["sampler",["compressedtexture2darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",278,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",278,[[["f"],["vec"]],["result",["compressedtexture2darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",278,[[["f"],["vec"],["compressedmipmapsoption"]],["result",["compressedtexture2darray","texturecreationerror"]]]],[11,"with_compressed_data","","Builds a new texture with a specific format. The input…",278,[[["f"],["vec"],["u32"],["u32"],["u32"],["compressedformat"],["compressedmipmapsoption"]],["result",["compressedtexture2darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",278,[[["f"],["vec"],["compressedformat"],["compressedmipmapsoption"]],["result",["compressedtexture2darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",278,[[["f"],["compressedformat"],["compressedmipmapsoption"],["u32"],["u32"],["u32"]],["result",["compressedtexture2darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",278,[[["f"],["compressedformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedtexture2darray"]]],[11,"width","","Returns the width of that image.",278,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",278,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",278,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",278,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",278,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",278,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",278,[[["self"]],["compressedtexture2darraylayer"]]],[11,"layer","","Access a single layer of this texture.",278,[[["self"],["u32"]],["option",["compressedtexture2darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",278,[[["self"],["u32"]],["option",["compressedtexture2darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",278,[[["self"]],["compressedtexture2darraymipmap"]]],[11,"width","","Returns the width of that image.",279,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",279,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",279,N],[11,"get_texture","","Returns the corresponding texture.",279,[[["self"]],["compressedtexture2darray"]]],[11,"get_layer","","Returns the layer index.",279,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",279,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",279,[[["self"],["u32"]],["option",["compressedtexture2darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",279,[[["self"]],["compressedtexture2darraylayermipmap"]]],[11,"width","","Returns the width of that image.",280,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",280,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",280,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",280,N],[11,"get_texture","","Returns the corresponding texture.",280,[[["self"]],["compressedtexture2darray"]]],[11,"get_level","","Returns the texture level.",280,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",280,[[["self"]],["compressedtexture2darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",280,[[["self"],["u32"]],["option",["compressedtexture2darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",281,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",281,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",281,N],[0,"srgb_texture2d_array","glium::texture","Contains the implementation of `SrgbTexture2dArray`.",N,N],[3,"SrgbTexture2dArray","glium::texture::srgb_texture2d_array","An array of two-dimensional textures containing sRGB…",N,N],[3,"SrgbTexture2dArrayLayer","","Represents a single layer of a `SrgbTexture2dArray`.",N,N],[3,"SrgbTexture2dArrayMipmap","","Represents a single mipmap level of a `SrgbTexture2dArray`.",N,N],[3,"SrgbTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",282,[[["self"]],["sampler",["srgbtexture2darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",282,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",282,[[["f"],["vec"]],["result",["srgbtexture2darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",282,[[["f"],["vec"],["mipmapsoption"]],["result",["srgbtexture2darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",282,[[["f"],["vec"],["srgbformat"],["mipmapsoption"]],["result",["srgbtexture2darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",282,[[["f"],["u32"],["u32"],["u32"]],["result",["srgbtexture2darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",282,[[["f"],["srgbformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["srgbtexture2darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",282,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["srgbtexture2darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",282,[[["f"],["srgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["srgbtexture2darray"]]],[11,"width","","Returns the width of that image.",282,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",282,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",282,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",282,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",282,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",282,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",282,[[["self"]],["srgbtexture2darraylayer"]]],[11,"layer","","Access a single layer of this texture.",282,[[["self"],["u32"]],["option",["srgbtexture2darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",282,[[["self"],["u32"]],["option",["srgbtexture2darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",282,[[["self"]],["srgbtexture2darraymipmap"]]],[11,"width","","Returns the width of that image.",283,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",283,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",283,N],[11,"get_texture","","Returns the corresponding texture.",283,[[["self"]],["srgbtexture2darray"]]],[11,"get_layer","","Returns the layer index.",283,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",283,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",283,[[["self"],["u32"]],["option",["srgbtexture2darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",283,[[["self"]],["srgbtexture2darraylayermipmap"]]],[11,"width","","Returns the width of that image.",284,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",284,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",284,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",284,N],[11,"get_texture","","Returns the corresponding texture.",284,[[["self"]],["srgbtexture2darray"]]],[11,"get_level","","Returns the texture level.",284,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",284,[[["self"]],["srgbtexture2darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",284,[[["self"],["u32"]],["option",["srgbtexture2darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",285,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",285,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",285,N],[0,"compressed_srgb_texture2d_array","glium::texture","Contains the implementation of…",N,N],[3,"CompressedSrgbTexture2dArray","glium::texture::compressed_srgb_texture2d_array","An array of compressed two-dimensional textures containing…",N,N],[3,"CompressedSrgbTexture2dArrayLayer","","Represents a single layer of a…",N,N],[3,"CompressedSrgbTexture2dArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"CompressedSrgbTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",286,[[["self"]],["sampler",["compressedsrgbtexture2darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",286,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",286,[[["f"],["vec"]],["result",["compressedsrgbtexture2darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",286,[[["f"],["vec"],["compressedmipmapsoption"]],["result",["compressedsrgbtexture2darray","texturecreationerror"]]]],[11,"with_compressed_data","","Builds a new texture with a specific format. The input…",286,[[["f"],["vec"],["u32"],["u32"],["u32"],["compressedsrgbformat"],["compressedmipmapsoption"]],["result",["compressedsrgbtexture2darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",286,[[["f"],["vec"],["compressedsrgbformat"],["compressedmipmapsoption"]],["result",["compressedsrgbtexture2darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",286,[[["f"],["compressedsrgbformat"],["compressedmipmapsoption"],["u32"],["u32"],["u32"]],["result",["compressedsrgbtexture2darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",286,[[["f"],["compressedsrgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedsrgbtexture2darray"]]],[11,"width","","Returns the width of that image.",286,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",286,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",286,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",286,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",286,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",286,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",286,[[["self"]],["compressedsrgbtexture2darraylayer"]]],[11,"layer","","Access a single layer of this texture.",286,[[["self"],["u32"]],["option",["compressedsrgbtexture2darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",286,[[["self"],["u32"]],["option",["compressedsrgbtexture2darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",286,[[["self"]],["compressedsrgbtexture2darraymipmap"]]],[11,"width","","Returns the width of that image.",287,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",287,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",287,N],[11,"get_texture","","Returns the corresponding texture.",287,[[["self"]],["compressedsrgbtexture2darray"]]],[11,"get_layer","","Returns the layer index.",287,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",287,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",287,[[["self"],["u32"]],["option",["compressedsrgbtexture2darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",287,[[["self"]],["compressedsrgbtexture2darraylayermipmap"]]],[11,"width","","Returns the width of that image.",288,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",288,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",288,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",288,N],[11,"get_texture","","Returns the corresponding texture.",288,[[["self"]],["compressedsrgbtexture2darray"]]],[11,"get_level","","Returns the texture level.",288,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",288,[[["self"]],["compressedsrgbtexture2darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",288,[[["self"],["u32"]],["option",["compressedsrgbtexture2darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",289,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",289,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",289,N],[0,"integral_texture2d_array","glium::texture","Contains the implementation of `IntegralTexture2dArray`.",N,N],[3,"IntegralTexture2dArray","glium::texture::integral_texture2d_array","An array of two-dimensional textures containing signed…",N,N],[3,"IntegralTexture2dArrayLayer","","Represents a single layer of a `IntegralTexture2dArray`.",N,N],[3,"IntegralTexture2dArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"IntegralTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",290,[[["self"]],["sampler",["integraltexture2darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",290,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",290,[[["f"],["vec"]],["result",["integraltexture2darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",290,[[["f"],["vec"],["mipmapsoption"]],["result",["integraltexture2darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",290,[[["f"],["vec"],["uncompressedintformat"],["mipmapsoption"]],["result",["integraltexture2darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",290,[[["f"],["u32"],["u32"],["u32"]],["result",["integraltexture2darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",290,[[["f"],["uncompressedintformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["integraltexture2darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",290,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["integraltexture2darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",290,[[["f"],["uncompressedintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["integraltexture2darray"]]],[11,"width","","Returns the width of that image.",290,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",290,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",290,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",290,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",290,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",290,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",290,[[["self"]],["integraltexture2darraylayer"]]],[11,"layer","","Access a single layer of this texture.",290,[[["self"],["u32"]],["option",["integraltexture2darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",290,[[["self"],["u32"]],["option",["integraltexture2darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",290,[[["self"]],["integraltexture2darraymipmap"]]],[11,"width","","Returns the width of that image.",291,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",291,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",291,N],[11,"get_texture","","Returns the corresponding texture.",291,[[["self"]],["integraltexture2darray"]]],[11,"get_layer","","Returns the layer index.",291,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",291,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",291,[[["self"],["u32"]],["option",["integraltexture2darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",291,[[["self"]],["integraltexture2darraylayermipmap"]]],[11,"width","","Returns the width of that image.",292,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",292,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",292,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",292,N],[11,"get_texture","","Returns the corresponding texture.",292,[[["self"]],["integraltexture2darray"]]],[11,"get_level","","Returns the texture level.",292,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",292,[[["self"]],["integraltexture2darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",292,[[["self"],["u32"]],["option",["integraltexture2darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",293,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",293,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",293,N],[0,"unsigned_texture2d_array","glium::texture","Contains the implementation of `UnsignedTexture2dArray`.",N,N],[3,"UnsignedTexture2dArray","glium::texture::unsigned_texture2d_array","An array of two-dimensional textures containing unsigned…",N,N],[3,"UnsignedTexture2dArrayLayer","","Represents a single layer of a `UnsignedTexture2dArray`.",N,N],[3,"UnsignedTexture2dArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"UnsignedTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",294,[[["self"]],["sampler",["unsignedtexture2darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",294,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",294,[[["f"],["vec"]],["result",["unsignedtexture2darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",294,[[["f"],["vec"],["mipmapsoption"]],["result",["unsignedtexture2darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",294,[[["f"],["vec"],["uncompresseduintformat"],["mipmapsoption"]],["result",["unsignedtexture2darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",294,[[["f"],["u32"],["u32"],["u32"]],["result",["unsignedtexture2darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",294,[[["f"],["uncompresseduintformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["unsignedtexture2darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",294,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["unsignedtexture2darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",294,[[["f"],["uncompresseduintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["unsignedtexture2darray"]]],[11,"width","","Returns the width of that image.",294,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",294,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",294,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",294,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",294,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",294,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",294,[[["self"]],["unsignedtexture2darraylayer"]]],[11,"layer","","Access a single layer of this texture.",294,[[["self"],["u32"]],["option",["unsignedtexture2darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",294,[[["self"],["u32"]],["option",["unsignedtexture2darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",294,[[["self"]],["unsignedtexture2darraymipmap"]]],[11,"width","","Returns the width of that image.",295,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",295,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",295,N],[11,"get_texture","","Returns the corresponding texture.",295,[[["self"]],["unsignedtexture2darray"]]],[11,"get_layer","","Returns the layer index.",295,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",295,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",295,[[["self"],["u32"]],["option",["unsignedtexture2darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",295,[[["self"]],["unsignedtexture2darraylayermipmap"]]],[11,"width","","Returns the width of that image.",296,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",296,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",296,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",296,N],[11,"get_texture","","Returns the corresponding texture.",296,[[["self"]],["unsignedtexture2darray"]]],[11,"get_level","","Returns the texture level.",296,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",296,[[["self"]],["unsignedtexture2darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",296,[[["self"],["u32"]],["option",["unsignedtexture2darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",297,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",297,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",297,N],[0,"depth_texture2d_array","glium::texture","Contains the implementation of `DepthTexture2dArray`.",N,N],[3,"DepthTexture2dArray","glium::texture::depth_texture2d_array","An array of two-dimensional textures  containing depth data.",N,N],[3,"DepthTexture2dArrayLayer","","Represents a single layer of a `DepthTexture2dArray`.",N,N],[3,"DepthTexture2dArrayMipmap","","Represents a single mipmap level of a `DepthTexture2dArray`.",N,N],[3,"DepthTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",298,[[["self"]],["sampler",["depthtexture2darray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",298,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",298,[[["f"],["vec"]],["result",["depthtexture2darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",298,[[["f"],["vec"],["mipmapsoption"]],["result",["depthtexture2darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",298,[[["f"],["vec"],["depthformat"],["mipmapsoption"]],["result",["depthtexture2darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",298,[[["f"],["u32"],["u32"],["u32"]],["result",["depthtexture2darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",298,[[["f"],["depthformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["depthtexture2darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",298,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["depthtexture2darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",298,[[["f"],["depthformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthtexture2darray"]]],[11,"width","","Returns the width of that image.",298,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",298,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",298,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",298,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",298,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",298,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",298,[[["self"]],["depthtexture2darraylayer"]]],[11,"layer","","Access a single layer of this texture.",298,[[["self"],["u32"]],["option",["depthtexture2darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",298,[[["self"],["u32"]],["option",["depthtexture2darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",298,[[["self"]],["depthtexture2darraymipmap"]]],[11,"width","","Returns the width of that image.",299,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",299,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",299,N],[11,"get_texture","","Returns the corresponding texture.",299,[[["self"]],["depthtexture2darray"]]],[11,"get_layer","","Returns the layer index.",299,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",299,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",299,[[["self"],["u32"]],["option",["depthtexture2darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",299,[[["self"]],["depthtexture2darraylayermipmap"]]],[11,"width","","Returns the width of that image.",300,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",300,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",300,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",300,N],[11,"get_texture","","Returns the corresponding texture.",300,[[["self"]],["depthtexture2darray"]]],[11,"get_level","","Returns the texture level.",300,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",300,[[["self"]],["depthtexture2darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",300,[[["self"],["u32"]],["option",["depthtexture2darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",301,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",301,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",301,N],[0,"stencil_texture2d_array","glium::texture","Contains the implementation of `StencilTexture2dArray`.",N,N],[3,"StencilTexture2dArray","glium::texture::stencil_texture2d_array","An array of two-dimensional textures containing stencil…",N,N],[3,"StencilTexture2dArrayLayer","","Represents a single layer of a `StencilTexture2dArray`.",N,N],[3,"StencilTexture2dArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"StencilTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",302,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",302,[[["f"],["vec"]],["result",["stenciltexture2darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",302,[[["f"],["vec"],["mipmapsoption"]],["result",["stenciltexture2darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",302,[[["f"],["vec"],["stencilformat"],["mipmapsoption"]],["result",["stenciltexture2darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",302,[[["f"],["u32"],["u32"],["u32"]],["result",["stenciltexture2darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",302,[[["f"],["stencilformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["stenciltexture2darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",302,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["stenciltexture2darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",302,[[["f"],["stencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["stenciltexture2darray"]]],[11,"width","","Returns the width of that image.",302,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",302,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",302,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",302,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",302,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",302,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",302,[[["self"]],["stenciltexture2darraylayer"]]],[11,"layer","","Access a single layer of this texture.",302,[[["self"],["u32"]],["option",["stenciltexture2darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",302,[[["self"],["u32"]],["option",["stenciltexture2darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",302,[[["self"]],["stenciltexture2darraymipmap"]]],[11,"width","","Returns the width of that image.",303,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",303,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",303,N],[11,"get_texture","","Returns the corresponding texture.",303,[[["self"]],["stenciltexture2darray"]]],[11,"get_layer","","Returns the layer index.",303,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",303,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",303,[[["self"],["u32"]],["option",["stenciltexture2darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",303,[[["self"]],["stenciltexture2darraylayermipmap"]]],[11,"width","","Returns the width of that image.",304,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",304,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",304,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",304,N],[11,"get_texture","","Returns the corresponding texture.",304,[[["self"]],["stenciltexture2darray"]]],[11,"get_level","","Returns the texture level.",304,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",304,[[["self"]],["stenciltexture2darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",304,[[["self"],["u32"]],["option",["stenciltexture2darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",305,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",305,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",305,N],[0,"depth_stencil_texture2d_array","glium::texture","Contains the implementation of `DepthStencilTexture2dArray`.",N,N],[3,"DepthStencilTexture2dArray","glium::texture::depth_stencil_texture2d_array","An array of two-dimensional textures containing both depth…",N,N],[3,"DepthStencilTexture2dArrayLayer","","Represents a single layer of a `DepthStencilTexture2dArray`.",N,N],[3,"DepthStencilTexture2dArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"DepthStencilTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",306,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"new","","Builds a new texture by uploading data.",306,[[["f"],["vec"]],["result",["depthstenciltexture2darray","texturecreationerror"]]]],[11,"with_mipmaps","","Builds a new texture by uploading data.",306,[[["f"],["vec"],["mipmapsoption"]],["result",["depthstenciltexture2darray","texturecreationerror"]]]],[11,"with_format","","Builds a new texture with a specific format.",306,[[["f"],["vec"],["depthstencilformat"],["mipmapsoption"]],["result",["depthstenciltexture2darray","texturecreationerror"]]]],[11,"empty","","Creates an empty texture.",306,[[["f"],["u32"],["u32"],["u32"]],["result",["depthstenciltexture2darray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",306,[[["f"],["depthstencilformat"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["depthstenciltexture2darray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",306,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"]],["result",["depthstenciltexture2darray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",306,[[["f"],["depthstencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthstenciltexture2darray"]]],[11,"width","","Returns the width of that image.",306,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",306,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",306,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",306,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",306,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",306,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",306,[[["self"]],["depthstenciltexture2darraylayer"]]],[11,"layer","","Access a single layer of this texture.",306,[[["self"],["u32"]],["option",["depthstenciltexture2darraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",306,[[["self"],["u32"]],["option",["depthstenciltexture2darraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",306,[[["self"]],["depthstenciltexture2darraymipmap"]]],[11,"width","","Returns the width of that image.",307,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",307,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",307,N],[11,"get_texture","","Returns the corresponding texture.",307,[[["self"]],["depthstenciltexture2darray"]]],[11,"get_layer","","Returns the layer index.",307,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",307,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",307,[[["self"],["u32"]],["option",["depthstenciltexture2darraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",307,[[["self"]],["depthstenciltexture2darraylayermipmap"]]],[11,"width","","Returns the width of that image.",308,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",308,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",308,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",308,N],[11,"get_texture","","Returns the corresponding texture.",308,[[["self"]],["depthstenciltexture2darray"]]],[11,"get_level","","Returns the texture level.",308,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",308,[[["self"]],["depthstenciltexture2darraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",308,[[["self"],["u32"]],["option",["depthstenciltexture2darraylayermipmap"]]]],[11,"width","","Returns the width of that image.",309,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",309,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",309,N],[0,"texture2d_multisample_array","glium::texture","Contains the implementation of `Texture2dMultisampleArray`.",N,N],[3,"Texture2dMultisampleArray","glium::texture::texture2d_multisample_array","An array of two-dimensional textures containing…",N,N],[3,"Texture2dMultisampleArrayLayer","","Represents a single layer of a `Texture2dMultisampleArray`.",N,N],[3,"Texture2dMultisampleArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"Texture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",310,[[["self"]],["sampler",["texture2dmultisamplearray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",310,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",310,[[["f"],["u32"],["u32"],["u32"],["u32"]],["result",["texture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",310,[[["f"],["uncompressedfloatformat"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["texture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",310,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["texture2dmultisamplearray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",310,[[["f"],["uncompressedfloatformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["texture2dmultisamplearray"]]],[11,"width","","Returns the width of that image.",310,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",310,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",310,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",310,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",310,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",310,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",310,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",310,[[["self"]],["texture2dmultisamplearraylayer"]]],[11,"layer","","Access a single layer of this texture.",310,[[["self"],["u32"]],["option",["texture2dmultisamplearraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",310,[[["self"],["u32"]],["option",["texture2dmultisamplearraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",310,[[["self"]],["texture2dmultisamplearraymipmap"]]],[11,"width","","Returns the width of that image.",311,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",311,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",311,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",311,N],[11,"get_texture","","Returns the corresponding texture.",311,[[["self"]],["texture2dmultisamplearray"]]],[11,"get_layer","","Returns the layer index.",311,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",311,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",311,[[["self"],["u32"]],["option",["texture2dmultisamplearraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",311,[[["self"]],["texture2dmultisamplearraylayermipmap"]]],[11,"width","","Returns the width of that image.",312,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",312,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",312,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",312,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",312,N],[11,"get_texture","","Returns the corresponding texture.",312,[[["self"]],["texture2dmultisamplearray"]]],[11,"get_level","","Returns the texture level.",312,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",312,[[["self"]],["texture2dmultisamplearraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",312,[[["self"],["u32"]],["option",["texture2dmultisamplearraylayermipmap"]]]],[11,"width","","Returns the width of that image.",313,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",313,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",313,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",313,N],[0,"srgb_texture2d_multisample_array","glium::texture","Contains the implementation of…",N,N],[3,"SrgbTexture2dMultisampleArray","glium::texture::srgb_texture2d_multisample_array","An array of two-dimensional textures containing sRGB…",N,N],[3,"SrgbTexture2dMultisampleArrayLayer","","Represents a single layer of a…",N,N],[3,"SrgbTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"SrgbTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",314,[[["self"]],["sampler",["srgbtexture2dmultisamplearray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",314,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",314,[[["f"],["u32"],["u32"],["u32"],["u32"]],["result",["srgbtexture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",314,[[["f"],["srgbformat"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["srgbtexture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",314,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["srgbtexture2dmultisamplearray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",314,[[["f"],["srgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["srgbtexture2dmultisamplearray"]]],[11,"width","","Returns the width of that image.",314,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",314,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",314,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",314,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",314,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",314,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",314,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",314,[[["self"]],["srgbtexture2dmultisamplearraylayer"]]],[11,"layer","","Access a single layer of this texture.",314,[[["self"],["u32"]],["option",["srgbtexture2dmultisamplearraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",314,[[["self"],["u32"]],["option",["srgbtexture2dmultisamplearraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",314,[[["self"]],["srgbtexture2dmultisamplearraymipmap"]]],[11,"width","","Returns the width of that image.",315,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",315,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",315,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",315,N],[11,"get_texture","","Returns the corresponding texture.",315,[[["self"]],["srgbtexture2dmultisamplearray"]]],[11,"get_layer","","Returns the layer index.",315,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",315,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",315,[[["self"],["u32"]],["option",["srgbtexture2dmultisamplearraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",315,[[["self"]],["srgbtexture2dmultisamplearraylayermipmap"]]],[11,"width","","Returns the width of that image.",316,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",316,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",316,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",316,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",316,N],[11,"get_texture","","Returns the corresponding texture.",316,[[["self"]],["srgbtexture2dmultisamplearray"]]],[11,"get_level","","Returns the texture level.",316,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",316,[[["self"]],["srgbtexture2dmultisamplearraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",316,[[["self"],["u32"]],["option",["srgbtexture2dmultisamplearraylayermipmap"]]]],[11,"width","","Returns the width of that image.",317,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",317,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",317,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",317,N],[0,"integral_texture2d_multisample_array","glium::texture","Contains the implementation of…",N,N],[3,"IntegralTexture2dMultisampleArray","glium::texture::integral_texture2d_multisample_array","An array of two-dimensional textures containing signed…",N,N],[3,"IntegralTexture2dMultisampleArrayLayer","","Represents a single layer of a…",N,N],[3,"IntegralTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"IntegralTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",318,[[["self"]],["sampler",["integraltexture2dmultisamplearray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",318,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",318,[[["f"],["u32"],["u32"],["u32"],["u32"]],["result",["integraltexture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",318,[[["f"],["uncompressedintformat"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["integraltexture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",318,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["integraltexture2dmultisamplearray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",318,[[["f"],["uncompressedintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["integraltexture2dmultisamplearray"]]],[11,"width","","Returns the width of that image.",318,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",318,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",318,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",318,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",318,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",318,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",318,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",318,[[["self"]],["integraltexture2dmultisamplearraylayer"]]],[11,"layer","","Access a single layer of this texture.",318,[[["self"],["u32"]],["option",["integraltexture2dmultisamplearraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",318,[[["self"],["u32"]],["option",["integraltexture2dmultisamplearraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",318,[[["self"]],["integraltexture2dmultisamplearraymipmap"]]],[11,"width","","Returns the width of that image.",319,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",319,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",319,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",319,N],[11,"get_texture","","Returns the corresponding texture.",319,[[["self"]],["integraltexture2dmultisamplearray"]]],[11,"get_layer","","Returns the layer index.",319,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",319,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",319,[[["self"],["u32"]],["option",["integraltexture2dmultisamplearraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",319,[[["self"]],["integraltexture2dmultisamplearraylayermipmap"]]],[11,"width","","Returns the width of that image.",320,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",320,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",320,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",320,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",320,N],[11,"get_texture","","Returns the corresponding texture.",320,[[["self"]],["integraltexture2dmultisamplearray"]]],[11,"get_level","","Returns the texture level.",320,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",320,[[["self"]],["integraltexture2dmultisamplearraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",320,[[["self"],["u32"]],["option",["integraltexture2dmultisamplearraylayermipmap"]]]],[11,"width","","Returns the width of that image.",321,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",321,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",321,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",321,N],[0,"unsigned_texture2d_multisample_array","glium::texture","Contains the implementation of…",N,N],[3,"UnsignedTexture2dMultisampleArray","glium::texture::unsigned_texture2d_multisample_array","An array of two-dimensional textures containing unsigned…",N,N],[3,"UnsignedTexture2dMultisampleArrayLayer","","Represents a single layer of a…",N,N],[3,"UnsignedTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"UnsignedTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",322,[[["self"]],["sampler",["unsignedtexture2dmultisamplearray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",322,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",322,[[["f"],["u32"],["u32"],["u32"],["u32"]],["result",["unsignedtexture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",322,[[["f"],["uncompresseduintformat"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["unsignedtexture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",322,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["unsignedtexture2dmultisamplearray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",322,[[["f"],["uncompresseduintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["unsignedtexture2dmultisamplearray"]]],[11,"width","","Returns the width of that image.",322,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",322,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",322,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",322,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",322,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",322,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",322,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",322,[[["self"]],["unsignedtexture2dmultisamplearraylayer"]]],[11,"layer","","Access a single layer of this texture.",322,[[["self"],["u32"]],["option",["unsignedtexture2dmultisamplearraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",322,[[["self"],["u32"]],["option",["unsignedtexture2dmultisamplearraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",322,[[["self"]],["unsignedtexture2dmultisamplearraymipmap"]]],[11,"width","","Returns the width of that image.",323,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",323,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",323,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",323,N],[11,"get_texture","","Returns the corresponding texture.",323,[[["self"]],["unsignedtexture2dmultisamplearray"]]],[11,"get_layer","","Returns the layer index.",323,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",323,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",323,[[["self"],["u32"]],["option",["unsignedtexture2dmultisamplearraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",323,[[["self"]],["unsignedtexture2dmultisamplearraylayermipmap"]]],[11,"width","","Returns the width of that image.",324,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",324,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",324,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",324,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",324,N],[11,"get_texture","","Returns the corresponding texture.",324,[[["self"]],["unsignedtexture2dmultisamplearray"]]],[11,"get_level","","Returns the texture level.",324,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",324,[[["self"]],["unsignedtexture2dmultisamplearraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",324,[[["self"],["u32"]],["option",["unsignedtexture2dmultisamplearraylayermipmap"]]]],[11,"width","","Returns the width of that image.",325,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",325,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",325,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",325,N],[0,"depth_texture2d_multisample_array","glium::texture","Contains the implementation of…",N,N],[3,"DepthTexture2dMultisampleArray","glium::texture::depth_texture2d_multisample_array","An array of two-dimensional textures  containing depth data.",N,N],[3,"DepthTexture2dMultisampleArrayLayer","","Represents a single layer of a…",N,N],[3,"DepthTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"DepthTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",326,[[["self"]],["sampler",["depthtexture2dmultisamplearray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",326,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",326,[[["f"],["u32"],["u32"],["u32"],["u32"]],["result",["depthtexture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",326,[[["f"],["depthformat"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["depthtexture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",326,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["depthtexture2dmultisamplearray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",326,[[["f"],["depthformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthtexture2dmultisamplearray"]]],[11,"width","","Returns the width of that image.",326,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",326,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",326,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",326,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",326,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",326,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",326,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",326,[[["self"]],["depthtexture2dmultisamplearraylayer"]]],[11,"layer","","Access a single layer of this texture.",326,[[["self"],["u32"]],["option",["depthtexture2dmultisamplearraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",326,[[["self"],["u32"]],["option",["depthtexture2dmultisamplearraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",326,[[["self"]],["depthtexture2dmultisamplearraymipmap"]]],[11,"width","","Returns the width of that image.",327,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",327,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",327,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",327,N],[11,"get_texture","","Returns the corresponding texture.",327,[[["self"]],["depthtexture2dmultisamplearray"]]],[11,"get_layer","","Returns the layer index.",327,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",327,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",327,[[["self"],["u32"]],["option",["depthtexture2dmultisamplearraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",327,[[["self"]],["depthtexture2dmultisamplearraylayermipmap"]]],[11,"width","","Returns the width of that image.",328,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",328,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",328,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",328,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",328,N],[11,"get_texture","","Returns the corresponding texture.",328,[[["self"]],["depthtexture2dmultisamplearray"]]],[11,"get_level","","Returns the texture level.",328,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",328,[[["self"]],["depthtexture2dmultisamplearraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",328,[[["self"],["u32"]],["option",["depthtexture2dmultisamplearraylayermipmap"]]]],[11,"width","","Returns the width of that image.",329,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",329,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",329,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",329,N],[0,"stencil_texture2d_multisample_array","glium::texture","Contains the implementation of…",N,N],[3,"StencilTexture2dMultisampleArray","glium::texture::stencil_texture2d_multisample_array","An array of two-dimensional textures containing stencil…",N,N],[3,"StencilTexture2dMultisampleArrayLayer","","Represents a single layer of a…",N,N],[3,"StencilTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"StencilTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",330,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",330,[[["f"],["u32"],["u32"],["u32"],["u32"]],["result",["stenciltexture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",330,[[["f"],["stencilformat"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["stenciltexture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",330,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["stenciltexture2dmultisamplearray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",330,[[["f"],["stencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["stenciltexture2dmultisamplearray"]]],[11,"width","","Returns the width of that image.",330,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",330,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",330,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",330,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",330,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",330,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",330,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",330,[[["self"]],["stenciltexture2dmultisamplearraylayer"]]],[11,"layer","","Access a single layer of this texture.",330,[[["self"],["u32"]],["option",["stenciltexture2dmultisamplearraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",330,[[["self"],["u32"]],["option",["stenciltexture2dmultisamplearraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",330,[[["self"]],["stenciltexture2dmultisamplearraymipmap"]]],[11,"width","","Returns the width of that image.",331,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",331,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",331,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",331,N],[11,"get_texture","","Returns the corresponding texture.",331,[[["self"]],["stenciltexture2dmultisamplearray"]]],[11,"get_layer","","Returns the layer index.",331,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",331,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",331,[[["self"],["u32"]],["option",["stenciltexture2dmultisamplearraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",331,[[["self"]],["stenciltexture2dmultisamplearraylayermipmap"]]],[11,"width","","Returns the width of that image.",332,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",332,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",332,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",332,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",332,N],[11,"get_texture","","Returns the corresponding texture.",332,[[["self"]],["stenciltexture2dmultisamplearray"]]],[11,"get_level","","Returns the texture level.",332,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",332,[[["self"]],["stenciltexture2dmultisamplearraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",332,[[["self"],["u32"]],["option",["stenciltexture2dmultisamplearraylayermipmap"]]]],[11,"width","","Returns the width of that image.",333,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",333,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",333,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",333,N],[0,"depth_stencil_texture2d_multisample_array","glium::texture","Contains the implementation of…",N,N],[3,"DepthStencilTexture2dMultisampleArray","glium::texture::depth_stencil_texture2d_multisample_array","An array of two-dimensional textures containing both depth…",N,N],[3,"DepthStencilTexture2dMultisampleArrayLayer","","Represents a single layer of a…",N,N],[3,"DepthStencilTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"DepthStencilTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",334,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",334,[[["f"],["u32"],["u32"],["u32"],["u32"]],["result",["depthstenciltexture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",334,[[["f"],["depthstencilformat"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["depthstenciltexture2dmultisamplearray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",334,[[["f"],["mipmapsoption"],["u32"],["u32"],["u32"],["u32"]],["result",["depthstenciltexture2dmultisamplearray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",334,[[["f"],["depthstencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthstenciltexture2dmultisamplearray"]]],[11,"width","","Returns the width of that image.",334,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",334,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",334,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",334,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",334,N],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",334,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",334,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",334,[[["self"]],["depthstenciltexture2dmultisamplearraylayer"]]],[11,"layer","","Access a single layer of this texture.",334,[[["self"],["u32"]],["option",["depthstenciltexture2dmultisamplearraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",334,[[["self"],["u32"]],["option",["depthstenciltexture2dmultisamplearraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",334,[[["self"]],["depthstenciltexture2dmultisamplearraymipmap"]]],[11,"width","","Returns the width of that image.",335,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",335,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",335,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",335,N],[11,"get_texture","","Returns the corresponding texture.",335,[[["self"]],["depthstenciltexture2dmultisamplearray"]]],[11,"get_layer","","Returns the layer index.",335,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",335,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",335,[[["self"],["u32"]],["option",["depthstenciltexture2dmultisamplearraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",335,[[["self"]],["depthstenciltexture2dmultisamplearraylayermipmap"]]],[11,"width","","Returns the width of that image.",336,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",336,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",336,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",336,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",336,N],[11,"get_texture","","Returns the corresponding texture.",336,[[["self"]],["depthstenciltexture2dmultisamplearray"]]],[11,"get_level","","Returns the texture level.",336,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",336,[[["self"]],["depthstenciltexture2dmultisamplearraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",336,[[["self"],["u32"]],["option",["depthstenciltexture2dmultisamplearraylayermipmap"]]]],[11,"width","","Returns the width of that image.",337,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",337,[[["self"]],["u32"]]],[11,"samples","","Returns the number of samples of that image.",337,[[["self"]],["u32"]]],[11,"dimensions","","Returns the width and height of that image.",337,N],[0,"cubemap","glium::texture","Contains the implementation of `Cubemap`.",N,N],[3,"Cubemap","glium::texture::cubemap","A cube texture  containing floating-point data.",N,N],[3,"CubemapMipmap","","Represents a single mipmap level of a `Cubemap`.",N,N],[3,"CubemapImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",338,[[["self"]],["sampler",["cubemap"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",338,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",338,[[["f"],["u32"]],["result",["cubemap","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",338,[[["f"],["uncompressedfloatformat"],["mipmapsoption"],["u32"]],["result",["cubemap","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",338,[[["f"],["mipmapsoption"],["u32"]],["result",["cubemap","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",338,[[["f"],["uncompressedfloatformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["cubemap"]]],[11,"width","","Returns the width of that image.",338,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",338,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",338,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",338,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",338,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",338,[[["self"],["u32"]],["option",["cubemapmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",338,[[["self"]],["cubemapmipmap"]]],[11,"width","","Returns the width of that image.",339,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",339,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",339,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",339,[[["self"]],["cubemap"]]],[11,"get_level","","Returns the texture level.",339,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",339,[[["self"],["cubelayer"]],["cubemapimage"]]],[11,"width","","Returns the width of that image.",340,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",340,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",340,[[["self"]],["u32"]]],[0,"compressed_cubemap","glium::texture","Contains the implementation of `CompressedCubemap`.",N,N],[3,"CompressedCubemap","glium::texture::compressed_cubemap","A compressed cube texture  containing floating-point data.",N,N],[3,"CompressedCubemapMipmap","","Represents a single mipmap level of a `CompressedCubemap`.",N,N],[3,"CompressedCubemapImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",341,[[["self"]],["sampler",["compressedcubemap"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",341,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",341,[[["f"],["compressedformat"],["compressedmipmapsoption"],["u32"]],["result",["compressedcubemap","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",341,[[["f"],["compressedformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedcubemap"]]],[11,"width","","Returns the width of that image.",341,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",341,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",341,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",341,[[["self"]],["u32"]]],[11,"read_compressed_data","","Reads the content of the texture to RAM without…",341,[[["self"]],["option"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",341,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",341,[[["self"],["u32"]],["option",["compressedcubemapmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",341,[[["self"]],["compressedcubemapmipmap"]]],[11,"width","","Returns the width of that image.",342,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",342,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",342,[[["self"]],["u32"]]],[11,"read_compressed_data","","Reads the content of the texture level to RAM without…",342,[[["self"]],["option"]]],[11,"get_texture","","Returns the corresponding texture.",342,[[["self"]],["compressedcubemap"]]],[11,"get_level","","Returns the texture level.",342,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",342,[[["self"],["cubelayer"]],["compressedcubemapimage"]]],[11,"width","","Returns the width of that image.",343,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",343,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",343,[[["self"]],["u32"]]],[0,"srgb_cubemap","glium::texture","Contains the implementation of `SrgbCubemap`.",N,N],[3,"SrgbCubemap","glium::texture::srgb_cubemap","A cube texture  containing sRGB floating-point data.",N,N],[3,"SrgbCubemapMipmap","","Represents a single mipmap level of a `SrgbCubemap`.",N,N],[3,"SrgbCubemapImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",344,[[["self"]],["sampler",["srgbcubemap"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",344,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",344,[[["f"],["u32"]],["result",["srgbcubemap","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",344,[[["f"],["srgbformat"],["mipmapsoption"],["u32"]],["result",["srgbcubemap","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",344,[[["f"],["mipmapsoption"],["u32"]],["result",["srgbcubemap","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",344,[[["f"],["srgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["srgbcubemap"]]],[11,"width","","Returns the width of that image.",344,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",344,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",344,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",344,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",344,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",344,[[["self"],["u32"]],["option",["srgbcubemapmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",344,[[["self"]],["srgbcubemapmipmap"]]],[11,"width","","Returns the width of that image.",345,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",345,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",345,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",345,[[["self"]],["srgbcubemap"]]],[11,"get_level","","Returns the texture level.",345,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",345,[[["self"],["cubelayer"]],["srgbcubemapimage"]]],[11,"width","","Returns the width of that image.",346,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",346,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",346,[[["self"]],["u32"]]],[0,"compressed_srgb_cubemap","glium::texture","Contains the implementation of `CompressedSrgbCubemap`.",N,N],[3,"CompressedSrgbCubemap","glium::texture::compressed_srgb_cubemap","A compressed cube texture containing sRGB floating-point…",N,N],[3,"CompressedSrgbCubemapMipmap","","Represents a single mipmap level of a…",N,N],[3,"CompressedSrgbCubemapImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",347,[[["self"]],["sampler",["compressedsrgbcubemap"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",347,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",347,[[["f"],["compressedsrgbformat"],["compressedmipmapsoption"],["u32"]],["result",["compressedsrgbcubemap","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",347,[[["f"],["compressedsrgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedsrgbcubemap"]]],[11,"width","","Returns the width of that image.",347,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",347,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",347,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",347,[[["self"]],["u32"]]],[11,"read_compressed_data","","Reads the content of the texture to RAM without…",347,[[["self"]],["option"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",347,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",347,[[["self"],["u32"]],["option",["compressedsrgbcubemapmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",347,[[["self"]],["compressedsrgbcubemapmipmap"]]],[11,"width","","Returns the width of that image.",348,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",348,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",348,[[["self"]],["u32"]]],[11,"read_compressed_data","","Reads the content of the texture level to RAM without…",348,[[["self"]],["option"]]],[11,"get_texture","","Returns the corresponding texture.",348,[[["self"]],["compressedsrgbcubemap"]]],[11,"get_level","","Returns the texture level.",348,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",348,[[["self"],["cubelayer"]],["compressedsrgbcubemapimage"]]],[11,"width","","Returns the width of that image.",349,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",349,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",349,[[["self"]],["u32"]]],[0,"integral_cubemap","glium::texture","Contains the implementation of `IntegralCubemap`.",N,N],[3,"IntegralCubemap","glium::texture::integral_cubemap","A cube texture  containing signed integral data.",N,N],[3,"IntegralCubemapMipmap","","Represents a single mipmap level of a `IntegralCubemap`.",N,N],[3,"IntegralCubemapImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",350,[[["self"]],["sampler",["integralcubemap"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",350,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",350,[[["f"],["u32"]],["result",["integralcubemap","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",350,[[["f"],["uncompressedintformat"],["mipmapsoption"],["u32"]],["result",["integralcubemap","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",350,[[["f"],["mipmapsoption"],["u32"]],["result",["integralcubemap","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",350,[[["f"],["uncompressedintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["integralcubemap"]]],[11,"width","","Returns the width of that image.",350,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",350,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",350,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",350,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",350,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",350,[[["self"],["u32"]],["option",["integralcubemapmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",350,[[["self"]],["integralcubemapmipmap"]]],[11,"width","","Returns the width of that image.",351,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",351,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",351,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",351,[[["self"]],["integralcubemap"]]],[11,"get_level","","Returns the texture level.",351,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",351,[[["self"],["cubelayer"]],["integralcubemapimage"]]],[11,"width","","Returns the width of that image.",352,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",352,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",352,[[["self"]],["u32"]]],[0,"unsigned_cubemap","glium::texture","Contains the implementation of `UnsignedCubemap`.",N,N],[3,"UnsignedCubemap","glium::texture::unsigned_cubemap","A cube texture  containing unsigned integral data.",N,N],[3,"UnsignedCubemapMipmap","","Represents a single mipmap level of a `UnsignedCubemap`.",N,N],[3,"UnsignedCubemapImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",353,[[["self"]],["sampler",["unsignedcubemap"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",353,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",353,[[["f"],["u32"]],["result",["unsignedcubemap","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",353,[[["f"],["uncompresseduintformat"],["mipmapsoption"],["u32"]],["result",["unsignedcubemap","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",353,[[["f"],["mipmapsoption"],["u32"]],["result",["unsignedcubemap","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",353,[[["f"],["uncompresseduintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["unsignedcubemap"]]],[11,"width","","Returns the width of that image.",353,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",353,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",353,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",353,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",353,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",353,[[["self"],["u32"]],["option",["unsignedcubemapmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",353,[[["self"]],["unsignedcubemapmipmap"]]],[11,"width","","Returns the width of that image.",354,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",354,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",354,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",354,[[["self"]],["unsignedcubemap"]]],[11,"get_level","","Returns the texture level.",354,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",354,[[["self"],["cubelayer"]],["unsignedcubemapimage"]]],[11,"width","","Returns the width of that image.",355,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",355,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",355,[[["self"]],["u32"]]],[0,"depth_cubemap","glium::texture","Contains the implementation of `DepthCubemap`.",N,N],[3,"DepthCubemap","glium::texture::depth_cubemap","A cube texture  containing depth data.",N,N],[3,"DepthCubemapMipmap","","Represents a single mipmap level of a `DepthCubemap`.",N,N],[3,"DepthCubemapImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",356,[[["self"]],["sampler",["depthcubemap"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",356,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",356,[[["f"],["u32"]],["result",["depthcubemap","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",356,[[["f"],["depthformat"],["mipmapsoption"],["u32"]],["result",["depthcubemap","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",356,[[["f"],["mipmapsoption"],["u32"]],["result",["depthcubemap","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",356,[[["f"],["depthformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthcubemap"]]],[11,"width","","Returns the width of that image.",356,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",356,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",356,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",356,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",356,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",356,[[["self"],["u32"]],["option",["depthcubemapmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",356,[[["self"]],["depthcubemapmipmap"]]],[11,"width","","Returns the width of that image.",357,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",357,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",357,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",357,[[["self"]],["depthcubemap"]]],[11,"get_level","","Returns the texture level.",357,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",357,[[["self"],["cubelayer"]],["depthcubemapimage"]]],[11,"width","","Returns the width of that image.",358,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",358,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",358,[[["self"]],["u32"]]],[0,"stencil_cubemap","glium::texture","Contains the implementation of `StencilCubemap`.",N,N],[3,"StencilCubemap","glium::texture::stencil_cubemap","A cube texture  containing stencil data.",N,N],[3,"StencilCubemapMipmap","","Represents a single mipmap level of a `StencilCubemap`.",N,N],[3,"StencilCubemapImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",359,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",359,[[["f"],["u32"]],["result",["stencilcubemap","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",359,[[["f"],["stencilformat"],["mipmapsoption"],["u32"]],["result",["stencilcubemap","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",359,[[["f"],["mipmapsoption"],["u32"]],["result",["stencilcubemap","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",359,[[["f"],["stencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["stencilcubemap"]]],[11,"width","","Returns the width of that image.",359,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",359,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",359,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",359,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",359,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",359,[[["self"],["u32"]],["option",["stencilcubemapmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",359,[[["self"]],["stencilcubemapmipmap"]]],[11,"width","","Returns the width of that image.",360,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",360,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",360,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",360,[[["self"]],["stencilcubemap"]]],[11,"get_level","","Returns the texture level.",360,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",360,[[["self"],["cubelayer"]],["stencilcubemapimage"]]],[11,"width","","Returns the width of that image.",361,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",361,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",361,[[["self"]],["u32"]]],[0,"depth_stencil_cubemap","glium::texture","Contains the implementation of `DepthStencilCubemap`.",N,N],[3,"DepthStencilCubemap","glium::texture::depth_stencil_cubemap","A cube texture  containing both depth and stencil data.",N,N],[3,"DepthStencilCubemapMipmap","","Represents a single mipmap level of a `DepthStencilCubemap`.",N,N],[3,"DepthStencilCubemapImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",362,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",362,[[["f"],["u32"]],["result",["depthstencilcubemap","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",362,[[["f"],["depthstencilformat"],["mipmapsoption"],["u32"]],["result",["depthstencilcubemap","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",362,[[["f"],["mipmapsoption"],["u32"]],["result",["depthstencilcubemap","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",362,[[["f"],["depthstencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthstencilcubemap"]]],[11,"width","","Returns the width of that image.",362,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",362,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",362,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",362,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",362,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",362,[[["self"],["u32"]],["option",["depthstencilcubemapmipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",362,[[["self"]],["depthstencilcubemapmipmap"]]],[11,"width","","Returns the width of that image.",363,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",363,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",363,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",363,[[["self"]],["depthstencilcubemap"]]],[11,"get_level","","Returns the texture level.",363,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",363,[[["self"],["cubelayer"]],["depthstencilcubemapimage"]]],[11,"width","","Returns the width of that image.",364,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",364,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",364,[[["self"]],["u32"]]],[0,"cubemap_array","glium::texture","Contains the implementation of `CubemapArray`.",N,N],[3,"CubemapArray","glium::texture::cubemap_array","An array of cube textures  containing floating-point data.",N,N],[3,"CubemapArrayLayer","","Represents a single layer of a `CubemapArray`.",N,N],[3,"CubemapArrayMipmap","","Represents a single mipmap level of a `CubemapArray`.",N,N],[3,"CubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[3,"CubemapArrayImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",365,[[["self"]],["sampler",["cubemaparray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",365,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",365,[[["f"],["u32"],["u32"]],["result",["cubemaparray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",365,[[["f"],["uncompressedfloatformat"],["mipmapsoption"],["u32"],["u32"]],["result",["cubemaparray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",365,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["cubemaparray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",365,[[["f"],["uncompressedfloatformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["cubemaparray"]]],[11,"width","","Returns the width of that image.",365,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",365,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",365,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",365,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",365,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",365,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",365,[[["self"]],["cubemaparraylayer"]]],[11,"layer","","Access a single layer of this texture.",365,[[["self"],["u32"]],["option",["cubemaparraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",365,[[["self"],["u32"]],["option",["cubemaparraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",365,[[["self"]],["cubemaparraymipmap"]]],[11,"width","","Returns the width of that image.",366,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",366,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",366,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",366,[[["self"]],["cubemaparray"]]],[11,"get_layer","","Returns the layer index.",366,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",366,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",366,[[["self"],["u32"]],["option",["cubemaparraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",366,[[["self"]],["cubemaparraylayermipmap"]]],[11,"width","","Returns the width of that image.",367,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",367,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",367,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",367,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",367,[[["self"]],["cubemaparray"]]],[11,"get_level","","Returns the texture level.",367,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",367,[[["self"]],["cubemaparraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",367,[[["self"],["u32"]],["option",["cubemaparraylayermipmap"]]]],[11,"width","","Returns the width of that image.",368,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",368,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",368,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",368,[[["self"],["cubelayer"]],["cubemaparrayimage"]]],[11,"width","","Returns the width of that image.",369,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",369,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",369,[[["self"]],["u32"]]],[0,"compressed_cubemap_array","glium::texture","Contains the implementation of `CompressedCubemapArray`.",N,N],[3,"CompressedCubemapArray","glium::texture::compressed_cubemap_array","An array of compressed cube textures containing…",N,N],[3,"CompressedCubemapArrayLayer","","Represents a single layer of a `CompressedCubemapArray`.",N,N],[3,"CompressedCubemapArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"CompressedCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[3,"CompressedCubemapArrayImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",370,[[["self"]],["sampler",["compressedcubemaparray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",370,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",370,[[["f"],["compressedformat"],["compressedmipmapsoption"],["u32"],["u32"]],["result",["compressedcubemaparray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",370,[[["f"],["compressedformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedcubemaparray"]]],[11,"width","","Returns the width of that image.",370,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",370,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",370,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",370,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",370,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",370,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",370,[[["self"]],["compressedcubemaparraylayer"]]],[11,"layer","","Access a single layer of this texture.",370,[[["self"],["u32"]],["option",["compressedcubemaparraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",370,[[["self"],["u32"]],["option",["compressedcubemaparraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",370,[[["self"]],["compressedcubemaparraymipmap"]]],[11,"width","","Returns the width of that image.",371,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",371,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",371,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",371,[[["self"]],["compressedcubemaparray"]]],[11,"get_layer","","Returns the layer index.",371,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",371,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",371,[[["self"],["u32"]],["option",["compressedcubemaparraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",371,[[["self"]],["compressedcubemaparraylayermipmap"]]],[11,"width","","Returns the width of that image.",372,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",372,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",372,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",372,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",372,[[["self"]],["compressedcubemaparray"]]],[11,"get_level","","Returns the texture level.",372,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",372,[[["self"]],["compressedcubemaparraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",372,[[["self"],["u32"]],["option",["compressedcubemaparraylayermipmap"]]]],[11,"width","","Returns the width of that image.",373,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",373,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",373,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",373,[[["self"],["cubelayer"]],["compressedcubemaparrayimage"]]],[11,"width","","Returns the width of that image.",374,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",374,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",374,[[["self"]],["u32"]]],[0,"srgb_cubemap_array","glium::texture","Contains the implementation of `SrgbCubemapArray`.",N,N],[3,"SrgbCubemapArray","glium::texture::srgb_cubemap_array","An array of cube textures containing sRGB floating-point…",N,N],[3,"SrgbCubemapArrayLayer","","Represents a single layer of a `SrgbCubemapArray`.",N,N],[3,"SrgbCubemapArrayMipmap","","Represents a single mipmap level of a `SrgbCubemapArray`.",N,N],[3,"SrgbCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[3,"SrgbCubemapArrayImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",375,[[["self"]],["sampler",["srgbcubemaparray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",375,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",375,[[["f"],["u32"],["u32"]],["result",["srgbcubemaparray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",375,[[["f"],["srgbformat"],["mipmapsoption"],["u32"],["u32"]],["result",["srgbcubemaparray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",375,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["srgbcubemaparray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",375,[[["f"],["srgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["srgbcubemaparray"]]],[11,"width","","Returns the width of that image.",375,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",375,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",375,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",375,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",375,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",375,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",375,[[["self"]],["srgbcubemaparraylayer"]]],[11,"layer","","Access a single layer of this texture.",375,[[["self"],["u32"]],["option",["srgbcubemaparraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",375,[[["self"],["u32"]],["option",["srgbcubemaparraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",375,[[["self"]],["srgbcubemaparraymipmap"]]],[11,"width","","Returns the width of that image.",376,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",376,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",376,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",376,[[["self"]],["srgbcubemaparray"]]],[11,"get_layer","","Returns the layer index.",376,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",376,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",376,[[["self"],["u32"]],["option",["srgbcubemaparraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",376,[[["self"]],["srgbcubemaparraylayermipmap"]]],[11,"width","","Returns the width of that image.",377,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",377,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",377,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",377,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",377,[[["self"]],["srgbcubemaparray"]]],[11,"get_level","","Returns the texture level.",377,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",377,[[["self"]],["srgbcubemaparraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",377,[[["self"],["u32"]],["option",["srgbcubemaparraylayermipmap"]]]],[11,"width","","Returns the width of that image.",378,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",378,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",378,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",378,[[["self"],["cubelayer"]],["srgbcubemaparrayimage"]]],[11,"width","","Returns the width of that image.",379,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",379,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",379,[[["self"]],["u32"]]],[0,"compressed_srgb_cubemap_array","glium::texture","Contains the implementation of `CompressedSrgbCubemapArray`.",N,N],[3,"CompressedSrgbCubemapArray","glium::texture::compressed_srgb_cubemap_array","An array of compressed cube textures containing sRGB…",N,N],[3,"CompressedSrgbCubemapArrayLayer","","Represents a single layer of a `CompressedSrgbCubemapArray`.",N,N],[3,"CompressedSrgbCubemapArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"CompressedSrgbCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[3,"CompressedSrgbCubemapArrayImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",380,[[["self"]],["sampler",["compressedsrgbcubemaparray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",380,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",380,[[["f"],["compressedsrgbformat"],["compressedmipmapsoption"],["u32"],["u32"]],["result",["compressedsrgbcubemaparray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",380,[[["f"],["compressedsrgbformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["compressedsrgbcubemaparray"]]],[11,"width","","Returns the width of that image.",380,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",380,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",380,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",380,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",380,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",380,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",380,[[["self"]],["compressedsrgbcubemaparraylayer"]]],[11,"layer","","Access a single layer of this texture.",380,[[["self"],["u32"]],["option",["compressedsrgbcubemaparraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",380,[[["self"],["u32"]],["option",["compressedsrgbcubemaparraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",380,[[["self"]],["compressedsrgbcubemaparraymipmap"]]],[11,"width","","Returns the width of that image.",381,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",381,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",381,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",381,[[["self"]],["compressedsrgbcubemaparray"]]],[11,"get_layer","","Returns the layer index.",381,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",381,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",381,[[["self"],["u32"]],["option",["compressedsrgbcubemaparraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",381,[[["self"]],["compressedsrgbcubemaparraylayermipmap"]]],[11,"width","","Returns the width of that image.",382,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",382,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",382,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",382,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",382,[[["self"]],["compressedsrgbcubemaparray"]]],[11,"get_level","","Returns the texture level.",382,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",382,[[["self"]],["compressedsrgbcubemaparraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",382,[[["self"],["u32"]],["option",["compressedsrgbcubemaparraylayermipmap"]]]],[11,"width","","Returns the width of that image.",383,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",383,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",383,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",383,[[["self"],["cubelayer"]],["compressedsrgbcubemaparrayimage"]]],[11,"width","","Returns the width of that image.",384,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",384,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",384,[[["self"]],["u32"]]],[0,"integral_cubemap_array","glium::texture","Contains the implementation of `IntegralCubemapArray`.",N,N],[3,"IntegralCubemapArray","glium::texture::integral_cubemap_array","An array of cube textures  containing signed integral data.",N,N],[3,"IntegralCubemapArrayLayer","","Represents a single layer of a `IntegralCubemapArray`.",N,N],[3,"IntegralCubemapArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"IntegralCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[3,"IntegralCubemapArrayImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",385,[[["self"]],["sampler",["integralcubemaparray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",385,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",385,[[["f"],["u32"],["u32"]],["result",["integralcubemaparray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",385,[[["f"],["uncompressedintformat"],["mipmapsoption"],["u32"],["u32"]],["result",["integralcubemaparray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",385,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["integralcubemaparray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",385,[[["f"],["uncompressedintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["integralcubemaparray"]]],[11,"width","","Returns the width of that image.",385,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",385,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",385,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",385,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",385,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",385,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",385,[[["self"]],["integralcubemaparraylayer"]]],[11,"layer","","Access a single layer of this texture.",385,[[["self"],["u32"]],["option",["integralcubemaparraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",385,[[["self"],["u32"]],["option",["integralcubemaparraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",385,[[["self"]],["integralcubemaparraymipmap"]]],[11,"width","","Returns the width of that image.",386,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",386,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",386,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",386,[[["self"]],["integralcubemaparray"]]],[11,"get_layer","","Returns the layer index.",386,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",386,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",386,[[["self"],["u32"]],["option",["integralcubemaparraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",386,[[["self"]],["integralcubemaparraylayermipmap"]]],[11,"width","","Returns the width of that image.",387,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",387,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",387,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",387,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",387,[[["self"]],["integralcubemaparray"]]],[11,"get_level","","Returns the texture level.",387,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",387,[[["self"]],["integralcubemaparraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",387,[[["self"],["u32"]],["option",["integralcubemaparraylayermipmap"]]]],[11,"width","","Returns the width of that image.",388,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",388,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",388,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",388,[[["self"],["cubelayer"]],["integralcubemaparrayimage"]]],[11,"width","","Returns the width of that image.",389,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",389,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",389,[[["self"]],["u32"]]],[0,"unsigned_cubemap_array","glium::texture","Contains the implementation of `UnsignedCubemapArray`.",N,N],[3,"UnsignedCubemapArray","glium::texture::unsigned_cubemap_array","An array of cube textures containing unsigned integral…",N,N],[3,"UnsignedCubemapArrayLayer","","Represents a single layer of a `UnsignedCubemapArray`.",N,N],[3,"UnsignedCubemapArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"UnsignedCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[3,"UnsignedCubemapArrayImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",390,[[["self"]],["sampler",["unsignedcubemaparray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",390,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",390,[[["f"],["u32"],["u32"]],["result",["unsignedcubemaparray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",390,[[["f"],["uncompresseduintformat"],["mipmapsoption"],["u32"],["u32"]],["result",["unsignedcubemaparray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",390,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["unsignedcubemaparray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",390,[[["f"],["uncompresseduintformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["unsignedcubemaparray"]]],[11,"width","","Returns the width of that image.",390,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",390,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",390,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",390,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",390,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",390,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",390,[[["self"]],["unsignedcubemaparraylayer"]]],[11,"layer","","Access a single layer of this texture.",390,[[["self"],["u32"]],["option",["unsignedcubemaparraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",390,[[["self"],["u32"]],["option",["unsignedcubemaparraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",390,[[["self"]],["unsignedcubemaparraymipmap"]]],[11,"width","","Returns the width of that image.",391,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",391,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",391,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",391,[[["self"]],["unsignedcubemaparray"]]],[11,"get_layer","","Returns the layer index.",391,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",391,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",391,[[["self"],["u32"]],["option",["unsignedcubemaparraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",391,[[["self"]],["unsignedcubemaparraylayermipmap"]]],[11,"width","","Returns the width of that image.",392,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",392,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",392,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",392,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",392,[[["self"]],["unsignedcubemaparray"]]],[11,"get_level","","Returns the texture level.",392,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",392,[[["self"]],["unsignedcubemaparraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",392,[[["self"],["u32"]],["option",["unsignedcubemaparraylayermipmap"]]]],[11,"width","","Returns the width of that image.",393,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",393,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",393,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",393,[[["self"],["cubelayer"]],["unsignedcubemaparrayimage"]]],[11,"width","","Returns the width of that image.",394,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",394,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",394,[[["self"]],["u32"]]],[0,"depth_cubemap_array","glium::texture","Contains the implementation of `DepthCubemapArray`.",N,N],[3,"DepthCubemapArray","glium::texture::depth_cubemap_array","An array of cube textures  containing depth data.",N,N],[3,"DepthCubemapArrayLayer","","Represents a single layer of a `DepthCubemapArray`.",N,N],[3,"DepthCubemapArrayMipmap","","Represents a single mipmap level of a `DepthCubemapArray`.",N,N],[3,"DepthCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[3,"DepthCubemapArrayImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"sampled","","Builds a `Sampler` marker object that allows you to…",395,[[["self"]],["sampler",["depthcubemaparray"]]]],[11,"get_internal_format","","Determines the internal format of this texture.",395,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",395,[[["f"],["u32"],["u32"]],["result",["depthcubemaparray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",395,[[["f"],["depthformat"],["mipmapsoption"],["u32"],["u32"]],["result",["depthcubemaparray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",395,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["depthcubemaparray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",395,[[["f"],["depthformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthcubemaparray"]]],[11,"width","","Returns the width of that image.",395,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",395,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",395,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",395,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",395,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",395,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",395,[[["self"]],["depthcubemaparraylayer"]]],[11,"layer","","Access a single layer of this texture.",395,[[["self"],["u32"]],["option",["depthcubemaparraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",395,[[["self"],["u32"]],["option",["depthcubemaparraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",395,[[["self"]],["depthcubemaparraymipmap"]]],[11,"width","","Returns the width of that image.",396,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",396,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",396,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",396,[[["self"]],["depthcubemaparray"]]],[11,"get_layer","","Returns the layer index.",396,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",396,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",396,[[["self"],["u32"]],["option",["depthcubemaparraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",396,[[["self"]],["depthcubemaparraylayermipmap"]]],[11,"width","","Returns the width of that image.",397,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",397,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",397,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",397,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",397,[[["self"]],["depthcubemaparray"]]],[11,"get_level","","Returns the texture level.",397,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",397,[[["self"]],["depthcubemaparraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",397,[[["self"],["u32"]],["option",["depthcubemaparraylayermipmap"]]]],[11,"width","","Returns the width of that image.",398,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",398,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",398,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",398,[[["self"],["cubelayer"]],["depthcubemaparrayimage"]]],[11,"width","","Returns the width of that image.",399,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",399,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",399,[[["self"]],["u32"]]],[0,"stencil_cubemap_array","glium::texture","Contains the implementation of `StencilCubemapArray`.",N,N],[3,"StencilCubemapArray","glium::texture::stencil_cubemap_array","An array of cube textures  containing stencil data.",N,N],[3,"StencilCubemapArrayLayer","","Represents a single layer of a `StencilCubemapArray`.",N,N],[3,"StencilCubemapArrayMipmap","","Represents a single mipmap level of a `StencilCubemapArray`.",N,N],[3,"StencilCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[3,"StencilCubemapArrayImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",400,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",400,[[["f"],["u32"],["u32"]],["result",["stencilcubemaparray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",400,[[["f"],["stencilformat"],["mipmapsoption"],["u32"],["u32"]],["result",["stencilcubemaparray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",400,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["stencilcubemaparray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",400,[[["f"],["stencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["stencilcubemaparray"]]],[11,"width","","Returns the width of that image.",400,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",400,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",400,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",400,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",400,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",400,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",400,[[["self"]],["stencilcubemaparraylayer"]]],[11,"layer","","Access a single layer of this texture.",400,[[["self"],["u32"]],["option",["stencilcubemaparraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",400,[[["self"],["u32"]],["option",["stencilcubemaparraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",400,[[["self"]],["stencilcubemaparraymipmap"]]],[11,"width","","Returns the width of that image.",401,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",401,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",401,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",401,[[["self"]],["stencilcubemaparray"]]],[11,"get_layer","","Returns the layer index.",401,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",401,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",401,[[["self"],["u32"]],["option",["stencilcubemaparraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",401,[[["self"]],["stencilcubemaparraylayermipmap"]]],[11,"width","","Returns the width of that image.",402,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",402,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",402,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",402,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",402,[[["self"]],["stencilcubemaparray"]]],[11,"get_level","","Returns the texture level.",402,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",402,[[["self"]],["stencilcubemaparraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",402,[[["self"],["u32"]],["option",["stencilcubemaparraylayermipmap"]]]],[11,"width","","Returns the width of that image.",403,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",403,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",403,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",403,[[["self"],["cubelayer"]],["stencilcubemaparrayimage"]]],[11,"width","","Returns the width of that image.",404,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",404,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",404,[[["self"]],["u32"]]],[0,"depth_stencil_cubemap_array","glium::texture","Contains the implementation of `DepthStencilCubemapArray`.",N,N],[3,"DepthStencilCubemapArray","glium::texture::depth_stencil_cubemap_array","An array of cube textures containing both depth and…",N,N],[3,"DepthStencilCubemapArrayLayer","","Represents a single layer of a `DepthStencilCubemapArray`.",N,N],[3,"DepthStencilCubemapArrayMipmap","","Represents a single mipmap level of a…",N,N],[3,"DepthStencilCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a…",N,N],[3,"DepthStencilCubemapArrayImage","","Represents a single image of a mipmap level of a layer of…",N,N],[11,"get_internal_format","","Determines the internal format of this texture.",405,[[["self"]],["result",["internalformat","getformaterror"]]]],[11,"empty","","Creates an empty texture.",405,[[["f"],["u32"],["u32"]],["result",["depthstencilcubemaparray","texturecreationerror"]]]],[11,"empty_with_format","","Creates an empty texture with a specific format.",405,[[["f"],["depthstencilformat"],["mipmapsoption"],["u32"],["u32"]],["result",["depthstencilcubemaparray","texturecreationerror"]]]],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",405,[[["f"],["mipmapsoption"],["u32"],["u32"]],["result",["depthstencilcubemaparray","texturecreationerror"]]]],[11,"from_id","","Builds a new texture reference from an existing,…",405,[[["f"],["depthstencilformat"],["c_uint"],["bool"],["mipmapsoption"],["dimensions"]],["depthstencilcubemaparray"]]],[11,"width","","Returns the width of that image.",405,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",405,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",405,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",405,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",405,[[["self"]],["u32"]]],[11,"resident","","Turns the texture into a `ResidentTexture`.",405,[[["self"]],["result",["residenttexture","bindlesstexturesnotsupportederror"]]]],[11,"first_layer","","Access the first layer of this texture.",405,[[["self"]],["depthstencilcubemaparraylayer"]]],[11,"layer","","Access a single layer of this texture.",405,[[["self"],["u32"]],["option",["depthstencilcubemaparraylayer"]]]],[11,"mipmap","","Access a single mipmap level of this texture.",405,[[["self"],["u32"]],["option",["depthstencilcubemaparraymipmap"]]]],[11,"main_level","","Access the main mipmap level of this texture.",405,[[["self"]],["depthstencilcubemaparraymipmap"]]],[11,"width","","Returns the width of that image.",406,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",406,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",406,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",406,[[["self"]],["depthstencilcubemaparray"]]],[11,"get_layer","","Returns the layer index.",406,[[["self"]],["u32"]]],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",406,[[["self"]],["u32"]]],[11,"mipmap","","Access a single mipmap level of this layer.",406,[[["self"],["u32"]],["option",["depthstencilcubemaparraylayermipmap"]]]],[11,"main_level","","Access the main mipmap level of this layer.",406,[[["self"]],["depthstencilcubemaparraylayermipmap"]]],[11,"width","","Returns the width of that image.",407,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",407,[[["self"]],["u32"]]],[11,"array_size","","Returns the number of array layers.",407,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",407,[[["self"]],["u32"]]],[11,"get_texture","","Returns the corresponding texture.",407,[[["self"]],["depthstencilcubemaparray"]]],[11,"get_level","","Returns the texture level.",407,[[["self"]],["u32"]]],[11,"first_layer","","Access the first layer of this texture.",407,[[["self"]],["depthstencilcubemaparraylayermipmap"]]],[11,"layer","","Access a single layer of this texture.",407,[[["self"],["u32"]],["option",["depthstencilcubemaparraylayermipmap"]]]],[11,"width","","Returns the width of that image.",408,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",408,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",408,[[["self"]],["u32"]]],[11,"image","","Provides an object representing a single layer of this…",408,[[["self"],["cubelayer"]],["depthstencilcubemaparrayimage"]]],[11,"width","","Returns the width of that image.",409,[[["self"]],["u32"]]],[11,"height","","Returns the height of that image.",409,[[["self"]],["u32"]]],[11,"dimensions","","Returns the dimension of that image.",409,[[["self"]],["u32"]]],[8,"PixelValue","glium::texture","A trait that must be implemented for any type that can…",N,N],[10,"get_format","","Returns corresponding client format.",410,[[],["clientformat"]]],[8,"Texture1dDataSource","","Trait that describes data for a one-dimensional texture.",N,N],[16,"Data","","The type of each pixel.",411,N],[10,"into_raw","","Returns the raw representation of the data.",411,[[["self"]],["rawimage1d"]]],[8,"Texture1dDataSink","","Trait that describes types that can be built from…",N,N],[10,"from_raw","","Builds a new object from raw data.",412,[[["cow"],["u32"]],["self"]]],[8,"Texture2dDataSource","","Trait that describes data for a two-dimensional texture.",N,N],[16,"Data","","The type of each pixel.",413,N],[10,"into_raw","","Returns the raw representation of the data.",413,[[["self"]],["rawimage2d"]]],[8,"Texture2dDataSink","","Trait that describes types that can be built from…",N,N],[10,"from_raw","","Builds a new object from raw data.",414,[[["cow"],["u32"],["u32"]],["self"]]],[8,"ToClientFormat","","",N,N],[10,"rgb_format","","",415,[[],["clientformat"]]],[10,"rgba_format","","",415,[[],["clientformat"]]],[8,"Texture3dDataSource","","Trait that describes data for a two-dimensional texture.",N,N],[16,"Data","","The type of each pixel.",416,N],[10,"into_raw","","Returns the raw representation of the data.",416,[[["self"]],["rawimage3d"]]],[8,"Texture3dDataSink","","Trait that describes types that can be built from…",N,N],[10,"from_raw","","Builds a new object from raw data.",417,[[["cow"],["u32"],["u32"],["u32"]],["self"]]],[11,"get_layer_index","","In some situations whole cubemaps can be bound at once. If…",152,[[["self"]],["usize"]]],[11,"from_raw_rgb","","Builds a raw image from a vector of interleaved RGB values.",135,N],[11,"from_raw_rgba","","Builds a raw image from a vector of interleaved RGBA values.",135,N],[11,"from_raw_rgb_reversed","","Builds a raw image from a vector of interleaved RGB…",135,N],[11,"from_raw_rgba_reversed","","Builds a raw image from a vector of interleaved RGBA…",135,N],[11,"from_vec_raw1d","","Transforms a Vec into a RawImage2d",135,[[["vec"]],["rawimage2d"]]],[11,"from_vec_raw2d","","Transforms a Vec into a RawImage3d",136,[[["vec"]],["rawimage3d"]]],[11,"new","glium::backend","Builds a new context.",418,[[["b"],["bool"],["debugcallbackbehavior"]],["result",["rc","incompatibleopengl"]]]],[11,"get_framebuffer_dimensions","","Calls `get_framebuffer_dimensions` on the backend object…",418,N],[11,"rebuild","","Changes the OpenGL context associated with this context.",418,[[["self"],["b"]],["result",["incompatibleopengl"]]]],[11,"swap_buffers","","Swaps the buffers in the backend.",418,[[["self"]],["result",["swapbufferserror"]]]],[11,"get_version","","DEPRECATED. Use `get_opengl_version` instead.",418,[[["self"]],["version"]]],[11,"get_opengl_version","","Returns the OpenGL version detected by this context.",418,[[["self"]],["version"]]],[11,"get_supported_glsl_version","","Returns the GLSL version guaranteed to be supported.",418,[[["self"]],["version"]]],[11,"is_glsl_version_supported","","Returns true if the given GLSL version is supported.",418,[[["self"],["version"]],["bool"]]],[11,"get_opengl_version_string","","Returns a string containing this GL version or release…",418,[[["self"]],["str"]]],[11,"get_opengl_vendor_string","","Returns a string containing the company responsible for…",418,[[["self"]],["str"]]],[11,"get_opengl_renderer_string","","Returns a string containing the name of the GL renderer…",418,[[["self"]],["str"]]],[11,"is_debug","","Returns true if the context is in debug mode.",418,[[["self"]],["bool"]]],[11,"is_forward_compatible","","Returns true if the context is in \"forward-compatible\" mode.",418,[[["self"]],["bool"]]],[11,"get_opengl_profile","","Returns this context's OpenGL profile if available.",418,[[["self"]],["option",["profile"]]]],[11,"is_robust","","Returns true if out-of-bound buffer access from the GPU…",418,[[["self"]],["bool"]]],[11,"is_context_loss_possible","","Returns true if a context loss is possible.",418,[[["self"]],["bool"]]],[11,"is_context_lost","","Returns true if the context has been lost and needs to be…",418,[[["self"]],["bool"]]],[11,"get_release_behavior","","Returns the behavior when the current OpenGL context is…",418,[[["self"]],["releasebehavior"]]],[11,"get_max_anisotropy_support","","Returns the maximum value that can be used for anisotropic…",418,[[["self"]],["option",["u16"]]]],[11,"get_max_viewport_dimensions","","Returns the maximum dimensions of the viewport.",418,N],[11,"release_shader_compiler","","Releases the shader compiler, indicating that no new…",418,[[["self"]]]],[11,"get_free_video_memory","","Returns an estimate of the amount of video memory…",418,[[["self"]],["option",["usize"]]]],[11,"read_front_buffer","","Reads the content of the front buffer.",418,[[["self"]],["t"]]],[11,"exec_in_context","","Execute an arbitrary closure with the OpenGL context…",418,[[["self"],["f"]],["t"]]],[11,"assert_no_error","","Asserts that there are no OpenGL errors pending.",418,[[["self"],["option",["str"]]]]],[11,"synchronize","","DEPRECATED. Renamed `finish`.",418,[[["self"]]]],[11,"finish","","Calls `glFinish()`. This waits until all the previously…",418,[[["self"]]]],[11,"flush","","Calls `glFlush()`. This starts executing the commands that…",418,[[["self"]]]],[11,"insert_debug_marker","","Inserts a debugging string in the commands queue. If you…",418,[[["self"],["str"]],["result"]]],[11,"debug_insert_debug_marker","","Same as `insert_debug_marker`, except that if you don't…",418,[[["self"],["str"]],["result"]]],[11,"get_size","glium::texture","Returns the size in bytes of a pixel of this type.",137,[[["self"]],["usize"]]],[11,"get_num_components","","Returns the number of components of this client format.",137,[[["self"]],["u8"]]],[11,"get_formats_list","","Returns a list of all the possible values of this…",139,[[],["vec",["uncompressedfloatformat"]]]],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",139,[[["self"]],["textureformat"]]],[11,"is_supported","","Returns true if this format is supported by the backend.",139,[[["self"],["c"]],["bool"]]],[11,"is_color_renderable","","Returns true if a texture or renderbuffer with this format…",139,[[["self"],["c"]],["bool"]]],[11,"get_formats_list","","Returns a list of all the possible values of this…",147,[[],["vec",["srgbformat"]]]],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",147,[[["self"]],["textureformat"]]],[11,"is_supported","","Returns true if this format is supported by the backend.",147,[[["self"],["c"]],["bool"]]],[11,"is_color_renderable","","Returns true if a texture or renderbuffer with this format…",147,[[["self"],["c"]],["bool"]]],[11,"get_formats_list","","Returns a list of all the possible values of this…",140,[[],["vec",["uncompressedintformat"]]]],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",140,[[["self"]],["textureformat"]]],[11,"is_supported","","Returns true if this format is supported by the backend.",140,[[["self"],["c"]],["bool"]]],[11,"is_color_renderable","","Returns true if a texture or renderbuffer with this format…",140,[[["self"],["c"]],["bool"]]],[11,"get_formats_list","","Returns a list of all the possible values of this…",141,[[],["vec",["uncompresseduintformat"]]]],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",141,[[["self"]],["textureformat"]]],[11,"is_supported","","Returns true if this format is supported by the backend.",141,[[["self"],["c"]],["bool"]]],[11,"is_color_renderable","","Returns true if a texture or renderbuffer with this format…",141,[[["self"],["c"]],["bool"]]],[11,"get_formats_list","","Returns a list of all the possible values of this…",142,[[],["vec",["compressedformat"]]]],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",142,[[["self"]],["textureformat"]]],[11,"is_supported","","Returns true if this format is supported by the backend.",142,[[["self"],["c"]],["bool"]]],[11,"get_formats_list","","Returns a list of all the possible values of this…",146,[[],["vec",["compressedsrgbformat"]]]],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",146,[[["self"]],["textureformat"]]],[11,"is_supported","","Returns true if this format is supported by the backend.",146,[[["self"],["c"]],["bool"]]],[11,"get_formats_list","","Returns a list of all the possible values of this…",143,[[],["vec",["depthformat"]]]],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",143,[[["self"]],["textureformat"]]],[11,"is_supported","","Returns true if this format is supported by the backend.",143,[[["self"],["c"]],["bool"]]],[11,"get_formats_list","","Returns a list of all the possible values of this…",144,[[],["vec",["depthstencilformat"]]]],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",144,[[["self"]],["textureformat"]]],[11,"is_supported","","Returns true if this format is supported by the backend.",144,[[["self"],["c"]],["bool"]]],[11,"get_formats_list","","Returns a list of all the possible values of this…",145,[[],["vec",["stencilformat"]]]],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",145,[[["self"]],["textureformat"]]],[11,"is_supported_for_textures","","Returns true if this format is supported by the backend…",145,[[["self"],["c"]],["bool"]]],[11,"is_supported_for_renderbuffers","","Returns true if this format is supported by the backend…",145,[[["self"],["c"]],["bool"]]],[11,"get_formats_list","","Returns a list of all the possible values of this…",138,[[],["vec",["textureformat"]]]],[11,"is_supported_for_textures","","Returns true if this format is supported by the backend…",138,[[["self"],["c"]],["bool"]]],[11,"is_supported_for_renderbuffers","","Returns true if this format is supported by the backend…",138,[[["self"],["c"]],["bool"]]],[11,"is_renderable","","Returns true if the format is color-renderable,…",138,[[["self"],["c"]],["bool"]]],[11,"new","glium","Builds a new `SyncFence` that is injected in the server.",419,[[["f"]],["result",["syncfence","syncnotsupportederror"]]]],[11,"wait","","Blocks until the operation has finished on the server.",419,[[["self"]]]],[11,"into_sync_fence","","Turns the prototype into a real fence.",420,[[["self"],["f"]],["syncfence"]]],[6,"VertexFormat","","Describes the layout of each vertex in a vertex buffer.",N,N],[8,"CapabilitiesSource","","Trait for objects that describe the capabilities of an…",N,N],[10,"get_version","","Returns the version of the backend.",421,[[["self"]],["version"]]],[10,"get_extensions","","Returns the list of extensions that are supported.",421,[[["self"]],["extensionslist"]]],[10,"get_capabilities","","Returns the capabilities of the backend.",421,[[["self"]],["capabilities"]]],[8,"GlObject","","Trait for objects that are OpenGL objects.",N,N],[16,"Id","","The type of identifier for this object.",422,N],[10,"get_id","","Returns the id of the object.",422,N],[8,"Surface","","Object that can be drawn upon.",N,N],[10,"clear","","Clears some attachments of the target.",423,[[["self"],["option",["rect"]],["option"],["bool"],["option",["f32"]],["option",["i32"]]]]],[11,"clear_color","","Clears the color attachment of the target.",423,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"clear_color_srgb","","Clears the color attachment of the target. The color is in…",423,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"clear_depth","","Clears the depth attachment of the target.",423,[[["self"],["f32"]]]],[11,"clear_stencil","","Clears the stencil attachment of the target.",423,[[["self"],["i32"]]]],[11,"clear_color_and_depth","","Clears the color and depth attachments of the target.",423,N],[11,"clear_color_srgb_and_depth","","Clears the color and depth attachments of the target. The…",423,N],[11,"clear_color_and_stencil","","Clears the color and stencil attachments of the target.",423,N],[11,"clear_color_srgb_and_stencil","","Clears the color and stencil attachments of the target.…",423,N],[11,"clear_depth_and_stencil","","Clears the depth and stencil attachments of the target.",423,[[["self"],["f32"],["i32"]]]],[11,"clear_all","","Clears the color, depth and stencil attachments of the…",423,N],[11,"clear_all_srgb","","Clears the color, depth and stencil attachments of the…",423,N],[10,"get_dimensions","","Returns the dimensions in pixels of the target.",423,N],[10,"get_depth_buffer_bits","","Returns the number of bits of each pixel of the depth…",423,[[["self"]],["option",["u16"]]]],[11,"has_depth_buffer","","Returns true if the surface has a depth buffer available.",423,[[["self"]],["bool"]]],[10,"get_stencil_buffer_bits","","Returns the number of bits of each pixel of the stencil…",423,[[["self"]],["option",["u16"]]]],[11,"has_stencil_buffer","","Returns true if the surface has a stencil buffer available.",423,[[["self"]],["bool"]]],[10,"draw","","Draws.",423,[[["self"],["v"],["i"],["program"],["u"],["drawparameters"]],["result",["drawerror"]]]],[10,"blit_from_frame","","Blits from the default framebuffer.",423,[[["self"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[10,"blit_from_simple_framebuffer","","Blits from a simple framebuffer.",423,[[["self"],["simpleframebuffer"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[10,"blit_from_multioutput_framebuffer","","Blits from a multi-output framebuffer.",423,[[["self"],["multioutputframebuffer"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[10,"blit_color","","Copies a rectangle of pixels from this surface to another…",423,[[["self"],["rect"],["s"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_whole_color_to","","Copies the entire surface to a target surface. See…",423,[[["self"],["s"],["blittarget"],["magnifysamplerfilter"]]]],[11,"fill","","Copies the entire surface to the entire target. See…",423,[[["self"],["s"],["magnifysamplerfilter"]]]],[11,"new","","Builds a new `Frame`. Use the `draw` function on `Display`…",424,N],[11,"finish","","Stop drawing, swap the buffers, and consume the Frame.",424,[[["self"]],["result",["swapbufferserror"]]]],[11,"set_finish","","Stop drawing, swap the buffers.",424,[[["self"]],["result",["swapbufferserror"]]]],[14,"assert_no_gl_error","","Calls the `assert_no_error` method on a `glium::Display`…",N,N],[14,"uniform","","Returns an implementation-defined type which implements…",N,N],[14,"implement_vertex","","Implements the `glium::vertex::Vertex` trait for the given…",N,N],[14,"implement_buffer_content","","Implements the `glium::buffer::Content` trait for the…",N,N],[14,"implement_uniform_block","","Implements the `glium::uniforms::UniformBlock` trait for…",N,N],[14,"program","","Builds a program depending on the GLSL version supported…",N,N],[11,"read","","",0,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",0,[[],["usize"]]],[11,"to_void_ptr","","",0,N],[11,"ref_from_ptr","","",0,N],[11,"is_size_suitable","","",0,[[["usize"]],["bool"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"read","","",1,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",1,[[],["usize"]]],[11,"to_void_ptr","","",1,N],[11,"ref_from_ptr","","",1,N],[11,"is_size_suitable","","",1,[[["usize"]],["bool"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"into","","",420,[[["self"]],["u"]]],[11,"from","","",420,[[["t"]],["t"]]],[11,"try_from","","",420,[[["u"]],["result"]]],[11,"borrow","","",420,[[["self"]],["t"]]],[11,"borrow_mut","","",420,[[["self"]],["t"]]],[11,"try_into","","",420,[[["self"]],["result"]]],[11,"get_type_id","","",420,[[["self"]],["typeid"]]],[11,"into","","",419,[[["self"]],["u"]]],[11,"from","","",419,[[["t"]],["t"]]],[11,"try_from","","",419,[[["u"]],["result"]]],[11,"borrow","","",419,[[["self"]],["t"]]],[11,"borrow_mut","","",419,[[["self"]],["t"]]],[11,"try_into","","",419,[[["self"]],["result"]]],[11,"get_type_id","","",419,[[["self"]],["typeid"]]],[11,"read","","",2,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",2,[[],["usize"]]],[11,"to_void_ptr","","",2,N],[11,"ref_from_ptr","","",2,N],[11,"is_size_suitable","","",2,[[["usize"]],["bool"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"read","","",3,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",3,[[],["usize"]]],[11,"to_void_ptr","","",3,N],[11,"ref_from_ptr","","",3,N],[11,"is_size_suitable","","",3,[[["usize"]],["bool"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"read","","",4,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",4,[[],["usize"]]],[11,"to_void_ptr","","",4,N],[11,"ref_from_ptr","","",4,N],[11,"is_size_suitable","","",4,[[["usize"]],["bool"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",424,[[["self"]],["u"]]],[11,"from","","",424,[[["t"]],["t"]]],[11,"try_from","","",424,[[["u"]],["result"]]],[11,"borrow","","",424,[[["self"]],["t"]]],[11,"borrow_mut","","",424,[[["self"]],["t"]]],[11,"try_into","","",424,[[["self"]],["result"]]],[11,"get_type_id","","",424,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"read","","",6,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",6,[[],["usize"]]],[11,"to_void_ptr","","",6,N],[11,"ref_from_ptr","","",6,N],[11,"is_size_suitable","","",6,[[["usize"]],["bool"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"read","","",7,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",7,[[],["usize"]]],[11,"to_void_ptr","","",7,N],[11,"ref_from_ptr","","",7,N],[11,"is_size_suitable","","",7,[[["usize"]],["bool"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"read","","",8,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",8,[[],["usize"]]],[11,"to_void_ptr","","",8,N],[11,"ref_from_ptr","","",8,N],[11,"is_size_suitable","","",8,[[["usize"]],["bool"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"read","","",9,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",9,[[],["usize"]]],[11,"to_void_ptr","","",9,N],[11,"ref_from_ptr","","",9,N],[11,"is_size_suitable","","",9,[[["usize"]],["bool"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"read","","",10,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",10,[[],["usize"]]],[11,"to_void_ptr","","",10,N],[11,"ref_from_ptr","","",10,N],[11,"is_size_suitable","","",10,[[["usize"]],["bool"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"read","","",11,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",11,[[],["usize"]]],[11,"to_void_ptr","","",11,N],[11,"ref_from_ptr","","",11,N],[11,"is_size_suitable","","",11,[[["usize"]],["bool"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"read","","",12,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",12,[[],["usize"]]],[11,"to_void_ptr","","",12,N],[11,"ref_from_ptr","","",12,N],[11,"is_size_suitable","","",12,[[["usize"]],["bool"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"read","","",13,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",13,[[],["usize"]]],[11,"to_void_ptr","","",13,N],[11,"ref_from_ptr","","",13,N],[11,"is_size_suitable","","",13,[[["usize"]],["bool"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"read","","",14,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",14,[[],["usize"]]],[11,"to_void_ptr","","",14,N],[11,"ref_from_ptr","","",14,N],[11,"is_size_suitable","","",14,[[["usize"]],["bool"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"read","","",16,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",16,[[],["usize"]]],[11,"to_void_ptr","","",16,N],[11,"ref_from_ptr","","",16,N],[11,"is_size_suitable","","",16,[[["usize"]],["bool"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"get_version","glium::backend","",418,[[["self"]],["version"]]],[11,"get_extensions","","",418,[[["self"]],["extensionslist"]]],[11,"get_capabilities","","",418,[[["self"]],["capabilities"]]],[11,"into","","",418,[[["self"]],["u"]]],[11,"from","","",418,[[["t"]],["t"]]],[11,"try_from","","",418,[[["u"]],["result"]]],[11,"borrow","","",418,[[["self"]],["t"]]],[11,"borrow_mut","","",418,[[["self"]],["t"]]],[11,"try_into","","",418,[[["self"]],["result"]]],[11,"get_type_id","","",418,[[["self"]],["typeid"]]],[11,"read","","",17,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",17,[[],["usize"]]],[11,"to_void_ptr","","",17,N],[11,"ref_from_ptr","","",17,N],[11,"is_size_suitable","","",17,[[["usize"]],["bool"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"get_version","glium::backend::glutin","",20,[[["self"]],["version"]]],[11,"get_extensions","","",20,[[["self"]],["extensionslist"]]],[11,"get_capabilities","","",20,[[["self"]],["capabilities"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",425,[[["self"]],["u"]]],[11,"to_owned","","",425,[[["self"]],["t"]]],[11,"clone_into","","",425,N],[11,"from","","",425,[[["t"]],["t"]]],[11,"try_from","","",425,[[["u"]],["result"]]],[11,"borrow","","",425,[[["self"]],["t"]]],[11,"borrow_mut","","",425,[[["self"]],["t"]]],[11,"try_into","","",425,[[["self"]],["result"]]],[11,"get_type_id","","",425,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"get_version","glium::backend::glutin::headless","",19,[[["self"]],["version"]]],[11,"get_extensions","","",19,[[["self"]],["extensionslist"]]],[11,"get_capabilities","","",19,[[["self"]],["capabilities"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",426,[[["self"]],["u"]]],[11,"from","","",426,[[["t"]],["t"]]],[11,"try_from","","",426,[[["u"]],["result"]]],[11,"borrow","","",426,[[["self"]],["t"]]],[11,"borrow_mut","","",426,[[["self"]],["t"]]],[11,"try_into","","",426,[[["self"]],["result"]]],[11,"get_type_id","","",426,[[["self"]],["typeid"]]],[11,"into","glium::buffer","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"read","","",31,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",31,[[],["usize"]]],[11,"to_void_ptr","","",31,N],[11,"ref_from_ptr","","",31,N],[11,"is_size_suitable","","",31,[[["usize"]],["bool"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"read","","",34,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",34,[[],["usize"]]],[11,"to_void_ptr","","",34,N],[11,"ref_from_ptr","","",34,N],[11,"is_size_suitable","","",34,[[["usize"]],["bool"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",427,[[["self"]],["u"]]],[11,"from","","",427,[[["t"]],["t"]]],[11,"try_from","","",427,[[["u"]],["result"]]],[11,"borrow","","",427,[[["self"]],["t"]]],[11,"borrow_mut","","",427,[[["self"]],["t"]]],[11,"try_into","","",427,[[["self"]],["result"]]],[11,"get_type_id","","",427,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",428,[[["self"]],["u"]]],[11,"from","","",428,[[["t"]],["t"]]],[11,"try_from","","",428,[[["u"]],["result"]]],[11,"borrow","","",428,[[["self"]],["t"]]],[11,"borrow_mut","","",428,[[["self"]],["t"]]],[11,"try_into","","",428,[[["self"]],["result"]]],[11,"get_type_id","","",428,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"read","","",23,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",23,[[],["usize"]]],[11,"to_void_ptr","","",23,N],[11,"ref_from_ptr","","",23,N],[11,"is_size_suitable","","",23,[[["usize"]],["bool"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"read","","",24,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",24,[[],["usize"]]],[11,"to_void_ptr","","",24,N],[11,"ref_from_ptr","","",24,N],[11,"is_size_suitable","","",24,[[["usize"]],["bool"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"read","","",25,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",25,[[],["usize"]]],[11,"to_void_ptr","","",25,N],[11,"ref_from_ptr","","",25,N],[11,"is_size_suitable","","",25,[[["usize"]],["bool"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"read","","",26,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",26,[[],["usize"]]],[11,"to_void_ptr","","",26,N],[11,"ref_from_ptr","","",26,N],[11,"is_size_suitable","","",26,[[["usize"]],["bool"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"read","","",27,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",27,[[],["usize"]]],[11,"to_void_ptr","","",27,N],[11,"ref_from_ptr","","",27,N],[11,"is_size_suitable","","",27,[[["usize"]],["bool"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","glium::debug","",40,[[["self"]],["u"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"read","","",37,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",37,[[],["usize"]]],[11,"to_void_ptr","","",37,N],[11,"ref_from_ptr","","",37,N],[11,"is_size_suitable","","",37,[[["usize"]],["bool"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"read","","",38,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",38,[[],["usize"]]],[11,"to_void_ptr","","",38,N],[11,"ref_from_ptr","","",38,N],[11,"is_size_suitable","","",38,[[["usize"]],["bool"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"read","","",39,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",39,[[],["usize"]]],[11,"to_void_ptr","","",39,N],[11,"ref_from_ptr","","",39,N],[11,"is_size_suitable","","",39,[[["usize"]],["bool"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","glium::draw_parameters","",51,[[["self"]],["u"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"read","","",41,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",41,[[],["usize"]]],[11,"to_void_ptr","","",41,N],[11,"ref_from_ptr","","",41,N],[11,"is_size_suitable","","",41,[[["usize"]],["bool"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"read","","",43,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",43,[[],["usize"]]],[11,"to_void_ptr","","",43,N],[11,"ref_from_ptr","","",43,N],[11,"is_size_suitable","","",43,[[["usize"]],["bool"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"read","","",44,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",44,[[],["usize"]]],[11,"to_void_ptr","","",44,N],[11,"ref_from_ptr","","",44,N],[11,"is_size_suitable","","",44,[[["usize"]],["bool"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"read","","",45,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",45,[[],["usize"]]],[11,"to_void_ptr","","",45,N],[11,"ref_from_ptr","","",45,N],[11,"is_size_suitable","","",45,[[["usize"]],["bool"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"read","","",46,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",46,[[],["usize"]]],[11,"to_void_ptr","","",46,N],[11,"ref_from_ptr","","",46,N],[11,"is_size_suitable","","",46,[[["usize"]],["bool"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"read","","",47,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",47,[[],["usize"]]],[11,"to_void_ptr","","",47,N],[11,"ref_from_ptr","","",47,N],[11,"is_size_suitable","","",47,[[["usize"]],["bool"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"read","","",48,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",48,[[],["usize"]]],[11,"to_void_ptr","","",48,N],[11,"ref_from_ptr","","",48,N],[11,"is_size_suitable","","",48,[[["usize"]],["bool"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"read","","",49,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",49,[[],["usize"]]],[11,"to_void_ptr","","",49,N],[11,"ref_from_ptr","","",49,N],[11,"is_size_suitable","","",49,[[["usize"]],["bool"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"read","","",50,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",50,[[],["usize"]]],[11,"to_void_ptr","","",50,N],[11,"ref_from_ptr","","",50,N],[11,"is_size_suitable","","",50,[[["usize"]],["bool"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","glium::framebuffer","",63,[[["self"]],["u"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"read","","",56,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",56,[[],["usize"]]],[11,"to_void_ptr","","",56,N],[11,"ref_from_ptr","","",56,N],[11,"is_size_suitable","","",56,[[["usize"]],["bool"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"read","","",57,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",57,[[],["usize"]]],[11,"to_void_ptr","","",57,N],[11,"ref_from_ptr","","",57,N],[11,"is_size_suitable","","",57,[[["usize"]],["bool"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"read","","",58,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",58,[[],["usize"]]],[11,"to_void_ptr","","",58,N],[11,"ref_from_ptr","","",58,N],[11,"is_size_suitable","","",58,[[["usize"]],["bool"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"to_string","","",58,[[["self"]],["string"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"read","","",59,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",59,[[],["usize"]]],[11,"to_void_ptr","","",59,N],[11,"ref_from_ptr","","",59,N],[11,"is_size_suitable","","",59,[[["usize"]],["bool"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"read","","",60,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",60,[[],["usize"]]],[11,"to_void_ptr","","",60,N],[11,"ref_from_ptr","","",60,N],[11,"is_size_suitable","","",60,[[["usize"]],["bool"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"read","","",61,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",61,[[],["usize"]]],[11,"to_void_ptr","","",61,N],[11,"ref_from_ptr","","",61,N],[11,"is_size_suitable","","",61,[[["usize"]],["bool"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"read","","",62,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",62,[[],["usize"]]],[11,"to_void_ptr","","",62,N],[11,"ref_from_ptr","","",62,N],[11,"is_size_suitable","","",62,[[["usize"]],["bool"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into","glium::index","",84,[[["self"]],["u"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"read","","",76,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",76,[[],["usize"]]],[11,"to_void_ptr","","",76,N],[11,"ref_from_ptr","","",76,N],[11,"is_size_suitable","","",76,[[["usize"]],["bool"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"read","","",77,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",77,[[],["usize"]]],[11,"to_void_ptr","","",77,N],[11,"ref_from_ptr","","",77,N],[11,"is_size_suitable","","",77,[[["usize"]],["bool"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"read","","",78,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",78,[[],["usize"]]],[11,"to_void_ptr","","",78,N],[11,"ref_from_ptr","","",78,N],[11,"is_size_suitable","","",78,[[["usize"]],["bool"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"read","","",79,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",79,[[],["usize"]]],[11,"to_void_ptr","","",79,N],[11,"ref_from_ptr","","",79,N],[11,"is_size_suitable","","",79,[[["usize"]],["bool"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"to_string","","",79,[[["self"]],["string"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"read","","",81,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",81,[[],["usize"]]],[11,"to_void_ptr","","",81,N],[11,"ref_from_ptr","","",81,N],[11,"is_size_suitable","","",81,[[["usize"]],["bool"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"read","","",82,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",82,[[],["usize"]]],[11,"to_void_ptr","","",82,N],[11,"ref_from_ptr","","",82,N],[11,"is_size_suitable","","",82,[[["usize"]],["bool"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into","glium::program","",107,[[["self"]],["u"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"read","","",89,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",89,[[],["usize"]]],[11,"to_void_ptr","","",89,N],[11,"ref_from_ptr","","",89,N],[11,"is_size_suitable","","",89,[[["usize"]],["bool"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"read","","",90,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",90,[[],["usize"]]],[11,"to_void_ptr","","",90,N],[11,"ref_from_ptr","","",90,N],[11,"is_size_suitable","","",90,[[["usize"]],["bool"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"read","","",92,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",92,[[],["usize"]]],[11,"to_void_ptr","","",92,N],[11,"ref_from_ptr","","",92,N],[11,"is_size_suitable","","",92,[[["usize"]],["bool"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"read","","",100,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",100,[[],["usize"]]],[11,"to_void_ptr","","",100,N],[11,"ref_from_ptr","","",100,N],[11,"is_size_suitable","","",100,[[["usize"]],["bool"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"read","","",101,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",101,[[],["usize"]]],[11,"to_void_ptr","","",101,N],[11,"ref_from_ptr","","",101,N],[11,"is_size_suitable","","",101,[[["usize"]],["bool"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"read","","",102,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",102,[[],["usize"]]],[11,"to_void_ptr","","",102,N],[11,"ref_from_ptr","","",102,N],[11,"is_size_suitable","","",102,[[["usize"]],["bool"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"to_string","","",103,[[["self"]],["string"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"from","","",104,[[["t"]],["t"]]],[11,"to_string","","",104,[[["self"]],["string"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"read","","",105,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",105,[[],["usize"]]],[11,"to_void_ptr","","",105,N],[11,"ref_from_ptr","","",105,N],[11,"is_size_suitable","","",105,[[["usize"]],["bool"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"from","","",105,[[["t"]],["t"]]],[11,"to_string","","",105,[[["self"]],["string"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"into","glium::uniforms","",117,[[["self"]],["u"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"read","","",109,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",109,[[],["usize"]]],[11,"to_void_ptr","","",109,N],[11,"ref_from_ptr","","",109,N],[11,"is_size_suitable","","",109,[[["usize"]],["bool"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"read","","",110,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",110,[[],["usize"]]],[11,"to_void_ptr","","",110,N],[11,"ref_from_ptr","","",110,N],[11,"is_size_suitable","","",110,[[["usize"]],["bool"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"read","","",429,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",429,[[],["usize"]]],[11,"to_void_ptr","","",429,N],[11,"ref_from_ptr","","",429,N],[11,"is_size_suitable","","",429,[[["usize"]],["bool"]]],[11,"into","","",429,[[["self"]],["u"]]],[11,"to_owned","","",429,[[["self"]],["t"]]],[11,"clone_into","","",429,N],[11,"from","","",429,[[["t"]],["t"]]],[11,"try_from","","",429,[[["u"]],["result"]]],[11,"borrow","","",429,[[["self"]],["t"]]],[11,"borrow_mut","","",429,[[["self"]],["t"]]],[11,"try_into","","",429,[[["self"]],["result"]]],[11,"get_type_id","","",429,[[["self"]],["typeid"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"read","","",111,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",111,[[],["usize"]]],[11,"to_void_ptr","","",111,N],[11,"ref_from_ptr","","",111,N],[11,"is_size_suitable","","",111,[[["usize"]],["bool"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"read","","",112,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",112,[[],["usize"]]],[11,"to_void_ptr","","",112,N],[11,"ref_from_ptr","","",112,N],[11,"is_size_suitable","","",112,[[["usize"]],["bool"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"read","","",113,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",113,[[],["usize"]]],[11,"to_void_ptr","","",113,N],[11,"ref_from_ptr","","",113,N],[11,"is_size_suitable","","",113,[[["usize"]],["bool"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"read","","",114,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",114,[[],["usize"]]],[11,"to_void_ptr","","",114,N],[11,"ref_from_ptr","","",114,N],[11,"is_size_suitable","","",114,[[["usize"]],["bool"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"read","","",115,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",115,[[],["usize"]]],[11,"to_void_ptr","","",115,N],[11,"ref_from_ptr","","",115,N],[11,"is_size_suitable","","",115,[[["usize"]],["bool"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"to_string","","",116,[[["self"]],["string"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into","glium::vertex","",129,[[["self"]],["u"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"iter","","",127,[[["self"]],["intoiter",["verticessource"]]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"iter","","",122,[[["self"]],["intoiter",["verticessource"]]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"iter","","",123,[[["self"]],["intoiter",["verticessource"]]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"iter","","",430,[[["self"]],["intoiter",["verticessource"]]]],[11,"into","","",430,[[["self"]],["u"]]],[11,"from","","",430,[[["t"]],["t"]]],[11,"try_from","","",430,[[["u"]],["result"]]],[11,"borrow","","",430,[[["self"]],["t"]]],[11,"borrow_mut","","",430,[[["self"]],["t"]]],[11,"try_into","","",430,[[["self"]],["result"]]],[11,"get_type_id","","",430,[[["self"]],["typeid"]]],[11,"read","","",124,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",124,[[],["usize"]]],[11,"to_void_ptr","","",124,N],[11,"ref_from_ptr","","",124,N],[11,"is_size_suitable","","",124,[[["usize"]],["bool"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"to_string","","",124,[[["self"]],["string"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"read","","",125,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",125,[[],["usize"]]],[11,"to_void_ptr","","",125,N],[11,"ref_from_ptr","","",125,N],[11,"is_size_suitable","","",125,[[["usize"]],["bool"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"iter","","",126,[[["self"]],["intoiter",["verticessource"]]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"into","glium::texture","",167,[[["self"]],["u"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"read","","",169,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",169,[[],["usize"]]],[11,"to_void_ptr","","",169,N],[11,"ref_from_ptr","","",169,N],[11,"is_size_suitable","","",169,[[["usize"]],["bool"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"from","","",169,[[["t"]],["t"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"read","","",168,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",168,[[],["usize"]]],[11,"to_void_ptr","","",168,N],[11,"ref_from_ptr","","",168,N],[11,"is_size_suitable","","",168,[[["usize"]],["bool"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"from","","",168,[[["t"]],["t"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"read","","",170,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",170,[[],["usize"]]],[11,"to_void_ptr","","",170,N],[11,"ref_from_ptr","","",170,N],[11,"is_size_suitable","","",170,[[["usize"]],["bool"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"from","","",170,[[["t"]],["t"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"read","","",171,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",171,[[],["usize"]]],[11,"to_void_ptr","","",171,N],[11,"ref_from_ptr","","",171,N],[11,"is_size_suitable","","",171,[[["usize"]],["bool"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"from","","",171,[[["t"]],["t"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"read","","",137,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",137,[[],["usize"]]],[11,"to_void_ptr","","",137,N],[11,"ref_from_ptr","","",137,N],[11,"is_size_suitable","","",137,[[["usize"]],["bool"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"read","","",138,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",138,[[],["usize"]]],[11,"to_void_ptr","","",138,N],[11,"ref_from_ptr","","",138,N],[11,"is_size_suitable","","",138,[[["usize"]],["bool"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"read","","",139,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",139,[[],["usize"]]],[11,"to_void_ptr","","",139,N],[11,"ref_from_ptr","","",139,N],[11,"is_size_suitable","","",139,[[["usize"]],["bool"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"read","","",140,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",140,[[],["usize"]]],[11,"to_void_ptr","","",140,N],[11,"ref_from_ptr","","",140,N],[11,"is_size_suitable","","",140,[[["usize"]],["bool"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"read","","",141,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",141,[[],["usize"]]],[11,"to_void_ptr","","",141,N],[11,"ref_from_ptr","","",141,N],[11,"is_size_suitable","","",141,[[["usize"]],["bool"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"read","","",142,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",142,[[],["usize"]]],[11,"to_void_ptr","","",142,N],[11,"ref_from_ptr","","",142,N],[11,"is_size_suitable","","",142,[[["usize"]],["bool"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"read","","",143,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",143,[[],["usize"]]],[11,"to_void_ptr","","",143,N],[11,"ref_from_ptr","","",143,N],[11,"is_size_suitable","","",143,[[["usize"]],["bool"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"read","","",144,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",144,[[],["usize"]]],[11,"to_void_ptr","","",144,N],[11,"ref_from_ptr","","",144,N],[11,"is_size_suitable","","",144,[[["usize"]],["bool"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"read","","",145,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",145,[[],["usize"]]],[11,"to_void_ptr","","",145,N],[11,"ref_from_ptr","","",145,N],[11,"is_size_suitable","","",145,[[["usize"]],["bool"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"read","","",146,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",146,[[],["usize"]]],[11,"to_void_ptr","","",146,N],[11,"ref_from_ptr","","",146,N],[11,"is_size_suitable","","",146,[[["usize"]],["bool"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"read","","",147,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",147,[[],["usize"]]],[11,"to_void_ptr","","",147,N],[11,"ref_from_ptr","","",147,N],[11,"is_size_suitable","","",147,[[["usize"]],["bool"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"read","","",148,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",148,[[],["usize"]]],[11,"to_void_ptr","","",148,N],[11,"ref_from_ptr","","",148,N],[11,"is_size_suitable","","",148,[[["usize"]],["bool"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"read","","",149,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",149,[[],["usize"]]],[11,"to_void_ptr","","",149,N],[11,"ref_from_ptr","","",149,N],[11,"is_size_suitable","","",149,[[["usize"]],["bool"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"read","","",150,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",150,[[],["usize"]]],[11,"to_void_ptr","","",150,N],[11,"ref_from_ptr","","",150,N],[11,"is_size_suitable","","",150,[[["usize"]],["bool"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"read","","",151,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",151,[[],["usize"]]],[11,"to_void_ptr","","",151,N],[11,"ref_from_ptr","","",151,N],[11,"is_size_suitable","","",151,[[["usize"]],["bool"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"from","","",151,[[["t"]],["t"]]],[11,"to_string","","",151,[[["self"]],["string"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"read","","",152,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",152,[[],["usize"]]],[11,"to_void_ptr","","",152,N],[11,"ref_from_ptr","","",152,N],[11,"is_size_suitable","","",152,[[["usize"]],["bool"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"read","","",153,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",153,[[],["usize"]]],[11,"to_void_ptr","","",153,N],[11,"ref_from_ptr","","",153,N],[11,"is_size_suitable","","",153,[[["usize"]],["bool"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"read","","",154,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",154,[[],["usize"]]],[11,"to_void_ptr","","",154,N],[11,"ref_from_ptr","","",154,N],[11,"is_size_suitable","","",154,[[["usize"]],["bool"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"read","","",155,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",155,[[],["usize"]]],[11,"to_void_ptr","","",155,N],[11,"ref_from_ptr","","",155,N],[11,"is_size_suitable","","",155,[[["usize"]],["bool"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"read","","",156,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",156,[[],["usize"]]],[11,"to_void_ptr","","",156,N],[11,"ref_from_ptr","","",156,N],[11,"is_size_suitable","","",156,[[["usize"]],["bool"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"from","","",156,[[["t"]],["t"]]],[11,"to_string","","",156,[[["self"]],["string"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"into","glium::texture::bindless","",157,[[["self"]],["u"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"read","","",158,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",158,[[],["usize"]]],[11,"to_void_ptr","","",158,N],[11,"ref_from_ptr","","",158,N],[11,"is_size_suitable","","",158,[[["usize"]],["bool"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"read","","",431,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",431,[[],["usize"]]],[11,"to_void_ptr","","",431,N],[11,"ref_from_ptr","","",431,N],[11,"is_size_suitable","","",431,[[["usize"]],["bool"]]],[11,"into","","",431,[[["self"]],["u"]]],[11,"to_owned","","",431,[[["self"]],["t"]]],[11,"clone_into","","",431,N],[11,"from","","",431,[[["t"]],["t"]]],[11,"try_from","","",431,[[["u"]],["result"]]],[11,"borrow","","",431,[[["self"]],["t"]]],[11,"borrow_mut","","",431,[[["self"]],["t"]]],[11,"try_into","","",431,[[["self"]],["result"]]],[11,"get_type_id","","",431,[[["self"]],["typeid"]]],[11,"into","glium::texture::buffer_texture","",164,[[["self"]],["u"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"read","","",165,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",165,[[],["usize"]]],[11,"to_void_ptr","","",165,N],[11,"ref_from_ptr","","",165,N],[11,"is_size_suitable","","",165,[[["usize"]],["bool"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"from","","",165,[[["t"]],["t"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"read","","",159,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",159,[[],["usize"]]],[11,"to_void_ptr","","",159,N],[11,"ref_from_ptr","","",159,N],[11,"is_size_suitable","","",159,[[["usize"]],["bool"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"from","","",159,[[["t"]],["t"]]],[11,"to_string","","",159,[[["self"]],["string"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"read","","",160,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",160,[[],["usize"]]],[11,"to_void_ptr","","",160,N],[11,"ref_from_ptr","","",160,N],[11,"is_size_suitable","","",160,[[["usize"]],["bool"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"from","","",160,[[["t"]],["t"]]],[11,"to_string","","",160,[[["self"]],["string"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"read","","",161,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",161,[[],["usize"]]],[11,"to_void_ptr","","",161,N],[11,"ref_from_ptr","","",161,N],[11,"is_size_suitable","","",161,[[["usize"]],["bool"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"into","glium::texture::pixel_buffer","",166,[[["self"]],["u"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"into","glium::texture::texture1d","",172,[[["self"]],["u"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"read","","",173,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",173,[[],["usize"]]],[11,"to_void_ptr","","",173,N],[11,"ref_from_ptr","","",173,N],[11,"is_size_suitable","","",173,[[["usize"]],["bool"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"from","","",173,[[["t"]],["t"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_texture1d","",174,[[["self"]],["u"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"read","","",175,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",175,[[],["usize"]]],[11,"to_void_ptr","","",175,N],[11,"ref_from_ptr","","",175,N],[11,"is_size_suitable","","",175,[[["usize"]],["bool"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"from","","",175,[[["t"]],["t"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"into","glium::texture::srgb_texture1d","",176,[[["self"]],["u"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"read","","",177,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",177,[[],["usize"]]],[11,"to_void_ptr","","",177,N],[11,"ref_from_ptr","","",177,N],[11,"is_size_suitable","","",177,[[["usize"]],["bool"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"from","","",177,[[["t"]],["t"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_srgb_texture1d","",178,[[["self"]],["u"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"read","","",179,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",179,[[],["usize"]]],[11,"to_void_ptr","","",179,N],[11,"ref_from_ptr","","",179,N],[11,"is_size_suitable","","",179,[[["usize"]],["bool"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"from","","",179,[[["t"]],["t"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"into","glium::texture::integral_texture1d","",180,[[["self"]],["u"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"read","","",181,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",181,[[],["usize"]]],[11,"to_void_ptr","","",181,N],[11,"ref_from_ptr","","",181,N],[11,"is_size_suitable","","",181,[[["usize"]],["bool"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"from","","",181,[[["t"]],["t"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"into","glium::texture::unsigned_texture1d","",182,[[["self"]],["u"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"read","","",183,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",183,[[],["usize"]]],[11,"to_void_ptr","","",183,N],[11,"ref_from_ptr","","",183,N],[11,"is_size_suitable","","",183,[[["usize"]],["bool"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"from","","",183,[[["t"]],["t"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_texture1d","",184,[[["self"]],["u"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"read","","",185,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",185,[[],["usize"]]],[11,"to_void_ptr","","",185,N],[11,"ref_from_ptr","","",185,N],[11,"is_size_suitable","","",185,[[["usize"]],["bool"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"from","","",185,[[["t"]],["t"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"into","glium::texture::stencil_texture1d","",186,[[["self"]],["u"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"read","","",187,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",187,[[],["usize"]]],[11,"to_void_ptr","","",187,N],[11,"ref_from_ptr","","",187,N],[11,"is_size_suitable","","",187,[[["usize"]],["bool"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"from","","",187,[[["t"]],["t"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_stencil_texture1d","",188,[[["self"]],["u"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"read","","",189,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",189,[[],["usize"]]],[11,"to_void_ptr","","",189,N],[11,"ref_from_ptr","","",189,N],[11,"is_size_suitable","","",189,[[["usize"]],["bool"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"from","","",189,[[["t"]],["t"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"into","glium::texture::texture2d","",190,[[["self"]],["u"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"read","","",191,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",191,[[],["usize"]]],[11,"to_void_ptr","","",191,N],[11,"ref_from_ptr","","",191,N],[11,"is_size_suitable","","",191,[[["usize"]],["bool"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"from","","",191,[[["t"]],["t"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_texture2d","",192,[[["self"]],["u"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"read","","",193,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",193,[[],["usize"]]],[11,"to_void_ptr","","",193,N],[11,"ref_from_ptr","","",193,N],[11,"is_size_suitable","","",193,[[["usize"]],["bool"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"from","","",193,[[["t"]],["t"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"into","glium::texture::srgb_texture2d","",194,[[["self"]],["u"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"read","","",195,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",195,[[],["usize"]]],[11,"to_void_ptr","","",195,N],[11,"ref_from_ptr","","",195,N],[11,"is_size_suitable","","",195,[[["usize"]],["bool"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"from","","",195,[[["t"]],["t"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_srgb_texture2d","",196,[[["self"]],["u"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"read","","",197,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",197,[[],["usize"]]],[11,"to_void_ptr","","",197,N],[11,"ref_from_ptr","","",197,N],[11,"is_size_suitable","","",197,[[["usize"]],["bool"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,N],[11,"from","","",197,[[["t"]],["t"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"into","glium::texture::integral_texture2d","",198,[[["self"]],["u"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"read","","",199,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",199,[[],["usize"]]],[11,"to_void_ptr","","",199,N],[11,"ref_from_ptr","","",199,N],[11,"is_size_suitable","","",199,[[["usize"]],["bool"]]],[11,"into","","",199,[[["self"]],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,N],[11,"from","","",199,[[["t"]],["t"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"try_into","","",199,[[["self"]],["result"]]],[11,"get_type_id","","",199,[[["self"]],["typeid"]]],[11,"into","glium::texture::unsigned_texture2d","",200,[[["self"]],["u"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"read","","",201,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",201,[[],["usize"]]],[11,"to_void_ptr","","",201,N],[11,"ref_from_ptr","","",201,N],[11,"is_size_suitable","","",201,[[["usize"]],["bool"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"from","","",201,[[["t"]],["t"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_texture2d","",202,[[["self"]],["u"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"try_into","","",202,[[["self"]],["result"]]],[11,"get_type_id","","",202,[[["self"]],["typeid"]]],[11,"read","","",203,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",203,[[],["usize"]]],[11,"to_void_ptr","","",203,N],[11,"ref_from_ptr","","",203,N],[11,"is_size_suitable","","",203,[[["usize"]],["bool"]]],[11,"into","","",203,[[["self"]],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,N],[11,"from","","",203,[[["t"]],["t"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"try_into","","",203,[[["self"]],["result"]]],[11,"get_type_id","","",203,[[["self"]],["typeid"]]],[11,"into","glium::texture::stencil_texture2d","",204,[[["self"]],["u"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"try_into","","",204,[[["self"]],["result"]]],[11,"get_type_id","","",204,[[["self"]],["typeid"]]],[11,"read","","",205,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",205,[[],["usize"]]],[11,"to_void_ptr","","",205,N],[11,"ref_from_ptr","","",205,N],[11,"is_size_suitable","","",205,[[["usize"]],["bool"]]],[11,"into","","",205,[[["self"]],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,N],[11,"from","","",205,[[["t"]],["t"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"try_into","","",205,[[["self"]],["result"]]],[11,"get_type_id","","",205,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_stencil_texture2d","",206,[[["self"]],["u"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"read","","",207,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",207,[[],["usize"]]],[11,"to_void_ptr","","",207,N],[11,"ref_from_ptr","","",207,N],[11,"is_size_suitable","","",207,[[["usize"]],["bool"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,N],[11,"from","","",207,[[["t"]],["t"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"into","glium::texture::texture2d_multisample","",208,[[["self"]],["u"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"read","","",209,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",209,[[],["usize"]]],[11,"to_void_ptr","","",209,N],[11,"ref_from_ptr","","",209,N],[11,"is_size_suitable","","",209,[[["usize"]],["bool"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"from","","",209,[[["t"]],["t"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"into","glium::texture::integral_texture2d_multisample","",210,[[["self"]],["u"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"read","","",211,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",211,[[],["usize"]]],[11,"to_void_ptr","","",211,N],[11,"ref_from_ptr","","",211,N],[11,"is_size_suitable","","",211,[[["usize"]],["bool"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"from","","",211,[[["t"]],["t"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"into","glium::texture::srgb_texture2d_multisample","",212,[[["self"]],["u"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"read","","",213,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",213,[[],["usize"]]],[11,"to_void_ptr","","",213,N],[11,"ref_from_ptr","","",213,N],[11,"is_size_suitable","","",213,[[["usize"]],["bool"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"from","","",213,[[["t"]],["t"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"into","glium::texture::unsigned_texture2d_multisample","",214,[[["self"]],["u"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"read","","",215,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",215,[[],["usize"]]],[11,"to_void_ptr","","",215,N],[11,"ref_from_ptr","","",215,N],[11,"is_size_suitable","","",215,[[["usize"]],["bool"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"from","","",215,[[["t"]],["t"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_texture2d_multisample","",216,[[["self"]],["u"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"read","","",217,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",217,[[],["usize"]]],[11,"to_void_ptr","","",217,N],[11,"ref_from_ptr","","",217,N],[11,"is_size_suitable","","",217,[[["usize"]],["bool"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"from","","",217,[[["t"]],["t"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"into","glium::texture::stencil_texture2d_multisample","",218,[[["self"]],["u"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"read","","",219,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",219,[[],["usize"]]],[11,"to_void_ptr","","",219,N],[11,"ref_from_ptr","","",219,N],[11,"is_size_suitable","","",219,[[["usize"]],["bool"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"from","","",219,[[["t"]],["t"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_stencil_texture2d_multisample","",220,[[["self"]],["u"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"read","","",221,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",221,[[],["usize"]]],[11,"to_void_ptr","","",221,N],[11,"ref_from_ptr","","",221,N],[11,"is_size_suitable","","",221,[[["usize"]],["bool"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"from","","",221,[[["t"]],["t"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"into","glium::texture::texture3d","",222,[[["self"]],["u"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"read","","",223,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",223,[[],["usize"]]],[11,"to_void_ptr","","",223,N],[11,"ref_from_ptr","","",223,N],[11,"is_size_suitable","","",223,[[["usize"]],["bool"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"from","","",223,[[["t"]],["t"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_texture3d","",224,[[["self"]],["u"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"read","","",225,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",225,[[],["usize"]]],[11,"to_void_ptr","","",225,N],[11,"ref_from_ptr","","",225,N],[11,"is_size_suitable","","",225,[[["usize"]],["bool"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"from","","",225,[[["t"]],["t"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"into","glium::texture::srgb_texture3d","",226,[[["self"]],["u"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"read","","",227,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",227,[[],["usize"]]],[11,"to_void_ptr","","",227,N],[11,"ref_from_ptr","","",227,N],[11,"is_size_suitable","","",227,[[["usize"]],["bool"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"from","","",227,[[["t"]],["t"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_srgb_texture3d","",228,[[["self"]],["u"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"read","","",229,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",229,[[],["usize"]]],[11,"to_void_ptr","","",229,N],[11,"ref_from_ptr","","",229,N],[11,"is_size_suitable","","",229,[[["usize"]],["bool"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"from","","",229,[[["t"]],["t"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"into","glium::texture::integral_texture3d","",230,[[["self"]],["u"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"read","","",231,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",231,[[],["usize"]]],[11,"to_void_ptr","","",231,N],[11,"ref_from_ptr","","",231,N],[11,"is_size_suitable","","",231,[[["usize"]],["bool"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,N],[11,"from","","",231,[[["t"]],["t"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"into","glium::texture::unsigned_texture3d","",232,[[["self"]],["u"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"read","","",233,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",233,[[],["usize"]]],[11,"to_void_ptr","","",233,N],[11,"ref_from_ptr","","",233,N],[11,"is_size_suitable","","",233,[[["usize"]],["bool"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"from","","",233,[[["t"]],["t"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_texture3d","",234,[[["self"]],["u"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"read","","",235,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",235,[[],["usize"]]],[11,"to_void_ptr","","",235,N],[11,"ref_from_ptr","","",235,N],[11,"is_size_suitable","","",235,[[["usize"]],["bool"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"from","","",235,[[["t"]],["t"]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_stencil_texture3d","",236,[[["self"]],["u"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"read","","",237,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",237,[[],["usize"]]],[11,"to_void_ptr","","",237,N],[11,"ref_from_ptr","","",237,N],[11,"is_size_suitable","","",237,[[["usize"]],["bool"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"from","","",237,[[["t"]],["t"]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"into","glium::texture::texture1d_array","",238,[[["self"]],["u"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"read","","",239,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",239,[[],["usize"]]],[11,"to_void_ptr","","",239,N],[11,"ref_from_ptr","","",239,N],[11,"is_size_suitable","","",239,[[["usize"]],["bool"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"from","","",239,[[["t"]],["t"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"read","","",240,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",240,[[],["usize"]]],[11,"to_void_ptr","","",240,N],[11,"ref_from_ptr","","",240,N],[11,"is_size_suitable","","",240,[[["usize"]],["bool"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"from","","",240,[[["t"]],["t"]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"read","","",241,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",241,[[],["usize"]]],[11,"to_void_ptr","","",241,N],[11,"ref_from_ptr","","",241,N],[11,"is_size_suitable","","",241,[[["usize"]],["bool"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"from","","",241,[[["t"]],["t"]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_texture1d_array","",242,[[["self"]],["u"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"read","","",243,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",243,[[],["usize"]]],[11,"to_void_ptr","","",243,N],[11,"ref_from_ptr","","",243,N],[11,"is_size_suitable","","",243,[[["usize"]],["bool"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,N],[11,"from","","",243,[[["t"]],["t"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"read","","",244,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",244,[[],["usize"]]],[11,"to_void_ptr","","",244,N],[11,"ref_from_ptr","","",244,N],[11,"is_size_suitable","","",244,[[["usize"]],["bool"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,N],[11,"from","","",244,[[["t"]],["t"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"read","","",245,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",245,[[],["usize"]]],[11,"to_void_ptr","","",245,N],[11,"ref_from_ptr","","",245,N],[11,"is_size_suitable","","",245,[[["usize"]],["bool"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,N],[11,"from","","",245,[[["t"]],["t"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"into","glium::texture::srgb_texture1d_array","",246,[[["self"]],["u"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"read","","",247,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",247,[[],["usize"]]],[11,"to_void_ptr","","",247,N],[11,"ref_from_ptr","","",247,N],[11,"is_size_suitable","","",247,[[["usize"]],["bool"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,N],[11,"from","","",247,[[["t"]],["t"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"read","","",248,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",248,[[],["usize"]]],[11,"to_void_ptr","","",248,N],[11,"ref_from_ptr","","",248,N],[11,"is_size_suitable","","",248,[[["usize"]],["bool"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,N],[11,"from","","",248,[[["t"]],["t"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"read","","",249,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",249,[[],["usize"]]],[11,"to_void_ptr","","",249,N],[11,"ref_from_ptr","","",249,N],[11,"is_size_suitable","","",249,[[["usize"]],["bool"]]],[11,"into","","",249,[[["self"]],["u"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,N],[11,"from","","",249,[[["t"]],["t"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"try_into","","",249,[[["self"]],["result"]]],[11,"get_type_id","","",249,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_srgb_texture1d_array","",250,[[["self"]],["u"]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"try_into","","",250,[[["self"]],["result"]]],[11,"get_type_id","","",250,[[["self"]],["typeid"]]],[11,"read","","",251,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",251,[[],["usize"]]],[11,"to_void_ptr","","",251,N],[11,"ref_from_ptr","","",251,N],[11,"is_size_suitable","","",251,[[["usize"]],["bool"]]],[11,"into","","",251,[[["self"]],["u"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,N],[11,"from","","",251,[[["t"]],["t"]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"try_into","","",251,[[["self"]],["result"]]],[11,"get_type_id","","",251,[[["self"]],["typeid"]]],[11,"read","","",252,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",252,[[],["usize"]]],[11,"to_void_ptr","","",252,N],[11,"ref_from_ptr","","",252,N],[11,"is_size_suitable","","",252,[[["usize"]],["bool"]]],[11,"into","","",252,[[["self"]],["u"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,N],[11,"from","","",252,[[["t"]],["t"]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"try_into","","",252,[[["self"]],["result"]]],[11,"get_type_id","","",252,[[["self"]],["typeid"]]],[11,"read","","",253,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",253,[[],["usize"]]],[11,"to_void_ptr","","",253,N],[11,"ref_from_ptr","","",253,N],[11,"is_size_suitable","","",253,[[["usize"]],["bool"]]],[11,"into","","",253,[[["self"]],["u"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,N],[11,"from","","",253,[[["t"]],["t"]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"try_into","","",253,[[["self"]],["result"]]],[11,"get_type_id","","",253,[[["self"]],["typeid"]]],[11,"into","glium::texture::integral_texture1d_array","",254,[[["self"]],["u"]]],[11,"from","","",254,[[["t"]],["t"]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"try_into","","",254,[[["self"]],["result"]]],[11,"get_type_id","","",254,[[["self"]],["typeid"]]],[11,"read","","",255,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",255,[[],["usize"]]],[11,"to_void_ptr","","",255,N],[11,"ref_from_ptr","","",255,N],[11,"is_size_suitable","","",255,[[["usize"]],["bool"]]],[11,"into","","",255,[[["self"]],["u"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,N],[11,"from","","",255,[[["t"]],["t"]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"try_into","","",255,[[["self"]],["result"]]],[11,"get_type_id","","",255,[[["self"]],["typeid"]]],[11,"read","","",256,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",256,[[],["usize"]]],[11,"to_void_ptr","","",256,N],[11,"ref_from_ptr","","",256,N],[11,"is_size_suitable","","",256,[[["usize"]],["bool"]]],[11,"into","","",256,[[["self"]],["u"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,N],[11,"from","","",256,[[["t"]],["t"]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"try_into","","",256,[[["self"]],["result"]]],[11,"get_type_id","","",256,[[["self"]],["typeid"]]],[11,"read","","",257,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",257,[[],["usize"]]],[11,"to_void_ptr","","",257,N],[11,"ref_from_ptr","","",257,N],[11,"is_size_suitable","","",257,[[["usize"]],["bool"]]],[11,"into","","",257,[[["self"]],["u"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,N],[11,"from","","",257,[[["t"]],["t"]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"try_into","","",257,[[["self"]],["result"]]],[11,"get_type_id","","",257,[[["self"]],["typeid"]]],[11,"into","glium::texture::unsigned_texture1d_array","",258,[[["self"]],["u"]]],[11,"from","","",258,[[["t"]],["t"]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"try_into","","",258,[[["self"]],["result"]]],[11,"get_type_id","","",258,[[["self"]],["typeid"]]],[11,"read","","",259,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",259,[[],["usize"]]],[11,"to_void_ptr","","",259,N],[11,"ref_from_ptr","","",259,N],[11,"is_size_suitable","","",259,[[["usize"]],["bool"]]],[11,"into","","",259,[[["self"]],["u"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,N],[11,"from","","",259,[[["t"]],["t"]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"try_into","","",259,[[["self"]],["result"]]],[11,"get_type_id","","",259,[[["self"]],["typeid"]]],[11,"read","","",260,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",260,[[],["usize"]]],[11,"to_void_ptr","","",260,N],[11,"ref_from_ptr","","",260,N],[11,"is_size_suitable","","",260,[[["usize"]],["bool"]]],[11,"into","","",260,[[["self"]],["u"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,N],[11,"from","","",260,[[["t"]],["t"]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"try_into","","",260,[[["self"]],["result"]]],[11,"get_type_id","","",260,[[["self"]],["typeid"]]],[11,"read","","",261,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",261,[[],["usize"]]],[11,"to_void_ptr","","",261,N],[11,"ref_from_ptr","","",261,N],[11,"is_size_suitable","","",261,[[["usize"]],["bool"]]],[11,"into","","",261,[[["self"]],["u"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,N],[11,"from","","",261,[[["t"]],["t"]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"try_into","","",261,[[["self"]],["result"]]],[11,"get_type_id","","",261,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_texture1d_array","",262,[[["self"]],["u"]]],[11,"from","","",262,[[["t"]],["t"]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"try_into","","",262,[[["self"]],["result"]]],[11,"get_type_id","","",262,[[["self"]],["typeid"]]],[11,"read","","",263,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",263,[[],["usize"]]],[11,"to_void_ptr","","",263,N],[11,"ref_from_ptr","","",263,N],[11,"is_size_suitable","","",263,[[["usize"]],["bool"]]],[11,"into","","",263,[[["self"]],["u"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,N],[11,"from","","",263,[[["t"]],["t"]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"try_into","","",263,[[["self"]],["result"]]],[11,"get_type_id","","",263,[[["self"]],["typeid"]]],[11,"read","","",264,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",264,[[],["usize"]]],[11,"to_void_ptr","","",264,N],[11,"ref_from_ptr","","",264,N],[11,"is_size_suitable","","",264,[[["usize"]],["bool"]]],[11,"into","","",264,[[["self"]],["u"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,N],[11,"from","","",264,[[["t"]],["t"]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"try_into","","",264,[[["self"]],["result"]]],[11,"get_type_id","","",264,[[["self"]],["typeid"]]],[11,"read","","",265,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",265,[[],["usize"]]],[11,"to_void_ptr","","",265,N],[11,"ref_from_ptr","","",265,N],[11,"is_size_suitable","","",265,[[["usize"]],["bool"]]],[11,"into","","",265,[[["self"]],["u"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,N],[11,"from","","",265,[[["t"]],["t"]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"try_into","","",265,[[["self"]],["result"]]],[11,"get_type_id","","",265,[[["self"]],["typeid"]]],[11,"into","glium::texture::stencil_texture1d_array","",266,[[["self"]],["u"]]],[11,"from","","",266,[[["t"]],["t"]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"try_into","","",266,[[["self"]],["result"]]],[11,"get_type_id","","",266,[[["self"]],["typeid"]]],[11,"read","","",267,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",267,[[],["usize"]]],[11,"to_void_ptr","","",267,N],[11,"ref_from_ptr","","",267,N],[11,"is_size_suitable","","",267,[[["usize"]],["bool"]]],[11,"into","","",267,[[["self"]],["u"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,N],[11,"from","","",267,[[["t"]],["t"]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"try_into","","",267,[[["self"]],["result"]]],[11,"get_type_id","","",267,[[["self"]],["typeid"]]],[11,"read","","",268,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",268,[[],["usize"]]],[11,"to_void_ptr","","",268,N],[11,"ref_from_ptr","","",268,N],[11,"is_size_suitable","","",268,[[["usize"]],["bool"]]],[11,"into","","",268,[[["self"]],["u"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,N],[11,"from","","",268,[[["t"]],["t"]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"try_into","","",268,[[["self"]],["result"]]],[11,"get_type_id","","",268,[[["self"]],["typeid"]]],[11,"read","","",269,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",269,[[],["usize"]]],[11,"to_void_ptr","","",269,N],[11,"ref_from_ptr","","",269,N],[11,"is_size_suitable","","",269,[[["usize"]],["bool"]]],[11,"into","","",269,[[["self"]],["u"]]],[11,"to_owned","","",269,[[["self"]],["t"]]],[11,"clone_into","","",269,N],[11,"from","","",269,[[["t"]],["t"]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"try_into","","",269,[[["self"]],["result"]]],[11,"get_type_id","","",269,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_stencil_texture1d_array","",270,[[["self"]],["u"]]],[11,"from","","",270,[[["t"]],["t"]]],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"try_into","","",270,[[["self"]],["result"]]],[11,"get_type_id","","",270,[[["self"]],["typeid"]]],[11,"read","","",271,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",271,[[],["usize"]]],[11,"to_void_ptr","","",271,N],[11,"ref_from_ptr","","",271,N],[11,"is_size_suitable","","",271,[[["usize"]],["bool"]]],[11,"into","","",271,[[["self"]],["u"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,N],[11,"from","","",271,[[["t"]],["t"]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"try_into","","",271,[[["self"]],["result"]]],[11,"get_type_id","","",271,[[["self"]],["typeid"]]],[11,"read","","",272,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",272,[[],["usize"]]],[11,"to_void_ptr","","",272,N],[11,"ref_from_ptr","","",272,N],[11,"is_size_suitable","","",272,[[["usize"]],["bool"]]],[11,"into","","",272,[[["self"]],["u"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,N],[11,"from","","",272,[[["t"]],["t"]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"try_into","","",272,[[["self"]],["result"]]],[11,"get_type_id","","",272,[[["self"]],["typeid"]]],[11,"read","","",273,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",273,[[],["usize"]]],[11,"to_void_ptr","","",273,N],[11,"ref_from_ptr","","",273,N],[11,"is_size_suitable","","",273,[[["usize"]],["bool"]]],[11,"into","","",273,[[["self"]],["u"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,N],[11,"from","","",273,[[["t"]],["t"]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"try_into","","",273,[[["self"]],["result"]]],[11,"get_type_id","","",273,[[["self"]],["typeid"]]],[11,"into","glium::texture::texture2d_array","",274,[[["self"]],["u"]]],[11,"from","","",274,[[["t"]],["t"]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"try_into","","",274,[[["self"]],["result"]]],[11,"get_type_id","","",274,[[["self"]],["typeid"]]],[11,"read","","",275,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",275,[[],["usize"]]],[11,"to_void_ptr","","",275,N],[11,"ref_from_ptr","","",275,N],[11,"is_size_suitable","","",275,[[["usize"]],["bool"]]],[11,"into","","",275,[[["self"]],["u"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,N],[11,"from","","",275,[[["t"]],["t"]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"try_into","","",275,[[["self"]],["result"]]],[11,"get_type_id","","",275,[[["self"]],["typeid"]]],[11,"read","","",276,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",276,[[],["usize"]]],[11,"to_void_ptr","","",276,N],[11,"ref_from_ptr","","",276,N],[11,"is_size_suitable","","",276,[[["usize"]],["bool"]]],[11,"into","","",276,[[["self"]],["u"]]],[11,"to_owned","","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,N],[11,"from","","",276,[[["t"]],["t"]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"try_into","","",276,[[["self"]],["result"]]],[11,"get_type_id","","",276,[[["self"]],["typeid"]]],[11,"read","","",277,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",277,[[],["usize"]]],[11,"to_void_ptr","","",277,N],[11,"ref_from_ptr","","",277,N],[11,"is_size_suitable","","",277,[[["usize"]],["bool"]]],[11,"into","","",277,[[["self"]],["u"]]],[11,"to_owned","","",277,[[["self"]],["t"]]],[11,"clone_into","","",277,N],[11,"from","","",277,[[["t"]],["t"]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"try_into","","",277,[[["self"]],["result"]]],[11,"get_type_id","","",277,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_texture2d_array","",278,[[["self"]],["u"]]],[11,"from","","",278,[[["t"]],["t"]]],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"try_into","","",278,[[["self"]],["result"]]],[11,"get_type_id","","",278,[[["self"]],["typeid"]]],[11,"read","","",279,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",279,[[],["usize"]]],[11,"to_void_ptr","","",279,N],[11,"ref_from_ptr","","",279,N],[11,"is_size_suitable","","",279,[[["usize"]],["bool"]]],[11,"into","","",279,[[["self"]],["u"]]],[11,"to_owned","","",279,[[["self"]],["t"]]],[11,"clone_into","","",279,N],[11,"from","","",279,[[["t"]],["t"]]],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"try_into","","",279,[[["self"]],["result"]]],[11,"get_type_id","","",279,[[["self"]],["typeid"]]],[11,"read","","",280,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",280,[[],["usize"]]],[11,"to_void_ptr","","",280,N],[11,"ref_from_ptr","","",280,N],[11,"is_size_suitable","","",280,[[["usize"]],["bool"]]],[11,"into","","",280,[[["self"]],["u"]]],[11,"to_owned","","",280,[[["self"]],["t"]]],[11,"clone_into","","",280,N],[11,"from","","",280,[[["t"]],["t"]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"try_into","","",280,[[["self"]],["result"]]],[11,"get_type_id","","",280,[[["self"]],["typeid"]]],[11,"read","","",281,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",281,[[],["usize"]]],[11,"to_void_ptr","","",281,N],[11,"ref_from_ptr","","",281,N],[11,"is_size_suitable","","",281,[[["usize"]],["bool"]]],[11,"into","","",281,[[["self"]],["u"]]],[11,"to_owned","","",281,[[["self"]],["t"]]],[11,"clone_into","","",281,N],[11,"from","","",281,[[["t"]],["t"]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"try_into","","",281,[[["self"]],["result"]]],[11,"get_type_id","","",281,[[["self"]],["typeid"]]],[11,"into","glium::texture::srgb_texture2d_array","",282,[[["self"]],["u"]]],[11,"from","","",282,[[["t"]],["t"]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"try_into","","",282,[[["self"]],["result"]]],[11,"get_type_id","","",282,[[["self"]],["typeid"]]],[11,"read","","",283,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",283,[[],["usize"]]],[11,"to_void_ptr","","",283,N],[11,"ref_from_ptr","","",283,N],[11,"is_size_suitable","","",283,[[["usize"]],["bool"]]],[11,"into","","",283,[[["self"]],["u"]]],[11,"to_owned","","",283,[[["self"]],["t"]]],[11,"clone_into","","",283,N],[11,"from","","",283,[[["t"]],["t"]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"try_into","","",283,[[["self"]],["result"]]],[11,"get_type_id","","",283,[[["self"]],["typeid"]]],[11,"read","","",284,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",284,[[],["usize"]]],[11,"to_void_ptr","","",284,N],[11,"ref_from_ptr","","",284,N],[11,"is_size_suitable","","",284,[[["usize"]],["bool"]]],[11,"into","","",284,[[["self"]],["u"]]],[11,"to_owned","","",284,[[["self"]],["t"]]],[11,"clone_into","","",284,N],[11,"from","","",284,[[["t"]],["t"]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"try_into","","",284,[[["self"]],["result"]]],[11,"get_type_id","","",284,[[["self"]],["typeid"]]],[11,"read","","",285,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",285,[[],["usize"]]],[11,"to_void_ptr","","",285,N],[11,"ref_from_ptr","","",285,N],[11,"is_size_suitable","","",285,[[["usize"]],["bool"]]],[11,"into","","",285,[[["self"]],["u"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,N],[11,"from","","",285,[[["t"]],["t"]]],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"try_into","","",285,[[["self"]],["result"]]],[11,"get_type_id","","",285,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_srgb_texture2d_array","",286,[[["self"]],["u"]]],[11,"from","","",286,[[["t"]],["t"]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"try_into","","",286,[[["self"]],["result"]]],[11,"get_type_id","","",286,[[["self"]],["typeid"]]],[11,"read","","",287,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",287,[[],["usize"]]],[11,"to_void_ptr","","",287,N],[11,"ref_from_ptr","","",287,N],[11,"is_size_suitable","","",287,[[["usize"]],["bool"]]],[11,"into","","",287,[[["self"]],["u"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,N],[11,"from","","",287,[[["t"]],["t"]]],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"try_into","","",287,[[["self"]],["result"]]],[11,"get_type_id","","",287,[[["self"]],["typeid"]]],[11,"read","","",288,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",288,[[],["usize"]]],[11,"to_void_ptr","","",288,N],[11,"ref_from_ptr","","",288,N],[11,"is_size_suitable","","",288,[[["usize"]],["bool"]]],[11,"into","","",288,[[["self"]],["u"]]],[11,"to_owned","","",288,[[["self"]],["t"]]],[11,"clone_into","","",288,N],[11,"from","","",288,[[["t"]],["t"]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"try_into","","",288,[[["self"]],["result"]]],[11,"get_type_id","","",288,[[["self"]],["typeid"]]],[11,"read","","",289,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",289,[[],["usize"]]],[11,"to_void_ptr","","",289,N],[11,"ref_from_ptr","","",289,N],[11,"is_size_suitable","","",289,[[["usize"]],["bool"]]],[11,"into","","",289,[[["self"]],["u"]]],[11,"to_owned","","",289,[[["self"]],["t"]]],[11,"clone_into","","",289,N],[11,"from","","",289,[[["t"]],["t"]]],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"try_into","","",289,[[["self"]],["result"]]],[11,"get_type_id","","",289,[[["self"]],["typeid"]]],[11,"into","glium::texture::integral_texture2d_array","",290,[[["self"]],["u"]]],[11,"from","","",290,[[["t"]],["t"]]],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"try_into","","",290,[[["self"]],["result"]]],[11,"get_type_id","","",290,[[["self"]],["typeid"]]],[11,"read","","",291,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",291,[[],["usize"]]],[11,"to_void_ptr","","",291,N],[11,"ref_from_ptr","","",291,N],[11,"is_size_suitable","","",291,[[["usize"]],["bool"]]],[11,"into","","",291,[[["self"]],["u"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,N],[11,"from","","",291,[[["t"]],["t"]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"try_into","","",291,[[["self"]],["result"]]],[11,"get_type_id","","",291,[[["self"]],["typeid"]]],[11,"read","","",292,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",292,[[],["usize"]]],[11,"to_void_ptr","","",292,N],[11,"ref_from_ptr","","",292,N],[11,"is_size_suitable","","",292,[[["usize"]],["bool"]]],[11,"into","","",292,[[["self"]],["u"]]],[11,"to_owned","","",292,[[["self"]],["t"]]],[11,"clone_into","","",292,N],[11,"from","","",292,[[["t"]],["t"]]],[11,"try_from","","",292,[[["u"]],["result"]]],[11,"borrow","","",292,[[["self"]],["t"]]],[11,"borrow_mut","","",292,[[["self"]],["t"]]],[11,"try_into","","",292,[[["self"]],["result"]]],[11,"get_type_id","","",292,[[["self"]],["typeid"]]],[11,"read","","",293,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",293,[[],["usize"]]],[11,"to_void_ptr","","",293,N],[11,"ref_from_ptr","","",293,N],[11,"is_size_suitable","","",293,[[["usize"]],["bool"]]],[11,"into","","",293,[[["self"]],["u"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,N],[11,"from","","",293,[[["t"]],["t"]]],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"try_into","","",293,[[["self"]],["result"]]],[11,"get_type_id","","",293,[[["self"]],["typeid"]]],[11,"into","glium::texture::unsigned_texture2d_array","",294,[[["self"]],["u"]]],[11,"from","","",294,[[["t"]],["t"]]],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"try_into","","",294,[[["self"]],["result"]]],[11,"get_type_id","","",294,[[["self"]],["typeid"]]],[11,"read","","",295,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",295,[[],["usize"]]],[11,"to_void_ptr","","",295,N],[11,"ref_from_ptr","","",295,N],[11,"is_size_suitable","","",295,[[["usize"]],["bool"]]],[11,"into","","",295,[[["self"]],["u"]]],[11,"to_owned","","",295,[[["self"]],["t"]]],[11,"clone_into","","",295,N],[11,"from","","",295,[[["t"]],["t"]]],[11,"try_from","","",295,[[["u"]],["result"]]],[11,"borrow","","",295,[[["self"]],["t"]]],[11,"borrow_mut","","",295,[[["self"]],["t"]]],[11,"try_into","","",295,[[["self"]],["result"]]],[11,"get_type_id","","",295,[[["self"]],["typeid"]]],[11,"read","","",296,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",296,[[],["usize"]]],[11,"to_void_ptr","","",296,N],[11,"ref_from_ptr","","",296,N],[11,"is_size_suitable","","",296,[[["usize"]],["bool"]]],[11,"into","","",296,[[["self"]],["u"]]],[11,"to_owned","","",296,[[["self"]],["t"]]],[11,"clone_into","","",296,N],[11,"from","","",296,[[["t"]],["t"]]],[11,"try_from","","",296,[[["u"]],["result"]]],[11,"borrow","","",296,[[["self"]],["t"]]],[11,"borrow_mut","","",296,[[["self"]],["t"]]],[11,"try_into","","",296,[[["self"]],["result"]]],[11,"get_type_id","","",296,[[["self"]],["typeid"]]],[11,"read","","",297,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",297,[[],["usize"]]],[11,"to_void_ptr","","",297,N],[11,"ref_from_ptr","","",297,N],[11,"is_size_suitable","","",297,[[["usize"]],["bool"]]],[11,"into","","",297,[[["self"]],["u"]]],[11,"to_owned","","",297,[[["self"]],["t"]]],[11,"clone_into","","",297,N],[11,"from","","",297,[[["t"]],["t"]]],[11,"try_from","","",297,[[["u"]],["result"]]],[11,"borrow","","",297,[[["self"]],["t"]]],[11,"borrow_mut","","",297,[[["self"]],["t"]]],[11,"try_into","","",297,[[["self"]],["result"]]],[11,"get_type_id","","",297,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_texture2d_array","",298,[[["self"]],["u"]]],[11,"from","","",298,[[["t"]],["t"]]],[11,"try_from","","",298,[[["u"]],["result"]]],[11,"borrow","","",298,[[["self"]],["t"]]],[11,"borrow_mut","","",298,[[["self"]],["t"]]],[11,"try_into","","",298,[[["self"]],["result"]]],[11,"get_type_id","","",298,[[["self"]],["typeid"]]],[11,"read","","",299,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",299,[[],["usize"]]],[11,"to_void_ptr","","",299,N],[11,"ref_from_ptr","","",299,N],[11,"is_size_suitable","","",299,[[["usize"]],["bool"]]],[11,"into","","",299,[[["self"]],["u"]]],[11,"to_owned","","",299,[[["self"]],["t"]]],[11,"clone_into","","",299,N],[11,"from","","",299,[[["t"]],["t"]]],[11,"try_from","","",299,[[["u"]],["result"]]],[11,"borrow","","",299,[[["self"]],["t"]]],[11,"borrow_mut","","",299,[[["self"]],["t"]]],[11,"try_into","","",299,[[["self"]],["result"]]],[11,"get_type_id","","",299,[[["self"]],["typeid"]]],[11,"read","","",300,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",300,[[],["usize"]]],[11,"to_void_ptr","","",300,N],[11,"ref_from_ptr","","",300,N],[11,"is_size_suitable","","",300,[[["usize"]],["bool"]]],[11,"into","","",300,[[["self"]],["u"]]],[11,"to_owned","","",300,[[["self"]],["t"]]],[11,"clone_into","","",300,N],[11,"from","","",300,[[["t"]],["t"]]],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"try_into","","",300,[[["self"]],["result"]]],[11,"get_type_id","","",300,[[["self"]],["typeid"]]],[11,"read","","",301,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",301,[[],["usize"]]],[11,"to_void_ptr","","",301,N],[11,"ref_from_ptr","","",301,N],[11,"is_size_suitable","","",301,[[["usize"]],["bool"]]],[11,"into","","",301,[[["self"]],["u"]]],[11,"to_owned","","",301,[[["self"]],["t"]]],[11,"clone_into","","",301,N],[11,"from","","",301,[[["t"]],["t"]]],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"try_into","","",301,[[["self"]],["result"]]],[11,"get_type_id","","",301,[[["self"]],["typeid"]]],[11,"into","glium::texture::stencil_texture2d_array","",302,[[["self"]],["u"]]],[11,"from","","",302,[[["t"]],["t"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"try_into","","",302,[[["self"]],["result"]]],[11,"get_type_id","","",302,[[["self"]],["typeid"]]],[11,"read","","",303,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",303,[[],["usize"]]],[11,"to_void_ptr","","",303,N],[11,"ref_from_ptr","","",303,N],[11,"is_size_suitable","","",303,[[["usize"]],["bool"]]],[11,"into","","",303,[[["self"]],["u"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,N],[11,"from","","",303,[[["t"]],["t"]]],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"try_into","","",303,[[["self"]],["result"]]],[11,"get_type_id","","",303,[[["self"]],["typeid"]]],[11,"read","","",304,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",304,[[],["usize"]]],[11,"to_void_ptr","","",304,N],[11,"ref_from_ptr","","",304,N],[11,"is_size_suitable","","",304,[[["usize"]],["bool"]]],[11,"into","","",304,[[["self"]],["u"]]],[11,"to_owned","","",304,[[["self"]],["t"]]],[11,"clone_into","","",304,N],[11,"from","","",304,[[["t"]],["t"]]],[11,"try_from","","",304,[[["u"]],["result"]]],[11,"borrow","","",304,[[["self"]],["t"]]],[11,"borrow_mut","","",304,[[["self"]],["t"]]],[11,"try_into","","",304,[[["self"]],["result"]]],[11,"get_type_id","","",304,[[["self"]],["typeid"]]],[11,"read","","",305,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",305,[[],["usize"]]],[11,"to_void_ptr","","",305,N],[11,"ref_from_ptr","","",305,N],[11,"is_size_suitable","","",305,[[["usize"]],["bool"]]],[11,"into","","",305,[[["self"]],["u"]]],[11,"to_owned","","",305,[[["self"]],["t"]]],[11,"clone_into","","",305,N],[11,"from","","",305,[[["t"]],["t"]]],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"try_into","","",305,[[["self"]],["result"]]],[11,"get_type_id","","",305,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_stencil_texture2d_array","",306,[[["self"]],["u"]]],[11,"from","","",306,[[["t"]],["t"]]],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"try_into","","",306,[[["self"]],["result"]]],[11,"get_type_id","","",306,[[["self"]],["typeid"]]],[11,"read","","",307,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",307,[[],["usize"]]],[11,"to_void_ptr","","",307,N],[11,"ref_from_ptr","","",307,N],[11,"is_size_suitable","","",307,[[["usize"]],["bool"]]],[11,"into","","",307,[[["self"]],["u"]]],[11,"to_owned","","",307,[[["self"]],["t"]]],[11,"clone_into","","",307,N],[11,"from","","",307,[[["t"]],["t"]]],[11,"try_from","","",307,[[["u"]],["result"]]],[11,"borrow","","",307,[[["self"]],["t"]]],[11,"borrow_mut","","",307,[[["self"]],["t"]]],[11,"try_into","","",307,[[["self"]],["result"]]],[11,"get_type_id","","",307,[[["self"]],["typeid"]]],[11,"read","","",308,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",308,[[],["usize"]]],[11,"to_void_ptr","","",308,N],[11,"ref_from_ptr","","",308,N],[11,"is_size_suitable","","",308,[[["usize"]],["bool"]]],[11,"into","","",308,[[["self"]],["u"]]],[11,"to_owned","","",308,[[["self"]],["t"]]],[11,"clone_into","","",308,N],[11,"from","","",308,[[["t"]],["t"]]],[11,"try_from","","",308,[[["u"]],["result"]]],[11,"borrow","","",308,[[["self"]],["t"]]],[11,"borrow_mut","","",308,[[["self"]],["t"]]],[11,"try_into","","",308,[[["self"]],["result"]]],[11,"get_type_id","","",308,[[["self"]],["typeid"]]],[11,"read","","",309,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",309,[[],["usize"]]],[11,"to_void_ptr","","",309,N],[11,"ref_from_ptr","","",309,N],[11,"is_size_suitable","","",309,[[["usize"]],["bool"]]],[11,"into","","",309,[[["self"]],["u"]]],[11,"to_owned","","",309,[[["self"]],["t"]]],[11,"clone_into","","",309,N],[11,"from","","",309,[[["t"]],["t"]]],[11,"try_from","","",309,[[["u"]],["result"]]],[11,"borrow","","",309,[[["self"]],["t"]]],[11,"borrow_mut","","",309,[[["self"]],["t"]]],[11,"try_into","","",309,[[["self"]],["result"]]],[11,"get_type_id","","",309,[[["self"]],["typeid"]]],[11,"into","glium::texture::texture2d_multisample_array","",310,[[["self"]],["u"]]],[11,"from","","",310,[[["t"]],["t"]]],[11,"try_from","","",310,[[["u"]],["result"]]],[11,"borrow","","",310,[[["self"]],["t"]]],[11,"borrow_mut","","",310,[[["self"]],["t"]]],[11,"try_into","","",310,[[["self"]],["result"]]],[11,"get_type_id","","",310,[[["self"]],["typeid"]]],[11,"read","","",311,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",311,[[],["usize"]]],[11,"to_void_ptr","","",311,N],[11,"ref_from_ptr","","",311,N],[11,"is_size_suitable","","",311,[[["usize"]],["bool"]]],[11,"into","","",311,[[["self"]],["u"]]],[11,"to_owned","","",311,[[["self"]],["t"]]],[11,"clone_into","","",311,N],[11,"from","","",311,[[["t"]],["t"]]],[11,"try_from","","",311,[[["u"]],["result"]]],[11,"borrow","","",311,[[["self"]],["t"]]],[11,"borrow_mut","","",311,[[["self"]],["t"]]],[11,"try_into","","",311,[[["self"]],["result"]]],[11,"get_type_id","","",311,[[["self"]],["typeid"]]],[11,"read","","",312,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",312,[[],["usize"]]],[11,"to_void_ptr","","",312,N],[11,"ref_from_ptr","","",312,N],[11,"is_size_suitable","","",312,[[["usize"]],["bool"]]],[11,"into","","",312,[[["self"]],["u"]]],[11,"to_owned","","",312,[[["self"]],["t"]]],[11,"clone_into","","",312,N],[11,"from","","",312,[[["t"]],["t"]]],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"try_into","","",312,[[["self"]],["result"]]],[11,"get_type_id","","",312,[[["self"]],["typeid"]]],[11,"read","","",313,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",313,[[],["usize"]]],[11,"to_void_ptr","","",313,N],[11,"ref_from_ptr","","",313,N],[11,"is_size_suitable","","",313,[[["usize"]],["bool"]]],[11,"into","","",313,[[["self"]],["u"]]],[11,"to_owned","","",313,[[["self"]],["t"]]],[11,"clone_into","","",313,N],[11,"from","","",313,[[["t"]],["t"]]],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"try_into","","",313,[[["self"]],["result"]]],[11,"get_type_id","","",313,[[["self"]],["typeid"]]],[11,"into","glium::texture::srgb_texture2d_multisample_array","",314,[[["self"]],["u"]]],[11,"from","","",314,[[["t"]],["t"]]],[11,"try_from","","",314,[[["u"]],["result"]]],[11,"borrow","","",314,[[["self"]],["t"]]],[11,"borrow_mut","","",314,[[["self"]],["t"]]],[11,"try_into","","",314,[[["self"]],["result"]]],[11,"get_type_id","","",314,[[["self"]],["typeid"]]],[11,"read","","",315,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",315,[[],["usize"]]],[11,"to_void_ptr","","",315,N],[11,"ref_from_ptr","","",315,N],[11,"is_size_suitable","","",315,[[["usize"]],["bool"]]],[11,"into","","",315,[[["self"]],["u"]]],[11,"to_owned","","",315,[[["self"]],["t"]]],[11,"clone_into","","",315,N],[11,"from","","",315,[[["t"]],["t"]]],[11,"try_from","","",315,[[["u"]],["result"]]],[11,"borrow","","",315,[[["self"]],["t"]]],[11,"borrow_mut","","",315,[[["self"]],["t"]]],[11,"try_into","","",315,[[["self"]],["result"]]],[11,"get_type_id","","",315,[[["self"]],["typeid"]]],[11,"read","","",316,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",316,[[],["usize"]]],[11,"to_void_ptr","","",316,N],[11,"ref_from_ptr","","",316,N],[11,"is_size_suitable","","",316,[[["usize"]],["bool"]]],[11,"into","","",316,[[["self"]],["u"]]],[11,"to_owned","","",316,[[["self"]],["t"]]],[11,"clone_into","","",316,N],[11,"from","","",316,[[["t"]],["t"]]],[11,"try_from","","",316,[[["u"]],["result"]]],[11,"borrow","","",316,[[["self"]],["t"]]],[11,"borrow_mut","","",316,[[["self"]],["t"]]],[11,"try_into","","",316,[[["self"]],["result"]]],[11,"get_type_id","","",316,[[["self"]],["typeid"]]],[11,"read","","",317,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",317,[[],["usize"]]],[11,"to_void_ptr","","",317,N],[11,"ref_from_ptr","","",317,N],[11,"is_size_suitable","","",317,[[["usize"]],["bool"]]],[11,"into","","",317,[[["self"]],["u"]]],[11,"to_owned","","",317,[[["self"]],["t"]]],[11,"clone_into","","",317,N],[11,"from","","",317,[[["t"]],["t"]]],[11,"try_from","","",317,[[["u"]],["result"]]],[11,"borrow","","",317,[[["self"]],["t"]]],[11,"borrow_mut","","",317,[[["self"]],["t"]]],[11,"try_into","","",317,[[["self"]],["result"]]],[11,"get_type_id","","",317,[[["self"]],["typeid"]]],[11,"into","glium::texture::integral_texture2d_multisample_array","",318,[[["self"]],["u"]]],[11,"from","","",318,[[["t"]],["t"]]],[11,"try_from","","",318,[[["u"]],["result"]]],[11,"borrow","","",318,[[["self"]],["t"]]],[11,"borrow_mut","","",318,[[["self"]],["t"]]],[11,"try_into","","",318,[[["self"]],["result"]]],[11,"get_type_id","","",318,[[["self"]],["typeid"]]],[11,"read","","",319,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",319,[[],["usize"]]],[11,"to_void_ptr","","",319,N],[11,"ref_from_ptr","","",319,N],[11,"is_size_suitable","","",319,[[["usize"]],["bool"]]],[11,"into","","",319,[[["self"]],["u"]]],[11,"to_owned","","",319,[[["self"]],["t"]]],[11,"clone_into","","",319,N],[11,"from","","",319,[[["t"]],["t"]]],[11,"try_from","","",319,[[["u"]],["result"]]],[11,"borrow","","",319,[[["self"]],["t"]]],[11,"borrow_mut","","",319,[[["self"]],["t"]]],[11,"try_into","","",319,[[["self"]],["result"]]],[11,"get_type_id","","",319,[[["self"]],["typeid"]]],[11,"read","","",320,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",320,[[],["usize"]]],[11,"to_void_ptr","","",320,N],[11,"ref_from_ptr","","",320,N],[11,"is_size_suitable","","",320,[[["usize"]],["bool"]]],[11,"into","","",320,[[["self"]],["u"]]],[11,"to_owned","","",320,[[["self"]],["t"]]],[11,"clone_into","","",320,N],[11,"from","","",320,[[["t"]],["t"]]],[11,"try_from","","",320,[[["u"]],["result"]]],[11,"borrow","","",320,[[["self"]],["t"]]],[11,"borrow_mut","","",320,[[["self"]],["t"]]],[11,"try_into","","",320,[[["self"]],["result"]]],[11,"get_type_id","","",320,[[["self"]],["typeid"]]],[11,"read","","",321,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",321,[[],["usize"]]],[11,"to_void_ptr","","",321,N],[11,"ref_from_ptr","","",321,N],[11,"is_size_suitable","","",321,[[["usize"]],["bool"]]],[11,"into","","",321,[[["self"]],["u"]]],[11,"to_owned","","",321,[[["self"]],["t"]]],[11,"clone_into","","",321,N],[11,"from","","",321,[[["t"]],["t"]]],[11,"try_from","","",321,[[["u"]],["result"]]],[11,"borrow","","",321,[[["self"]],["t"]]],[11,"borrow_mut","","",321,[[["self"]],["t"]]],[11,"try_into","","",321,[[["self"]],["result"]]],[11,"get_type_id","","",321,[[["self"]],["typeid"]]],[11,"into","glium::texture::unsigned_texture2d_multisample_array","",322,[[["self"]],["u"]]],[11,"from","","",322,[[["t"]],["t"]]],[11,"try_from","","",322,[[["u"]],["result"]]],[11,"borrow","","",322,[[["self"]],["t"]]],[11,"borrow_mut","","",322,[[["self"]],["t"]]],[11,"try_into","","",322,[[["self"]],["result"]]],[11,"get_type_id","","",322,[[["self"]],["typeid"]]],[11,"read","","",323,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",323,[[],["usize"]]],[11,"to_void_ptr","","",323,N],[11,"ref_from_ptr","","",323,N],[11,"is_size_suitable","","",323,[[["usize"]],["bool"]]],[11,"into","","",323,[[["self"]],["u"]]],[11,"to_owned","","",323,[[["self"]],["t"]]],[11,"clone_into","","",323,N],[11,"from","","",323,[[["t"]],["t"]]],[11,"try_from","","",323,[[["u"]],["result"]]],[11,"borrow","","",323,[[["self"]],["t"]]],[11,"borrow_mut","","",323,[[["self"]],["t"]]],[11,"try_into","","",323,[[["self"]],["result"]]],[11,"get_type_id","","",323,[[["self"]],["typeid"]]],[11,"read","","",324,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",324,[[],["usize"]]],[11,"to_void_ptr","","",324,N],[11,"ref_from_ptr","","",324,N],[11,"is_size_suitable","","",324,[[["usize"]],["bool"]]],[11,"into","","",324,[[["self"]],["u"]]],[11,"to_owned","","",324,[[["self"]],["t"]]],[11,"clone_into","","",324,N],[11,"from","","",324,[[["t"]],["t"]]],[11,"try_from","","",324,[[["u"]],["result"]]],[11,"borrow","","",324,[[["self"]],["t"]]],[11,"borrow_mut","","",324,[[["self"]],["t"]]],[11,"try_into","","",324,[[["self"]],["result"]]],[11,"get_type_id","","",324,[[["self"]],["typeid"]]],[11,"read","","",325,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",325,[[],["usize"]]],[11,"to_void_ptr","","",325,N],[11,"ref_from_ptr","","",325,N],[11,"is_size_suitable","","",325,[[["usize"]],["bool"]]],[11,"into","","",325,[[["self"]],["u"]]],[11,"to_owned","","",325,[[["self"]],["t"]]],[11,"clone_into","","",325,N],[11,"from","","",325,[[["t"]],["t"]]],[11,"try_from","","",325,[[["u"]],["result"]]],[11,"borrow","","",325,[[["self"]],["t"]]],[11,"borrow_mut","","",325,[[["self"]],["t"]]],[11,"try_into","","",325,[[["self"]],["result"]]],[11,"get_type_id","","",325,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_texture2d_multisample_array","",326,[[["self"]],["u"]]],[11,"from","","",326,[[["t"]],["t"]]],[11,"try_from","","",326,[[["u"]],["result"]]],[11,"borrow","","",326,[[["self"]],["t"]]],[11,"borrow_mut","","",326,[[["self"]],["t"]]],[11,"try_into","","",326,[[["self"]],["result"]]],[11,"get_type_id","","",326,[[["self"]],["typeid"]]],[11,"read","","",327,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",327,[[],["usize"]]],[11,"to_void_ptr","","",327,N],[11,"ref_from_ptr","","",327,N],[11,"is_size_suitable","","",327,[[["usize"]],["bool"]]],[11,"into","","",327,[[["self"]],["u"]]],[11,"to_owned","","",327,[[["self"]],["t"]]],[11,"clone_into","","",327,N],[11,"from","","",327,[[["t"]],["t"]]],[11,"try_from","","",327,[[["u"]],["result"]]],[11,"borrow","","",327,[[["self"]],["t"]]],[11,"borrow_mut","","",327,[[["self"]],["t"]]],[11,"try_into","","",327,[[["self"]],["result"]]],[11,"get_type_id","","",327,[[["self"]],["typeid"]]],[11,"read","","",328,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",328,[[],["usize"]]],[11,"to_void_ptr","","",328,N],[11,"ref_from_ptr","","",328,N],[11,"is_size_suitable","","",328,[[["usize"]],["bool"]]],[11,"into","","",328,[[["self"]],["u"]]],[11,"to_owned","","",328,[[["self"]],["t"]]],[11,"clone_into","","",328,N],[11,"from","","",328,[[["t"]],["t"]]],[11,"try_from","","",328,[[["u"]],["result"]]],[11,"borrow","","",328,[[["self"]],["t"]]],[11,"borrow_mut","","",328,[[["self"]],["t"]]],[11,"try_into","","",328,[[["self"]],["result"]]],[11,"get_type_id","","",328,[[["self"]],["typeid"]]],[11,"read","","",329,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",329,[[],["usize"]]],[11,"to_void_ptr","","",329,N],[11,"ref_from_ptr","","",329,N],[11,"is_size_suitable","","",329,[[["usize"]],["bool"]]],[11,"into","","",329,[[["self"]],["u"]]],[11,"to_owned","","",329,[[["self"]],["t"]]],[11,"clone_into","","",329,N],[11,"from","","",329,[[["t"]],["t"]]],[11,"try_from","","",329,[[["u"]],["result"]]],[11,"borrow","","",329,[[["self"]],["t"]]],[11,"borrow_mut","","",329,[[["self"]],["t"]]],[11,"try_into","","",329,[[["self"]],["result"]]],[11,"get_type_id","","",329,[[["self"]],["typeid"]]],[11,"into","glium::texture::stencil_texture2d_multisample_array","",330,[[["self"]],["u"]]],[11,"from","","",330,[[["t"]],["t"]]],[11,"try_from","","",330,[[["u"]],["result"]]],[11,"borrow","","",330,[[["self"]],["t"]]],[11,"borrow_mut","","",330,[[["self"]],["t"]]],[11,"try_into","","",330,[[["self"]],["result"]]],[11,"get_type_id","","",330,[[["self"]],["typeid"]]],[11,"read","","",331,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",331,[[],["usize"]]],[11,"to_void_ptr","","",331,N],[11,"ref_from_ptr","","",331,N],[11,"is_size_suitable","","",331,[[["usize"]],["bool"]]],[11,"into","","",331,[[["self"]],["u"]]],[11,"to_owned","","",331,[[["self"]],["t"]]],[11,"clone_into","","",331,N],[11,"from","","",331,[[["t"]],["t"]]],[11,"try_from","","",331,[[["u"]],["result"]]],[11,"borrow","","",331,[[["self"]],["t"]]],[11,"borrow_mut","","",331,[[["self"]],["t"]]],[11,"try_into","","",331,[[["self"]],["result"]]],[11,"get_type_id","","",331,[[["self"]],["typeid"]]],[11,"read","","",332,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",332,[[],["usize"]]],[11,"to_void_ptr","","",332,N],[11,"ref_from_ptr","","",332,N],[11,"is_size_suitable","","",332,[[["usize"]],["bool"]]],[11,"into","","",332,[[["self"]],["u"]]],[11,"to_owned","","",332,[[["self"]],["t"]]],[11,"clone_into","","",332,N],[11,"from","","",332,[[["t"]],["t"]]],[11,"try_from","","",332,[[["u"]],["result"]]],[11,"borrow","","",332,[[["self"]],["t"]]],[11,"borrow_mut","","",332,[[["self"]],["t"]]],[11,"try_into","","",332,[[["self"]],["result"]]],[11,"get_type_id","","",332,[[["self"]],["typeid"]]],[11,"read","","",333,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",333,[[],["usize"]]],[11,"to_void_ptr","","",333,N],[11,"ref_from_ptr","","",333,N],[11,"is_size_suitable","","",333,[[["usize"]],["bool"]]],[11,"into","","",333,[[["self"]],["u"]]],[11,"to_owned","","",333,[[["self"]],["t"]]],[11,"clone_into","","",333,N],[11,"from","","",333,[[["t"]],["t"]]],[11,"try_from","","",333,[[["u"]],["result"]]],[11,"borrow","","",333,[[["self"]],["t"]]],[11,"borrow_mut","","",333,[[["self"]],["t"]]],[11,"try_into","","",333,[[["self"]],["result"]]],[11,"get_type_id","","",333,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_stencil_texture2d_multisample_array","",334,[[["self"]],["u"]]],[11,"from","","",334,[[["t"]],["t"]]],[11,"try_from","","",334,[[["u"]],["result"]]],[11,"borrow","","",334,[[["self"]],["t"]]],[11,"borrow_mut","","",334,[[["self"]],["t"]]],[11,"try_into","","",334,[[["self"]],["result"]]],[11,"get_type_id","","",334,[[["self"]],["typeid"]]],[11,"read","","",335,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",335,[[],["usize"]]],[11,"to_void_ptr","","",335,N],[11,"ref_from_ptr","","",335,N],[11,"is_size_suitable","","",335,[[["usize"]],["bool"]]],[11,"into","","",335,[[["self"]],["u"]]],[11,"to_owned","","",335,[[["self"]],["t"]]],[11,"clone_into","","",335,N],[11,"from","","",335,[[["t"]],["t"]]],[11,"try_from","","",335,[[["u"]],["result"]]],[11,"borrow","","",335,[[["self"]],["t"]]],[11,"borrow_mut","","",335,[[["self"]],["t"]]],[11,"try_into","","",335,[[["self"]],["result"]]],[11,"get_type_id","","",335,[[["self"]],["typeid"]]],[11,"read","","",336,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",336,[[],["usize"]]],[11,"to_void_ptr","","",336,N],[11,"ref_from_ptr","","",336,N],[11,"is_size_suitable","","",336,[[["usize"]],["bool"]]],[11,"into","","",336,[[["self"]],["u"]]],[11,"to_owned","","",336,[[["self"]],["t"]]],[11,"clone_into","","",336,N],[11,"from","","",336,[[["t"]],["t"]]],[11,"try_from","","",336,[[["u"]],["result"]]],[11,"borrow","","",336,[[["self"]],["t"]]],[11,"borrow_mut","","",336,[[["self"]],["t"]]],[11,"try_into","","",336,[[["self"]],["result"]]],[11,"get_type_id","","",336,[[["self"]],["typeid"]]],[11,"read","","",337,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",337,[[],["usize"]]],[11,"to_void_ptr","","",337,N],[11,"ref_from_ptr","","",337,N],[11,"is_size_suitable","","",337,[[["usize"]],["bool"]]],[11,"into","","",337,[[["self"]],["u"]]],[11,"to_owned","","",337,[[["self"]],["t"]]],[11,"clone_into","","",337,N],[11,"from","","",337,[[["t"]],["t"]]],[11,"try_from","","",337,[[["u"]],["result"]]],[11,"borrow","","",337,[[["self"]],["t"]]],[11,"borrow_mut","","",337,[[["self"]],["t"]]],[11,"try_into","","",337,[[["self"]],["result"]]],[11,"get_type_id","","",337,[[["self"]],["typeid"]]],[11,"into","glium::texture::cubemap","",338,[[["self"]],["u"]]],[11,"from","","",338,[[["t"]],["t"]]],[11,"try_from","","",338,[[["u"]],["result"]]],[11,"borrow","","",338,[[["self"]],["t"]]],[11,"borrow_mut","","",338,[[["self"]],["t"]]],[11,"try_into","","",338,[[["self"]],["result"]]],[11,"get_type_id","","",338,[[["self"]],["typeid"]]],[11,"read","","",339,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",339,[[],["usize"]]],[11,"to_void_ptr","","",339,N],[11,"ref_from_ptr","","",339,N],[11,"is_size_suitable","","",339,[[["usize"]],["bool"]]],[11,"into","","",339,[[["self"]],["u"]]],[11,"to_owned","","",339,[[["self"]],["t"]]],[11,"clone_into","","",339,N],[11,"from","","",339,[[["t"]],["t"]]],[11,"try_from","","",339,[[["u"]],["result"]]],[11,"borrow","","",339,[[["self"]],["t"]]],[11,"borrow_mut","","",339,[[["self"]],["t"]]],[11,"try_into","","",339,[[["self"]],["result"]]],[11,"get_type_id","","",339,[[["self"]],["typeid"]]],[11,"read","","",340,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",340,[[],["usize"]]],[11,"to_void_ptr","","",340,N],[11,"ref_from_ptr","","",340,N],[11,"is_size_suitable","","",340,[[["usize"]],["bool"]]],[11,"into","","",340,[[["self"]],["u"]]],[11,"to_owned","","",340,[[["self"]],["t"]]],[11,"clone_into","","",340,N],[11,"from","","",340,[[["t"]],["t"]]],[11,"try_from","","",340,[[["u"]],["result"]]],[11,"borrow","","",340,[[["self"]],["t"]]],[11,"borrow_mut","","",340,[[["self"]],["t"]]],[11,"try_into","","",340,[[["self"]],["result"]]],[11,"get_type_id","","",340,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_cubemap","",341,[[["self"]],["u"]]],[11,"from","","",341,[[["t"]],["t"]]],[11,"try_from","","",341,[[["u"]],["result"]]],[11,"borrow","","",341,[[["self"]],["t"]]],[11,"borrow_mut","","",341,[[["self"]],["t"]]],[11,"try_into","","",341,[[["self"]],["result"]]],[11,"get_type_id","","",341,[[["self"]],["typeid"]]],[11,"read","","",342,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",342,[[],["usize"]]],[11,"to_void_ptr","","",342,N],[11,"ref_from_ptr","","",342,N],[11,"is_size_suitable","","",342,[[["usize"]],["bool"]]],[11,"into","","",342,[[["self"]],["u"]]],[11,"to_owned","","",342,[[["self"]],["t"]]],[11,"clone_into","","",342,N],[11,"from","","",342,[[["t"]],["t"]]],[11,"try_from","","",342,[[["u"]],["result"]]],[11,"borrow","","",342,[[["self"]],["t"]]],[11,"borrow_mut","","",342,[[["self"]],["t"]]],[11,"try_into","","",342,[[["self"]],["result"]]],[11,"get_type_id","","",342,[[["self"]],["typeid"]]],[11,"read","","",343,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",343,[[],["usize"]]],[11,"to_void_ptr","","",343,N],[11,"ref_from_ptr","","",343,N],[11,"is_size_suitable","","",343,[[["usize"]],["bool"]]],[11,"into","","",343,[[["self"]],["u"]]],[11,"to_owned","","",343,[[["self"]],["t"]]],[11,"clone_into","","",343,N],[11,"from","","",343,[[["t"]],["t"]]],[11,"try_from","","",343,[[["u"]],["result"]]],[11,"borrow","","",343,[[["self"]],["t"]]],[11,"borrow_mut","","",343,[[["self"]],["t"]]],[11,"try_into","","",343,[[["self"]],["result"]]],[11,"get_type_id","","",343,[[["self"]],["typeid"]]],[11,"into","glium::texture::srgb_cubemap","",344,[[["self"]],["u"]]],[11,"from","","",344,[[["t"]],["t"]]],[11,"try_from","","",344,[[["u"]],["result"]]],[11,"borrow","","",344,[[["self"]],["t"]]],[11,"borrow_mut","","",344,[[["self"]],["t"]]],[11,"try_into","","",344,[[["self"]],["result"]]],[11,"get_type_id","","",344,[[["self"]],["typeid"]]],[11,"read","","",345,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",345,[[],["usize"]]],[11,"to_void_ptr","","",345,N],[11,"ref_from_ptr","","",345,N],[11,"is_size_suitable","","",345,[[["usize"]],["bool"]]],[11,"into","","",345,[[["self"]],["u"]]],[11,"to_owned","","",345,[[["self"]],["t"]]],[11,"clone_into","","",345,N],[11,"from","","",345,[[["t"]],["t"]]],[11,"try_from","","",345,[[["u"]],["result"]]],[11,"borrow","","",345,[[["self"]],["t"]]],[11,"borrow_mut","","",345,[[["self"]],["t"]]],[11,"try_into","","",345,[[["self"]],["result"]]],[11,"get_type_id","","",345,[[["self"]],["typeid"]]],[11,"read","","",346,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",346,[[],["usize"]]],[11,"to_void_ptr","","",346,N],[11,"ref_from_ptr","","",346,N],[11,"is_size_suitable","","",346,[[["usize"]],["bool"]]],[11,"into","","",346,[[["self"]],["u"]]],[11,"to_owned","","",346,[[["self"]],["t"]]],[11,"clone_into","","",346,N],[11,"from","","",346,[[["t"]],["t"]]],[11,"try_from","","",346,[[["u"]],["result"]]],[11,"borrow","","",346,[[["self"]],["t"]]],[11,"borrow_mut","","",346,[[["self"]],["t"]]],[11,"try_into","","",346,[[["self"]],["result"]]],[11,"get_type_id","","",346,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_srgb_cubemap","",347,[[["self"]],["u"]]],[11,"from","","",347,[[["t"]],["t"]]],[11,"try_from","","",347,[[["u"]],["result"]]],[11,"borrow","","",347,[[["self"]],["t"]]],[11,"borrow_mut","","",347,[[["self"]],["t"]]],[11,"try_into","","",347,[[["self"]],["result"]]],[11,"get_type_id","","",347,[[["self"]],["typeid"]]],[11,"read","","",348,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",348,[[],["usize"]]],[11,"to_void_ptr","","",348,N],[11,"ref_from_ptr","","",348,N],[11,"is_size_suitable","","",348,[[["usize"]],["bool"]]],[11,"into","","",348,[[["self"]],["u"]]],[11,"to_owned","","",348,[[["self"]],["t"]]],[11,"clone_into","","",348,N],[11,"from","","",348,[[["t"]],["t"]]],[11,"try_from","","",348,[[["u"]],["result"]]],[11,"borrow","","",348,[[["self"]],["t"]]],[11,"borrow_mut","","",348,[[["self"]],["t"]]],[11,"try_into","","",348,[[["self"]],["result"]]],[11,"get_type_id","","",348,[[["self"]],["typeid"]]],[11,"read","","",349,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",349,[[],["usize"]]],[11,"to_void_ptr","","",349,N],[11,"ref_from_ptr","","",349,N],[11,"is_size_suitable","","",349,[[["usize"]],["bool"]]],[11,"into","","",349,[[["self"]],["u"]]],[11,"to_owned","","",349,[[["self"]],["t"]]],[11,"clone_into","","",349,N],[11,"from","","",349,[[["t"]],["t"]]],[11,"try_from","","",349,[[["u"]],["result"]]],[11,"borrow","","",349,[[["self"]],["t"]]],[11,"borrow_mut","","",349,[[["self"]],["t"]]],[11,"try_into","","",349,[[["self"]],["result"]]],[11,"get_type_id","","",349,[[["self"]],["typeid"]]],[11,"into","glium::texture::integral_cubemap","",350,[[["self"]],["u"]]],[11,"from","","",350,[[["t"]],["t"]]],[11,"try_from","","",350,[[["u"]],["result"]]],[11,"borrow","","",350,[[["self"]],["t"]]],[11,"borrow_mut","","",350,[[["self"]],["t"]]],[11,"try_into","","",350,[[["self"]],["result"]]],[11,"get_type_id","","",350,[[["self"]],["typeid"]]],[11,"read","","",351,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",351,[[],["usize"]]],[11,"to_void_ptr","","",351,N],[11,"ref_from_ptr","","",351,N],[11,"is_size_suitable","","",351,[[["usize"]],["bool"]]],[11,"into","","",351,[[["self"]],["u"]]],[11,"to_owned","","",351,[[["self"]],["t"]]],[11,"clone_into","","",351,N],[11,"from","","",351,[[["t"]],["t"]]],[11,"try_from","","",351,[[["u"]],["result"]]],[11,"borrow","","",351,[[["self"]],["t"]]],[11,"borrow_mut","","",351,[[["self"]],["t"]]],[11,"try_into","","",351,[[["self"]],["result"]]],[11,"get_type_id","","",351,[[["self"]],["typeid"]]],[11,"read","","",352,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",352,[[],["usize"]]],[11,"to_void_ptr","","",352,N],[11,"ref_from_ptr","","",352,N],[11,"is_size_suitable","","",352,[[["usize"]],["bool"]]],[11,"into","","",352,[[["self"]],["u"]]],[11,"to_owned","","",352,[[["self"]],["t"]]],[11,"clone_into","","",352,N],[11,"from","","",352,[[["t"]],["t"]]],[11,"try_from","","",352,[[["u"]],["result"]]],[11,"borrow","","",352,[[["self"]],["t"]]],[11,"borrow_mut","","",352,[[["self"]],["t"]]],[11,"try_into","","",352,[[["self"]],["result"]]],[11,"get_type_id","","",352,[[["self"]],["typeid"]]],[11,"into","glium::texture::unsigned_cubemap","",353,[[["self"]],["u"]]],[11,"from","","",353,[[["t"]],["t"]]],[11,"try_from","","",353,[[["u"]],["result"]]],[11,"borrow","","",353,[[["self"]],["t"]]],[11,"borrow_mut","","",353,[[["self"]],["t"]]],[11,"try_into","","",353,[[["self"]],["result"]]],[11,"get_type_id","","",353,[[["self"]],["typeid"]]],[11,"read","","",354,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",354,[[],["usize"]]],[11,"to_void_ptr","","",354,N],[11,"ref_from_ptr","","",354,N],[11,"is_size_suitable","","",354,[[["usize"]],["bool"]]],[11,"into","","",354,[[["self"]],["u"]]],[11,"to_owned","","",354,[[["self"]],["t"]]],[11,"clone_into","","",354,N],[11,"from","","",354,[[["t"]],["t"]]],[11,"try_from","","",354,[[["u"]],["result"]]],[11,"borrow","","",354,[[["self"]],["t"]]],[11,"borrow_mut","","",354,[[["self"]],["t"]]],[11,"try_into","","",354,[[["self"]],["result"]]],[11,"get_type_id","","",354,[[["self"]],["typeid"]]],[11,"read","","",355,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",355,[[],["usize"]]],[11,"to_void_ptr","","",355,N],[11,"ref_from_ptr","","",355,N],[11,"is_size_suitable","","",355,[[["usize"]],["bool"]]],[11,"into","","",355,[[["self"]],["u"]]],[11,"to_owned","","",355,[[["self"]],["t"]]],[11,"clone_into","","",355,N],[11,"from","","",355,[[["t"]],["t"]]],[11,"try_from","","",355,[[["u"]],["result"]]],[11,"borrow","","",355,[[["self"]],["t"]]],[11,"borrow_mut","","",355,[[["self"]],["t"]]],[11,"try_into","","",355,[[["self"]],["result"]]],[11,"get_type_id","","",355,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_cubemap","",356,[[["self"]],["u"]]],[11,"from","","",356,[[["t"]],["t"]]],[11,"try_from","","",356,[[["u"]],["result"]]],[11,"borrow","","",356,[[["self"]],["t"]]],[11,"borrow_mut","","",356,[[["self"]],["t"]]],[11,"try_into","","",356,[[["self"]],["result"]]],[11,"get_type_id","","",356,[[["self"]],["typeid"]]],[11,"read","","",357,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",357,[[],["usize"]]],[11,"to_void_ptr","","",357,N],[11,"ref_from_ptr","","",357,N],[11,"is_size_suitable","","",357,[[["usize"]],["bool"]]],[11,"into","","",357,[[["self"]],["u"]]],[11,"to_owned","","",357,[[["self"]],["t"]]],[11,"clone_into","","",357,N],[11,"from","","",357,[[["t"]],["t"]]],[11,"try_from","","",357,[[["u"]],["result"]]],[11,"borrow","","",357,[[["self"]],["t"]]],[11,"borrow_mut","","",357,[[["self"]],["t"]]],[11,"try_into","","",357,[[["self"]],["result"]]],[11,"get_type_id","","",357,[[["self"]],["typeid"]]],[11,"read","","",358,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",358,[[],["usize"]]],[11,"to_void_ptr","","",358,N],[11,"ref_from_ptr","","",358,N],[11,"is_size_suitable","","",358,[[["usize"]],["bool"]]],[11,"into","","",358,[[["self"]],["u"]]],[11,"to_owned","","",358,[[["self"]],["t"]]],[11,"clone_into","","",358,N],[11,"from","","",358,[[["t"]],["t"]]],[11,"try_from","","",358,[[["u"]],["result"]]],[11,"borrow","","",358,[[["self"]],["t"]]],[11,"borrow_mut","","",358,[[["self"]],["t"]]],[11,"try_into","","",358,[[["self"]],["result"]]],[11,"get_type_id","","",358,[[["self"]],["typeid"]]],[11,"into","glium::texture::stencil_cubemap","",359,[[["self"]],["u"]]],[11,"from","","",359,[[["t"]],["t"]]],[11,"try_from","","",359,[[["u"]],["result"]]],[11,"borrow","","",359,[[["self"]],["t"]]],[11,"borrow_mut","","",359,[[["self"]],["t"]]],[11,"try_into","","",359,[[["self"]],["result"]]],[11,"get_type_id","","",359,[[["self"]],["typeid"]]],[11,"read","","",360,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",360,[[],["usize"]]],[11,"to_void_ptr","","",360,N],[11,"ref_from_ptr","","",360,N],[11,"is_size_suitable","","",360,[[["usize"]],["bool"]]],[11,"into","","",360,[[["self"]],["u"]]],[11,"to_owned","","",360,[[["self"]],["t"]]],[11,"clone_into","","",360,N],[11,"from","","",360,[[["t"]],["t"]]],[11,"try_from","","",360,[[["u"]],["result"]]],[11,"borrow","","",360,[[["self"]],["t"]]],[11,"borrow_mut","","",360,[[["self"]],["t"]]],[11,"try_into","","",360,[[["self"]],["result"]]],[11,"get_type_id","","",360,[[["self"]],["typeid"]]],[11,"read","","",361,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",361,[[],["usize"]]],[11,"to_void_ptr","","",361,N],[11,"ref_from_ptr","","",361,N],[11,"is_size_suitable","","",361,[[["usize"]],["bool"]]],[11,"into","","",361,[[["self"]],["u"]]],[11,"to_owned","","",361,[[["self"]],["t"]]],[11,"clone_into","","",361,N],[11,"from","","",361,[[["t"]],["t"]]],[11,"try_from","","",361,[[["u"]],["result"]]],[11,"borrow","","",361,[[["self"]],["t"]]],[11,"borrow_mut","","",361,[[["self"]],["t"]]],[11,"try_into","","",361,[[["self"]],["result"]]],[11,"get_type_id","","",361,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_stencil_cubemap","",362,[[["self"]],["u"]]],[11,"from","","",362,[[["t"]],["t"]]],[11,"try_from","","",362,[[["u"]],["result"]]],[11,"borrow","","",362,[[["self"]],["t"]]],[11,"borrow_mut","","",362,[[["self"]],["t"]]],[11,"try_into","","",362,[[["self"]],["result"]]],[11,"get_type_id","","",362,[[["self"]],["typeid"]]],[11,"read","","",363,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",363,[[],["usize"]]],[11,"to_void_ptr","","",363,N],[11,"ref_from_ptr","","",363,N],[11,"is_size_suitable","","",363,[[["usize"]],["bool"]]],[11,"into","","",363,[[["self"]],["u"]]],[11,"to_owned","","",363,[[["self"]],["t"]]],[11,"clone_into","","",363,N],[11,"from","","",363,[[["t"]],["t"]]],[11,"try_from","","",363,[[["u"]],["result"]]],[11,"borrow","","",363,[[["self"]],["t"]]],[11,"borrow_mut","","",363,[[["self"]],["t"]]],[11,"try_into","","",363,[[["self"]],["result"]]],[11,"get_type_id","","",363,[[["self"]],["typeid"]]],[11,"read","","",364,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",364,[[],["usize"]]],[11,"to_void_ptr","","",364,N],[11,"ref_from_ptr","","",364,N],[11,"is_size_suitable","","",364,[[["usize"]],["bool"]]],[11,"into","","",364,[[["self"]],["u"]]],[11,"to_owned","","",364,[[["self"]],["t"]]],[11,"clone_into","","",364,N],[11,"from","","",364,[[["t"]],["t"]]],[11,"try_from","","",364,[[["u"]],["result"]]],[11,"borrow","","",364,[[["self"]],["t"]]],[11,"borrow_mut","","",364,[[["self"]],["t"]]],[11,"try_into","","",364,[[["self"]],["result"]]],[11,"get_type_id","","",364,[[["self"]],["typeid"]]],[11,"into","glium::texture::cubemap_array","",365,[[["self"]],["u"]]],[11,"from","","",365,[[["t"]],["t"]]],[11,"try_from","","",365,[[["u"]],["result"]]],[11,"borrow","","",365,[[["self"]],["t"]]],[11,"borrow_mut","","",365,[[["self"]],["t"]]],[11,"try_into","","",365,[[["self"]],["result"]]],[11,"get_type_id","","",365,[[["self"]],["typeid"]]],[11,"read","","",366,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",366,[[],["usize"]]],[11,"to_void_ptr","","",366,N],[11,"ref_from_ptr","","",366,N],[11,"is_size_suitable","","",366,[[["usize"]],["bool"]]],[11,"into","","",366,[[["self"]],["u"]]],[11,"to_owned","","",366,[[["self"]],["t"]]],[11,"clone_into","","",366,N],[11,"from","","",366,[[["t"]],["t"]]],[11,"try_from","","",366,[[["u"]],["result"]]],[11,"borrow","","",366,[[["self"]],["t"]]],[11,"borrow_mut","","",366,[[["self"]],["t"]]],[11,"try_into","","",366,[[["self"]],["result"]]],[11,"get_type_id","","",366,[[["self"]],["typeid"]]],[11,"read","","",367,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",367,[[],["usize"]]],[11,"to_void_ptr","","",367,N],[11,"ref_from_ptr","","",367,N],[11,"is_size_suitable","","",367,[[["usize"]],["bool"]]],[11,"into","","",367,[[["self"]],["u"]]],[11,"to_owned","","",367,[[["self"]],["t"]]],[11,"clone_into","","",367,N],[11,"from","","",367,[[["t"]],["t"]]],[11,"try_from","","",367,[[["u"]],["result"]]],[11,"borrow","","",367,[[["self"]],["t"]]],[11,"borrow_mut","","",367,[[["self"]],["t"]]],[11,"try_into","","",367,[[["self"]],["result"]]],[11,"get_type_id","","",367,[[["self"]],["typeid"]]],[11,"read","","",368,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",368,[[],["usize"]]],[11,"to_void_ptr","","",368,N],[11,"ref_from_ptr","","",368,N],[11,"is_size_suitable","","",368,[[["usize"]],["bool"]]],[11,"into","","",368,[[["self"]],["u"]]],[11,"to_owned","","",368,[[["self"]],["t"]]],[11,"clone_into","","",368,N],[11,"from","","",368,[[["t"]],["t"]]],[11,"try_from","","",368,[[["u"]],["result"]]],[11,"borrow","","",368,[[["self"]],["t"]]],[11,"borrow_mut","","",368,[[["self"]],["t"]]],[11,"try_into","","",368,[[["self"]],["result"]]],[11,"get_type_id","","",368,[[["self"]],["typeid"]]],[11,"read","","",369,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",369,[[],["usize"]]],[11,"to_void_ptr","","",369,N],[11,"ref_from_ptr","","",369,N],[11,"is_size_suitable","","",369,[[["usize"]],["bool"]]],[11,"into","","",369,[[["self"]],["u"]]],[11,"to_owned","","",369,[[["self"]],["t"]]],[11,"clone_into","","",369,N],[11,"from","","",369,[[["t"]],["t"]]],[11,"try_from","","",369,[[["u"]],["result"]]],[11,"borrow","","",369,[[["self"]],["t"]]],[11,"borrow_mut","","",369,[[["self"]],["t"]]],[11,"try_into","","",369,[[["self"]],["result"]]],[11,"get_type_id","","",369,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_cubemap_array","",370,[[["self"]],["u"]]],[11,"from","","",370,[[["t"]],["t"]]],[11,"try_from","","",370,[[["u"]],["result"]]],[11,"borrow","","",370,[[["self"]],["t"]]],[11,"borrow_mut","","",370,[[["self"]],["t"]]],[11,"try_into","","",370,[[["self"]],["result"]]],[11,"get_type_id","","",370,[[["self"]],["typeid"]]],[11,"read","","",371,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",371,[[],["usize"]]],[11,"to_void_ptr","","",371,N],[11,"ref_from_ptr","","",371,N],[11,"is_size_suitable","","",371,[[["usize"]],["bool"]]],[11,"into","","",371,[[["self"]],["u"]]],[11,"to_owned","","",371,[[["self"]],["t"]]],[11,"clone_into","","",371,N],[11,"from","","",371,[[["t"]],["t"]]],[11,"try_from","","",371,[[["u"]],["result"]]],[11,"borrow","","",371,[[["self"]],["t"]]],[11,"borrow_mut","","",371,[[["self"]],["t"]]],[11,"try_into","","",371,[[["self"]],["result"]]],[11,"get_type_id","","",371,[[["self"]],["typeid"]]],[11,"read","","",372,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",372,[[],["usize"]]],[11,"to_void_ptr","","",372,N],[11,"ref_from_ptr","","",372,N],[11,"is_size_suitable","","",372,[[["usize"]],["bool"]]],[11,"into","","",372,[[["self"]],["u"]]],[11,"to_owned","","",372,[[["self"]],["t"]]],[11,"clone_into","","",372,N],[11,"from","","",372,[[["t"]],["t"]]],[11,"try_from","","",372,[[["u"]],["result"]]],[11,"borrow","","",372,[[["self"]],["t"]]],[11,"borrow_mut","","",372,[[["self"]],["t"]]],[11,"try_into","","",372,[[["self"]],["result"]]],[11,"get_type_id","","",372,[[["self"]],["typeid"]]],[11,"read","","",373,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",373,[[],["usize"]]],[11,"to_void_ptr","","",373,N],[11,"ref_from_ptr","","",373,N],[11,"is_size_suitable","","",373,[[["usize"]],["bool"]]],[11,"into","","",373,[[["self"]],["u"]]],[11,"to_owned","","",373,[[["self"]],["t"]]],[11,"clone_into","","",373,N],[11,"from","","",373,[[["t"]],["t"]]],[11,"try_from","","",373,[[["u"]],["result"]]],[11,"borrow","","",373,[[["self"]],["t"]]],[11,"borrow_mut","","",373,[[["self"]],["t"]]],[11,"try_into","","",373,[[["self"]],["result"]]],[11,"get_type_id","","",373,[[["self"]],["typeid"]]],[11,"read","","",374,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",374,[[],["usize"]]],[11,"to_void_ptr","","",374,N],[11,"ref_from_ptr","","",374,N],[11,"is_size_suitable","","",374,[[["usize"]],["bool"]]],[11,"into","","",374,[[["self"]],["u"]]],[11,"to_owned","","",374,[[["self"]],["t"]]],[11,"clone_into","","",374,N],[11,"from","","",374,[[["t"]],["t"]]],[11,"try_from","","",374,[[["u"]],["result"]]],[11,"borrow","","",374,[[["self"]],["t"]]],[11,"borrow_mut","","",374,[[["self"]],["t"]]],[11,"try_into","","",374,[[["self"]],["result"]]],[11,"get_type_id","","",374,[[["self"]],["typeid"]]],[11,"into","glium::texture::srgb_cubemap_array","",375,[[["self"]],["u"]]],[11,"from","","",375,[[["t"]],["t"]]],[11,"try_from","","",375,[[["u"]],["result"]]],[11,"borrow","","",375,[[["self"]],["t"]]],[11,"borrow_mut","","",375,[[["self"]],["t"]]],[11,"try_into","","",375,[[["self"]],["result"]]],[11,"get_type_id","","",375,[[["self"]],["typeid"]]],[11,"read","","",376,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",376,[[],["usize"]]],[11,"to_void_ptr","","",376,N],[11,"ref_from_ptr","","",376,N],[11,"is_size_suitable","","",376,[[["usize"]],["bool"]]],[11,"into","","",376,[[["self"]],["u"]]],[11,"to_owned","","",376,[[["self"]],["t"]]],[11,"clone_into","","",376,N],[11,"from","","",376,[[["t"]],["t"]]],[11,"try_from","","",376,[[["u"]],["result"]]],[11,"borrow","","",376,[[["self"]],["t"]]],[11,"borrow_mut","","",376,[[["self"]],["t"]]],[11,"try_into","","",376,[[["self"]],["result"]]],[11,"get_type_id","","",376,[[["self"]],["typeid"]]],[11,"read","","",377,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",377,[[],["usize"]]],[11,"to_void_ptr","","",377,N],[11,"ref_from_ptr","","",377,N],[11,"is_size_suitable","","",377,[[["usize"]],["bool"]]],[11,"into","","",377,[[["self"]],["u"]]],[11,"to_owned","","",377,[[["self"]],["t"]]],[11,"clone_into","","",377,N],[11,"from","","",377,[[["t"]],["t"]]],[11,"try_from","","",377,[[["u"]],["result"]]],[11,"borrow","","",377,[[["self"]],["t"]]],[11,"borrow_mut","","",377,[[["self"]],["t"]]],[11,"try_into","","",377,[[["self"]],["result"]]],[11,"get_type_id","","",377,[[["self"]],["typeid"]]],[11,"read","","",378,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",378,[[],["usize"]]],[11,"to_void_ptr","","",378,N],[11,"ref_from_ptr","","",378,N],[11,"is_size_suitable","","",378,[[["usize"]],["bool"]]],[11,"into","","",378,[[["self"]],["u"]]],[11,"to_owned","","",378,[[["self"]],["t"]]],[11,"clone_into","","",378,N],[11,"from","","",378,[[["t"]],["t"]]],[11,"try_from","","",378,[[["u"]],["result"]]],[11,"borrow","","",378,[[["self"]],["t"]]],[11,"borrow_mut","","",378,[[["self"]],["t"]]],[11,"try_into","","",378,[[["self"]],["result"]]],[11,"get_type_id","","",378,[[["self"]],["typeid"]]],[11,"read","","",379,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",379,[[],["usize"]]],[11,"to_void_ptr","","",379,N],[11,"ref_from_ptr","","",379,N],[11,"is_size_suitable","","",379,[[["usize"]],["bool"]]],[11,"into","","",379,[[["self"]],["u"]]],[11,"to_owned","","",379,[[["self"]],["t"]]],[11,"clone_into","","",379,N],[11,"from","","",379,[[["t"]],["t"]]],[11,"try_from","","",379,[[["u"]],["result"]]],[11,"borrow","","",379,[[["self"]],["t"]]],[11,"borrow_mut","","",379,[[["self"]],["t"]]],[11,"try_into","","",379,[[["self"]],["result"]]],[11,"get_type_id","","",379,[[["self"]],["typeid"]]],[11,"into","glium::texture::compressed_srgb_cubemap_array","",380,[[["self"]],["u"]]],[11,"from","","",380,[[["t"]],["t"]]],[11,"try_from","","",380,[[["u"]],["result"]]],[11,"borrow","","",380,[[["self"]],["t"]]],[11,"borrow_mut","","",380,[[["self"]],["t"]]],[11,"try_into","","",380,[[["self"]],["result"]]],[11,"get_type_id","","",380,[[["self"]],["typeid"]]],[11,"read","","",381,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",381,[[],["usize"]]],[11,"to_void_ptr","","",381,N],[11,"ref_from_ptr","","",381,N],[11,"is_size_suitable","","",381,[[["usize"]],["bool"]]],[11,"into","","",381,[[["self"]],["u"]]],[11,"to_owned","","",381,[[["self"]],["t"]]],[11,"clone_into","","",381,N],[11,"from","","",381,[[["t"]],["t"]]],[11,"try_from","","",381,[[["u"]],["result"]]],[11,"borrow","","",381,[[["self"]],["t"]]],[11,"borrow_mut","","",381,[[["self"]],["t"]]],[11,"try_into","","",381,[[["self"]],["result"]]],[11,"get_type_id","","",381,[[["self"]],["typeid"]]],[11,"read","","",382,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",382,[[],["usize"]]],[11,"to_void_ptr","","",382,N],[11,"ref_from_ptr","","",382,N],[11,"is_size_suitable","","",382,[[["usize"]],["bool"]]],[11,"into","","",382,[[["self"]],["u"]]],[11,"to_owned","","",382,[[["self"]],["t"]]],[11,"clone_into","","",382,N],[11,"from","","",382,[[["t"]],["t"]]],[11,"try_from","","",382,[[["u"]],["result"]]],[11,"borrow","","",382,[[["self"]],["t"]]],[11,"borrow_mut","","",382,[[["self"]],["t"]]],[11,"try_into","","",382,[[["self"]],["result"]]],[11,"get_type_id","","",382,[[["self"]],["typeid"]]],[11,"read","","",383,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",383,[[],["usize"]]],[11,"to_void_ptr","","",383,N],[11,"ref_from_ptr","","",383,N],[11,"is_size_suitable","","",383,[[["usize"]],["bool"]]],[11,"into","","",383,[[["self"]],["u"]]],[11,"to_owned","","",383,[[["self"]],["t"]]],[11,"clone_into","","",383,N],[11,"from","","",383,[[["t"]],["t"]]],[11,"try_from","","",383,[[["u"]],["result"]]],[11,"borrow","","",383,[[["self"]],["t"]]],[11,"borrow_mut","","",383,[[["self"]],["t"]]],[11,"try_into","","",383,[[["self"]],["result"]]],[11,"get_type_id","","",383,[[["self"]],["typeid"]]],[11,"read","","",384,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",384,[[],["usize"]]],[11,"to_void_ptr","","",384,N],[11,"ref_from_ptr","","",384,N],[11,"is_size_suitable","","",384,[[["usize"]],["bool"]]],[11,"into","","",384,[[["self"]],["u"]]],[11,"to_owned","","",384,[[["self"]],["t"]]],[11,"clone_into","","",384,N],[11,"from","","",384,[[["t"]],["t"]]],[11,"try_from","","",384,[[["u"]],["result"]]],[11,"borrow","","",384,[[["self"]],["t"]]],[11,"borrow_mut","","",384,[[["self"]],["t"]]],[11,"try_into","","",384,[[["self"]],["result"]]],[11,"get_type_id","","",384,[[["self"]],["typeid"]]],[11,"into","glium::texture::integral_cubemap_array","",385,[[["self"]],["u"]]],[11,"from","","",385,[[["t"]],["t"]]],[11,"try_from","","",385,[[["u"]],["result"]]],[11,"borrow","","",385,[[["self"]],["t"]]],[11,"borrow_mut","","",385,[[["self"]],["t"]]],[11,"try_into","","",385,[[["self"]],["result"]]],[11,"get_type_id","","",385,[[["self"]],["typeid"]]],[11,"read","","",386,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",386,[[],["usize"]]],[11,"to_void_ptr","","",386,N],[11,"ref_from_ptr","","",386,N],[11,"is_size_suitable","","",386,[[["usize"]],["bool"]]],[11,"into","","",386,[[["self"]],["u"]]],[11,"to_owned","","",386,[[["self"]],["t"]]],[11,"clone_into","","",386,N],[11,"from","","",386,[[["t"]],["t"]]],[11,"try_from","","",386,[[["u"]],["result"]]],[11,"borrow","","",386,[[["self"]],["t"]]],[11,"borrow_mut","","",386,[[["self"]],["t"]]],[11,"try_into","","",386,[[["self"]],["result"]]],[11,"get_type_id","","",386,[[["self"]],["typeid"]]],[11,"read","","",387,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",387,[[],["usize"]]],[11,"to_void_ptr","","",387,N],[11,"ref_from_ptr","","",387,N],[11,"is_size_suitable","","",387,[[["usize"]],["bool"]]],[11,"into","","",387,[[["self"]],["u"]]],[11,"to_owned","","",387,[[["self"]],["t"]]],[11,"clone_into","","",387,N],[11,"from","","",387,[[["t"]],["t"]]],[11,"try_from","","",387,[[["u"]],["result"]]],[11,"borrow","","",387,[[["self"]],["t"]]],[11,"borrow_mut","","",387,[[["self"]],["t"]]],[11,"try_into","","",387,[[["self"]],["result"]]],[11,"get_type_id","","",387,[[["self"]],["typeid"]]],[11,"read","","",388,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",388,[[],["usize"]]],[11,"to_void_ptr","","",388,N],[11,"ref_from_ptr","","",388,N],[11,"is_size_suitable","","",388,[[["usize"]],["bool"]]],[11,"into","","",388,[[["self"]],["u"]]],[11,"to_owned","","",388,[[["self"]],["t"]]],[11,"clone_into","","",388,N],[11,"from","","",388,[[["t"]],["t"]]],[11,"try_from","","",388,[[["u"]],["result"]]],[11,"borrow","","",388,[[["self"]],["t"]]],[11,"borrow_mut","","",388,[[["self"]],["t"]]],[11,"try_into","","",388,[[["self"]],["result"]]],[11,"get_type_id","","",388,[[["self"]],["typeid"]]],[11,"read","","",389,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",389,[[],["usize"]]],[11,"to_void_ptr","","",389,N],[11,"ref_from_ptr","","",389,N],[11,"is_size_suitable","","",389,[[["usize"]],["bool"]]],[11,"into","","",389,[[["self"]],["u"]]],[11,"to_owned","","",389,[[["self"]],["t"]]],[11,"clone_into","","",389,N],[11,"from","","",389,[[["t"]],["t"]]],[11,"try_from","","",389,[[["u"]],["result"]]],[11,"borrow","","",389,[[["self"]],["t"]]],[11,"borrow_mut","","",389,[[["self"]],["t"]]],[11,"try_into","","",389,[[["self"]],["result"]]],[11,"get_type_id","","",389,[[["self"]],["typeid"]]],[11,"into","glium::texture::unsigned_cubemap_array","",390,[[["self"]],["u"]]],[11,"from","","",390,[[["t"]],["t"]]],[11,"try_from","","",390,[[["u"]],["result"]]],[11,"borrow","","",390,[[["self"]],["t"]]],[11,"borrow_mut","","",390,[[["self"]],["t"]]],[11,"try_into","","",390,[[["self"]],["result"]]],[11,"get_type_id","","",390,[[["self"]],["typeid"]]],[11,"read","","",391,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",391,[[],["usize"]]],[11,"to_void_ptr","","",391,N],[11,"ref_from_ptr","","",391,N],[11,"is_size_suitable","","",391,[[["usize"]],["bool"]]],[11,"into","","",391,[[["self"]],["u"]]],[11,"to_owned","","",391,[[["self"]],["t"]]],[11,"clone_into","","",391,N],[11,"from","","",391,[[["t"]],["t"]]],[11,"try_from","","",391,[[["u"]],["result"]]],[11,"borrow","","",391,[[["self"]],["t"]]],[11,"borrow_mut","","",391,[[["self"]],["t"]]],[11,"try_into","","",391,[[["self"]],["result"]]],[11,"get_type_id","","",391,[[["self"]],["typeid"]]],[11,"read","","",392,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",392,[[],["usize"]]],[11,"to_void_ptr","","",392,N],[11,"ref_from_ptr","","",392,N],[11,"is_size_suitable","","",392,[[["usize"]],["bool"]]],[11,"into","","",392,[[["self"]],["u"]]],[11,"to_owned","","",392,[[["self"]],["t"]]],[11,"clone_into","","",392,N],[11,"from","","",392,[[["t"]],["t"]]],[11,"try_from","","",392,[[["u"]],["result"]]],[11,"borrow","","",392,[[["self"]],["t"]]],[11,"borrow_mut","","",392,[[["self"]],["t"]]],[11,"try_into","","",392,[[["self"]],["result"]]],[11,"get_type_id","","",392,[[["self"]],["typeid"]]],[11,"read","","",393,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",393,[[],["usize"]]],[11,"to_void_ptr","","",393,N],[11,"ref_from_ptr","","",393,N],[11,"is_size_suitable","","",393,[[["usize"]],["bool"]]],[11,"into","","",393,[[["self"]],["u"]]],[11,"to_owned","","",393,[[["self"]],["t"]]],[11,"clone_into","","",393,N],[11,"from","","",393,[[["t"]],["t"]]],[11,"try_from","","",393,[[["u"]],["result"]]],[11,"borrow","","",393,[[["self"]],["t"]]],[11,"borrow_mut","","",393,[[["self"]],["t"]]],[11,"try_into","","",393,[[["self"]],["result"]]],[11,"get_type_id","","",393,[[["self"]],["typeid"]]],[11,"read","","",394,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",394,[[],["usize"]]],[11,"to_void_ptr","","",394,N],[11,"ref_from_ptr","","",394,N],[11,"is_size_suitable","","",394,[[["usize"]],["bool"]]],[11,"into","","",394,[[["self"]],["u"]]],[11,"to_owned","","",394,[[["self"]],["t"]]],[11,"clone_into","","",394,N],[11,"from","","",394,[[["t"]],["t"]]],[11,"try_from","","",394,[[["u"]],["result"]]],[11,"borrow","","",394,[[["self"]],["t"]]],[11,"borrow_mut","","",394,[[["self"]],["t"]]],[11,"try_into","","",394,[[["self"]],["result"]]],[11,"get_type_id","","",394,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_cubemap_array","",395,[[["self"]],["u"]]],[11,"from","","",395,[[["t"]],["t"]]],[11,"try_from","","",395,[[["u"]],["result"]]],[11,"borrow","","",395,[[["self"]],["t"]]],[11,"borrow_mut","","",395,[[["self"]],["t"]]],[11,"try_into","","",395,[[["self"]],["result"]]],[11,"get_type_id","","",395,[[["self"]],["typeid"]]],[11,"read","","",396,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",396,[[],["usize"]]],[11,"to_void_ptr","","",396,N],[11,"ref_from_ptr","","",396,N],[11,"is_size_suitable","","",396,[[["usize"]],["bool"]]],[11,"into","","",396,[[["self"]],["u"]]],[11,"to_owned","","",396,[[["self"]],["t"]]],[11,"clone_into","","",396,N],[11,"from","","",396,[[["t"]],["t"]]],[11,"try_from","","",396,[[["u"]],["result"]]],[11,"borrow","","",396,[[["self"]],["t"]]],[11,"borrow_mut","","",396,[[["self"]],["t"]]],[11,"try_into","","",396,[[["self"]],["result"]]],[11,"get_type_id","","",396,[[["self"]],["typeid"]]],[11,"read","","",397,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",397,[[],["usize"]]],[11,"to_void_ptr","","",397,N],[11,"ref_from_ptr","","",397,N],[11,"is_size_suitable","","",397,[[["usize"]],["bool"]]],[11,"into","","",397,[[["self"]],["u"]]],[11,"to_owned","","",397,[[["self"]],["t"]]],[11,"clone_into","","",397,N],[11,"from","","",397,[[["t"]],["t"]]],[11,"try_from","","",397,[[["u"]],["result"]]],[11,"borrow","","",397,[[["self"]],["t"]]],[11,"borrow_mut","","",397,[[["self"]],["t"]]],[11,"try_into","","",397,[[["self"]],["result"]]],[11,"get_type_id","","",397,[[["self"]],["typeid"]]],[11,"read","","",398,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",398,[[],["usize"]]],[11,"to_void_ptr","","",398,N],[11,"ref_from_ptr","","",398,N],[11,"is_size_suitable","","",398,[[["usize"]],["bool"]]],[11,"into","","",398,[[["self"]],["u"]]],[11,"to_owned","","",398,[[["self"]],["t"]]],[11,"clone_into","","",398,N],[11,"from","","",398,[[["t"]],["t"]]],[11,"try_from","","",398,[[["u"]],["result"]]],[11,"borrow","","",398,[[["self"]],["t"]]],[11,"borrow_mut","","",398,[[["self"]],["t"]]],[11,"try_into","","",398,[[["self"]],["result"]]],[11,"get_type_id","","",398,[[["self"]],["typeid"]]],[11,"read","","",399,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",399,[[],["usize"]]],[11,"to_void_ptr","","",399,N],[11,"ref_from_ptr","","",399,N],[11,"is_size_suitable","","",399,[[["usize"]],["bool"]]],[11,"into","","",399,[[["self"]],["u"]]],[11,"to_owned","","",399,[[["self"]],["t"]]],[11,"clone_into","","",399,N],[11,"from","","",399,[[["t"]],["t"]]],[11,"try_from","","",399,[[["u"]],["result"]]],[11,"borrow","","",399,[[["self"]],["t"]]],[11,"borrow_mut","","",399,[[["self"]],["t"]]],[11,"try_into","","",399,[[["self"]],["result"]]],[11,"get_type_id","","",399,[[["self"]],["typeid"]]],[11,"into","glium::texture::stencil_cubemap_array","",400,[[["self"]],["u"]]],[11,"from","","",400,[[["t"]],["t"]]],[11,"try_from","","",400,[[["u"]],["result"]]],[11,"borrow","","",400,[[["self"]],["t"]]],[11,"borrow_mut","","",400,[[["self"]],["t"]]],[11,"try_into","","",400,[[["self"]],["result"]]],[11,"get_type_id","","",400,[[["self"]],["typeid"]]],[11,"read","","",401,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",401,[[],["usize"]]],[11,"to_void_ptr","","",401,N],[11,"ref_from_ptr","","",401,N],[11,"is_size_suitable","","",401,[[["usize"]],["bool"]]],[11,"into","","",401,[[["self"]],["u"]]],[11,"to_owned","","",401,[[["self"]],["t"]]],[11,"clone_into","","",401,N],[11,"from","","",401,[[["t"]],["t"]]],[11,"try_from","","",401,[[["u"]],["result"]]],[11,"borrow","","",401,[[["self"]],["t"]]],[11,"borrow_mut","","",401,[[["self"]],["t"]]],[11,"try_into","","",401,[[["self"]],["result"]]],[11,"get_type_id","","",401,[[["self"]],["typeid"]]],[11,"read","","",402,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",402,[[],["usize"]]],[11,"to_void_ptr","","",402,N],[11,"ref_from_ptr","","",402,N],[11,"is_size_suitable","","",402,[[["usize"]],["bool"]]],[11,"into","","",402,[[["self"]],["u"]]],[11,"to_owned","","",402,[[["self"]],["t"]]],[11,"clone_into","","",402,N],[11,"from","","",402,[[["t"]],["t"]]],[11,"try_from","","",402,[[["u"]],["result"]]],[11,"borrow","","",402,[[["self"]],["t"]]],[11,"borrow_mut","","",402,[[["self"]],["t"]]],[11,"try_into","","",402,[[["self"]],["result"]]],[11,"get_type_id","","",402,[[["self"]],["typeid"]]],[11,"read","","",403,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",403,[[],["usize"]]],[11,"to_void_ptr","","",403,N],[11,"ref_from_ptr","","",403,N],[11,"is_size_suitable","","",403,[[["usize"]],["bool"]]],[11,"into","","",403,[[["self"]],["u"]]],[11,"to_owned","","",403,[[["self"]],["t"]]],[11,"clone_into","","",403,N],[11,"from","","",403,[[["t"]],["t"]]],[11,"try_from","","",403,[[["u"]],["result"]]],[11,"borrow","","",403,[[["self"]],["t"]]],[11,"borrow_mut","","",403,[[["self"]],["t"]]],[11,"try_into","","",403,[[["self"]],["result"]]],[11,"get_type_id","","",403,[[["self"]],["typeid"]]],[11,"read","","",404,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",404,[[],["usize"]]],[11,"to_void_ptr","","",404,N],[11,"ref_from_ptr","","",404,N],[11,"is_size_suitable","","",404,[[["usize"]],["bool"]]],[11,"into","","",404,[[["self"]],["u"]]],[11,"to_owned","","",404,[[["self"]],["t"]]],[11,"clone_into","","",404,N],[11,"from","","",404,[[["t"]],["t"]]],[11,"try_from","","",404,[[["u"]],["result"]]],[11,"borrow","","",404,[[["self"]],["t"]]],[11,"borrow_mut","","",404,[[["self"]],["t"]]],[11,"try_into","","",404,[[["self"]],["result"]]],[11,"get_type_id","","",404,[[["self"]],["typeid"]]],[11,"into","glium::texture::depth_stencil_cubemap_array","",405,[[["self"]],["u"]]],[11,"from","","",405,[[["t"]],["t"]]],[11,"try_from","","",405,[[["u"]],["result"]]],[11,"borrow","","",405,[[["self"]],["t"]]],[11,"borrow_mut","","",405,[[["self"]],["t"]]],[11,"try_into","","",405,[[["self"]],["result"]]],[11,"get_type_id","","",405,[[["self"]],["typeid"]]],[11,"read","","",406,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",406,[[],["usize"]]],[11,"to_void_ptr","","",406,N],[11,"ref_from_ptr","","",406,N],[11,"is_size_suitable","","",406,[[["usize"]],["bool"]]],[11,"into","","",406,[[["self"]],["u"]]],[11,"to_owned","","",406,[[["self"]],["t"]]],[11,"clone_into","","",406,N],[11,"from","","",406,[[["t"]],["t"]]],[11,"try_from","","",406,[[["u"]],["result"]]],[11,"borrow","","",406,[[["self"]],["t"]]],[11,"borrow_mut","","",406,[[["self"]],["t"]]],[11,"try_into","","",406,[[["self"]],["result"]]],[11,"get_type_id","","",406,[[["self"]],["typeid"]]],[11,"read","","",407,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",407,[[],["usize"]]],[11,"to_void_ptr","","",407,N],[11,"ref_from_ptr","","",407,N],[11,"is_size_suitable","","",407,[[["usize"]],["bool"]]],[11,"into","","",407,[[["self"]],["u"]]],[11,"to_owned","","",407,[[["self"]],["t"]]],[11,"clone_into","","",407,N],[11,"from","","",407,[[["t"]],["t"]]],[11,"try_from","","",407,[[["u"]],["result"]]],[11,"borrow","","",407,[[["self"]],["t"]]],[11,"borrow_mut","","",407,[[["self"]],["t"]]],[11,"try_into","","",407,[[["self"]],["result"]]],[11,"get_type_id","","",407,[[["self"]],["typeid"]]],[11,"read","","",408,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",408,[[],["usize"]]],[11,"to_void_ptr","","",408,N],[11,"ref_from_ptr","","",408,N],[11,"is_size_suitable","","",408,[[["usize"]],["bool"]]],[11,"into","","",408,[[["self"]],["u"]]],[11,"to_owned","","",408,[[["self"]],["t"]]],[11,"clone_into","","",408,N],[11,"from","","",408,[[["t"]],["t"]]],[11,"try_from","","",408,[[["u"]],["result"]]],[11,"borrow","","",408,[[["self"]],["t"]]],[11,"borrow_mut","","",408,[[["self"]],["t"]]],[11,"try_into","","",408,[[["self"]],["result"]]],[11,"get_type_id","","",408,[[["self"]],["typeid"]]],[11,"read","","",409,[[["usize"],["f"]],["result"]]],[11,"get_elements_size","","",409,[[],["usize"]]],[11,"to_void_ptr","","",409,N],[11,"ref_from_ptr","","",409,N],[11,"is_size_suitable","","",409,[[["usize"]],["bool"]]],[11,"into","","",409,[[["self"]],["u"]]],[11,"to_owned","","",409,[[["self"]],["t"]]],[11,"clone_into","","",409,N],[11,"from","","",409,[[["t"]],["t"]]],[11,"try_from","","",409,[[["u"]],["result"]]],[11,"borrow","","",409,[[["self"]],["t"]]],[11,"borrow_mut","","",409,[[["self"]],["t"]]],[11,"try_into","","",409,[[["self"]],["result"]]],[11,"get_type_id","","",409,[[["self"]],["typeid"]]],[11,"swap_buffers","glium::backend::glutin::headless","",426,[[["self"]],["result",["swapbufferserror"]]]],[11,"get_proc_address","","",426,N],[11,"get_framebuffer_dimensions","","",426,N],[11,"is_current","","",426,[[["self"]],["bool"]]],[11,"make_current","","",426,[[["self"]]]],[11,"swap_buffers","glium::backend::glutin","",425,[[["self"]],["result",["swapbufferserror"]]]],[11,"get_proc_address","","",425,N],[11,"get_framebuffer_dimensions","","",425,N],[11,"is_current","","",425,[[["self"]],["bool"]]],[11,"make_current","","",425,[[["self"]]]],[11,"get_context","glium::backend::glutin::headless","",19,[[["self"]],["rc"]]],[11,"get_context","glium::backend::glutin","",20,[[["self"]],["rc"]]],[11,"to_color_attachment","glium::framebuffer","",59,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::texture1d","",173,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::srgb_texture1d","",177,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::integral_texture1d","",181,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::unsigned_texture1d","",183,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::texture2d","",191,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::srgb_texture2d","",195,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::integral_texture2d","",199,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::unsigned_texture2d","",201,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::texture2d_multisample","",209,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::integral_texture2d_multisample","",211,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::srgb_texture2d_multisample","",213,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::unsigned_texture2d_multisample","",215,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::texture3d","",223,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::srgb_texture3d","",227,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::integral_texture3d","",231,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::unsigned_texture3d","",233,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::texture1d_array","",241,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::srgb_texture1d_array","",249,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::integral_texture1d_array","",257,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::unsigned_texture1d_array","",261,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::texture2d_array","",277,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::srgb_texture2d_array","",285,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::integral_texture2d_array","",293,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::unsigned_texture2d_array","",297,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::texture2d_multisample_array","",313,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::srgb_texture2d_multisample_array","",317,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::integral_texture2d_multisample_array","",321,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::unsigned_texture2d_multisample_array","",325,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::cubemap","",340,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::srgb_cubemap","",346,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::integral_cubemap","",352,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::unsigned_cubemap","",355,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::cubemap_array","",369,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::srgb_cubemap_array","",379,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::integral_cubemap_array","",389,[[["self"]],["colorattachment"]]],[11,"to_color_attachment","glium::texture::unsigned_cubemap_array","",394,[[["self"]],["colorattachment"]]],[11,"to_depth_attachment","glium::framebuffer","",60,[[["self"]],["depthattachment"]]],[11,"to_depth_attachment","glium::texture::depth_texture1d","",185,[[["self"]],["depthattachment"]]],[11,"to_depth_attachment","glium::texture::depth_texture2d","",203,[[["self"]],["depthattachment"]]],[11,"to_depth_attachment","glium::texture::depth_texture2d_multisample","",217,[[["self"]],["depthattachment"]]],[11,"to_depth_attachment","glium::texture::depth_texture3d","",235,[[["self"]],["depthattachment"]]],[11,"to_depth_attachment","glium::texture::depth_texture1d_array","",265,[[["self"]],["depthattachment"]]],[11,"to_depth_attachment","glium::texture::depth_texture2d_array","",301,[[["self"]],["depthattachment"]]],[11,"to_depth_attachment","glium::texture::depth_texture2d_multisample_array","",329,[[["self"]],["depthattachment"]]],[11,"to_depth_attachment","glium::texture::depth_cubemap","",358,[[["self"]],["depthattachment"]]],[11,"to_depth_attachment","glium::texture::depth_cubemap_array","",399,[[["self"]],["depthattachment"]]],[11,"to_stencil_attachment","glium::framebuffer","",61,[[["self"]],["stencilattachment"]]],[11,"to_stencil_attachment","glium::texture::stencil_texture1d","",187,[[["self"]],["stencilattachment"]]],[11,"to_stencil_attachment","glium::texture::stencil_texture2d","",205,[[["self"]],["stencilattachment"]]],[11,"to_stencil_attachment","glium::texture::stencil_texture2d_multisample","",219,[[["self"]],["stencilattachment"]]],[11,"to_stencil_attachment","glium::texture::stencil_texture1d_array","",269,[[["self"]],["stencilattachment"]]],[11,"to_stencil_attachment","glium::texture::stencil_texture2d_array","",305,[[["self"]],["stencilattachment"]]],[11,"to_stencil_attachment","glium::texture::stencil_texture2d_multisample_array","",333,[[["self"]],["stencilattachment"]]],[11,"to_stencil_attachment","glium::texture::stencil_cubemap","",361,[[["self"]],["stencilattachment"]]],[11,"to_stencil_attachment","glium::texture::stencil_cubemap_array","",404,[[["self"]],["stencilattachment"]]],[11,"to_depth_stencil_attachment","glium::framebuffer","",62,[[["self"]],["depthstencilattachment"]]],[11,"to_depth_stencil_attachment","glium::texture::depth_stencil_texture1d","",189,[[["self"]],["depthstencilattachment"]]],[11,"to_depth_stencil_attachment","glium::texture::depth_stencil_texture2d","",207,[[["self"]],["depthstencilattachment"]]],[11,"to_depth_stencil_attachment","glium::texture::depth_stencil_texture2d_multisample","",221,[[["self"]],["depthstencilattachment"]]],[11,"to_depth_stencil_attachment","glium::texture::depth_stencil_texture3d","",237,[[["self"]],["depthstencilattachment"]]],[11,"to_depth_stencil_attachment","glium::texture::depth_stencil_texture1d_array","",273,[[["self"]],["depthstencilattachment"]]],[11,"to_depth_stencil_attachment","glium::texture::depth_stencil_texture2d_array","",309,[[["self"]],["depthstencilattachment"]]],[11,"to_depth_stencil_attachment","glium::texture::depth_stencil_texture2d_multisample_array","",337,[[["self"]],["depthstencilattachment"]]],[11,"to_depth_stencil_attachment","glium::texture::depth_stencil_cubemap","",364,[[["self"]],["depthstencilattachment"]]],[11,"to_depth_stencil_attachment","glium::texture::depth_stencil_cubemap_array","",409,[[["self"]],["depthstencilattachment"]]],[11,"visit_values","glium::uniforms","",429,[[["self"],["f"]]]],[11,"visit_values","","",118,[[["self"],["f"]]]],[11,"as_uniform_value","glium::texture::bindless","",158,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","glium::texture::buffer_texture","",164,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","glium::uniforms","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"as_uniform_value","","",109,[[["self"]],["uniformvalue"]]],[11,"matches","glium::index","",76,[[["blocklayout"],["usize"]],["result",["layoutmismatcherror"]]]],[11,"build_layout","","",76,[[["usize"]],["blocklayout"]]],[11,"matches","","",77,[[["blocklayout"],["usize"]],["result",["layoutmismatcherror"]]]],[11,"build_layout","","",77,[[["usize"]],["blocklayout"]]],[11,"matches","glium::program","",89,[[["blocklayout"],["usize"]],["result",["layoutmismatcherror"]]]],[11,"build_layout","","",89,[[["usize"]],["blocklayout"]]],[11,"matches","glium::texture::bindless","",158,[[["blocklayout"],["usize"]],["result",["layoutmismatcherror"]]]],[11,"build_layout","","",158,[[["usize"]],["blocklayout"]]],[11,"into_raw","glium::texture","",134,[[["self"]],["rawimage1d"]]],[11,"into_raw","","",135,[[["self"]],["rawimage2d"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"from_raw","","",135,[[["cow"],["u32"],["u32"]],["self"]]],[11,"into_raw","","",136,[[["self"]],["rawimage3d"]]],[11,"get_version","glium::backend","",418,[[["self"]],["version"]]],[11,"get_extensions","","",418,[[["self"]],["extensionslist"]]],[11,"get_capabilities","","",418,[[["self"]],["capabilities"]]],[11,"get_id","glium::buffer","",30,[[["self"]],["c_uint"]]],[11,"get_id","","",34,[[["self"]],["c_uint"]]],[11,"get_id","glium::draw_parameters","",51,[[["self"]],["c_uint"]]],[11,"get_id","","",52,[[["self"]],["c_uint"]]],[11,"get_id","","",53,[[["self"]],["c_uint"]]],[11,"get_id","","",54,[[["self"]],["c_uint"]]],[11,"get_id","","",55,[[["self"]],["c_uint"]]],[11,"get_id","glium::framebuffer","",64,[[["self"]],["c_uint"]]],[11,"get_id","","",65,[[["self"]],["c_uint"]]],[11,"get_id","","",66,[[["self"]],["c_uint"]]],[11,"get_id","","",67,[[["self"]],["c_uint"]]],[11,"get_id","","",68,[[["self"]],["c_uint"]]],[11,"get_id","glium","",83,[[["self"]],["c_uint"]]],[11,"get_id","glium::program","",107,[[["self"]],["handle"]]],[11,"get_id","glium","",108,[[["self"]],["handle"]]],[11,"get_id","glium::uniforms","",117,[[["self"]],["c_uint"]]],[11,"get_id","glium","",128,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::pixel_buffer","",166,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture","",167,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::texture1d","",172,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_texture1d","",174,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::srgb_texture1d","",176,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_srgb_texture1d","",178,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::integral_texture1d","",180,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::unsigned_texture1d","",182,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_texture1d","",184,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::stencil_texture1d","",186,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_stencil_texture1d","",188,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::texture2d","",190,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_texture2d","",192,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::srgb_texture2d","",194,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_srgb_texture2d","",196,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::integral_texture2d","",198,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::unsigned_texture2d","",200,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_texture2d","",202,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::stencil_texture2d","",204,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_stencil_texture2d","",206,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::texture2d_multisample","",208,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::integral_texture2d_multisample","",210,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::srgb_texture2d_multisample","",212,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::unsigned_texture2d_multisample","",214,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_texture2d_multisample","",216,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::stencil_texture2d_multisample","",218,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_stencil_texture2d_multisample","",220,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::texture3d","",222,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_texture3d","",224,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::srgb_texture3d","",226,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_srgb_texture3d","",228,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::integral_texture3d","",230,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::unsigned_texture3d","",232,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_texture3d","",234,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_stencil_texture3d","",236,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::texture1d_array","",238,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_texture1d_array","",242,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::srgb_texture1d_array","",246,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_srgb_texture1d_array","",250,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::integral_texture1d_array","",254,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::unsigned_texture1d_array","",258,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_texture1d_array","",262,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::stencil_texture1d_array","",266,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_stencil_texture1d_array","",270,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::texture2d_array","",274,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_texture2d_array","",278,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::srgb_texture2d_array","",282,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_srgb_texture2d_array","",286,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::integral_texture2d_array","",290,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::unsigned_texture2d_array","",294,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_texture2d_array","",298,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::stencil_texture2d_array","",302,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_stencil_texture2d_array","",306,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::texture2d_multisample_array","",310,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::srgb_texture2d_multisample_array","",314,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::integral_texture2d_multisample_array","",318,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::unsigned_texture2d_multisample_array","",322,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_texture2d_multisample_array","",326,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::stencil_texture2d_multisample_array","",330,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_stencil_texture2d_multisample_array","",334,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::cubemap","",338,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_cubemap","",341,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::srgb_cubemap","",344,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_srgb_cubemap","",347,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::integral_cubemap","",350,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::unsigned_cubemap","",353,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_cubemap","",356,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::stencil_cubemap","",359,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_stencil_cubemap","",362,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::cubemap_array","",365,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_cubemap_array","",370,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::srgb_cubemap_array","",375,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::compressed_srgb_cubemap_array","",380,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::integral_cubemap_array","",385,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::unsigned_cubemap_array","",390,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_cubemap_array","",395,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::stencil_cubemap_array","",400,[[["self"]],["c_uint"]]],[11,"get_id","glium::texture::depth_stencil_cubemap_array","",405,[[["self"]],["c_uint"]]],[11,"clear","glium::framebuffer","",63,[[["self"],["option",["rect"]],["option"],["bool"],["option",["f32"]],["option",["i32"]]]]],[11,"get_dimensions","","",63,N],[11,"get_depth_buffer_bits","","",63,[[["self"]],["option",["u16"]]]],[11,"get_stencil_buffer_bits","","",63,[[["self"]],["option",["u16"]]]],[11,"draw","","",63,[[["self"],["v"],["i"],["program"],["u"],["drawparameters"]],["result",["drawerror"]]]],[11,"blit_color","","",63,[[["self"],["rect"],["s"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_frame","","",63,[[["self"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_simple_framebuffer","","",63,[[["self"],["simpleframebuffer"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_multioutput_framebuffer","","",63,[[["self"],["multioutputframebuffer"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"clear","","",73,[[["self"],["option",["rect"]],["option"],["bool"],["option",["f32"]],["option",["i32"]]]]],[11,"get_dimensions","","",73,N],[11,"get_depth_buffer_bits","","",73,[[["self"]],["option",["u16"]]]],[11,"get_stencil_buffer_bits","","",73,[[["self"]],["option",["u16"]]]],[11,"draw","","",73,[[["self"],["v"],["i"],["program"],["u"],["drawparameters"]],["result",["drawerror"]]]],[11,"blit_color","","",73,[[["self"],["rect"],["s"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_frame","","",73,[[["self"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_simple_framebuffer","","",73,[[["self"],["simpleframebuffer"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_multioutput_framebuffer","","",73,[[["self"],["multioutputframebuffer"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"clear","","",74,[[["self"],["option",["rect"]],["option"],["bool"],["option",["f32"]],["option",["i32"]]]]],[11,"get_dimensions","","",74,N],[11,"get_depth_buffer_bits","","",74,[[["self"]],["option",["u16"]]]],[11,"get_stencil_buffer_bits","","",74,[[["self"]],["option",["u16"]]]],[11,"draw","","",74,[[["self"],["v"],["i"],["program"],["u"],["drawparameters"]],["result",["drawerror"]]]],[11,"blit_color","","",74,[[["self"],["rect"],["s"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_frame","","",74,[[["self"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_simple_framebuffer","","",74,[[["self"],["simpleframebuffer"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_multioutput_framebuffer","","",74,[[["self"],["multioutputframebuffer"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"clear","","",75,[[["self"],["option",["rect"]],["option"],["bool"],["option",["f32"]],["option",["i32"]]]]],[11,"get_dimensions","","",75,N],[11,"get_depth_buffer_bits","","",75,[[["self"]],["option",["u16"]]]],[11,"get_stencil_buffer_bits","","",75,[[["self"]],["option",["u16"]]]],[11,"draw","","",75,[[["self"],["v"],["i"],["program"],["u"],["drawparameters"]],["result",["drawerror"]]]],[11,"blit_color","","",75,[[["self"],["rect"],["s"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_frame","","",75,[[["self"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_simple_framebuffer","","",75,[[["self"],["simpleframebuffer"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_multioutput_framebuffer","","",75,[[["self"],["multioutputframebuffer"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"clear","glium","",424,[[["self"],["option",["rect"]],["option"],["bool"],["option",["f32"]],["option",["i32"]]]]],[11,"get_dimensions","","",424,N],[11,"get_depth_buffer_bits","","",424,[[["self"]],["option",["u16"]]]],[11,"get_stencil_buffer_bits","","",424,[[["self"]],["option",["u16"]]]],[11,"draw","","",424,[[["self"],["v"],["i"],["program"],["u"],["drawparameters"]],["result",["drawerror"]]]],[11,"blit_color","","",424,[[["self"],["rect"],["s"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_frame","","",424,[[["self"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_simple_framebuffer","","",424,[[["self"],["simpleframebuffer"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"blit_from_multioutput_framebuffer","","",424,[[["self"],["multioutputframebuffer"],["rect"],["blittarget"],["magnifysamplerfilter"]]]],[11,"into","glium::vertex","",127,[[["self"]],["verticessource"]]],[11,"into","","",122,[[["self"]],["verticessource"]]],[11,"into","","",123,[[["self"]],["verticessource"]]],[11,"into","","",430,[[["self"]],["verticessource"]]],[11,"into","glium::texture::texture1d","",173,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_texture1d","",175,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::srgb_texture1d","",177,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_srgb_texture1d","",179,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::integral_texture1d","",181,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::unsigned_texture1d","",183,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_texture1d","",185,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::stencil_texture1d","",187,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_stencil_texture1d","",189,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::texture2d","",191,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_texture2d","",193,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::srgb_texture2d","",195,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_srgb_texture2d","",197,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::integral_texture2d","",199,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::unsigned_texture2d","",201,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_texture2d","",203,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::stencil_texture2d","",205,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_stencil_texture2d","",207,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::texture2d_multisample","",209,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::integral_texture2d_multisample","",211,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::srgb_texture2d_multisample","",213,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::unsigned_texture2d_multisample","",215,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_texture2d_multisample","",217,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::stencil_texture2d_multisample","",219,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_stencil_texture2d_multisample","",221,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::texture3d","",223,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_texture3d","",225,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::srgb_texture3d","",227,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_srgb_texture3d","",229,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::integral_texture3d","",231,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::unsigned_texture3d","",233,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_texture3d","",235,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_stencil_texture3d","",237,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::texture1d_array","",241,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_texture1d_array","",245,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::srgb_texture1d_array","",249,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_srgb_texture1d_array","",253,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::integral_texture1d_array","",257,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::unsigned_texture1d_array","",261,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_texture1d_array","",265,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::stencil_texture1d_array","",269,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_stencil_texture1d_array","",273,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::texture2d_array","",277,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_texture2d_array","",281,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::srgb_texture2d_array","",285,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_srgb_texture2d_array","",289,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::integral_texture2d_array","",293,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::unsigned_texture2d_array","",297,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_texture2d_array","",301,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::stencil_texture2d_array","",305,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_stencil_texture2d_array","",309,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::texture2d_multisample_array","",313,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::srgb_texture2d_multisample_array","",317,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::integral_texture2d_multisample_array","",321,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::unsigned_texture2d_multisample_array","",325,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_texture2d_multisample_array","",329,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::stencil_texture2d_multisample_array","",333,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_stencil_texture2d_multisample_array","",337,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::cubemap","",340,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_cubemap","",343,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::srgb_cubemap","",346,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_srgb_cubemap","",349,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::integral_cubemap","",352,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::unsigned_cubemap","",355,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_cubemap","",358,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::stencil_cubemap","",361,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_stencil_cubemap","",364,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::cubemap_array","",369,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_cubemap_array","",374,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::srgb_cubemap_array","",379,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::compressed_srgb_cubemap_array","",384,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::integral_cubemap_array","",389,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::unsigned_cubemap_array","",394,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_cubemap_array","",399,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::stencil_cubemap_array","",404,[[["self"]],["textureanyimage"]]],[11,"into","glium::texture::depth_stencil_cubemap_array","",409,[[["self"]],["textureanyimage"]]],[11,"partial_cmp","glium","",2,[[["self"],["version"]],["option",["ordering"]]]],[11,"default","glium::buffer","",26,[[],["buffermode"]]],[11,"default","glium","",0,[[],["blend"]]],[11,"default","","",1,[[],["depth"]]],[11,"default","glium::draw_parameters","",41,[[],["stencil"]]],[11,"default","","",42,[[],["drawparameters"]]],[11,"default","glium::uniforms","",110,[[],["samplerbehavior"]]],[11,"default","glium::debug","",36,[[],["debugcallbackbehavior"]]],[11,"default","glium","",3,[[],["rect"]]],[11,"default","","",4,[[],["blittarget"]]],[11,"eq","glium::buffer","",26,[[["self"],["buffermode"]],["bool"]]],[11,"eq","","",27,[[["self"],["buffertype"]],["bool"]]],[11,"eq","glium::debug","",37,[[["self"],["severity"]],["bool"]]],[11,"eq","glium","",0,[[["self"],["blend"]],["bool"]]],[11,"ne","","",0,[[["self"],["blend"]],["bool"]]],[11,"eq","","",7,[[["self"],["blendingfunction"]],["bool"]]],[11,"ne","","",7,[[["self"],["blendingfunction"]],["bool"]]],[11,"eq","","",8,[[["self"],["linearblendingfactor"]],["bool"]]],[11,"eq","","",9,[[["self"],["depthtest"]],["bool"]]],[11,"eq","glium::draw_parameters","",44,[[["self"],["depthclamp"]],["bool"]]],[11,"eq","glium","",10,[[["self"],["stenciltest"]],["bool"]]],[11,"ne","","",10,[[["self"],["stenciltest"]],["bool"]]],[11,"eq","","",11,[[["self"],["stenciloperation"]],["bool"]]],[11,"eq","glium::draw_parameters","",46,[[["self"],["backfacecullingmode"]],["bool"]]],[11,"eq","","",47,[[["self"],["polygonmode"]],["bool"]]],[11,"eq","","",48,[[["self"],["smooth"]],["bool"]]],[11,"eq","","",49,[[["self"],["provokingvertex"]],["bool"]]],[11,"eq","glium::index","",81,[[["self"],["primitivetype"]],["bool"]]],[11,"ne","","",81,[[["self"],["primitivetype"]],["bool"]]],[11,"eq","","",82,[[["self"],["indextype"]],["bool"]]],[11,"eq","glium::program","",99,[[["self"],["blocklayout"]],["bool"]]],[11,"ne","","",99,[[["self"],["blocklayout"]],["bool"]]],[11,"eq","","",94,[[["self"],["transformfeedbackbuffer"]],["bool"]]],[11,"ne","","",94,[[["self"],["transformfeedbackbuffer"]],["bool"]]],[11,"eq","","",93,[[["self"],["transformfeedbackvarying"]],["bool"]]],[11,"ne","","",93,[[["self"],["transformfeedbackvarying"]],["bool"]]],[11,"eq","","",101,[[["self"],["transformfeedbackmode"]],["bool"]]],[11,"eq","","",100,[[["self"],["outputprimitives"]],["bool"]]],[11,"eq","","",102,[[["self"],["shaderstage"]],["bool"]]],[11,"eq","glium::uniforms","",111,[[["self"],["samplerwrapfunction"]],["bool"]]],[11,"eq","","",112,[[["self"],["magnifysamplerfilter"]],["bool"]]],[11,"eq","","",113,[[["self"],["minifysamplerfilter"]],["bool"]]],[11,"eq","","",109,[[["self"],["sampler"]],["bool"]]],[11,"ne","","",109,[[["self"],["sampler"]],["bool"]]],[11,"eq","","",110,[[["self"],["samplerbehavior"]],["bool"]]],[11,"ne","","",110,[[["self"],["samplerbehavior"]],["bool"]]],[11,"eq","","",115,[[["self"],["uniformtype"]],["bool"]]],[11,"eq","glium::vertex","",125,[[["self"],["attributetype"]],["bool"]]],[11,"eq","glium::texture::buffer_texture","",161,[[["self"],["buffertexturetype"]],["bool"]]],[11,"eq","glium::texture","",148,[[["self"],["dimensions"]],["bool"]]],[11,"ne","","",148,[[["self"],["dimensions"]],["bool"]]],[11,"eq","","",149,[[["self"],["internalformat"]],["bool"]]],[11,"ne","","",149,[[["self"],["internalformat"]],["bool"]]],[11,"eq","","",150,[[["self"],["internalformattype"]],["bool"]]],[11,"eq","","",152,[[["self"],["cubelayer"]],["bool"]]],[11,"eq","","",153,[[["self"],["texturekind"]],["bool"]]],[11,"eq","","",154,[[["self"],["mipmapsoption"]],["bool"]]],[11,"ne","","",154,[[["self"],["mipmapsoption"]],["bool"]]],[11,"eq","","",155,[[["self"],["compressedmipmapsoption"]],["bool"]]],[11,"ne","","",155,[[["self"],["compressedmipmapsoption"]],["bool"]]],[11,"eq","","",156,[[["self"],["texturecreationerror"]],["bool"]]],[11,"eq","glium::backend","",17,[[["self"],["releasebehavior"]],["bool"]]],[11,"eq","glium::framebuffer","",58,[[["self"],["validationerror"]],["bool"]]],[11,"ne","","",58,[[["self"],["validationerror"]],["bool"]]],[11,"eq","glium::texture","",137,[[["self"],["clientformat"]],["bool"]]],[11,"eq","","",139,[[["self"],["uncompressedfloatformat"]],["bool"]]],[11,"eq","","",147,[[["self"],["srgbformat"]],["bool"]]],[11,"eq","","",140,[[["self"],["uncompressedintformat"]],["bool"]]],[11,"eq","","",141,[[["self"],["uncompresseduintformat"]],["bool"]]],[11,"eq","","",142,[[["self"],["compressedformat"]],["bool"]]],[11,"eq","","",146,[[["self"],["compressedsrgbformat"]],["bool"]]],[11,"eq","","",143,[[["self"],["depthformat"]],["bool"]]],[11,"eq","","",144,[[["self"],["depthstencilformat"]],["bool"]]],[11,"eq","","",145,[[["self"],["stencilformat"]],["bool"]]],[11,"eq","","",138,[[["self"],["textureformat"]],["bool"]]],[11,"ne","","",138,[[["self"],["textureformat"]],["bool"]]],[11,"eq","glium","",2,[[["self"],["version"]],["bool"]]],[11,"ne","","",2,[[["self"],["version"]],["bool"]]],[11,"eq","","",12,[[["self"],["api"]],["bool"]]],[11,"eq","","",13,[[["self"],["handle"]],["bool"]]],[11,"ne","","",13,[[["self"],["handle"]],["bool"]]],[11,"eq","","",3,[[["self"],["rect"]],["bool"]]],[11,"ne","","",3,[[["self"],["rect"]],["bool"]]],[11,"eq","","",4,[[["self"],["blittarget"]],["bool"]]],[11,"ne","","",4,[[["self"],["blittarget"]],["bool"]]],[11,"eq","","",16,[[["self"],["swapbufferserror"]],["bool"]]],[11,"eq","","",5,[[["self"],["incompatibleopengl"]],["bool"]]],[11,"ne","","",5,[[["self"],["incompatibleopengl"]],["bool"]]],[11,"from","glium::backend::glutin","",18,[[["creationerror"]],["displaycreationerror"]]],[11,"from","","",18,[[["incompatibleopengl"]],["displaycreationerror"]]],[11,"from","glium::buffer","",31,[[["buffermutslice"]],["bufferslice"]]],[11,"from","","",31,[[["buffer"]],["bufferslice"]]],[11,"from","","",31,[[["buffer"]],["bufferslice"]]],[11,"from","","",32,[[["buffer"]],["buffermutslice"]]],[11,"from","","",33,[[["buffer"]],["bufferany"]]],[11,"from","glium::draw_parameters","",50,[[["samplespassedquery"]],["samplesqueryparam"]]],[11,"from","","",50,[[["anysamplespassedquery"]],["samplesqueryparam"]]],[11,"from","glium::index","",79,[[["buffercreationerror"]],["creationerror"]]],[11,"from","glium::buffer","",31,[[["indexbuffer"]],["bufferslice"]]],[11,"from","","",32,[[["indexbuffer"]],["buffermutslice"]]],[11,"from","glium::index","",80,[[["indexbuffer"]],["indicessource"]]],[11,"from","glium::buffer","",31,[[["indexbufferslice"]],["bufferslice"]]],[11,"from","glium::index","",80,[[["indexbufferslice"]],["indicessource"]]],[11,"from","","",80,[[["indexbufferslice"]],["indicessource"]]],[11,"from","","",85,[[["indexbuffer"]],["indexbufferany"]]],[11,"from","","",80,[[["indexbufferany"]],["indicessource"]]],[11,"from","glium::buffer","",31,[[["drawcommandsnoindicesbuffer"]],["bufferslice"]]],[11,"from","","",32,[[["drawcommandsnoindicesbuffer"]],["buffermutslice"]]],[11,"from","","",31,[[["drawcommandsindicesbuffer"]],["bufferslice"]]],[11,"from","","",32,[[["drawcommandsindicesbuffer"]],["buffermutslice"]]],[11,"from","glium::index","",80,[[["noindices"]],["indicessource"]]],[11,"from","","",80,[[["noindices"]],["indicessource"]]],[11,"from","glium::program","",104,[[["programcreationerror"]],["programchoosercreationerror"]]],[11,"from","","",106,[[["sourcecode"]],["programcreationinput"]]],[11,"from","","",106,[[["binary"]],["programcreationinput"]]],[11,"from","glium::buffer","",31,[[["uniformbuffer"]],["bufferslice"]]],[11,"from","","",32,[[["uniformbuffer"]],["buffermutslice"]]],[11,"from","glium::vertex","",124,[[["buffercreationerror"]],["creationerror"]]],[11,"from","glium","",128,[[["buffer"]],["vertexbuffer"]]],[11,"from","glium::buffer","",31,[[["vertexbuffer"]],["bufferslice"]]],[11,"from","","",32,[[["vertexbuffer"]],["buffermutslice"]]],[11,"from","","",31,[[["vertexbufferslice"]],["bufferslice"]]],[11,"from","glium::vertex","",129,[[["vertexbuffer"]],["vertexbufferany"]]],[11,"from","","",129,[[["buffer"]],["vertexbufferany"]]],[11,"from","glium::texture::buffer_texture","",160,[[["buffercreationerror"]],["creationerror"]]],[11,"from","","",160,[[["texturecreationerror"]],["creationerror"]]],[11,"from","glium::texture","",154,[[["compressedmipmapsoption"]],["mipmapsoption"]]],[11,"clone","glium::backend::glutin","",20,[[["self"]],["display"]]],[11,"clone","","",425,[[["self"]],["glutinbackend"]]],[11,"clone","glium::buffer","",23,[[["self"]],["readerror"]]],[11,"clone","","",24,[[["self"]],["copyerror"]]],[11,"clone","","",31,[[["self"]],["bufferslice"]]],[11,"clone","","",34,[[["self"]],["bufferanyslice"]]],[11,"clone","","",25,[[["self"]],["buffercreationerror"]]],[11,"clone","","",26,[[["self"]],["buffermode"]]],[11,"clone","","",27,[[["self"]],["buffertype"]]],[11,"clone","glium::debug","",37,[[["self"]],["severity"]]],[11,"clone","","",38,[[["self"]],["source"]]],[11,"clone","","",39,[[["self"]],["messagetype"]]],[11,"clone","glium","",0,[[["self"]],["blend"]]],[11,"clone","","",7,[[["self"]],["blendingfunction"]]],[11,"clone","","",8,[[["self"]],["linearblendingfactor"]]],[11,"clone","","",1,[[["self"]],["depth"]]],[11,"clone","","",9,[[["self"]],["depthtest"]]],[11,"clone","glium::draw_parameters","",44,[[["self"]],["depthclamp"]]],[11,"clone","","",45,[[["self"]],["querycreationerror"]]],[11,"clone","","",41,[[["self"]],["stencil"]]],[11,"clone","glium","",10,[[["self"]],["stenciltest"]]],[11,"clone","","",11,[[["self"]],["stenciloperation"]]],[11,"clone","glium::draw_parameters","",46,[[["self"]],["backfacecullingmode"]]],[11,"clone","","",47,[[["self"]],["polygonmode"]]],[11,"clone","","",48,[[["self"]],["smooth"]]],[11,"clone","","",49,[[["self"]],["provokingvertex"]]],[11,"clone","","",42,[[["self"]],["drawparameters"]]],[11,"clone","","",43,[[["self"]],["conditionalrendering"]]],[11,"clone","","",50,[[["self"]],["samplesqueryparam"]]],[11,"clone","glium::framebuffer","",56,[[["self"]],["defaultframebufferattachment"]]],[11,"clone","","",57,[[["self"]],["creationerror"]]],[11,"clone","","",59,[[["self"]],["colorattachment"]]],[11,"clone","","",60,[[["self"]],["depthattachment"]]],[11,"clone","","",61,[[["self"]],["stencilattachment"]]],[11,"clone","","",62,[[["self"]],["depthstencilattachment"]]],[11,"clone","glium::index","",79,[[["self"]],["creationerror"]]],[11,"clone","","",76,[[["self"]],["drawcommandnoindices"]]],[11,"clone","","",77,[[["self"]],["drawcommandindices"]]],[11,"clone","","",80,[[["self"]],["indicessource"]]],[11,"clone","","",81,[[["self"]],["primitivetype"]]],[11,"clone","","",78,[[["self"]],["noindices"]]],[11,"clone","","",82,[[["self"]],["indextype"]]],[11,"clone","glium::program","",89,[[["self"]],["computecommand"]]],[11,"clone","","",90,[[["self"]],["uniform"]]],[11,"clone","","",91,[[["self"]],["uniformblock"]]],[11,"clone","","",99,[[["self"]],["blocklayout"]]],[11,"clone","","",92,[[["self"]],["attribute"]]],[11,"clone","","",94,[[["self"]],["transformfeedbackbuffer"]]],[11,"clone","","",93,[[["self"]],["transformfeedbackvarying"]]],[11,"clone","","",101,[[["self"]],["transformfeedbackmode"]]],[11,"clone","","",100,[[["self"]],["outputprimitives"]]],[11,"clone","","",95,[[["self"]],["subroutinedata"]]],[11,"clone","","",96,[[["self"]],["subroutineuniform"]]],[11,"clone","","",102,[[["self"]],["shaderstage"]]],[11,"clone","","",103,[[["self"]],["programcreationerror"]]],[11,"clone","","",104,[[["self"]],["programchoosercreationerror"]]],[11,"clone","","",105,[[["self"]],["getbinaryerror"]]],[11,"clone","glium::uniforms","",111,[[["self"]],["samplerwrapfunction"]]],[11,"clone","","",112,[[["self"]],["magnifysamplerfilter"]]],[11,"clone","","",113,[[["self"]],["minifysamplerfilter"]]],[11,"clone","","",109,[[["self"]],["self"]]],[11,"clone","","",110,[[["self"]],["samplerbehavior"]]],[11,"clone","","",429,[[["self"]],["emptyuniforms"]]],[11,"clone","","",115,[[["self"]],["uniformtype"]]],[11,"clone","","",114,[[["self"]],["uniformvalue"]]],[11,"clone","","",116,[[["self"]],["layoutmismatcherror"]]],[11,"clone","glium::vertex","",124,[[["self"]],["creationerror"]]],[11,"clone","","",125,[[["self"]],["attributetype"]]],[11,"clone","","",126,[[["self"]],["verticessource"]]],[11,"clone","glium::texture::bindless","",158,[[["self"]],["texturehandle"]]],[11,"clone","","",431,[[["self"]],["bindlesstexturesnotsupportederror"]]],[11,"clone","glium::texture::buffer_texture","",159,[[["self"]],["texturecreationerror"]]],[11,"clone","","",160,[[["self"]],["creationerror"]]],[11,"clone","","",161,[[["self"]],["buffertexturetype"]]],[11,"clone","","",165,[[["self"]],["buffertextureref"]]],[11,"clone","glium::texture","",148,[[["self"]],["dimensions"]]],[11,"clone","","",168,[[["self"]],["textureanylayer"]]],[11,"clone","","",169,[[["self"]],["textureanymipmap"]]],[11,"clone","","",170,[[["self"]],["textureanylayermipmap"]]],[11,"clone","","",171,[[["self"]],["textureanyimage"]]],[11,"clone","","",151,[[["self"]],["getformaterror"]]],[11,"clone","","",149,[[["self"]],["internalformat"]]],[11,"clone","","",150,[[["self"]],["internalformattype"]]],[11,"clone","glium::texture::texture1d","",173,[[["self"]],["texture1dmipmap"]]],[11,"clone","glium::texture::compressed_texture1d","",175,[[["self"]],["compressedtexture1dmipmap"]]],[11,"clone","glium::texture::srgb_texture1d","",177,[[["self"]],["srgbtexture1dmipmap"]]],[11,"clone","glium::texture::compressed_srgb_texture1d","",179,[[["self"]],["compressedsrgbtexture1dmipmap"]]],[11,"clone","glium::texture::integral_texture1d","",181,[[["self"]],["integraltexture1dmipmap"]]],[11,"clone","glium::texture::unsigned_texture1d","",183,[[["self"]],["unsignedtexture1dmipmap"]]],[11,"clone","glium::texture::depth_texture1d","",185,[[["self"]],["depthtexture1dmipmap"]]],[11,"clone","glium::texture::stencil_texture1d","",187,[[["self"]],["stenciltexture1dmipmap"]]],[11,"clone","glium::texture::depth_stencil_texture1d","",189,[[["self"]],["depthstenciltexture1dmipmap"]]],[11,"clone","glium::texture::texture2d","",191,[[["self"]],["texture2dmipmap"]]],[11,"clone","glium::texture::compressed_texture2d","",193,[[["self"]],["compressedtexture2dmipmap"]]],[11,"clone","glium::texture::srgb_texture2d","",195,[[["self"]],["srgbtexture2dmipmap"]]],[11,"clone","glium::texture::compressed_srgb_texture2d","",197,[[["self"]],["compressedsrgbtexture2dmipmap"]]],[11,"clone","glium::texture::integral_texture2d","",199,[[["self"]],["integraltexture2dmipmap"]]],[11,"clone","glium::texture::unsigned_texture2d","",201,[[["self"]],["unsignedtexture2dmipmap"]]],[11,"clone","glium::texture::depth_texture2d","",203,[[["self"]],["depthtexture2dmipmap"]]],[11,"clone","glium::texture::stencil_texture2d","",205,[[["self"]],["stenciltexture2dmipmap"]]],[11,"clone","glium::texture::depth_stencil_texture2d","",207,[[["self"]],["depthstenciltexture2dmipmap"]]],[11,"clone","glium::texture::texture2d_multisample","",209,[[["self"]],["texture2dmultisamplemipmap"]]],[11,"clone","glium::texture::integral_texture2d_multisample","",211,[[["self"]],["integraltexture2dmultisamplemipmap"]]],[11,"clone","glium::texture::srgb_texture2d_multisample","",213,[[["self"]],["srgbtexture2dmultisamplemipmap"]]],[11,"clone","glium::texture::unsigned_texture2d_multisample","",215,[[["self"]],["unsignedtexture2dmultisamplemipmap"]]],[11,"clone","glium::texture::depth_texture2d_multisample","",217,[[["self"]],["depthtexture2dmultisamplemipmap"]]],[11,"clone","glium::texture::stencil_texture2d_multisample","",219,[[["self"]],["stenciltexture2dmultisamplemipmap"]]],[11,"clone","glium::texture::depth_stencil_texture2d_multisample","",221,[[["self"]],["depthstenciltexture2dmultisamplemipmap"]]],[11,"clone","glium::texture::texture3d","",223,[[["self"]],["texture3dmipmap"]]],[11,"clone","glium::texture::compressed_texture3d","",225,[[["self"]],["compressedtexture3dmipmap"]]],[11,"clone","glium::texture::srgb_texture3d","",227,[[["self"]],["srgbtexture3dmipmap"]]],[11,"clone","glium::texture::compressed_srgb_texture3d","",229,[[["self"]],["compressedsrgbtexture3dmipmap"]]],[11,"clone","glium::texture::integral_texture3d","",231,[[["self"]],["integraltexture3dmipmap"]]],[11,"clone","glium::texture::unsigned_texture3d","",233,[[["self"]],["unsignedtexture3dmipmap"]]],[11,"clone","glium::texture::depth_texture3d","",235,[[["self"]],["depthtexture3dmipmap"]]],[11,"clone","glium::texture::depth_stencil_texture3d","",237,[[["self"]],["depthstenciltexture3dmipmap"]]],[11,"clone","glium::texture::texture1d_array","",239,[[["self"]],["texture1darraylayer"]]],[11,"clone","","",240,[[["self"]],["texture1darraymipmap"]]],[11,"clone","","",241,[[["self"]],["texture1darraylayermipmap"]]],[11,"clone","glium::texture::compressed_texture1d_array","",243,[[["self"]],["compressedtexture1darraylayer"]]],[11,"clone","","",244,[[["self"]],["compressedtexture1darraymipmap"]]],[11,"clone","","",245,[[["self"]],["compressedtexture1darraylayermipmap"]]],[11,"clone","glium::texture::srgb_texture1d_array","",247,[[["self"]],["srgbtexture1darraylayer"]]],[11,"clone","","",248,[[["self"]],["srgbtexture1darraymipmap"]]],[11,"clone","","",249,[[["self"]],["srgbtexture1darraylayermipmap"]]],[11,"clone","glium::texture::compressed_srgb_texture1d_array","",251,[[["self"]],["compressedsrgbtexture1darraylayer"]]],[11,"clone","","",252,[[["self"]],["compressedsrgbtexture1darraymipmap"]]],[11,"clone","","",253,[[["self"]],["compressedsrgbtexture1darraylayermipmap"]]],[11,"clone","glium::texture::integral_texture1d_array","",255,[[["self"]],["integraltexture1darraylayer"]]],[11,"clone","","",256,[[["self"]],["integraltexture1darraymipmap"]]],[11,"clone","","",257,[[["self"]],["integraltexture1darraylayermipmap"]]],[11,"clone","glium::texture::unsigned_texture1d_array","",259,[[["self"]],["unsignedtexture1darraylayer"]]],[11,"clone","","",260,[[["self"]],["unsignedtexture1darraymipmap"]]],[11,"clone","","",261,[[["self"]],["unsignedtexture1darraylayermipmap"]]],[11,"clone","glium::texture::depth_texture1d_array","",263,[[["self"]],["depthtexture1darraylayer"]]],[11,"clone","","",264,[[["self"]],["depthtexture1darraymipmap"]]],[11,"clone","","",265,[[["self"]],["depthtexture1darraylayermipmap"]]],[11,"clone","glium::texture::stencil_texture1d_array","",267,[[["self"]],["stenciltexture1darraylayer"]]],[11,"clone","","",268,[[["self"]],["stenciltexture1darraymipmap"]]],[11,"clone","","",269,[[["self"]],["stenciltexture1darraylayermipmap"]]],[11,"clone","glium::texture::depth_stencil_texture1d_array","",271,[[["self"]],["depthstenciltexture1darraylayer"]]],[11,"clone","","",272,[[["self"]],["depthstenciltexture1darraymipmap"]]],[11,"clone","","",273,[[["self"]],["depthstenciltexture1darraylayermipmap"]]],[11,"clone","glium::texture::texture2d_array","",275,[[["self"]],["texture2darraylayer"]]],[11,"clone","","",276,[[["self"]],["texture2darraymipmap"]]],[11,"clone","","",277,[[["self"]],["texture2darraylayermipmap"]]],[11,"clone","glium::texture::compressed_texture2d_array","",279,[[["self"]],["compressedtexture2darraylayer"]]],[11,"clone","","",280,[[["self"]],["compressedtexture2darraymipmap"]]],[11,"clone","","",281,[[["self"]],["compressedtexture2darraylayermipmap"]]],[11,"clone","glium::texture::srgb_texture2d_array","",283,[[["self"]],["srgbtexture2darraylayer"]]],[11,"clone","","",284,[[["self"]],["srgbtexture2darraymipmap"]]],[11,"clone","","",285,[[["self"]],["srgbtexture2darraylayermipmap"]]],[11,"clone","glium::texture::compressed_srgb_texture2d_array","",287,[[["self"]],["compressedsrgbtexture2darraylayer"]]],[11,"clone","","",288,[[["self"]],["compressedsrgbtexture2darraymipmap"]]],[11,"clone","","",289,[[["self"]],["compressedsrgbtexture2darraylayermipmap"]]],[11,"clone","glium::texture::integral_texture2d_array","",291,[[["self"]],["integraltexture2darraylayer"]]],[11,"clone","","",292,[[["self"]],["integraltexture2darraymipmap"]]],[11,"clone","","",293,[[["self"]],["integraltexture2darraylayermipmap"]]],[11,"clone","glium::texture::unsigned_texture2d_array","",295,[[["self"]],["unsignedtexture2darraylayer"]]],[11,"clone","","",296,[[["self"]],["unsignedtexture2darraymipmap"]]],[11,"clone","","",297,[[["self"]],["unsignedtexture2darraylayermipmap"]]],[11,"clone","glium::texture::depth_texture2d_array","",299,[[["self"]],["depthtexture2darraylayer"]]],[11,"clone","","",300,[[["self"]],["depthtexture2darraymipmap"]]],[11,"clone","","",301,[[["self"]],["depthtexture2darraylayermipmap"]]],[11,"clone","glium::texture::stencil_texture2d_array","",303,[[["self"]],["stenciltexture2darraylayer"]]],[11,"clone","","",304,[[["self"]],["stenciltexture2darraymipmap"]]],[11,"clone","","",305,[[["self"]],["stenciltexture2darraylayermipmap"]]],[11,"clone","glium::texture::depth_stencil_texture2d_array","",307,[[["self"]],["depthstenciltexture2darraylayer"]]],[11,"clone","","",308,[[["self"]],["depthstenciltexture2darraymipmap"]]],[11,"clone","","",309,[[["self"]],["depthstenciltexture2darraylayermipmap"]]],[11,"clone","glium::texture::texture2d_multisample_array","",311,[[["self"]],["texture2dmultisamplearraylayer"]]],[11,"clone","","",312,[[["self"]],["texture2dmultisamplearraymipmap"]]],[11,"clone","","",313,[[["self"]],["texture2dmultisamplearraylayermipmap"]]],[11,"clone","glium::texture::srgb_texture2d_multisample_array","",315,[[["self"]],["srgbtexture2dmultisamplearraylayer"]]],[11,"clone","","",316,[[["self"]],["srgbtexture2dmultisamplearraymipmap"]]],[11,"clone","","",317,[[["self"]],["srgbtexture2dmultisamplearraylayermipmap"]]],[11,"clone","glium::texture::integral_texture2d_multisample_array","",319,[[["self"]],["integraltexture2dmultisamplearraylayer"]]],[11,"clone","","",320,[[["self"]],["integraltexture2dmultisamplearraymipmap"]]],[11,"clone","","",321,[[["self"]],["integraltexture2dmultisamplearraylayermipmap"]]],[11,"clone","glium::texture::unsigned_texture2d_multisample_array","",323,[[["self"]],["unsignedtexture2dmultisamplearraylayer"]]],[11,"clone","","",324,[[["self"]],["unsignedtexture2dmultisamplearraymipmap"]]],[11,"clone","","",325,[[["self"]],["unsignedtexture2dmultisamplearraylayermipmap"]]],[11,"clone","glium::texture::depth_texture2d_multisample_array","",327,[[["self"]],["depthtexture2dmultisamplearraylayer"]]],[11,"clone","","",328,[[["self"]],["depthtexture2dmultisamplearraymipmap"]]],[11,"clone","","",329,[[["self"]],["depthtexture2dmultisamplearraylayermipmap"]]],[11,"clone","glium::texture::stencil_texture2d_multisample_array","",331,[[["self"]],["stenciltexture2dmultisamplearraylayer"]]],[11,"clone","","",332,[[["self"]],["stenciltexture2dmultisamplearraymipmap"]]],[11,"clone","","",333,[[["self"]],["stenciltexture2dmultisamplearraylayermipmap"]]],[11,"clone","glium::texture::depth_stencil_texture2d_multisample_array","",335,[[["self"]],["depthstenciltexture2dmultisamplearraylayer"]]],[11,"clone","","",336,[[["self"]],["depthstenciltexture2dmultisamplearraymipmap"]]],[11,"clone","","",337,[[["self"]],["depthstenciltexture2dmultisamplearraylayermipmap"]]],[11,"clone","glium::texture::cubemap","",339,[[["self"]],["cubemapmipmap"]]],[11,"clone","","",340,[[["self"]],["cubemapimage"]]],[11,"clone","glium::texture::compressed_cubemap","",342,[[["self"]],["compressedcubemapmipmap"]]],[11,"clone","","",343,[[["self"]],["compressedcubemapimage"]]],[11,"clone","glium::texture::srgb_cubemap","",345,[[["self"]],["srgbcubemapmipmap"]]],[11,"clone","","",346,[[["self"]],["srgbcubemapimage"]]],[11,"clone","glium::texture::compressed_srgb_cubemap","",348,[[["self"]],["compressedsrgbcubemapmipmap"]]],[11,"clone","","",349,[[["self"]],["compressedsrgbcubemapimage"]]],[11,"clone","glium::texture::integral_cubemap","",351,[[["self"]],["integralcubemapmipmap"]]],[11,"clone","","",352,[[["self"]],["integralcubemapimage"]]],[11,"clone","glium::texture::unsigned_cubemap","",354,[[["self"]],["unsignedcubemapmipmap"]]],[11,"clone","","",355,[[["self"]],["unsignedcubemapimage"]]],[11,"clone","glium::texture::depth_cubemap","",357,[[["self"]],["depthcubemapmipmap"]]],[11,"clone","","",358,[[["self"]],["depthcubemapimage"]]],[11,"clone","glium::texture::stencil_cubemap","",360,[[["self"]],["stencilcubemapmipmap"]]],[11,"clone","","",361,[[["self"]],["stencilcubemapimage"]]],[11,"clone","glium::texture::depth_stencil_cubemap","",363,[[["self"]],["depthstencilcubemapmipmap"]]],[11,"clone","","",364,[[["self"]],["depthstencilcubemapimage"]]],[11,"clone","glium::texture::cubemap_array","",366,[[["self"]],["cubemaparraylayer"]]],[11,"clone","","",367,[[["self"]],["cubemaparraymipmap"]]],[11,"clone","","",368,[[["self"]],["cubemaparraylayermipmap"]]],[11,"clone","","",369,[[["self"]],["cubemaparrayimage"]]],[11,"clone","glium::texture::compressed_cubemap_array","",371,[[["self"]],["compressedcubemaparraylayer"]]],[11,"clone","","",372,[[["self"]],["compressedcubemaparraymipmap"]]],[11,"clone","","",373,[[["self"]],["compressedcubemaparraylayermipmap"]]],[11,"clone","","",374,[[["self"]],["compressedcubemaparrayimage"]]],[11,"clone","glium::texture::srgb_cubemap_array","",376,[[["self"]],["srgbcubemaparraylayer"]]],[11,"clone","","",377,[[["self"]],["srgbcubemaparraymipmap"]]],[11,"clone","","",378,[[["self"]],["srgbcubemaparraylayermipmap"]]],[11,"clone","","",379,[[["self"]],["srgbcubemaparrayimage"]]],[11,"clone","glium::texture::compressed_srgb_cubemap_array","",381,[[["self"]],["compressedsrgbcubemaparraylayer"]]],[11,"clone","","",382,[[["self"]],["compressedsrgbcubemaparraymipmap"]]],[11,"clone","","",383,[[["self"]],["compressedsrgbcubemaparraylayermipmap"]]],[11,"clone","","",384,[[["self"]],["compressedsrgbcubemaparrayimage"]]],[11,"clone","glium::texture::integral_cubemap_array","",386,[[["self"]],["integralcubemaparraylayer"]]],[11,"clone","","",387,[[["self"]],["integralcubemaparraymipmap"]]],[11,"clone","","",388,[[["self"]],["integralcubemaparraylayermipmap"]]],[11,"clone","","",389,[[["self"]],["integralcubemaparrayimage"]]],[11,"clone","glium::texture::unsigned_cubemap_array","",391,[[["self"]],["unsignedcubemaparraylayer"]]],[11,"clone","","",392,[[["self"]],["unsignedcubemaparraymipmap"]]],[11,"clone","","",393,[[["self"]],["unsignedcubemaparraylayermipmap"]]],[11,"clone","","",394,[[["self"]],["unsignedcubemaparrayimage"]]],[11,"clone","glium::texture::depth_cubemap_array","",396,[[["self"]],["depthcubemaparraylayer"]]],[11,"clone","","",397,[[["self"]],["depthcubemaparraymipmap"]]],[11,"clone","","",398,[[["self"]],["depthcubemaparraylayermipmap"]]],[11,"clone","","",399,[[["self"]],["depthcubemaparrayimage"]]],[11,"clone","glium::texture::stencil_cubemap_array","",401,[[["self"]],["stencilcubemaparraylayer"]]],[11,"clone","","",402,[[["self"]],["stencilcubemaparraymipmap"]]],[11,"clone","","",403,[[["self"]],["stencilcubemaparraylayermipmap"]]],[11,"clone","","",404,[[["self"]],["stencilcubemaparrayimage"]]],[11,"clone","glium::texture::depth_stencil_cubemap_array","",406,[[["self"]],["depthstencilcubemaparraylayer"]]],[11,"clone","","",407,[[["self"]],["depthstencilcubemaparraymipmap"]]],[11,"clone","","",408,[[["self"]],["depthstencilcubemaparraylayermipmap"]]],[11,"clone","","",409,[[["self"]],["depthstencilcubemaparrayimage"]]],[11,"clone","glium::texture","",152,[[["self"]],["cubelayer"]]],[11,"clone","","",153,[[["self"]],["texturekind"]]],[11,"clone","","",154,[[["self"]],["mipmapsoption"]]],[11,"clone","","",155,[[["self"]],["compressedmipmapsoption"]]],[11,"clone","","",156,[[["self"]],["texturecreationerror"]]],[11,"clone","glium","",6,[[["self"]],["profile"]]],[11,"clone","glium::backend","",17,[[["self"]],["releasebehavior"]]],[11,"clone","glium::framebuffer","",58,[[["self"]],["validationerror"]]],[11,"clone","glium::texture","",137,[[["self"]],["clientformat"]]],[11,"clone","","",139,[[["self"]],["uncompressedfloatformat"]]],[11,"clone","","",147,[[["self"]],["srgbformat"]]],[11,"clone","","",140,[[["self"]],["uncompressedintformat"]]],[11,"clone","","",141,[[["self"]],["uncompresseduintformat"]]],[11,"clone","","",142,[[["self"]],["compressedformat"]]],[11,"clone","","",146,[[["self"]],["compressedsrgbformat"]]],[11,"clone","","",143,[[["self"]],["depthformat"]]],[11,"clone","","",144,[[["self"]],["depthstencilformat"]]],[11,"clone","","",145,[[["self"]],["stencilformat"]]],[11,"clone","","",138,[[["self"]],["textureformat"]]],[11,"clone","glium","",2,[[["self"]],["version"]]],[11,"clone","","",12,[[["self"]],["api"]]],[11,"clone","","",13,[[["self"]],["handle"]]],[11,"clone","","",14,[[["self"]],["rawuniformvalue"]]],[11,"clone","","",3,[[["self"]],["rect"]]],[11,"clone","","",4,[[["self"]],["blittarget"]]],[11,"clone","","",15,[[["self"]],["drawerror"]]],[11,"clone","","",16,[[["self"]],["swapbufferserror"]]],[11,"clone","","",5,[[["self"]],["incompatibleopengl"]]],[11,"drop","glium::buffer","",30,[[["self"]]]],[11,"drop","","",33,[[["self"]]]],[11,"drop","glium::framebuffer","",68,[[["self"]]]],[11,"drop","glium::vertex","",130,[[["self"]]]],[11,"drop","glium::texture::bindless","",157,[[["self"]]]],[11,"drop","glium::texture::buffer_texture","",164,[[["self"]]]],[11,"drop","glium::texture","",167,[[["self"]]]],[11,"drop","glium::backend","",418,[[["self"]]]],[11,"drop","glium","",419,[[["self"]]]],[11,"drop","","",420,[[["self"]]]],[11,"drop","","",424,[[["self"]]]],[11,"deref","glium::backend::glutin::headless","",19,[[["self"]],["context"]]],[11,"deref","","",426,[[["self"]],["context"]]],[11,"deref","glium::backend::glutin","",20,[[["self"]],["context"]]],[11,"deref","","",425,[[["self"]],["rc"]]],[11,"deref","glium::buffer","",427,[[["self"]],["d"]]],[11,"deref","","",428,[[["self"]],["d"]]],[11,"deref","glium::framebuffer","",64,[[["self"]],["renderbufferany"]]],[11,"deref","","",65,[[["self"]],["renderbufferany"]]],[11,"deref","","",66,[[["self"]],["renderbufferany"]]],[11,"deref","","",67,[[["self"]],["renderbufferany"]]],[11,"deref","glium","",83,[[["self"]],["buffer"]]],[11,"deref","glium::index","",84,[[["self"]],["bufferslice"]]],[11,"deref","","",85,[[["self"]],["bufferany"]]],[11,"deref","","",86,[[["self"]],["buffer"]]],[11,"deref","","",87,[[["self"]],["buffer"]]],[11,"deref","glium::uniforms","",117,[[["self"]],["buffer"]]],[11,"deref","glium","",128,[[["self"]],["buffer"]]],[11,"deref","glium::vertex","",127,[[["self"]],["bufferslice"]]],[11,"deref","","",129,[[["self"]],["bufferany"]]],[11,"deref","glium::texture::bindless","",157,[[["self"]],["textureany"]]],[11,"deref","glium::texture::buffer_texture","",164,[[["self"]],["buffer"]]],[11,"deref","glium::texture::pixel_buffer","",166,[[["self"]],["buffer"]]],[11,"deref","glium::texture::texture1d","",172,[[["self"]],["textureany"]]],[11,"deref","","",173,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_texture1d","",174,[[["self"]],["textureany"]]],[11,"deref","","",175,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::srgb_texture1d","",176,[[["self"]],["textureany"]]],[11,"deref","","",177,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_srgb_texture1d","",178,[[["self"]],["textureany"]]],[11,"deref","","",179,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::integral_texture1d","",180,[[["self"]],["textureany"]]],[11,"deref","","",181,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::unsigned_texture1d","",182,[[["self"]],["textureany"]]],[11,"deref","","",183,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_texture1d","",184,[[["self"]],["textureany"]]],[11,"deref","","",185,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::stencil_texture1d","",186,[[["self"]],["textureany"]]],[11,"deref","","",187,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_stencil_texture1d","",188,[[["self"]],["textureany"]]],[11,"deref","","",189,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::texture2d","",190,[[["self"]],["textureany"]]],[11,"deref","","",191,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_texture2d","",192,[[["self"]],["textureany"]]],[11,"deref","","",193,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::srgb_texture2d","",194,[[["self"]],["textureany"]]],[11,"deref","","",195,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_srgb_texture2d","",196,[[["self"]],["textureany"]]],[11,"deref","","",197,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::integral_texture2d","",198,[[["self"]],["textureany"]]],[11,"deref","","",199,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::unsigned_texture2d","",200,[[["self"]],["textureany"]]],[11,"deref","","",201,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_texture2d","",202,[[["self"]],["textureany"]]],[11,"deref","","",203,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::stencil_texture2d","",204,[[["self"]],["textureany"]]],[11,"deref","","",205,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_stencil_texture2d","",206,[[["self"]],["textureany"]]],[11,"deref","","",207,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::texture2d_multisample","",208,[[["self"]],["textureany"]]],[11,"deref","","",209,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::integral_texture2d_multisample","",210,[[["self"]],["textureany"]]],[11,"deref","","",211,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::srgb_texture2d_multisample","",212,[[["self"]],["textureany"]]],[11,"deref","","",213,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::unsigned_texture2d_multisample","",214,[[["self"]],["textureany"]]],[11,"deref","","",215,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_texture2d_multisample","",216,[[["self"]],["textureany"]]],[11,"deref","","",217,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::stencil_texture2d_multisample","",218,[[["self"]],["textureany"]]],[11,"deref","","",219,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_stencil_texture2d_multisample","",220,[[["self"]],["textureany"]]],[11,"deref","","",221,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::texture3d","",222,[[["self"]],["textureany"]]],[11,"deref","","",223,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_texture3d","",224,[[["self"]],["textureany"]]],[11,"deref","","",225,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::srgb_texture3d","",226,[[["self"]],["textureany"]]],[11,"deref","","",227,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_srgb_texture3d","",228,[[["self"]],["textureany"]]],[11,"deref","","",229,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::integral_texture3d","",230,[[["self"]],["textureany"]]],[11,"deref","","",231,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::unsigned_texture3d","",232,[[["self"]],["textureany"]]],[11,"deref","","",233,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_texture3d","",234,[[["self"]],["textureany"]]],[11,"deref","","",235,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_stencil_texture3d","",236,[[["self"]],["textureany"]]],[11,"deref","","",237,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::texture1d_array","",238,[[["self"]],["textureany"]]],[11,"deref","","",240,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_texture1d_array","",242,[[["self"]],["textureany"]]],[11,"deref","","",244,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::srgb_texture1d_array","",246,[[["self"]],["textureany"]]],[11,"deref","","",248,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_srgb_texture1d_array","",250,[[["self"]],["textureany"]]],[11,"deref","","",252,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::integral_texture1d_array","",254,[[["self"]],["textureany"]]],[11,"deref","","",256,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::unsigned_texture1d_array","",258,[[["self"]],["textureany"]]],[11,"deref","","",260,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_texture1d_array","",262,[[["self"]],["textureany"]]],[11,"deref","","",264,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::stencil_texture1d_array","",266,[[["self"]],["textureany"]]],[11,"deref","","",268,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_stencil_texture1d_array","",270,[[["self"]],["textureany"]]],[11,"deref","","",272,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::texture2d_array","",274,[[["self"]],["textureany"]]],[11,"deref","","",276,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_texture2d_array","",278,[[["self"]],["textureany"]]],[11,"deref","","",280,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::srgb_texture2d_array","",282,[[["self"]],["textureany"]]],[11,"deref","","",284,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_srgb_texture2d_array","",286,[[["self"]],["textureany"]]],[11,"deref","","",288,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::integral_texture2d_array","",290,[[["self"]],["textureany"]]],[11,"deref","","",292,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::unsigned_texture2d_array","",294,[[["self"]],["textureany"]]],[11,"deref","","",296,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_texture2d_array","",298,[[["self"]],["textureany"]]],[11,"deref","","",300,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::stencil_texture2d_array","",302,[[["self"]],["textureany"]]],[11,"deref","","",304,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_stencil_texture2d_array","",306,[[["self"]],["textureany"]]],[11,"deref","","",308,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::texture2d_multisample_array","",310,[[["self"]],["textureany"]]],[11,"deref","","",312,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::srgb_texture2d_multisample_array","",314,[[["self"]],["textureany"]]],[11,"deref","","",316,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::integral_texture2d_multisample_array","",318,[[["self"]],["textureany"]]],[11,"deref","","",320,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::unsigned_texture2d_multisample_array","",322,[[["self"]],["textureany"]]],[11,"deref","","",324,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_texture2d_multisample_array","",326,[[["self"]],["textureany"]]],[11,"deref","","",328,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::stencil_texture2d_multisample_array","",330,[[["self"]],["textureany"]]],[11,"deref","","",332,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_stencil_texture2d_multisample_array","",334,[[["self"]],["textureany"]]],[11,"deref","","",336,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::cubemap","",338,[[["self"]],["textureany"]]],[11,"deref","","",339,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_cubemap","",341,[[["self"]],["textureany"]]],[11,"deref","","",342,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::srgb_cubemap","",344,[[["self"]],["textureany"]]],[11,"deref","","",345,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_srgb_cubemap","",347,[[["self"]],["textureany"]]],[11,"deref","","",348,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::integral_cubemap","",350,[[["self"]],["textureany"]]],[11,"deref","","",351,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::unsigned_cubemap","",353,[[["self"]],["textureany"]]],[11,"deref","","",354,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_cubemap","",356,[[["self"]],["textureany"]]],[11,"deref","","",357,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::stencil_cubemap","",359,[[["self"]],["textureany"]]],[11,"deref","","",360,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_stencil_cubemap","",362,[[["self"]],["textureany"]]],[11,"deref","","",363,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::cubemap_array","",365,[[["self"]],["textureany"]]],[11,"deref","","",367,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_cubemap_array","",370,[[["self"]],["textureany"]]],[11,"deref","","",372,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::srgb_cubemap_array","",375,[[["self"]],["textureany"]]],[11,"deref","","",377,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::compressed_srgb_cubemap_array","",380,[[["self"]],["textureany"]]],[11,"deref","","",382,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::integral_cubemap_array","",385,[[["self"]],["textureany"]]],[11,"deref","","",387,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::unsigned_cubemap_array","",390,[[["self"]],["textureany"]]],[11,"deref","","",392,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_cubemap_array","",395,[[["self"]],["textureany"]]],[11,"deref","","",397,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::stencil_cubemap_array","",400,[[["self"]],["textureany"]]],[11,"deref","","",402,[[["self"]],["textureanymipmap"]]],[11,"deref","glium::texture::depth_stencil_cubemap_array","",405,[[["self"]],["textureany"]]],[11,"deref","","",407,[[["self"]],["textureanymipmap"]]],[11,"fmt","glium::backend::glutin","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::buffer","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::draw_parameters","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::framebuffer","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::index","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::program","",103,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::uniforms","",116,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::vertex","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::texture::buffer_texture","",159,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::texture","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",156,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::framebuffer","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::backend::glutin","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::buffer","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::debug","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::draw_parameters","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::draw_parameters","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::framebuffer","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::index","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::index","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::program","",107,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium","",108,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::program","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::uniforms","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",429,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::vertex","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::vertex","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::texture::bindless","",431,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::texture::buffer_texture","",159,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::texture","",148,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",167,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::texture::texture1d","",172,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_texture1d","",174,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::srgb_texture1d","",176,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_srgb_texture1d","",178,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::integral_texture1d","",180,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::unsigned_texture1d","",182,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_texture1d","",184,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::stencil_texture1d","",186,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_stencil_texture1d","",188,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::texture2d","",190,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_texture2d","",192,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::srgb_texture2d","",194,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_srgb_texture2d","",196,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::integral_texture2d","",198,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::unsigned_texture2d","",200,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_texture2d","",202,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::stencil_texture2d","",204,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_stencil_texture2d","",206,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::texture2d_multisample","",208,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::integral_texture2d_multisample","",210,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::srgb_texture2d_multisample","",212,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::unsigned_texture2d_multisample","",214,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_texture2d_multisample","",216,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::stencil_texture2d_multisample","",218,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_stencil_texture2d_multisample","",220,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::texture3d","",222,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_texture3d","",224,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::srgb_texture3d","",226,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_srgb_texture3d","",228,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::integral_texture3d","",230,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::unsigned_texture3d","",232,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_texture3d","",234,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_stencil_texture3d","",236,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::texture1d_array","",238,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_texture1d_array","",242,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::srgb_texture1d_array","",246,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_srgb_texture1d_array","",250,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::integral_texture1d_array","",254,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::unsigned_texture1d_array","",258,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_texture1d_array","",262,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::stencil_texture1d_array","",266,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_stencil_texture1d_array","",270,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::texture2d_array","",274,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_texture2d_array","",278,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::srgb_texture2d_array","",282,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_srgb_texture2d_array","",286,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::integral_texture2d_array","",290,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::unsigned_texture2d_array","",294,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_texture2d_array","",298,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::stencil_texture2d_array","",302,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_stencil_texture2d_array","",306,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::texture2d_multisample_array","",310,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::srgb_texture2d_multisample_array","",314,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::integral_texture2d_multisample_array","",318,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::unsigned_texture2d_multisample_array","",322,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_texture2d_multisample_array","",326,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::stencil_texture2d_multisample_array","",330,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_stencil_texture2d_multisample_array","",334,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::cubemap","",338,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_cubemap","",341,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::srgb_cubemap","",344,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_srgb_cubemap","",347,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::integral_cubemap","",350,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::unsigned_cubemap","",353,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_cubemap","",356,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::stencil_cubemap","",359,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_stencil_cubemap","",362,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::cubemap_array","",365,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_cubemap_array","",370,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::srgb_cubemap_array","",375,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::compressed_srgb_cubemap_array","",380,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::integral_cubemap_array","",385,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::unsigned_cubemap_array","",390,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_cubemap_array","",395,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::stencil_cubemap_array","",400,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture::depth_stencil_cubemap_array","",405,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glium::texture","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",156,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::backend","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::framebuffer","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium::texture","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","glium","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","glium::buffer","",427,[[["self"]],["d"]]],[11,"deref_mut","glium::framebuffer","",64,[[["self"]],["renderbufferany"]]],[11,"deref_mut","","",65,[[["self"]],["renderbufferany"]]],[11,"deref_mut","","",66,[[["self"]],["renderbufferany"]]],[11,"deref_mut","","",67,[[["self"]],["renderbufferany"]]],[11,"deref_mut","glium","",83,[[["self"]],["buffer"]]],[11,"deref_mut","glium::index","",84,[[["self"]],["bufferslice"]]],[11,"deref_mut","","",85,[[["self"]],["bufferany"]]],[11,"deref_mut","","",86,[[["self"]],["buffer"]]],[11,"deref_mut","","",87,[[["self"]],["buffer"]]],[11,"deref_mut","glium::uniforms","",117,[[["self"]],["buffer"]]],[11,"deref_mut","glium","",128,[[["self"]],["buffer"]]],[11,"deref_mut","glium::vertex","",127,[[["self"]],["bufferslice"]]],[11,"deref_mut","","",129,[[["self"]],["bufferany"]]],[11,"deref_mut","glium::texture::bindless","",157,[[["self"]],["textureany"]]],[11,"deref_mut","glium::texture::buffer_texture","",164,[[["self"]],["buffer"]]],[11,"deref_mut","glium::texture::pixel_buffer","",166,[[["self"]],["buffer"]]],[11,"hash","glium::program","",102,N],[11,"hash","glium::uniforms","",111,N],[11,"hash","","",112,N],[11,"hash","","",113,N],[11,"hash","","",109,N],[11,"hash","","",110,N],[11,"hash","glium::texture","",152,N],[11,"hash","","",153,N],[11,"hash","","",139,N],[11,"hash","","",147,N],[11,"hash","","",140,N],[11,"hash","","",141,N],[11,"hash","","",142,N],[11,"hash","","",146,N],[11,"hash","","",143,N],[11,"hash","","",144,N],[11,"hash","","",145,N],[11,"hash","","",138,N],[11,"hash","glium","",13,N],[11,"description","glium::backend::glutin","",18,[[["self"]],["str"]]],[11,"cause","","",18,[[["self"]],["option",["error"]]]],[11,"description","glium::buffer","",23,[[["self"]],["str"]]],[11,"description","","",24,[[["self"]],["str"]]],[11,"description","","",25,[[["self"]],["str"]]],[11,"description","glium::draw_parameters","",45,[[["self"]],["str"]]],[11,"description","glium::framebuffer","",57,[[["self"]],["str"]]],[11,"description","glium::index","",79,[[["self"]],["str"]]],[11,"cause","","",79,[[["self"]],["option",["error"]]]],[11,"description","glium::program","",103,[[["self"]],["str"]]],[11,"description","","",104,[[["self"]],["str"]]],[11,"cause","","",104,[[["self"]],["option",["error"]]]],[11,"description","","",105,[[["self"]],["str"]]],[11,"description","glium::uniforms","",116,[[["self"]],["str"]]],[11,"cause","","",116,[[["self"]],["option",["error"]]]],[11,"description","glium::vertex","",124,[[["self"]],["str"]]],[11,"cause","","",124,[[["self"]],["option",["error"]]]],[11,"description","glium::texture::buffer_texture","",159,[[["self"]],["str"]]],[11,"description","","",160,[[["self"]],["str"]]],[11,"cause","","",160,[[["self"]],["option",["error"]]]],[11,"description","glium::texture","",151,[[["self"]],["str"]]],[11,"description","","",156,[[["self"]],["str"]]],[11,"description","glium::framebuffer","",58,[[["self"]],["str"]]],[11,"description","glium","",15,[[["self"]],["str"]]],[11,"cause","","",15,[[["self"]],["option",["error"]]]],[11,"description","","",16,[[["self"]],["str"]]],[11,"description","","",5,[[["self"]],["str"]]]],"paths":[[3,"Blend"],[3,"Depth"],[3,"Version"],[3,"Rect"],[3,"BlitTarget"],[3,"IncompatibleOpenGl"],[4,"Profile"],[4,"BlendingFunction"],[4,"LinearBlendingFactor"],[4,"DepthTest"],[4,"StencilTest"],[4,"StencilOperation"],[4,"Api"],[4,"Handle"],[4,"RawUniformValue"],[4,"DrawError"],[4,"SwapBuffersError"],[4,"ReleaseBehavior"],[4,"DisplayCreationError"],[3,"Headless"],[3,"Display"],[8,"Backend"],[8,"Facade"],[4,"ReadError"],[4,"CopyError"],[4,"BufferCreationError"],[4,"BufferMode"],[4,"BufferType"],[3,"WriteMapping"],[3,"Inserter"],[3,"Buffer"],[3,"BufferSlice"],[3,"BufferMutSlice"],[3,"BufferAny"],[3,"BufferAnySlice"],[8,"Content"],[4,"DebugCallbackBehavior"],[4,"Severity"],[4,"Source"],[4,"MessageType"],[3,"TimestampQuery"],[3,"Stencil"],[3,"DrawParameters"],[3,"ConditionalRendering"],[4,"DepthClamp"],[4,"QueryCreationError"],[4,"BackfaceCullingMode"],[4,"PolygonMode"],[4,"Smooth"],[4,"ProvokingVertex"],[4,"SamplesQueryParam"],[3,"SamplesPassedQuery"],[3,"TimeElapsedQuery"],[3,"AnySamplesPassedQuery"],[3,"PrimitivesGeneratedQuery"],[3,"TransformFeedbackPrimitivesWrittenQuery"],[4,"DefaultFramebufferAttachment"],[4,"RenderBufferCreationError"],[4,"ValidationError"],[4,"ColorAttachment"],[4,"DepthAttachment"],[4,"StencilAttachment"],[4,"DepthStencilAttachment"],[3,"DefaultFramebuffer"],[3,"RenderBuffer"],[3,"DepthRenderBuffer"],[3,"StencilRenderBuffer"],[3,"DepthStencilRenderBuffer"],[3,"RenderBufferAny"],[8,"ToColorAttachment"],[8,"ToDepthAttachment"],[8,"ToStencilAttachment"],[8,"ToDepthStencilAttachment"],[3,"SimpleFrameBuffer"],[3,"MultiOutputFrameBuffer"],[3,"EmptyFrameBuffer"],[3,"DrawCommandNoIndices"],[3,"DrawCommandIndices"],[3,"NoIndices"],[4,"BufferCreationError"],[4,"IndicesSource"],[4,"PrimitiveType"],[4,"IndexType"],[3,"IndexBuffer"],[3,"IndexBufferSlice"],[3,"IndexBufferAny"],[3,"DrawCommandsNoIndicesBuffer"],[3,"DrawCommandsIndicesBuffer"],[8,"Index"],[3,"ComputeCommand"],[3,"Uniform"],[3,"UniformBlock"],[3,"Attribute"],[3,"TransformFeedbackVarying"],[3,"TransformFeedbackBuffer"],[3,"SubroutineData"],[3,"SubroutineUniform"],[3,"SourceCode"],[3,"Binary"],[4,"BlockLayout"],[4,"OutputPrimitives"],[4,"TransformFeedbackMode"],[4,"ShaderStage"],[4,"ProgramCreationError"],[4,"ProgramChooserCreationError"],[4,"GetBinaryError"],[4,"ProgramCreationInput"],[3,"ComputeShader"],[3,"Program"],[3,"Sampler"],[3,"SamplerBehavior"],[4,"SamplerWrapFunction"],[4,"MagnifySamplerFilter"],[4,"MinifySamplerFilter"],[4,"UniformValue"],[4,"UniformType"],[4,"LayoutMismatchError"],[3,"UniformBuffer"],[3,"UniformsStorage"],[8,"Uniforms"],[8,"AsUniformValue"],[8,"UniformBlock"],[3,"EmptyVertexAttributes"],[3,"EmptyInstanceAttributes"],[4,"BufferCreationError"],[4,"AttributeType"],[4,"VerticesSource"],[3,"VertexBufferSlice"],[3,"VertexBuffer"],[3,"VertexBufferAny"],[3,"TransformFeedbackSession"],[8,"MultiVerticesSource"],[8,"Vertex"],[8,"Attribute"],[3,"RawImage1d"],[3,"RawImage2d"],[3,"RawImage3d"],[4,"ClientFormat"],[4,"TextureFormat"],[4,"UncompressedFloatFormat"],[4,"UncompressedIntFormat"],[4,"UncompressedUintFormat"],[4,"CompressedFormat"],[4,"DepthFormat"],[4,"DepthStencilFormat"],[4,"StencilFormat"],[4,"CompressedSrgbFormat"],[4,"SrgbFormat"],[4,"Dimensions"],[4,"InternalFormat"],[4,"InternalFormatType"],[4,"GetFormatError"],[4,"CubeLayer"],[4,"TextureKind"],[4,"MipmapsOption"],[4,"CompressedMipmapsOption"],[4,"TextureCreationError"],[3,"ResidentTexture"],[3,"TextureHandle"],[4,"TextureCreationError"],[4,"CreationError"],[4,"BufferTextureType"],[4,"TextureBufferContentType"],[8,"TextureBufferContent"],[3,"BufferTexture"],[3,"BufferTextureRef"],[3,"PixelBuffer"],[3,"TextureAny"],[3,"TextureAnyLayer"],[3,"TextureAnyMipmap"],[3,"TextureAnyLayerMipmap"],[3,"TextureAnyImage"],[3,"Texture1d"],[3,"Texture1dMipmap"],[3,"CompressedTexture1d"],[3,"CompressedTexture1dMipmap"],[3,"SrgbTexture1d"],[3,"SrgbTexture1dMipmap"],[3,"CompressedSrgbTexture1d"],[3,"CompressedSrgbTexture1dMipmap"],[3,"IntegralTexture1d"],[3,"IntegralTexture1dMipmap"],[3,"UnsignedTexture1d"],[3,"UnsignedTexture1dMipmap"],[3,"DepthTexture1d"],[3,"DepthTexture1dMipmap"],[3,"StencilTexture1d"],[3,"StencilTexture1dMipmap"],[3,"DepthStencilTexture1d"],[3,"DepthStencilTexture1dMipmap"],[3,"Texture2d"],[3,"Texture2dMipmap"],[3,"CompressedTexture2d"],[3,"CompressedTexture2dMipmap"],[3,"SrgbTexture2d"],[3,"SrgbTexture2dMipmap"],[3,"CompressedSrgbTexture2d"],[3,"CompressedSrgbTexture2dMipmap"],[3,"IntegralTexture2d"],[3,"IntegralTexture2dMipmap"],[3,"UnsignedTexture2d"],[3,"UnsignedTexture2dMipmap"],[3,"DepthTexture2d"],[3,"DepthTexture2dMipmap"],[3,"StencilTexture2d"],[3,"StencilTexture2dMipmap"],[3,"DepthStencilTexture2d"],[3,"DepthStencilTexture2dMipmap"],[3,"Texture2dMultisample"],[3,"Texture2dMultisampleMipmap"],[3,"IntegralTexture2dMultisample"],[3,"IntegralTexture2dMultisampleMipmap"],[3,"SrgbTexture2dMultisample"],[3,"SrgbTexture2dMultisampleMipmap"],[3,"UnsignedTexture2dMultisample"],[3,"UnsignedTexture2dMultisampleMipmap"],[3,"DepthTexture2dMultisample"],[3,"DepthTexture2dMultisampleMipmap"],[3,"StencilTexture2dMultisample"],[3,"StencilTexture2dMultisampleMipmap"],[3,"DepthStencilTexture2dMultisample"],[3,"DepthStencilTexture2dMultisampleMipmap"],[3,"Texture3d"],[3,"Texture3dMipmap"],[3,"CompressedTexture3d"],[3,"CompressedTexture3dMipmap"],[3,"SrgbTexture3d"],[3,"SrgbTexture3dMipmap"],[3,"CompressedSrgbTexture3d"],[3,"CompressedSrgbTexture3dMipmap"],[3,"IntegralTexture3d"],[3,"IntegralTexture3dMipmap"],[3,"UnsignedTexture3d"],[3,"UnsignedTexture3dMipmap"],[3,"DepthTexture3d"],[3,"DepthTexture3dMipmap"],[3,"DepthStencilTexture3d"],[3,"DepthStencilTexture3dMipmap"],[3,"Texture1dArray"],[3,"Texture1dArrayLayer"],[3,"Texture1dArrayMipmap"],[3,"Texture1dArrayLayerMipmap"],[3,"CompressedTexture1dArray"],[3,"CompressedTexture1dArrayLayer"],[3,"CompressedTexture1dArrayMipmap"],[3,"CompressedTexture1dArrayLayerMipmap"],[3,"SrgbTexture1dArray"],[3,"SrgbTexture1dArrayLayer"],[3,"SrgbTexture1dArrayMipmap"],[3,"SrgbTexture1dArrayLayerMipmap"],[3,"CompressedSrgbTexture1dArray"],[3,"CompressedSrgbTexture1dArrayLayer"],[3,"CompressedSrgbTexture1dArrayMipmap"],[3,"CompressedSrgbTexture1dArrayLayerMipmap"],[3,"IntegralTexture1dArray"],[3,"IntegralTexture1dArrayLayer"],[3,"IntegralTexture1dArrayMipmap"],[3,"IntegralTexture1dArrayLayerMipmap"],[3,"UnsignedTexture1dArray"],[3,"UnsignedTexture1dArrayLayer"],[3,"UnsignedTexture1dArrayMipmap"],[3,"UnsignedTexture1dArrayLayerMipmap"],[3,"DepthTexture1dArray"],[3,"DepthTexture1dArrayLayer"],[3,"DepthTexture1dArrayMipmap"],[3,"DepthTexture1dArrayLayerMipmap"],[3,"StencilTexture1dArray"],[3,"StencilTexture1dArrayLayer"],[3,"StencilTexture1dArrayMipmap"],[3,"StencilTexture1dArrayLayerMipmap"],[3,"DepthStencilTexture1dArray"],[3,"DepthStencilTexture1dArrayLayer"],[3,"DepthStencilTexture1dArrayMipmap"],[3,"DepthStencilTexture1dArrayLayerMipmap"],[3,"Texture2dArray"],[3,"Texture2dArrayLayer"],[3,"Texture2dArrayMipmap"],[3,"Texture2dArrayLayerMipmap"],[3,"CompressedTexture2dArray"],[3,"CompressedTexture2dArrayLayer"],[3,"CompressedTexture2dArrayMipmap"],[3,"CompressedTexture2dArrayLayerMipmap"],[3,"SrgbTexture2dArray"],[3,"SrgbTexture2dArrayLayer"],[3,"SrgbTexture2dArrayMipmap"],[3,"SrgbTexture2dArrayLayerMipmap"],[3,"CompressedSrgbTexture2dArray"],[3,"CompressedSrgbTexture2dArrayLayer"],[3,"CompressedSrgbTexture2dArrayMipmap"],[3,"CompressedSrgbTexture2dArrayLayerMipmap"],[3,"IntegralTexture2dArray"],[3,"IntegralTexture2dArrayLayer"],[3,"IntegralTexture2dArrayMipmap"],[3,"IntegralTexture2dArrayLayerMipmap"],[3,"UnsignedTexture2dArray"],[3,"UnsignedTexture2dArrayLayer"],[3,"UnsignedTexture2dArrayMipmap"],[3,"UnsignedTexture2dArrayLayerMipmap"],[3,"DepthTexture2dArray"],[3,"DepthTexture2dArrayLayer"],[3,"DepthTexture2dArrayMipmap"],[3,"DepthTexture2dArrayLayerMipmap"],[3,"StencilTexture2dArray"],[3,"StencilTexture2dArrayLayer"],[3,"StencilTexture2dArrayMipmap"],[3,"StencilTexture2dArrayLayerMipmap"],[3,"DepthStencilTexture2dArray"],[3,"DepthStencilTexture2dArrayLayer"],[3,"DepthStencilTexture2dArrayMipmap"],[3,"DepthStencilTexture2dArrayLayerMipmap"],[3,"Texture2dMultisampleArray"],[3,"Texture2dMultisampleArrayLayer"],[3,"Texture2dMultisampleArrayMipmap"],[3,"Texture2dMultisampleArrayLayerMipmap"],[3,"SrgbTexture2dMultisampleArray"],[3,"SrgbTexture2dMultisampleArrayLayer"],[3,"SrgbTexture2dMultisampleArrayMipmap"],[3,"SrgbTexture2dMultisampleArrayLayerMipmap"],[3,"IntegralTexture2dMultisampleArray"],[3,"IntegralTexture2dMultisampleArrayLayer"],[3,"IntegralTexture2dMultisampleArrayMipmap"],[3,"IntegralTexture2dMultisampleArrayLayerMipmap"],[3,"UnsignedTexture2dMultisampleArray"],[3,"UnsignedTexture2dMultisampleArrayLayer"],[3,"UnsignedTexture2dMultisampleArrayMipmap"],[3,"UnsignedTexture2dMultisampleArrayLayerMipmap"],[3,"DepthTexture2dMultisampleArray"],[3,"DepthTexture2dMultisampleArrayLayer"],[3,"DepthTexture2dMultisampleArrayMipmap"],[3,"DepthTexture2dMultisampleArrayLayerMipmap"],[3,"StencilTexture2dMultisampleArray"],[3,"StencilTexture2dMultisampleArrayLayer"],[3,"StencilTexture2dMultisampleArrayMipmap"],[3,"StencilTexture2dMultisampleArrayLayerMipmap"],[3,"DepthStencilTexture2dMultisampleArray"],[3,"DepthStencilTexture2dMultisampleArrayLayer"],[3,"DepthStencilTexture2dMultisampleArrayMipmap"],[3,"DepthStencilTexture2dMultisampleArrayLayerMipmap"],[3,"Cubemap"],[3,"CubemapMipmap"],[3,"CubemapImage"],[3,"CompressedCubemap"],[3,"CompressedCubemapMipmap"],[3,"CompressedCubemapImage"],[3,"SrgbCubemap"],[3,"SrgbCubemapMipmap"],[3,"SrgbCubemapImage"],[3,"CompressedSrgbCubemap"],[3,"CompressedSrgbCubemapMipmap"],[3,"CompressedSrgbCubemapImage"],[3,"IntegralCubemap"],[3,"IntegralCubemapMipmap"],[3,"IntegralCubemapImage"],[3,"UnsignedCubemap"],[3,"UnsignedCubemapMipmap"],[3,"UnsignedCubemapImage"],[3,"DepthCubemap"],[3,"DepthCubemapMipmap"],[3,"DepthCubemapImage"],[3,"StencilCubemap"],[3,"StencilCubemapMipmap"],[3,"StencilCubemapImage"],[3,"DepthStencilCubemap"],[3,"DepthStencilCubemapMipmap"],[3,"DepthStencilCubemapImage"],[3,"CubemapArray"],[3,"CubemapArrayLayer"],[3,"CubemapArrayMipmap"],[3,"CubemapArrayLayerMipmap"],[3,"CubemapArrayImage"],[3,"CompressedCubemapArray"],[3,"CompressedCubemapArrayLayer"],[3,"CompressedCubemapArrayMipmap"],[3,"CompressedCubemapArrayLayerMipmap"],[3,"CompressedCubemapArrayImage"],[3,"SrgbCubemapArray"],[3,"SrgbCubemapArrayLayer"],[3,"SrgbCubemapArrayMipmap"],[3,"SrgbCubemapArrayLayerMipmap"],[3,"SrgbCubemapArrayImage"],[3,"CompressedSrgbCubemapArray"],[3,"CompressedSrgbCubemapArrayLayer"],[3,"CompressedSrgbCubemapArrayMipmap"],[3,"CompressedSrgbCubemapArrayLayerMipmap"],[3,"CompressedSrgbCubemapArrayImage"],[3,"IntegralCubemapArray"],[3,"IntegralCubemapArrayLayer"],[3,"IntegralCubemapArrayMipmap"],[3,"IntegralCubemapArrayLayerMipmap"],[3,"IntegralCubemapArrayImage"],[3,"UnsignedCubemapArray"],[3,"UnsignedCubemapArrayLayer"],[3,"UnsignedCubemapArrayMipmap"],[3,"UnsignedCubemapArrayLayerMipmap"],[3,"UnsignedCubemapArrayImage"],[3,"DepthCubemapArray"],[3,"DepthCubemapArrayLayer"],[3,"DepthCubemapArrayMipmap"],[3,"DepthCubemapArrayLayerMipmap"],[3,"DepthCubemapArrayImage"],[3,"StencilCubemapArray"],[3,"StencilCubemapArrayLayer"],[3,"StencilCubemapArrayMipmap"],[3,"StencilCubemapArrayLayerMipmap"],[3,"StencilCubemapArrayImage"],[3,"DepthStencilCubemapArray"],[3,"DepthStencilCubemapArrayLayer"],[3,"DepthStencilCubemapArrayMipmap"],[3,"DepthStencilCubemapArrayLayerMipmap"],[3,"DepthStencilCubemapArrayImage"],[8,"PixelValue"],[8,"Texture1dDataSource"],[8,"Texture1dDataSink"],[8,"Texture2dDataSource"],[8,"Texture2dDataSink"],[8,"ToClientFormat"],[8,"Texture3dDataSource"],[8,"Texture3dDataSink"],[3,"Context"],[3,"SyncFence"],[3,"LinearSyncFence"],[8,"CapabilitiesSource"],[8,"GlObject"],[8,"Surface"],[3,"Frame"],[3,"GlutinBackend"],[3,"GlutinBackend"],[3,"Mapping"],[3,"ReadMapping"],[3,"EmptyUniforms"],[3,"PerInstance"],[3,"BindlessTexturesNotSupportedError"]]};
searchIndex["glutin"]={"doc":"The purpose of this library is to provide an OpenGL…","items":[[3,"AvailableMonitorsIter","glutin","An iterator for the list of available monitors.",N,N],[6,"AxisId","","Identifier for a specific analog axis on some device.",N,N],[6,"ButtonId","","Identifier for a specific button on some device.",N,N],[4,"ControlFlow","","Returned by the user callback given to the…",N,N],[13,"Continue","","Continue looping and waiting for events.",0,N],[13,"Break","","Break from the event loop.",0,N],[4,"WindowCreationError","","Error that can happen while creating a window or a…",N,N],[13,"OsError","","",1,N],[13,"NotSupported","","TODO: remove this error",1,N],[4,"DeviceEvent","","Represents raw hardware events that are not associated…",N,N],[13,"Added","","",2,N],[13,"Removed","","",2,N],[13,"MouseMotion","","Change in physical position of a pointing device.",2,N],[12,"delta","glutin::DeviceEvent","(x, y) change in position in unspecified units.",2,N],[13,"MouseWheel","glutin","Physical scroll event",2,N],[12,"delta","glutin::DeviceEvent","",2,N],[13,"Motion","glutin","Motion on some analog axis. This event will be reported…",2,N],[12,"axis","glutin::DeviceEvent","",2,N],[12,"value","","",2,N],[13,"Button","glutin","",2,N],[12,"button","glutin::DeviceEvent","",2,N],[12,"state","","",2,N],[13,"Key","glutin","",2,N],[13,"Text","","",2,N],[12,"codepoint","glutin::DeviceEvent","",2,N],[3,"DeviceId","glutin","Identifier of an input device.",N,N],[0,"dpi","","DPI is important, so read the docs for this module if you…",N,N],[5,"validate_hidpi_factor","glutin::dpi","Checks that the DPI factor is a normal positive `f64`.",N,[[["f64"]],["bool"]]],[3,"LogicalPosition","","A position represented in logical pixels.",N,N],[12,"x","","",3,N],[12,"y","","",3,N],[3,"PhysicalPosition","","A position represented in physical pixels.",N,N],[12,"x","","",4,N],[12,"y","","",4,N],[3,"LogicalSize","","A size represented in logical pixels.",N,N],[12,"width","","",5,N],[12,"height","","",5,N],[3,"PhysicalSize","","A size represented in physical pixels.",N,N],[12,"width","","",6,N],[12,"height","","",6,N],[4,"ElementState","glutin","Describes the input state of a key.",N,N],[13,"Pressed","","",7,N],[13,"Released","","",7,N],[4,"Event","","Describes a generic event.",N,N],[13,"WindowEvent","","",8,N],[12,"window_id","glutin::Event","",8,N],[12,"event","","",8,N],[13,"DeviceEvent","glutin","",8,N],[12,"device_id","glutin::Event","",8,N],[12,"event","","",8,N],[13,"Awakened","glutin","",8,N],[13,"Suspended","","The application has been suspended or resumed.",8,N],[3,"EventsLoop","","Provides a way to retrieve events from the system and from…",N,N],[3,"EventsLoopClosed","","The error that is returned when an `EventsLoopProxy`…",N,N],[3,"EventsLoopProxy","","Used to wake up the `EventsLoop` from another thread.",N,N],[3,"Icon","","An icon used for the window titlebar, taskbar, etc.",N,N],[3,"KeyboardInput","","Describes a keyboard input event.",N,N],[12,"scancode","","Identifies the physical key pressed",9,N],[12,"state","","",9,N],[12,"virtual_keycode","","Identifies the semantic meaning of the key",9,N],[12,"modifiers","","Modifier keys active at the time of this input.",9,N],[3,"ModifiersState","","Represents the current state of the keyboard modifiers",N,N],[12,"shift","","The \"shift\" key",10,N],[12,"ctrl","","The \"control\" key",10,N],[12,"alt","","The \"alt\" key",10,N],[12,"logo","","The \"logo\" key",10,N],[3,"MonitorId","","Identifier for a monitor.",N,N],[4,"MouseButton","","Describes a button of a mouse controller.",N,N],[13,"Left","","",11,N],[13,"Right","","",11,N],[13,"Middle","","",11,N],[13,"Other","","",11,N],[4,"MouseCursor","","Describes the appearance of the mouse cursor.",N,N],[13,"Default","","The platform-dependent default cursor.",12,N],[13,"Crosshair","","A simple crosshair.",12,N],[13,"Hand","","A hand (often used to indicate links in web browsers).",12,N],[13,"Arrow","","Self explanatory.",12,N],[13,"Move","","Indicates something is to be moved.",12,N],[13,"Text","","Indicates text that may be selected or edited.",12,N],[13,"Wait","","Program busy indicator.",12,N],[13,"Help","","Help indicator (often rendered as a \"?\")",12,N],[13,"Progress","","Progress indicator. Shows that processing is being done.…",12,N],[13,"NotAllowed","","Cursor showing that something cannot be done.",12,N],[13,"ContextMenu","","",12,N],[13,"Cell","","",12,N],[13,"VerticalText","","",12,N],[13,"Alias","","",12,N],[13,"Copy","","",12,N],[13,"NoDrop","","",12,N],[13,"Grab","","",12,N],[13,"Grabbing","","",12,N],[13,"AllScroll","","",12,N],[13,"ZoomIn","","",12,N],[13,"ZoomOut","","",12,N],[13,"EResize","","Indicate that some edge is to be moved. For example, the…",12,N],[13,"NResize","","",12,N],[13,"NeResize","","",12,N],[13,"NwResize","","",12,N],[13,"SResize","","",12,N],[13,"SeResize","","",12,N],[13,"SwResize","","",12,N],[13,"WResize","","",12,N],[13,"EwResize","","",12,N],[13,"NsResize","","",12,N],[13,"NeswResize","","",12,N],[13,"NwseResize","","",12,N],[13,"ColResize","","",12,N],[13,"RowResize","","",12,N],[4,"MouseScrollDelta","","Describes a difference in the mouse scroll wheel state.",N,N],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal and…",13,N],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and vertical…",13,N],[6,"ScanCode","","Hardware-dependent keyboard scan code.",N,N],[3,"Touch","","Represents touch event",N,N],[12,"device_id","","",14,N],[12,"phase","","",14,N],[12,"location","","",14,N],[12,"id","","unique identifier of a finger.",14,N],[4,"TouchPhase","","Describes touch-screen input state.",N,N],[13,"Started","","",15,N],[13,"Moved","","",15,N],[13,"Ended","","",15,N],[13,"Cancelled","","",15,N],[4,"VirtualKeyCode","","Symbolic name for a keyboard key.",N,N],[13,"Key1","","The '1' key over the letters.",16,N],[13,"Key2","","The '2' key over the letters.",16,N],[13,"Key3","","The '3' key over the letters.",16,N],[13,"Key4","","The '4' key over the letters.",16,N],[13,"Key5","","The '5' key over the letters.",16,N],[13,"Key6","","The '6' key over the letters.",16,N],[13,"Key7","","The '7' key over the letters.",16,N],[13,"Key8","","The '8' key over the letters.",16,N],[13,"Key9","","The '9' key over the letters.",16,N],[13,"Key0","","The '0' key over the 'O' and 'P' keys.",16,N],[13,"A","","",16,N],[13,"B","","",16,N],[13,"C","","",16,N],[13,"D","","",16,N],[13,"E","","",16,N],[13,"F","","",16,N],[13,"G","","",16,N],[13,"H","","",16,N],[13,"I","","",16,N],[13,"J","","",16,N],[13,"K","","",16,N],[13,"L","","",16,N],[13,"M","","",16,N],[13,"N","","",16,N],[13,"O","","",16,N],[13,"P","","",16,N],[13,"Q","","",16,N],[13,"R","","",16,N],[13,"S","","",16,N],[13,"T","","",16,N],[13,"U","","",16,N],[13,"V","","",16,N],[13,"W","","",16,N],[13,"X","","",16,N],[13,"Y","","",16,N],[13,"Z","","",16,N],[13,"Escape","","The Escape key, next to F1.",16,N],[13,"F1","","",16,N],[13,"F2","","",16,N],[13,"F3","","",16,N],[13,"F4","","",16,N],[13,"F5","","",16,N],[13,"F6","","",16,N],[13,"F7","","",16,N],[13,"F8","","",16,N],[13,"F9","","",16,N],[13,"F10","","",16,N],[13,"F11","","",16,N],[13,"F12","","",16,N],[13,"F13","","",16,N],[13,"F14","","",16,N],[13,"F15","","",16,N],[13,"F16","","",16,N],[13,"F17","","",16,N],[13,"F18","","",16,N],[13,"F19","","",16,N],[13,"F20","","",16,N],[13,"F21","","",16,N],[13,"F22","","",16,N],[13,"F23","","",16,N],[13,"F24","","",16,N],[13,"Snapshot","","Print Screen/SysRq.",16,N],[13,"Scroll","","Scroll Lock.",16,N],[13,"Pause","","Pause/Break key, next to Scroll lock.",16,N],[13,"Insert","","`Insert`, next to Backspace.",16,N],[13,"Home","","",16,N],[13,"Delete","","",16,N],[13,"End","","",16,N],[13,"PageDown","","",16,N],[13,"PageUp","","",16,N],[13,"Left","","",16,N],[13,"Up","","",16,N],[13,"Right","","",16,N],[13,"Down","","",16,N],[13,"Back","","The Backspace key, right over Enter.",16,N],[13,"Return","","The Enter key.",16,N],[13,"Space","","The space bar.",16,N],[13,"Compose","","The \"Compose\" key on Linux.",16,N],[13,"Caret","","",16,N],[13,"Numlock","","",16,N],[13,"Numpad0","","",16,N],[13,"Numpad1","","",16,N],[13,"Numpad2","","",16,N],[13,"Numpad3","","",16,N],[13,"Numpad4","","",16,N],[13,"Numpad5","","",16,N],[13,"Numpad6","","",16,N],[13,"Numpad7","","",16,N],[13,"Numpad8","","",16,N],[13,"Numpad9","","",16,N],[13,"AbntC1","","",16,N],[13,"AbntC2","","",16,N],[13,"Add","","",16,N],[13,"Apostrophe","","",16,N],[13,"Apps","","",16,N],[13,"At","","",16,N],[13,"Ax","","",16,N],[13,"Backslash","","",16,N],[13,"Calculator","","",16,N],[13,"Capital","","",16,N],[13,"Colon","","",16,N],[13,"Comma","","",16,N],[13,"Convert","","",16,N],[13,"Decimal","","",16,N],[13,"Divide","","",16,N],[13,"Equals","","",16,N],[13,"Grave","","",16,N],[13,"Kana","","",16,N],[13,"Kanji","","",16,N],[13,"LAlt","","",16,N],[13,"LBracket","","",16,N],[13,"LControl","","",16,N],[13,"LShift","","",16,N],[13,"LWin","","",16,N],[13,"Mail","","",16,N],[13,"MediaSelect","","",16,N],[13,"MediaStop","","",16,N],[13,"Minus","","",16,N],[13,"Multiply","","",16,N],[13,"Mute","","",16,N],[13,"MyComputer","","",16,N],[13,"NavigateForward","","",16,N],[13,"NavigateBackward","","",16,N],[13,"NextTrack","","",16,N],[13,"NoConvert","","",16,N],[13,"NumpadComma","","",16,N],[13,"NumpadEnter","","",16,N],[13,"NumpadEquals","","",16,N],[13,"OEM102","","",16,N],[13,"Period","","",16,N],[13,"PlayPause","","",16,N],[13,"Power","","",16,N],[13,"PrevTrack","","",16,N],[13,"RAlt","","",16,N],[13,"RBracket","","",16,N],[13,"RControl","","",16,N],[13,"RShift","","",16,N],[13,"RWin","","",16,N],[13,"Semicolon","","",16,N],[13,"Slash","","",16,N],[13,"Sleep","","",16,N],[13,"Stop","","",16,N],[13,"Subtract","","",16,N],[13,"Sysrq","","",16,N],[13,"Tab","","",16,N],[13,"Underline","","",16,N],[13,"Unlabeled","","",16,N],[13,"VolumeDown","","",16,N],[13,"VolumeUp","","",16,N],[13,"Wake","","",16,N],[13,"WebBack","","",16,N],[13,"WebFavorites","","",16,N],[13,"WebForward","","",16,N],[13,"WebHome","","",16,N],[13,"WebRefresh","","",16,N],[13,"WebSearch","","",16,N],[13,"WebStop","","",16,N],[13,"Yen","","",16,N],[13,"Copy","","",16,N],[13,"Paste","","",16,N],[13,"Cut","","",16,N],[3,"Window","","Represents a window.",N,N],[3,"WindowAttributes","","Attributes to use when creating a window.",N,N],[12,"dimensions","","The dimensions of the window. If this is `None`, some…",17,N],[12,"min_dimensions","","The minimum dimensions a window can be, If this is `None`,…",17,N],[12,"max_dimensions","","The maximum dimensions a window can be, If this is `None`,…",17,N],[12,"resizable","","Whether the window is resizable or not.",17,N],[12,"fullscreen","","Whether the window should be set as fullscreen upon…",17,N],[12,"title","","The title of the window in the title bar.",17,N],[12,"maximized","","Whether the window should be maximized upon creation.",17,N],[12,"visible","","Whether the window should be immediately visible upon…",17,N],[12,"transparent","","Whether the the window should be transparent. If this is…",17,N],[12,"decorations","","Whether the window should have borders and bars.",17,N],[12,"always_on_top","","Whether the window should always be on top of other windows.",17,N],[12,"window_icon","","The window icon.",17,N],[12,"multitouch","","[iOS only] Enable multitouch, see multipleTouchEnabled",17,N],[3,"WindowBuilder","","Object that allows you to build windows.",N,N],[12,"window","","The attributes to use to create the window.",18,N],[4,"WindowEvent","","Describes an event from a `Window`.",N,N],[13,"Resized","","The size of the window has changed. Contains the client…",19,N],[13,"Moved","","The position of the window has changed. Contains the…",19,N],[13,"CloseRequested","","The window has been requested to close.",19,N],[13,"Destroyed","","The window has been destroyed.",19,N],[13,"DroppedFile","","A file has been dropped into the window.",19,N],[13,"HoveredFile","","A file is being hovered over the window.",19,N],[13,"HoveredFileCancelled","","A file was hovered, but has exited the window.",19,N],[13,"ReceivedCharacter","","The window received a unicode character.",19,N],[13,"Focused","","The window gained or lost focus.",19,N],[13,"KeyboardInput","","An event from the keyboard has been received.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[12,"input","","",19,N],[13,"CursorMoved","glutin","The cursor has moved on the window.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[12,"position","","(x,y) coords in pixels relative to the top-left corner of…",19,N],[12,"modifiers","","",19,N],[13,"CursorEntered","glutin","The cursor has entered the window.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[13,"CursorLeft","glutin","The cursor has left the window.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[13,"MouseWheel","glutin","A mouse wheel movement or touchpad scroll occurred.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[12,"delta","","",19,N],[12,"phase","","",19,N],[12,"modifiers","","",19,N],[13,"MouseInput","glutin","An mouse button press has been received.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[12,"state","","",19,N],[12,"button","","",19,N],[12,"modifiers","","",19,N],[13,"TouchpadPressure","glutin","Touchpad pressure event.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[12,"pressure","","",19,N],[12,"stage","","",19,N],[13,"AxisMotion","glutin","Motion on some analog axis. May report data redundant to…",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[12,"axis","","",19,N],[12,"value","","",19,N],[13,"Refresh","glutin","The window needs to be redrawn.",19,N],[13,"Touch","","Touch event has been received",19,N],[13,"HiDpiFactorChanged","","The DPI factor of the window has changed.",19,N],[3,"WindowId","","Identifier of a window. Unique for each window.",N,N],[3,"Context","","Represents an OpenGL context.",N,N],[3,"ContextBuilder","","Object that allows you to build `Context`s.",N,N],[12,"gl_attr","","The attributes to use to create the context.",20,N],[3,"GlWindow","","Represents an OpenGL context and a Window with which it is…",N,N],[3,"PixelFormat","","Describes a possible format. Unused.",N,N],[12,"hardware_accelerated","","",21,N],[12,"color_bits","","",21,N],[12,"alpha_bits","","",21,N],[12,"depth_bits","","",21,N],[12,"stencil_bits","","",21,N],[12,"stereoscopy","","",21,N],[12,"double_buffer","","",21,N],[12,"multisampling","","",21,N],[12,"srgb","","",21,N],[3,"PixelFormatRequirements","","Describes how the backend should choose a pixel format.",N,N],[12,"hardware_accelerated","","If true, only hardware-accelerated formats will be…",22,N],[12,"color_bits","","Minimum number of bits for the color buffer, excluding…",22,N],[12,"float_color_buffer","","If true, the color buffer must be in a floating point…",22,N],[12,"alpha_bits","","Minimum number of bits for the alpha in the color buffer.…",22,N],[12,"depth_bits","","Minimum number of bits for the depth buffer. `None` means…",22,N],[12,"stencil_bits","","Minimum number of bits for the depth buffer. `None` means…",22,N],[12,"double_buffer","","If true, only double-buffered formats will be considered.…",22,N],[12,"multisampling","","Contains the minimum number of samples per pixel in the…",22,N],[12,"stereoscopy","","If true, only stereoscopic formats will be considered. If…",22,N],[12,"srgb","","If true, only sRGB-capable formats will be considered. If…",22,N],[12,"release_behavior","","The behavior when changing the current context. Default is…",22,N],[3,"GlAttributes","","Attributes to use when creating an OpenGL context.",N,N],[12,"sharing","","An existing context to share the new the context with.",23,N],[12,"version","","Version to try create. See `GlRequest` for more infos.",23,N],[12,"profile","","OpenGL profile to use.",23,N],[12,"debug","","Whether to enable the `debug` flag of the context.",23,N],[12,"robustness","","How the OpenGL context should detect errors.",23,N],[12,"vsync","","Whether to use vsync. If vsync is enabled, calling…",23,N],[4,"CreationError","","Error that can happen while creating a window or a…",N,N],[13,"OsError","","",24,N],[13,"NotSupported","","TODO: remove this error",24,N],[13,"NoBackendAvailable","","",24,N],[13,"RobustnessNotSupported","","",24,N],[13,"OpenGlVersionNotSupported","","",24,N],[13,"NoAvailablePixelFormat","","",24,N],[13,"PlatformSpecific","","",24,N],[13,"Window","","",24,N],[13,"CreationErrorPair","","We received two errors, instead of one.",24,N],[4,"ContextError","","Error that can happen when manipulating an OpenGL context.",N,N],[13,"OsError","","General platform error.",25,N],[13,"IoError","","",25,N],[13,"ContextLost","","",25,N],[4,"Api","","All APIs related to OpenGL that you can possibly get while…",N,N],[13,"OpenGl","","The classical OpenGL. Available on Windows, Linux, OS/X.",26,N],[13,"OpenGlEs","","OpenGL embedded system. Available on Linux, Android.",26,N],[13,"WebGl","","OpenGL for the web. Very similar to OpenGL ES.",26,N],[4,"GlProfile","","Describes the requested OpenGL context profiles.",N,N],[13,"Compatibility","","Include all the immediate more functions and definitions.",27,N],[13,"Core","","Include all the future-compatible functions and definitions.",27,N],[4,"GlRequest","","Describes the OpenGL API and version that are being…",N,N],[13,"Latest","","Request the latest version of the \"best\" API of this…",28,N],[13,"Specific","","Request a specific version of a specific API.",28,N],[13,"GlThenGles","","If OpenGL is available, create an OpenGL context with the…",28,N],[12,"opengl_version","glutin::GlRequest","The version to use for OpenGL.",28,N],[12,"opengles_version","","The version to use for OpenGL ES.",28,N],[4,"Robustness","glutin","Specifies the tolerance of the OpenGL context to faults.…",N,N],[13,"NotRobust","","Not everything is checked. Your application can crash if…",29,N],[13,"NoError","","The driver doesn't check anything. This option is very…",29,N],[13,"RobustNoResetNotification","","Everything is checked to avoid any crash. The driver will…",29,N],[13,"TryRobustNoResetNotification","","Same as `RobustNoResetNotification` but the context…",29,N],[13,"RobustLoseContextOnReset","","Everything is checked to avoid any crash. If a problem…",29,N],[13,"TryRobustLoseContextOnReset","","Same as `RobustLoseContextOnReset` but the context…",29,N],[4,"ReleaseBehavior","","The behavior of the driver when you change the current…",N,N],[13,"None","","Doesn't do anything. Most notably doesn't flush.",30,N],[13,"Flush","","Flushes the context that was previously current as if…",30,N],[0,"os","","Contains traits with platform-specific methods in them.",N,N],[0,"macos","glutin::os","",N,N],[4,"ActivationPolicy","glutin::os::macos","Corresponds to `NSApplicationActivationPolicy`.",N,N],[13,"Regular","","Corresponds to `NSApplicationActivationPolicyRegular`.",31,N],[13,"Accessory","","Corresponds to `NSApplicationActivationPolicyAccessory`.",31,N],[13,"Prohibited","","Corresponds to `NSApplicationActivationPolicyProhibited`.",31,N],[8,"MonitorIdExt","","Additional methods on `MonitorId` that are specific to…",N,N],[10,"native_id","","Returns the identifier of the monitor for Cocoa.",32,[[["self"]],["u32"]]],[10,"get_nsscreen","","Returns a pointer to the NSScreen representing this monitor.",32,[[["self"]],["option"]]],[8,"WindowBuilderExt","","Additional methods on `WindowBuilder` that are specific to…",N,N],[10,"with_activation_policy","","Sets the activation policy for the window being built.",33,[[["self"],["activationpolicy"]],["windowbuilder"]]],[10,"with_movable_by_window_background","","Enables click-and-drag behavior for the entire window, not…",33,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_titlebar_transparent","","Makes the titlebar transparent and allows the content to…",33,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_title_hidden","","Hides the window title.",33,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_titlebar_hidden","","Hides the window titlebar.",33,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_titlebar_buttons_hidden","","Hides the window titlebar buttons.",33,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_fullsize_content_view","","Makes the window content appear behind the titlebar.",33,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_resize_increments","","Build window with `resizeIncrements` property. Values must…",33,[[["self"],["logicalsize"]],["windowbuilder"]]],[8,"WindowExt","","Additional methods on `Window` that are specific to MacOS.",N,N],[10,"get_nswindow","","Returns a pointer to the cocoa `NSWindow` that is used by…",34,N],[10,"get_nsview","","Returns a pointer to the cocoa `NSView` that is used by…",34,N],[10,"request_user_attention","","Request user attention, causing the application's dock…",34,N],[10,"set_simple_fullscreen","","Toggles a fullscreen mode that doesn't require a new macOS…",34,[[["self"],["bool"]],["bool"]]],[8,"GlContextExt","glutin::os","Platform-specific extensions for OpenGL contexts.",N,N],[16,"Handle","","Raw context handle.",35,N],[10,"raw_handle","","Returns the raw context handle.",35,N],[7,"GL_CORE","glutin","The minimum core profile GL context. Useful for getting…",N,N],[8,"GlContext","","A trait for types associated with a GL context.",N,N],[10,"make_current","","Sets the context as the current context.",36,[[["self"]],["result",["contexterror"]]]],[10,"is_current","","Returns true if this context is the current one in this…",36,[[["self"]],["bool"]]],[10,"get_proc_address","","Returns the address of an OpenGL function.",36,N],[10,"get_api","","Returns the OpenGL API being used.",36,[[["self"]],["api"]]],[11,"new","","Initializes a new `ContextBuilder` with default values.",20,[[],["self"]]],[11,"with_gl","","Sets how the backend should choose the OpenGL API and…",20,[[["self"],["glrequest"]],["self"]]],[11,"with_gl_profile","","Sets the desired OpenGL context profile.",20,[[["self"],["glprofile"]],["self"]]],[11,"with_gl_debug_flag","","Sets the debug flag for the OpenGL context.",20,[[["self"],["bool"]],["self"]]],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of…",20,[[["self"],["robustness"]],["self"]]],[11,"with_vsync","","Requests that the window has vsync enabled.",20,[[["self"],["bool"]],["self"]]],[11,"with_shared_lists","","Share the display lists with the given `Context`.",20,[[["self"],["context"]],["self"]]],[11,"with_multisampling","","Sets the multisampling level to request. A value of `0`…",20,[[["self"],["u16"]],["self"]]],[11,"with_depth_buffer","","Sets the number of bits in the depth buffer.",20,[[["self"],["u8"]],["self"]]],[11,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",20,[[["self"],["u8"]],["self"]]],[11,"with_pixel_format","","Sets the number of bits in the color buffer.",20,[[["self"],["u8"],["u8"]],["self"]]],[11,"with_stereoscopy","","Request the backend to be stereoscopic.",20,[[["self"]],["self"]]],[11,"with_srgb","","Sets whether sRGB should be enabled on the window.",20,[[["self"],["bool"]],["self"]]],[11,"with_double_buffer","","Sets whether double buffering should be enabled.",20,[[["self"],["option",["bool"]]],["self"]]],[11,"with_hardware_acceleration","","Sets whether hardware acceleration is required.",20,[[["self"],["option",["bool"]]],["self"]]],[11,"new","","Builds the given window along with the associated GL…",37,[[["windowbuilder"],["contextbuilder"],["eventsloop"]],["result",["creationerror"]]]],[11,"new_shared","","Builds the given window along with the associated GL…",37,[[["windowbuilder"],["contextbuilder"],["eventsloop"]],["result",["creationerror"]]]],[11,"window","","Borrow the inner `Window`.",37,[[["self"]],["window"]]],[11,"context","","Borrow the inner GL `Context`.",37,[[["self"]],["context"]]],[11,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",37,[[["self"]],["result",["contexterror"]]]],[11,"get_pixel_format","","Returns the pixel format of the main framebuffer of the…",37,[[["self"]],["pixelformat"]]],[11,"resize","","Resize the context.",37,[[["self"],["physicalsize"]]]],[11,"new","","Builds the given GL context",38,[[["eventsloop"],["contextbuilder"],["bool"]],["result",["creationerror"]]]],[11,"new_shared","","Builds the given GL context",38,[[["eventsloop"],["contextbuilder"],["bool"]],["result",["creationerror"]]]],[11,"to_gl_version","","Extract the desktop GL version, if any.",28,[[["self"]],["option"]]],[11,"map_sharing","","Turns the `sharing` parameter into another type by calling…",23,[[["self"],["f"]],["glattributes"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into_iter","","",39,[[["self"]],["i"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","glutin::dpi","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","glutin","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","glutin::os::macos","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"hash","glutin","",15,N],[11,"hash","","",9,N],[11,"hash","","",7,N],[11,"hash","","",42,N],[11,"hash","","",10,N],[11,"hash","","",12,N],[11,"hash","","",40,N],[11,"hash","","",0,N],[11,"hash","","",16,N],[11,"hash","","",11,N],[11,"hash","","",47,N],[11,"default","glutin::os::macos","",31,[[],["activationpolicy"]]],[11,"default","glutin","",10,[[],["modifiersstate"]]],[11,"default","","",12,[[],["mousecursor"]]],[11,"default","","",17,[[],["windowattributes"]]],[11,"with_activation_policy","","",18,[[["self"],["activationpolicy"]],["windowbuilder"]]],[11,"with_movable_by_window_background","","",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_titlebar_transparent","","",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_titlebar_hidden","","",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_titlebar_buttons_hidden","","",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_title_hidden","","",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_fullsize_content_view","","",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_resize_increments","","",18,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"from","glutin::dpi","",6,N],[11,"from","","",3,N],[11,"from","","",5,N],[11,"from","","",6,N],[11,"from","","",5,N],[11,"from","","",4,N],[11,"from","","",4,N],[11,"from","","",3,N],[11,"fmt","glutin","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",44,[[["self"],["icon"]],["bool"]]],[11,"ne","","",44,[[["self"],["icon"]],["bool"]]],[11,"eq","","",8,[[["self"],["event"]],["bool"]]],[11,"ne","","",8,[[["self"],["event"]],["bool"]]],[11,"eq","glutin::os::macos","",31,[[["self"],["activationpolicy"]],["bool"]]],[11,"eq","glutin","",9,[[["self"],["keyboardinput"]],["bool"]]],[11,"ne","","",9,[[["self"],["keyboardinput"]],["bool"]]],[11,"eq","","",19,[[["self"],["windowevent"]],["bool"]]],[11,"ne","","",19,[[["self"],["windowevent"]],["bool"]]],[11,"eq","glutin::dpi","",4,[[["self"],["physicalposition"]],["bool"]]],[11,"ne","","",4,[[["self"],["physicalposition"]],["bool"]]],[11,"eq","glutin","",40,[[["self"],["deviceid"]],["bool"]]],[11,"ne","","",40,[[["self"],["deviceid"]],["bool"]]],[11,"eq","","",0,[[["self"],["controlflow"]],["bool"]]],[11,"eq","","",47,[[["self"],["windowid"]],["bool"]]],[11,"ne","","",47,[[["self"],["windowid"]],["bool"]]],[11,"eq","","",11,[[["self"],["mousebutton"]],["bool"]]],[11,"ne","","",11,[[["self"],["mousebutton"]],["bool"]]],[11,"eq","","",10,[[["self"],["modifiersstate"]],["bool"]]],[11,"ne","","",10,[[["self"],["modifiersstate"]],["bool"]]],[11,"eq","","",7,[[["self"],["elementstate"]],["bool"]]],[11,"eq","","",16,[[["self"],["virtualkeycode"]],["bool"]]],[11,"eq","glutin::dpi","",6,[[["self"],["physicalsize"]],["bool"]]],[11,"ne","","",6,[[["self"],["physicalsize"]],["bool"]]],[11,"eq","glutin","",14,[[["self"],["touch"]],["bool"]]],[11,"ne","","",14,[[["self"],["touch"]],["bool"]]],[11,"eq","","",12,[[["self"],["mousecursor"]],["bool"]]],[11,"eq","","",13,[[["self"],["mousescrolldelta"]],["bool"]]],[11,"ne","","",13,[[["self"],["mousescrolldelta"]],["bool"]]],[11,"eq","","",2,[[["self"],["deviceevent"]],["bool"]]],[11,"ne","","",2,[[["self"],["deviceevent"]],["bool"]]],[11,"eq","","",42,[[["self"],["eventsloopclosed"]],["bool"]]],[11,"eq","","",15,[[["self"],["touchphase"]],["bool"]]],[11,"eq","glutin::dpi","",5,[[["self"],["logicalsize"]],["bool"]]],[11,"ne","","",5,[[["self"],["logicalsize"]],["bool"]]],[11,"eq","","",3,[[["self"],["logicalposition"]],["bool"]]],[11,"ne","","",3,[[["self"],["logicalposition"]],["bool"]]],[11,"get_nswindow","glutin","",46,N],[11,"get_nsview","","",46,N],[11,"request_user_attention","","",46,N],[11,"set_simple_fullscreen","","",46,[[["self"],["bool"]],["bool"]]],[11,"next","","",39,[[["self"]],["option",["monitorid"]]]],[11,"size_hint","","",39,N],[11,"description","","",42,[[["self"]],["str"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"clone","","",44,[[["self"]],["icon"]]],[11,"clone","glutin::dpi","",3,[[["self"]],["logicalposition"]]],[11,"clone","glutin","",7,[[["self"]],["elementstate"]]],[11,"clone","","",45,[[["self"]],["monitorid"]]],[11,"clone","","",15,[[["self"]],["touchphase"]]],[11,"clone","glutin::dpi","",4,[[["self"]],["physicalposition"]]],[11,"clone","glutin","",18,[[["self"]],["windowbuilder"]]],[11,"clone","","",19,[[["self"]],["windowevent"]]],[11,"clone","","",10,[[["self"]],["modifiersstate"]]],[11,"clone","","",2,[[["self"]],["deviceevent"]]],[11,"clone","","",8,[[["self"]],["event"]]],[11,"clone","","",47,[[["self"]],["windowid"]]],[11,"clone","","",9,[[["self"]],["keyboardinput"]]],[11,"clone","glutin::dpi","",6,[[["self"]],["physicalsize"]]],[11,"clone","glutin","",40,[[["self"]],["deviceid"]]],[11,"clone","","",0,[[["self"]],["controlflow"]]],[11,"clone","","",17,[[["self"]],["windowattributes"]]],[11,"clone","","",43,[[["self"]],["eventsloopproxy"]]],[11,"clone","glutin::os::macos","",31,[[["self"]],["activationpolicy"]]],[11,"clone","glutin","",14,[[["self"]],["touch"]]],[11,"clone","glutin::dpi","",5,[[["self"]],["logicalsize"]]],[11,"clone","glutin","",13,[[["self"]],["mousescrolldelta"]]],[11,"clone","","",1,[[["self"]],["creationerror"]]],[11,"clone","","",42,[[["self"]],["eventsloopclosed"]]],[11,"clone","","",16,[[["self"]],["virtualkeycode"]]],[11,"clone","","",12,[[["self"]],["mousecursor"]]],[11,"clone","","",11,[[["self"]],["mousebutton"]]],[11,"native_id","","",45,[[["self"]],["u32"]]],[11,"get_nsscreen","","",45,[[["self"]],["option"]]],[11,"cmp","","",40,[[["self"],["deviceid"]],["ordering"]]],[11,"cmp","","",47,[[["self"],["windowid"]],["ordering"]]],[11,"cmp","","",16,[[["self"],["virtualkeycode"]],["ordering"]]],[11,"partial_cmp","","",40,[[["self"],["deviceid"]],["option",["ordering"]]]],[11,"lt","","",40,[[["self"],["deviceid"]],["bool"]]],[11,"le","","",40,[[["self"],["deviceid"]],["bool"]]],[11,"gt","","",40,[[["self"],["deviceid"]],["bool"]]],[11,"ge","","",40,[[["self"],["deviceid"]],["bool"]]],[11,"partial_cmp","","",16,[[["self"],["virtualkeycode"]],["option",["ordering"]]]],[11,"partial_cmp","","",47,[[["self"],["windowid"]],["option",["ordering"]]]],[11,"lt","","",47,[[["self"],["windowid"]],["bool"]]],[11,"le","","",47,[[["self"],["windowid"]],["bool"]]],[11,"gt","","",47,[[["self"],["windowid"]],["bool"]]],[11,"ge","","",47,[[["self"],["windowid"]],["bool"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin::dpi","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin::os::macos","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin::dpi","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin::dpi","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"into","glutin::dpi","",5,N],[11,"into","","Note that this rounds instead of truncating.",6,N],[11,"into","","",3,N],[11,"into","","Note that this rounds instead of truncating.",4,N],[11,"into","","Note that this rounds instead of truncating.",5,N],[11,"into","","Note that this rounds instead of truncating.",3,N],[11,"into","","",6,N],[11,"into","","",4,N],[11,"raw_handle","glutin","",38,N],[11,"make_current","","",38,[[["self"]],["result",["contexterror"]]]],[11,"is_current","","",38,[[["self"]],["bool"]]],[11,"get_proc_address","","",38,N],[11,"get_api","","",38,[[["self"]],["api"]]],[11,"make_current","","",37,[[["self"]],["result",["contexterror"]]]],[11,"is_current","","",37,[[["self"]],["bool"]]],[11,"get_proc_address","","",37,N],[11,"get_api","","",37,[[["self"]],["api"]]],[11,"default","","",22,[[],["pixelformatrequirements"]]],[11,"default","","",23,[[],["glattributes"]]],[11,"eq","","",26,[[["self"],["api"]],["bool"]]],[11,"eq","","",27,[[["self"],["glprofile"]],["bool"]]],[11,"eq","","",29,[[["self"],["robustness"]],["bool"]]],[11,"eq","","",30,[[["self"],["releasebehavior"]],["bool"]]],[11,"from","","",24,[[["windowcreationerror"]],["self"]]],[11,"clone","","",26,[[["self"]],["api"]]],[11,"clone","","",27,[[["self"]],["glprofile"]]],[11,"clone","","",28,[[["self"]],["glrequest"]]],[11,"clone","","",29,[[["self"]],["robustness"]]],[11,"clone","","",30,[[["self"]],["releasebehavior"]]],[11,"clone","","",21,[[["self"]],["pixelformat"]]],[11,"clone","","",22,[[["self"]],["pixelformatrequirements"]]],[11,"clone","","",23,[[["self"]],["glattributes"]]],[11,"deref","","",37,N],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"description","","",24,[[["self"]],["str"]]],[11,"cause","","",24,[[["self"]],["option",["error"]]]],[11,"description","","",25,[[["self"]],["str"]]],[11,"dummy","","Returns a dummy `DeviceId`, useful for unit testing. The…",40,[[],["deviceid"]]],[11,"new","glutin::dpi","",3,[[["f64"],["f64"]],["logicalposition"]]],[11,"from_physical","","",3,[[["t"],["f64"]],["logicalposition"]]],[11,"to_physical","","",3,[[["self"],["f64"]],["physicalposition"]]],[11,"new","","",4,[[["f64"],["f64"]],["physicalposition"]]],[11,"from_logical","","",4,[[["t"],["f64"]],["physicalposition"]]],[11,"to_logical","","",4,[[["self"],["f64"]],["logicalposition"]]],[11,"new","","",5,[[["f64"],["f64"]],["logicalsize"]]],[11,"from_physical","","",5,[[["t"],["f64"]],["logicalsize"]]],[11,"to_physical","","",5,[[["self"],["f64"]],["physicalsize"]]],[11,"new","","",6,[[["f64"],["f64"]],["physicalsize"]]],[11,"from_logical","","",6,[[["t"],["f64"]],["physicalsize"]]],[11,"to_logical","","",6,[[["self"],["f64"]],["logicalsize"]]],[11,"new","glutin","Builds a new events loop.",41,[[],["eventsloop"]]],[11,"get_available_monitors","","Returns the list of all the monitors available on the…",41,[[["self"]],["availablemonitorsiter"]]],[11,"get_primary_monitor","","Returns the primary monitor of the system.",41,[[["self"]],["monitorid"]]],[11,"poll_events","","Fetches all the events that are pending, calls the…",41,N],[11,"run_forever","","Calls `callback` every time an event is received. If no…",41,N],[11,"create_proxy","","Creates an `EventsLoopProxy` that can be used to wake up…",41,[[["self"]],["eventsloopproxy"]]],[11,"wakeup","","Wake up the `EventsLoop` from which this proxy was created.",43,[[["self"]],["result",["eventsloopclosed"]]]],[11,"from_rgba","","Creates an `Icon` from 32bpp RGBA data.",44,[[["vec",["u8"]],["u32"],["u32"]],["result",["icon","badicon"]]]],[11,"get_name","","Returns a human-readable name of the monitor.",45,[[["self"]],["option",["string"]]]],[11,"get_dimensions","","Returns the monitor's resolution.",45,[[["self"]],["physicalsize"]]],[11,"get_position","","Returns the top-left corner position of the monitor…",45,[[["self"]],["physicalposition"]]],[11,"get_hidpi_factor","","Returns the DPI factor that can be used to map logical…",45,[[["self"]],["f64"]]],[11,"new","","Creates a new Window for platforms where this is…",46,[[["eventsloop"]],["result",["window","creationerror"]]]],[11,"set_title","","Modifies the title of the window.",46,N],[11,"show","","Shows the window if it was hidden.",46,N],[11,"hide","","Hides the window if it was visible.",46,N],[11,"get_position","","Returns the position of the top-left hand corner of the…",46,[[["self"]],["option",["logicalposition"]]]],[11,"get_inner_position","","Returns the position of the top-left hand corner of the…",46,[[["self"]],["option",["logicalposition"]]]],[11,"set_position","","Modifies the position of the window.",46,N],[11,"get_inner_size","","Returns the logical size of the window's client area.",46,[[["self"]],["option",["logicalsize"]]]],[11,"get_outer_size","","Returns the logical size of the entire window.",46,[[["self"]],["option",["logicalsize"]]]],[11,"set_inner_size","","Modifies the inner size of the window.",46,N],[11,"set_min_dimensions","","Sets a minimum dimension size for the window.",46,N],[11,"set_max_dimensions","","Sets a maximum dimension size for the window.",46,N],[11,"set_resizable","","Sets whether the window is resizable or not.",46,N],[11,"get_hidpi_factor","","Returns the DPI factor that can be used to map logical…",46,[[["self"]],["f64"]]],[11,"set_cursor","","Modifies the mouse cursor of the window. Has no effect on…",46,N],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",46,[[["self"],["logicalposition"]],["result",["string"]]]],[11,"grab_cursor","","Grabs the cursor, preventing it from leaving the window.",46,[[["self"],["bool"]],["result",["string"]]]],[11,"hide_cursor","","Hides the cursor, making it invisible but still usable.",46,N],[11,"set_maximized","","Sets the window to maximized or back",46,N],[11,"set_fullscreen","","Sets the window to fullscreen or back",46,N],[11,"set_decorations","","Turn window decorations on or off.",46,N],[11,"set_always_on_top","","Change whether or not the window will always be on top of…",46,N],[11,"set_window_icon","","Sets the window icon. On Windows and X11, this is…",46,N],[11,"set_ime_spot","","Sets location of IME candidate box in client area…",46,N],[11,"get_current_monitor","","Returns the monitor on which the window currently resides",46,[[["self"]],["monitorid"]]],[11,"get_available_monitors","","Returns the list of all the monitors available on the…",46,[[["self"]],["availablemonitorsiter"]]],[11,"get_primary_monitor","","Returns the primary monitor of the system.",46,[[["self"]],["monitorid"]]],[11,"id","","",46,[[["self"]],["windowid"]]],[11,"new","","Initializes a new `WindowBuilder` with default values.",18,[[],["windowbuilder"]]],[11,"with_dimensions","","Requests the window to be of specific dimensions.",18,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_min_dimensions","","Sets a minimum dimension size for the window",18,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_max_dimensions","","Sets a maximum dimension size for the window",18,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_resizable","","Sets whether the window is resizable or not",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_title","","Requests a specific title for the window.",18,[[["self"],["t"]],["windowbuilder"]]],[11,"with_fullscreen","","Sets the window fullscreen state. None means a normal…",18,[[["self"],["option",["monitorid"]]],["windowbuilder"]]],[11,"with_maximized","","Requests maximized mode.",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_transparency","","Sets whether the background of the window should be…",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_decorations","","Sets whether the window should have a border, a title bar,…",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_always_on_top","","Sets whether or not the window will always be on top of…",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_window_icon","","Sets the window icon. On Windows and X11, this is…",18,[[["self"],["option",["icon"]]],["windowbuilder"]]],[11,"with_multitouch","","Enables multitouch.",18,[[["self"]],["windowbuilder"]]],[11,"build","","Builds the window.",18,[[["self"],["eventsloop"]],["result",["window","creationerror"]]]],[11,"dummy","","Returns a dummy `WindowId`, useful for unit testing. The…",47,[[],["windowid"]]]],"paths":[[4,"ControlFlow"],[4,"WindowCreationError"],[4,"DeviceEvent"],[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[3,"PhysicalSize"],[4,"ElementState"],[4,"Event"],[3,"KeyboardInput"],[3,"ModifiersState"],[4,"MouseButton"],[4,"MouseCursor"],[4,"MouseScrollDelta"],[3,"Touch"],[4,"TouchPhase"],[4,"VirtualKeyCode"],[3,"WindowAttributes"],[3,"WindowBuilder"],[4,"WindowEvent"],[3,"ContextBuilder"],[3,"PixelFormat"],[3,"PixelFormatRequirements"],[3,"GlAttributes"],[4,"CreationError"],[4,"ContextError"],[4,"Api"],[4,"GlProfile"],[4,"GlRequest"],[4,"Robustness"],[4,"ReleaseBehavior"],[4,"ActivationPolicy"],[8,"MonitorIdExt"],[8,"WindowBuilderExt"],[8,"WindowExt"],[8,"GlContextExt"],[8,"GlContext"],[3,"GlWindow"],[3,"Context"],[3,"AvailableMonitorsIter"],[3,"DeviceId"],[3,"EventsLoop"],[3,"EventsLoopClosed"],[3,"EventsLoopProxy"],[3,"Icon"],[3,"MonitorId"],[3,"Window"],[3,"WindowId"]]};
searchIndex["image"]={"doc":"This crate provides native rust implementations of image…","items":[[3,"Luma","image","Grayscale colors",N,N],[12,"data","","",0,N],[3,"LumaA","","Grayscale colors + alpha channel",N,N],[12,"data","","",1,N],[3,"Rgb","","RGB colors",N,N],[12,"data","","",2,N],[3,"Rgba","","RGB colors + alpha channel",N,N],[12,"data","","",3,N],[3,"Bgr","","BGR colors",N,N],[12,"data","","",4,N],[3,"Bgra","","BGR colors + alpha channel",N,N],[12,"data","","",5,N],[3,"MutPixels","","Mutable pixel iterator",N,N],[3,"Pixels","","Immutable pixel iterator",N,N],[3,"SubImage","","A View into another image",N,N],[3,"ImageBuffer","","Generic image buffer",N,N],[3,"Frame","","A single animation frame",N,N],[3,"Frames","","An implementation dependent iterator, reading the frames…",N,N],[4,"ColorType","","An enumeration over supported color types and their bit…",N,N],[13,"Gray","","Pixel is grayscale",6,N],[13,"RGB","","Pixel contains R, G and B channels",6,N],[13,"Palette","","Pixel is an index into a color palette",6,N],[13,"GrayA","","Pixel is grayscale with an alpha channel",6,N],[13,"RGBA","","Pixel is RGB with an alpha channel",6,N],[13,"BGR","","Pixel contains B, G and R channels",6,N],[13,"BGRA","","Pixel is BGR with an alpha channel",6,N],[4,"ImageError","","An enumeration of Image errors",N,N],[13,"FormatError","","The Image is not formatted properly",7,N],[13,"DimensionError","","The Image's dimensions are either too small or too large",7,N],[13,"UnsupportedError","","The Decoder does not support this image format",7,N],[13,"UnsupportedColor","","The Decoder does not support this color type",7,N],[13,"NotEnoughData","","Not enough data was provided to the Decoder to decode the…",7,N],[13,"IoError","","An I/O Error occurred while decoding the image",7,N],[13,"ImageEnd","","The end of the image has been reached",7,N],[13,"InsufficientMemory","","There is not enough memory to complete the given operation",7,N],[4,"FilterType","","Available Sampling Filters",N,N],[13,"Nearest","","Nearest Neighbor",8,N],[13,"Triangle","","Linear Filter",8,N],[13,"CatmullRom","","Cubic Filter",8,N],[13,"Gaussian","","Gaussian Filter",8,N],[13,"Lanczos3","","Lanczos with window 3",8,N],[4,"ImageFormat","","An enumeration of supported image formats. Not all formats…",N,N],[13,"PNG","","An Image in PNG Format",9,N],[13,"JPEG","","An Image in JPEG Format",9,N],[13,"GIF","","An Image in GIF Format",9,N],[13,"WEBP","","An Image in WEBP Format",9,N],[13,"PNM","","An Image in general PNM Format",9,N],[13,"TIFF","","An Image in TIFF Format",9,N],[13,"TGA","","An Image in TGA Format",9,N],[13,"BMP","","An Image in BMP Format",9,N],[13,"ICO","","An Image in ICO Format",9,N],[13,"HDR","","An Image in Radiance HDR Format",9,N],[4,"ImageOutputFormat","","An enumeration of supported image formats for encoding.",N,N],[13,"PNG","","An Image in PNG Format",10,N],[13,"JPEG","","An Image in JPEG Format with specified quality",10,N],[13,"PNM","","An Image in one of the PNM Formats",10,N],[13,"GIF","","An Image in GIF Format",10,N],[13,"ICO","","An Image in ICO Format",10,N],[13,"BMP","","An Image in BMP Format",10,N],[13,"Unsupported","","A value for signalling an error: An unsupported format was…",10,N],[4,"DynamicImage","","A Dynamic Image",N,N],[13,"ImageLuma8","","Each pixel in this image is 8-bit Luma",11,N],[13,"ImageLumaA8","","Each pixel in this image is 8-bit Luma with alpha",11,N],[13,"ImageRgb8","","Each pixel in this image is 8-bit Rgb",11,N],[13,"ImageRgba8","","Each pixel in this image is 8-bit Rgb with alpha",11,N],[13,"ImageBgr8","","Each pixel in this image is 8-bit Bgr",11,N],[13,"ImageBgra8","","Each pixel in this image is 8-bit Bgr with alpha",11,N],[5,"Luma","","",N,N],[5,"LumaA","","",N,N],[5,"Rgb","","",N,N],[5,"Rgba","","",N,N],[5,"Bgr","","",N,N],[5,"Bgra","","",N,N],[5,"guess_format","","Guess image format from memory block",N,N],[5,"load","","Create a new image from a Reader",N,[[["r"],["imageformat"]],["imageresult",["dynamicimage"]]]],[5,"load_from_memory","","Create a new image from a byte slice",N,N],[5,"load_from_memory_with_format","","Create a new image from a byte slice",N,N],[5,"open","","Open the image located at the path specified. The image's…",N,[[["p"]],["imageresult",["dynamicimage"]]]],[5,"save_buffer","","Saves the supplied buffer to a file at the path specified.",N,N],[0,"math","","Mathematical helper functions and types.",N,N],[0,"nq","image::math","NEUQUANT Neural-Net quantization algorithm by Anthony…",N,N],[3,"NeuQuant","image::math::nq","Neural network color quantizer",N,N],[11,"new","","Creates a new neural network and trains it with the…",12,N],[11,"init","","Initializes the neural network and trains it with the…",12,N],[11,"map_pixel","","Maps the pixel in-place to the best-matching color in the…",12,N],[11,"index_of","","Finds the best-matching index in the color map for `pixel`",12,N],[0,"utils","image::math","Shared mathematical utility functions.",N,N],[5,"clamp","image::math::utils","Cut value to be inside given range",N,[[["n"],["n"],["n"]],["n"]]],[0,"imageops","image","Image Processing Functions",N,N],[4,"FilterType","image::imageops","Available Sampling Filters",N,N],[13,"Nearest","","Nearest Neighbor",8,N],[13,"Triangle","","Linear Filter",8,N],[13,"CatmullRom","","Cubic Filter",8,N],[13,"Gaussian","","Gaussian Filter",8,N],[13,"Lanczos3","","Lanczos with window 3",8,N],[5,"flip_horizontal","","Flip an image horizontally",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"flip_vertical","","Flip an image vertically",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"rotate180","","Rotate an image 180 degrees clockwise.",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"rotate270","","Rotate an image 270 degrees clockwise.",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"rotate90","","Rotate an image 90 degrees clockwise.",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"blur","","Performs a Gaussian blur on the supplied image. `sigma` is…",N,[[["i"],["f32"]],["imagebuffer",["vec"]]]],[5,"filter3x3","","Perform a 3x3 box filter on the supplied image. `kernel`…",N,N],[5,"resize","","Resize the supplied image to the specified dimensions.…",N,[[["i"],["u32"],["u32"],["filtertype"]],["imagebuffer",["vec"]]]],[5,"thumbnail","","Resize the supplied image to the specific dimensions.",N,[[["i"],["u32"],["u32"]],["imagebuffer",["vec"]]]],[5,"unsharpen","","Performs an unsharpen mask on the supplied image. `sigma`…",N,[[["i"],["f32"],["i32"]],["imagebuffer",["vec"]]]],[5,"crop","","Return a mutable view into an image",N,[[["i"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[5,"overlay_bounds","","Calculate the region that can be copied from top to bottom.",N,N],[5,"overlay","","Overlay an image at a given coordinate (x, y)",N,[[["i"],["i"],["u32"],["u32"]]]],[5,"replace","","Replace the contents of an image at a given coordinate (x,…",N,[[["i"],["i"],["u32"],["u32"]]]],[0,"colorops","","Functions for altering and converting the color of pixelbufs",N,N],[3,"BiLevel","image::imageops::colorops","A bi-level color map",N,N],[5,"grayscale","","Convert the supplied image to grayscale",N,[[["i"]],["imagebuffer",["luma","vec"]]]],[5,"invert","","Invert each pixel within the supplied image. This function…",N,[[["i"]]]],[5,"contrast","","Adjust the contrast of the supplied image. `contrast` is…",N,[[["i"],["f32"]],["imagebuffer",["vec"]]]],[5,"brighten","","Brighten the supplied image. `value` is the amount to…",N,[[["i"],["i32"]],["imagebuffer",["vec"]]]],[5,"huerotate","","Hue rotate the supplied image. `value` is the degrees to…",N,[[["i"],["i32"]],["imagebuffer",["vec"]]]],[5,"dither","","Reduces the colors of the image using the supplied…",N,[[["imagebuffer"],["map"]]]],[5,"index_colors","","Reduces the colors using the supplied `color_map` and…",N,[[["imagebuffer"],["map"]],["imagebuffer",["luma","vec"]]]],[8,"ColorMap","","A color map",N,N],[16,"Color","","The color type on which the map operates on",13,N],[10,"index_of","","Returns the index of the closed match of `color` in the…",13,N],[10,"map_color","","Maps `color` to the closest color in the color map.",13,N],[0,"flat","image","Image representations for ffi.",N,N],[3,"FlatSamples","image::flat","A flat buffer over a (multi channel) image.",N,N],[12,"samples","","Underlying linear container holding sample values.",14,N],[12,"layout","","A `repr(C)` description of the layout of buffer samples.",14,N],[12,"color_hint","","Supplementary color information.",14,N],[3,"SampleLayout","","A ffi compatible description of a sample buffer.",N,N],[12,"channels","","The number of channels in the color representation of the…",15,N],[12,"channel_stride","","Add this to an index to get to the sample in the next…",15,N],[12,"width","","The width of the represented image.",15,N],[12,"width_stride","","Add this to an index to get to the next sample in…",15,N],[12,"height","","The height of the represented image.",15,N],[12,"height_stride","","Add this to an index to get to the next sample in…",15,N],[3,"View","","A flat buffer that can be used as an image view.",N,N],[3,"ViewMut","","A mutable owning version of a flat buffer.",N,N],[4,"Error","","Denotes invalid flat sample buffers when trying to convert…",N,N],[13,"TooLarge","","The represented image was too large.",16,N],[13,"NormalFormRequired","","The represented image can not use this representation.",16,N],[13,"WrongColor","","The color format did not match the channel count.",16,N],[4,"NormalForm","","Different normal forms of buffers.",N,N],[13,"Unaliased","","No pixel aliases another.",17,N],[13,"PixelPacked","","At least pixels are packed.",17,N],[13,"ImagePacked","","All samples are packed.",17,N],[13,"RowMajorPacked","","The samples are in row-major form and all samples are…",17,N],[13,"ColumnMajorPacked","","The samples are in column-major form and all samples are…",17,N],[11,"row_major_packed","","Describe a row-major image packed in all directions.",15,[[["u8"],["u32"],["u32"]],["self"]]],[11,"column_major_packed","","Describe a column-major image packed in all directions.",15,[[["u8"],["u32"],["u32"]],["self"]]],[11,"strides_cwh","","Get the strides for indexing matrix-like `[(c, w, h)]`.",15,N],[11,"extents","","Get the dimensions `(channels, width, height)`.",15,N],[11,"bounds","","Tuple of bounds in the order of coordinate inputs.",15,N],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",15,[[["self"]],["option",["usize"]]]],[11,"fits","","Check if a buffer of length `len` is large enough.",15,[[["self"],["usize"]],["bool"]]],[11,"has_aliased_samples","","If there are any samples aliasing each other.",15,[[["self"]],["bool"]]],[11,"is_normal","","Check if a buffer fulfills the requirements of a normal…",15,[[["self"],["normalform"]],["bool"]]],[11,"in_bounds","","Check that the pixel and the channel index are in bounds.",15,[[["self"],["u8"],["u32"],["u32"]],["bool"]]],[11,"index","","Resolve the index of a particular sample.",15,[[["self"],["u8"],["u32"],["u32"]],["option",["usize"]]]],[11,"index_ignoring_bounds","","Get the theoretical position of sample (channel, x, y).",15,[[["self"],["usize"],["usize"],["usize"]],["option",["usize"]]]],[11,"in_bounds_index","","Get an index provided it is inbouds.",15,[[["self"],["u8"],["u32"],["u32"]],["usize"]]],[11,"shrink_to","","Shrink the image to the minimum of current and given…",15,[[["self"],["u8"],["u32"],["u32"]]]],[11,"strides_cwh","","Get the strides for indexing matrix-like `[(c, w, h)]`.",14,N],[11,"extents","","Get the dimensions `(channels, width, height)`.",14,N],[11,"bounds","","Tuple of bounds in the order of coordinate inputs.",14,N],[11,"as_ref","","Get a reference based version.",14,[[["self"]],["flatsamples"]]],[11,"as_mut","","Get a mutable reference based version.",14,[[["self"]],["flatsamples"]]],[11,"to_vec","","Copy the data into an owned vector.",14,[[["self"]],["flatsamples",["vec"]]]],[11,"get_sample","","Get a reference to a single sample.",14,[[["self"],["u8"],["u32"],["u32"]],["option"]]],[11,"get_mut_sample","","Get a mutable reference to a single sample.",14,[[["self"],["u8"],["u32"],["u32"]],["option"]]],[11,"as_view","","View this buffer as an image over some type of pixel.",14,[[["self"]],["result",["view","error"]]]],[11,"as_view_with_mut_samples","","View this buffer but keep mutability at a sample level.",14,[[["self"]],["result",["view","error"]]]],[11,"as_view_mut","","Interpret this buffer as a mutable image.",14,[[["self"]],["result",["viewmut","error"]]]],[11,"as_slice","","View the samples as a slice.",14,N],[11,"as_mut_slice","","View the samples as a slice.",14,N],[11,"image_slice","","Return the portion of the buffer that holds sample values.",14,[[["self"]],["option"]]],[11,"image_mut_slice","","Mutable portion of the buffer that holds sample values.",14,[[["self"]],["option"]]],[11,"try_into_buffer","","Move the data into an image buffer.",14,[[["self"]],["result",["imagebuffer"]]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",14,[[["self"]],["option",["usize"]]]],[11,"fits","","Check if a buffer of length `len` is large enough.",14,[[["self"],["usize"]],["bool"]]],[11,"has_aliased_samples","","If there are any samples aliasing each other.",14,[[["self"]],["bool"]]],[11,"is_normal","","Check if a buffer fulfills the requirements of a normal…",14,[[["self"],["normalform"]],["bool"]]],[11,"in_bounds","","Check that the pixel and the channel index are in bounds.",14,[[["self"],["u8"],["u32"],["u32"]],["bool"]]],[11,"index","","Resolve the index of a particular sample.",14,[[["self"],["u8"],["u32"],["u32"]],["option",["usize"]]]],[11,"index_ignoring_bounds","","Get the theoretical position of sample (x, y, channel).",14,[[["self"],["usize"],["usize"],["usize"]],["option",["usize"]]]],[11,"in_bounds_index","","Get an index provided it is inbouds.",14,[[["self"],["u8"],["u32"],["u32"]],["usize"]]],[11,"shrink_to","","Shrink the image to the minimum of current and given…",14,[[["self"],["u8"],["u32"],["u32"]]]],[11,"into_inner","","Take out the sample buffer.",18,[[["self"]],["flatsamples"]]],[11,"flat","","Get a reference on the inner sample descriptor.",18,[[["self"]],["flatsamples"]]],[11,"samples","","Get a reference on the inner buffer.",18,[[["self"]],["buffer"]]],[11,"get_sample","","Get a reference to a selected subpixel if it is in-bounds.",18,[[["self"],["u8"],["u32"],["u32"]],["option"]]],[11,"get_mut_sample","","Get a mutable reference to a selected subpixel if it is…",18,[[["self"],["u8"],["u32"],["u32"]],["option"]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",18,[[["self"]],["usize"]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",18,N],[11,"image_mut_slice","","Return the mutable portion of the buffer that holds sample…",18,N],[11,"shrink_to","","Shrink the inner image.",18,[[["self"],["u32"],["u32"]]]],[11,"try_upgrade","","Try to convert this into an image with mutable pixels.",18,[[["self"]],["result",["viewmut"]]]],[11,"into_inner","","Take out the sample buffer.",19,[[["self"]],["flatsamples"]]],[11,"flat","","Get a reference on the sample buffer descriptor.",19,[[["self"]],["flatsamples"]]],[11,"samples","","Get a reference on the inner buffer.",19,[[["self"]],["buffer"]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",19,[[["self"]],["usize"]]],[11,"get_sample","","Get a reference to a selected subpixel.",19,[[["self"],["u8"],["u32"],["u32"]],["option"]]],[11,"get_mut_sample","","Get a mutable reference to a selected sample.",19,[[["self"],["u8"],["u32"],["u32"]],["option"]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",19,N],[11,"image_mut_slice","","Return the mutable buffer that holds sample values.",19,N],[11,"shrink_to","","Shrink the inner image.",19,[[["self"],["u32"],["u32"]]]],[0,"bmp","image","Decoding and Encoding of BMP Images",N,N],[3,"BMPDecoder","image::bmp","A bmp decoder",N,N],[3,"BMPEncoder","","The representation of a BMP encoder.",N,N],[11,"new","","Create a new decoder that decodes from the stream `r`",20,[[["r"]],["imageresult",["bmpdecoder"]]]],[11,"new","","Create a new encoder that writes its output to `w`.",21,[[["w"]],["self"]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and…",21,N],[0,"dxt","image","Decoding of DXT (S3TC) compression",N,N],[3,"DXTDecoder","image::dxt","DXT decoder",N,N],[3,"DXTReader","","DXT reader",N,N],[3,"DXTEncoder","","DXT encoder",N,N],[4,"DXTVariant","","What version of DXT compression are we using? Note that…",N,N],[13,"DXT1","","The DXT1 format. 48 bytes of RGB data in a 4x4 pixel…",22,N],[13,"DXT3","","The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel…",22,N],[13,"DXT5","","The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel…",22,N],[11,"colortype","","Returns the colortype that is stored in this DXT variant",22,[[["self"]],["colortype"]]],[11,"new","","Create a new DXT decoder that decodes from the stream `r`.…",23,[[["r"],["u32"],["u32"],["dxtvariant"]],["result",["dxtdecoder","imageerror"]]]],[11,"new","","Create a new encoder that writes its output to `w`",24,[[["w"]],["dxtencoder"]]],[11,"encode","","Encodes the image data `data` that has dimensions `width`…",24,N],[0,"gif","image","Decoding of GIF Images",N,N],[4,"DisposalMethod","image::gif","Disposal method",N,N],[13,"Any","","StreamingDecoder is not required to take any action.",25,N],[13,"Keep","","Do not dispose.",25,N],[13,"Background","","Restore to background color.",25,N],[13,"Previous","","Restore to previous.",25,N],[3,"Frame","","A GIF frame",N,N],[12,"delay","","Frame delay in units of 10 ms.",26,N],[12,"dispose","","Disposal method.",26,N],[12,"transparent","","Transparent index (if available).",26,N],[12,"needs_user_input","","True if the frame needs user input to be displayed.",26,N],[12,"top","","Offset from the top border of the canvas.",26,N],[12,"left","","Offset from the left border of the canvas.",26,N],[12,"width","","Width of the frame.",26,N],[12,"height","","Height of the frame.",26,N],[12,"interlaced","","True if the image is interlaced.",26,N],[12,"palette","","Frame local color palette if available.",26,N],[12,"buffer","","Buffer containing the image data. Only indices unless…",26,N],[3,"Decoder","","GIF decoder",N,N],[3,"Encoder","","GIF encoder.",N,N],[11,"new","","Creates a new decoder that decodes the input steam `r`",27,[[["r"]],["imageresult",["decoder"]]]],[11,"new","","Creates a new GIF encoder.",28,[[["w"]],["encoder"]]],[11,"encode","","Encodes a frame.",28,[[["self"],["frame"]],["imageresult"]]],[11,"encode_frames","","Encodes Frames. Consider using `try_encode_frames` instead…",28,[[["self"],["f"]],["imageresult"]]],[11,"try_encode_frames","","Try to encode a collection of…",28,[[["self"],["f"]],["imageresult"]]],[0,"hdr","image","Decoding of Radiance HDR Images",N,N],[3,"HDRAdapter","image::hdr","Adapter to conform to `ImageDecoder` trait",N,N],[3,"HDRDecoder","","An Radiance HDR decoder",N,N],[3,"RGBE8Pixel","","Refer to wikipedia",N,N],[12,"c","","Color components",29,N],[12,"e","","Exponent",29,N],[3,"HDRImageDecoderIterator","","Scanline buffered pixel by pixel iterator",N,N],[3,"HDRMetadata","","Metadata for Radiance HDR image",N,N],[12,"width","","Width of decoded image. It could be either scanline…",30,N],[12,"height","","Height of decoded image. It depends on orientation too.",30,N],[12,"orientation","","Orientation matrix. For standard orientation it is…",30,N],[12,"exposure","","Divide color values by exposure to get to get physical…",30,N],[12,"color_correction","","Divide color values by corresponding tuple member (r, g,…",30,N],[12,"pixel_aspect_ratio","","Pixel height divided by pixel width",30,N],[12,"custom_attributes","","All lines contained in image header are put here. Ordering…",30,N],[3,"HDREncoder","","Radiance HDR encoder",N,N],[5,"rgbe8","","Creates `RGBE8Pixel` from components",N,[[["u8"],["u8"],["u8"],["u8"]],["rgbe8pixel"]]],[5,"read_raw_file","","Helper function for reading raw 3-channel f32 images",N,[[["p"]],["result",["vec"]]]],[5,"to_rgbe8","","Converts `Rgb<f32>` into `RGBE8Pixel`",N,[[["rgb",["f32"]]],["rgbe8pixel"]]],[11,"new","","Creates adapter",31,[[["r"]],["imageresult",["hdradapter"]]]],[11,"new_nonstrict","","Allows reading old Radiance HDR images",31,[[["r"]],["imageresult",["hdradapter"]]]],[11,"to_hdr","","Converts `RGBE8Pixel` into `Rgb<f32>` linearly",29,[[["self"]],["rgb",["f32"]]]],[11,"to_ldr","","Converts `RGBE8Pixel` into `Rgb<T>` with scale=1 and…",29,[[["self"]],["rgb"]]],[11,"to_ldr_scale_gamma","","Converts RGBE8Pixel into Rgb using provided scale and gamma",29,[[["self"],["f32"],["f32"]],["rgb"]]],[11,"new","","Reads Radiance HDR image header from stream `r` if the…",32,[[["r"]],["imageresult",["hdrdecoder"]]]],[11,"with_strictness","","Reads Radiance HDR image header from stream `reader`, if…",32,[[["r"],["bool"]],["imageresult",["hdrdecoder"]]]],[11,"metadata","","Returns file metadata. Refer to `HDRMetadata` for details.",32,[[["self"]],["hdrmetadata"]]],[11,"read_image_native","","Consumes decoder and returns a vector of RGBE8 pixels",32,[[["self"]],["imageresult",["vec"]]]],[11,"read_image_transform","","Consumes decoder and returns a vector of transformed pixels",32,[[["self"],["f"]],["imageresult",["vec"]]]],[11,"read_image_ldr","","Consumes decoder and returns a vector of Rgb pixels. scale…",32,[[["self"]],["imageresult",["vec"]]]],[11,"read_image_hdr","","Consumes decoder and returns a vector of Rgb pixels.",32,[[["self"]],["imageresult",["vec"]]]],[11,"new","","Creates encoder",33,[[["w"]],["hdrencoder"]]],[11,"encode","","Encodes the image `data` that has dimensions `width` and…",33,N],[17,"SIGNATURE","","Radiance HDR file signature",N,N],[0,"ico","image","Decoding and Encoding of ICO files",N,N],[3,"ICODecoder","image::ico","An ico decoder",N,N],[3,"ICOEncoder","","ICO encoder",N,N],[11,"new","","Create a new decoder that decodes from the stream `r`",34,[[["r"]],["imageresult",["icodecoder"]]]],[11,"new","","Create a new encoder that writes its output to `w`.",35,[[["w"]],["icoencoder"]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and…",35,N],[0,"jpeg","image","Decoding and Encoding of JPEG Images",N,N],[3,"JPEGDecoder","image::jpeg","JPEG decoder",N,N],[3,"JPEGEncoder","","The representation of a JPEG encoder",N,N],[11,"new","","Create a new decoder that decodes from the stream `r`",36,[[["r"]],["imageresult",["jpegdecoder"]]]],[11,"new","","Create a new encoder that writes its output to `w`",37,[[["w"]],["jpegencoder"]]],[11,"new_with_quality","","Create a new encoder that writes its output to `w`, and…",37,[[["w"],["u8"]],["jpegencoder"]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and…",37,N],[0,"png","image","Decoding and Encoding of PNG Images",N,N],[3,"PNGDecoder","image::png","PNG decoder",N,N],[3,"PNGEncoder","","PNG encoder",N,N],[11,"new","","Creates a new decoder that decodes from the stream `r`",38,[[["r"]],["imageresult",["pngdecoder"]]]],[11,"new","","Create a new encoder that writes its output to `w`",39,[[["w"]],["pngencoder"]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and…",39,N],[0,"pnm","image","Decoding of netpbm image formats (pbm, pgm, ppm and pam).",N,N],[3,"PNMDecoder","image::pnm","PNM decoder",N,N],[3,"PNMEncoder","","Encodes images to any of the `pnm` image formats.",N,N],[3,"ArbitraryHeader","","Header produced by a `pam` file (\"Portable Arbitrary Map\")",N,N],[12,"height","","Height of the image file",40,N],[12,"width","","Width of the image file",40,N],[12,"depth","","Number of color channels",40,N],[12,"maxval","","Maximum sample value within the image",40,N],[12,"tupltype","","Color interpretation of image pixels",40,N],[3,"BitmapHeader","","Header produced by a `pbm` file (\"Portable Bit Map\")",N,N],[12,"encoding","","Binary or Ascii encoded file",41,N],[12,"height","","Height of the image file",41,N],[12,"width","","Width of the image file",41,N],[3,"GraymapHeader","","Header produced by a `pgm` file (\"Portable Gray Map\")",N,N],[12,"encoding","","Binary or Ascii encoded file",42,N],[12,"height","","Height of the image file",42,N],[12,"width","","Width of the image file",42,N],[12,"maxwhite","","Maximum sample value within the image",42,N],[3,"PixmapHeader","","Header produced by a `ppm` file (\"Portable Pixel Map\")",N,N],[12,"encoding","","Binary or Ascii encoded file",43,N],[12,"height","","Height of the image file",43,N],[12,"width","","Width of the image file",43,N],[12,"maxval","","Maximum sample value within the image",43,N],[3,"PNMHeader","","Stores the complete header data of a file.",N,N],[4,"ArbitraryTuplType","","Standardized tuple type specifiers in the header of a `pam`.",N,N],[13,"BlackAndWhite","","Pixels are either black (0) or white (1)",44,N],[13,"BlackAndWhiteAlpha","","Pixels are either black (0) or white (1) and a second…",44,N],[13,"Grayscale","","Pixels represent the amount of white",44,N],[13,"GrayscaleAlpha","","Grayscale with an additional alpha channel",44,N],[13,"RGB","","Three channels: Red, Green, Blue",44,N],[13,"RGBAlpha","","Four channels: Red, Green, Blue, Alpha",44,N],[13,"Custom","","An image format which is not standardized",44,N],[4,"PNMSubtype","","Denotes the category of the magic number",N,N],[13,"Bitmap","","Magic numbers P1 and P4",45,N],[13,"Graymap","","Magic numbers P2 and P5",45,N],[13,"Pixmap","","Magic numbers P3 and P6",45,N],[13,"ArbitraryMap","","Magic number P7",45,N],[4,"SampleEncoding","","The kind of encoding used to store sample values",N,N],[13,"Binary","","Samples are unsigned binary integers in big endian",46,N],[13,"Ascii","","Samples are encoded as decimal ascii strings separated by…",46,N],[11,"new","","Create a new decoder that decodes from the stream `read`",47,[[["r"]],["imageresult",["pnmdecoder"]]]],[11,"into_inner","","Extract the reader and header after an image has been read.",47,N],[11,"subtype","","Get the pnm subtype, depending on the magic constant…",47,[[["self"]],["pnmsubtype"]]],[11,"new","","Create new PNMEncoder from the `writer`.",48,[[["w"]],["self"]]],[11,"with_subtype","","Encode a specific pnm subtype image.",48,[[["self"],["pnmsubtype"]],["self"]]],[11,"with_header","","Enforce the use of a chosen header.",48,[[["self"],["pnmheader"]],["self"]]],[11,"with_dynamic_header","","Create the header dynamically for each image.",48,[[["self"]],["self"]]],[11,"encode","","Encode an image whose samples are represented as `u8`.",48,[[["self"],["s"],["u32"],["u32"],["colortype"]],["result"]]],[11,"magic_constant","","Get the two magic constant bytes corresponding to this…",45,N],[11,"sample_encoding","","Whether samples are stored as binary or as decimal ascii",45,[[["self"]],["sampleencoding"]]],[11,"subtype","","Retrieve the format subtype from which the header was…",49,[[["self"]],["pnmsubtype"]]],[11,"width","","The width of the image this header is for.",49,[[["self"]],["u32"]]],[11,"height","","The height of the image this header is for.",49,[[["self"]],["u32"]]],[11,"maximal_sample","","The biggest value a sample can have. In other words, the…",49,[[["self"]],["u32"]]],[11,"as_bitmap","","Retrieve the underlying bitmap header if any",49,[[["self"]],["option",["bitmapheader"]]]],[11,"as_graymap","","Retrieve the underlying graymap header if any",49,[[["self"]],["option",["graymapheader"]]]],[11,"as_pixmap","","Retrieve the underlying pixmap header if any",49,[[["self"]],["option",["pixmapheader"]]]],[11,"as_arbitrary","","Retrieve the underlying arbitrary header if any",49,[[["self"]],["option",["arbitraryheader"]]]],[11,"write","","Write the header back into a binary stream",49,[[["self"],["write"]],["result"]]],[0,"tga","image","Decoding of TGA Images",N,N],[3,"TGADecoder","image::tga","The representation of a TGA decoder",N,N],[11,"new","","Create a new decoder that decodes from the stream `r`",50,[[["r"]],["imageresult",["tgadecoder"]]]],[0,"tiff","image","Decoding and Encoding of TIFF Images",N,N],[3,"TIFFDecoder","image::tiff","Decoder for TIFF images.",N,N],[11,"new","","Create a new TIFFDecoder.",51,[[["r"]],["result",["tiffdecoder","imageerror"]]]],[0,"webp","image","Decoding of Webp Images",N,N],[3,"WebpDecoder","image::webp","Webp Image format decoder. Currently only supportes the…",N,N],[11,"new","","Create a new WebpDecoder from the Reader `r`. This…",52,[[["r"]],["imageresult",["webpdecoder"]]]],[0,"vp8","","An implementation of the VP8 Video Codec",N,N],[3,"Frame","image::webp::vp8","A Representation of the last decoded video frame",N,N],[12,"width","","The width of the luma plane",53,N],[12,"height","","The height of the luma plane",53,N],[12,"ybuf","","The luma plane of the frame",53,N],[12,"keyframe","","Indicates whether this frame is a keyframe",53,N],[12,"for_display","","Indicates whether this frame is intended for display",53,N],[12,"pixel_type","","The pixel type of the frame as defined by Section 9.2 of…",53,N],[3,"VP8Decoder","","VP8 Decoder",N,N],[11,"new","","Create a new decoder. The reader must present a raw vp8…",54,[[["r"]],["vp8decoder"]]],[11,"decode_frame","","Decodes the current frame and returns a reference to it",54,[[["self"]],["result",["frame"]]]],[11,"new","image","Creates a new `Frames` from an implementation specific…",55,[[["box",["iterator"]]],["self"]]],[11,"collect_frames","","Steps through the iterator from the current frame until…",55,[[["self"]],["imageresult",["vec"]]]],[11,"new","","Contructs a new frame",56,[[["rgbaimage"]],["frame"]]],[11,"from_parts","","Contructs a new frame",56,[[["rgbaimage"],["u32"],["u32"],["ratio",["u16"]]],["frame"]]],[11,"delay","","Delay of this frame",56,[[["self"]],["ratio",["u16"]]]],[11,"buffer","","Returns the image buffer",56,[[["self"]],["rgbaimage"]]],[11,"into_buffer","","Returns the image buffer",56,[[["self"]],["rgbaimage"]]],[11,"left","","Returns the x offset",56,[[["self"]],["u32"]]],[11,"top","","Returns the y offset",56,[[["self"]],["u32"]]],[11,"from_raw","","Contructs a buffer from a generic container (for example a…",57,[[["u32"],["u32"],["container"]],["option",["imagebuffer"]]]],[11,"into_raw","","Returns the underlying raw buffer",57,[[["self"]],["container"]]],[11,"dimensions","","The width and height of this image.",57,N],[11,"width","","The width of this image.",57,[[["self"]],["u32"]]],[11,"height","","The height of this image.",57,[[["self"]],["u32"]]],[11,"pixels","","Returns an iterator over the pixels of this image.",57,[[["self"]],["pixels"]]],[11,"enumerate_pixels","","Enumerates over the pixels of the image. The iterator…",57,[[["self"]],["enumeratepixels"]]],[11,"get_pixel","","Gets a reference to the pixel at location `(x, y)`",57,[[["self"],["u32"],["u32"]],["p"]]],[11,"sample_layout","","Get the format of the buffer when viewed as a matrix of…",57,[[["self"]],["samplelayout"]]],[11,"into_flat_samples","","Return the raw sample buffer with its stride an dimension…",57,[[["self"]],["flatsamples"]]],[11,"as_flat_samples","","Return a view on the raw sample buffer.",57,[[["self"]],["flatsamples"]]],[11,"pixels_mut","","Returns an iterator over the mutable pixels of this image.",57,[[["self"]],["pixelsmut"]]],[11,"enumerate_pixels_mut","","Enumerates over the pixels of the image. The iterator…",57,[[["self"]],["enumeratepixelsmut"]]],[11,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",57,[[["self"],["u32"],["u32"]],["p"]]],[11,"put_pixel","","Puts a pixel at location `(x, y)`",57,[[["self"],["u32"],["u32"],["p"]]]],[11,"save","","Saves the buffer to a file at the path specified.",57,[[["self"],["q"]],["result"]]],[11,"new","","Creates a new image buffer based on a `Vec<P::Subpixel>`.",57,[[["u32"],["u32"]],["imagebuffer",["vec"]]]],[11,"from_pixel","","Constructs a new ImageBuffer by copying a pixel",57,[[["u32"],["u32"],["p"]],["imagebuffer",["vec"]]]],[11,"from_fn","","Constructs a new ImageBuffer by repeated application of…",57,[[["u32"],["u32"],["f"]],["imagebuffer",["vec"]]]],[11,"from_vec","","Creates an image buffer out of an existing buffer. Returns…",57,[[["u32"],["u32"],["vec"]],["option",["imagebuffer"]]]],[11,"into_vec","","Consumes the image buffer and returns the underlying data…",57,[[["self"]],["vec"]]],[11,"new_luma8","","Creates a dynamic image backed by a buffer of grey pixels.",11,[[["u32"],["u32"]],["dynamicimage"]]],[11,"new_luma_a8","","Creates a dynamic image backed by a buffer of grey pixels…",11,[[["u32"],["u32"]],["dynamicimage"]]],[11,"new_rgb8","","Creates a dynamic image backed by a buffer of RGB pixels.",11,[[["u32"],["u32"]],["dynamicimage"]]],[11,"new_rgba8","","Creates a dynamic image backed by a buffer of RGBA pixels.",11,[[["u32"],["u32"]],["dynamicimage"]]],[11,"new_bgra8","","Creates a dynamic image backed by a buffer of BGRA pixels.",11,[[["u32"],["u32"]],["dynamicimage"]]],[11,"new_bgr8","","Creates a dynamic image backed by a buffer of BGR pixels.",11,[[["u32"],["u32"]],["dynamicimage"]]],[11,"to_rgb","","Returns a copy of this image as an RGB image.",11,[[["self"]],["rgbimage"]]],[11,"to_rgba","","Returns a copy of this image as an RGBA image.",11,[[["self"]],["rgbaimage"]]],[11,"to_bgr","","Returns a copy of this image as an BGR image.",11,[[["self"]],["imagebuffer",["bgr","vec"]]]],[11,"to_bgra","","Returns a copy of this image as an BGRA image.",11,[[["self"]],["imagebuffer",["bgra","vec"]]]],[11,"to_luma","","Returns a copy of this image as a Luma image.",11,[[["self"]],["grayimage"]]],[11,"to_luma_alpha","","Returns a copy of this image as a LumaA image.",11,[[["self"]],["grayalphaimage"]]],[11,"crop","","Return a cut out of this image delimited by the bounding…",11,[[["self"],["u32"],["u32"],["u32"],["u32"]],["dynamicimage"]]],[11,"as_rgb8","","Return a reference to an 8bit RGB image",11,[[["self"]],["option",["rgbimage"]]]],[11,"as_mut_rgb8","","Return a mutable reference to an 8bit RGB image",11,[[["self"]],["option",["rgbimage"]]]],[11,"as_bgr8","","Return a reference to an 8bit BGR image",11,[[["self"]],["option",["imagebuffer"]]]],[11,"as_mut_bgr8","","Return a mutable reference to an 8bit BGR image",11,[[["self"]],["option",["imagebuffer"]]]],[11,"as_rgba8","","Return a reference to an 8bit RGBA image",11,[[["self"]],["option",["rgbaimage"]]]],[11,"as_mut_rgba8","","Return a mutable reference to an 8bit RGBA image",11,[[["self"]],["option",["rgbaimage"]]]],[11,"as_bgra8","","Return a reference to an 8bit BGRA image",11,[[["self"]],["option",["imagebuffer"]]]],[11,"as_mut_bgra8","","Return a mutable reference to an 8bit RGBA image",11,[[["self"]],["option",["imagebuffer"]]]],[11,"as_luma8","","Return a reference to an 8bit Grayscale image",11,[[["self"]],["option",["grayimage"]]]],[11,"as_mut_luma8","","Return a mutable reference to an 8bit Grayscale image",11,[[["self"]],["option",["grayimage"]]]],[11,"as_luma_alpha8","","Return a reference to an 8bit Grayscale image with an…",11,[[["self"]],["option",["grayalphaimage"]]]],[11,"as_mut_luma_alpha8","","Return a mutable reference to an 8bit Grayscale image with…",11,[[["self"]],["option",["grayalphaimage"]]]],[11,"raw_pixels","","Return this image's pixels as a byte vector.",11,[[["self"]],["vec",["u8"]]]],[11,"as_flat_samples","","Return a view on the raw sample buffer.",11,[[["self"]],["flatsamples"]]],[11,"color","","Return this image's color type.",11,[[["self"]],["colortype"]]],[11,"grayscale","","Return a grayscale version of this image.",11,[[["self"]],["dynamicimage"]]],[11,"invert","","Invert the colors of this image. This method operates…",11,[[["self"]]]],[11,"resize","","Resize this image using the specified filter algorithm.…",11,[[["self"],["u32"],["u32"],["filtertype"]],["dynamicimage"]]],[11,"resize_exact","","Resize this image using the specified filter algorithm.…",11,[[["self"],["u32"],["u32"],["filtertype"]],["dynamicimage"]]],[11,"thumbnail","","Scale this image down to fit within a specific size.…",11,[[["self"],["u32"],["u32"]],["dynamicimage"]]],[11,"thumbnail_exact","","Scale this image down to a specific size. Returns a new…",11,[[["self"],["u32"],["u32"]],["dynamicimage"]]],[11,"resize_to_fill","","Resize this image using the specified filter algorithm.…",11,[[["self"],["u32"],["u32"],["filtertype"]],["dynamicimage"]]],[11,"blur","","Performs a Gaussian blur on this image. `sigma` is a…",11,[[["self"],["f32"]],["dynamicimage"]]],[11,"unsharpen","","Performs an unsharpen mask on this image. `sigma` is the…",11,[[["self"],["f32"],["i32"]],["dynamicimage"]]],[11,"filter3x3","","Filters this image with the specified 3x3 kernel.",11,N],[11,"adjust_contrast","","Adjust the contrast of this image. `contrast` is the…",11,[[["self"],["f32"]],["dynamicimage"]]],[11,"brighten","","Brighten the pixels of this image. `value` is the amount…",11,[[["self"],["i32"]],["dynamicimage"]]],[11,"huerotate","","Hue rotate the supplied image. `value` is the degrees to…",11,[[["self"],["i32"]],["dynamicimage"]]],[11,"flipv","","Flip this image vertically",11,[[["self"]],["dynamicimage"]]],[11,"fliph","","Flip this image horizontally",11,[[["self"]],["dynamicimage"]]],[11,"rotate90","","Rotate this image 90 degrees clockwise.",11,[[["self"]],["dynamicimage"]]],[11,"rotate180","","Rotate this image 180 degrees clockwise.",11,[[["self"]],["dynamicimage"]]],[11,"rotate270","","Rotate this image 270 degrees clockwise.",11,[[["self"]],["dynamicimage"]]],[11,"write_to","","Encode this image and write it to `w`",11,[[["self"],["w"],["f"]],["imageresult"]]],[11,"save","","Saves the buffer to a file at the path specified.",11,[[["self"],["q"]],["result"]]],[11,"new","","Construct a new subimage",58,[[["i"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[11,"change_bounds","","Change the coordinates of this subimage.",58,[[["self"],["u32"],["u32"],["u32"],["u32"]]]],[11,"to_image","","Convert this subimage to an ImageBuffer",58,[[["self"]],["imagebuffer",["vec"]]]],[6,"ImageResult","","Result of an image decoding/encoding process",N,N],[6,"GrayAlphaImage","","Sendable grayscale + alpha channel image buffer",N,N],[6,"GrayImage","","Sendable grayscale image buffer",N,N],[6,"RgbImage","","Sendable Rgb image buffer",N,N],[6,"RgbaImage","","Sendable Rgb + alpha channel image buffer",N,N],[8,"AnimationDecoder","","AnimationDecoder trait",N,N],[10,"into_frames","","Consume the decoder producing a series of frames.",59,[[["self"]],["frames"]]],[8,"GenericImage","","A trait for manipulating images.",N,N],[16,"InnerImage","","Underlying image type. This is mainly used by SubImages in…",60,N],[10,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",60,N],[10,"put_pixel","","Put a pixel at location (x, y)",60,N],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",60,N],[10,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha…",60,N],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image. The…",60,[[["self"]],["mutpixels"]]],[11,"copy_from","","Copies all of the pixels from another image into this image.",60,[[["self"],["o"],["u32"],["u32"]],["bool"]]],[10,"inner_mut","","Returns a mutable reference to the underlying image.",60,N],[11,"sub_image","","Returns a subimage that is a view into this image.",60,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[8,"GenericImageView","","Trait to inspect an image.",N,N],[16,"Pixel","","The type of pixel.",61,N],[16,"InnerImageView","","Underlying image type. This is mainly used by SubImages in…",61,N],[10,"dimensions","","The width and height of this image.",61,N],[11,"width","","The width of this image.",61,[[["self"]],["u32"]]],[11,"height","","The height of this image.",61,[[["self"]],["u32"]]],[10,"bounds","","The bounding rectangle of this image.",61,N],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside…",61,[[["self"],["u32"],["u32"]],["bool"]]],[10,"get_pixel","","Returns the pixel located at (x, y)",61,N],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",61,N],[11,"pixels","","Returns an Iterator over the pixels of this image. The…",61,[[["self"]],["pixels"]]],[10,"inner","","Returns a reference to the underlying image.",61,N],[11,"view","","Returns an subimage that is an immutable view into this…",61,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[8,"ImageDecoder","","The trait that all decoders implement",N,N],[16,"Reader","","The type of reader produced by `into_reader`.",62,N],[10,"dimensions","","Returns a tuple containing the width and height of the image",62,N],[10,"colortype","","Returns the color type of the image e.g. RGB(8) (8bit RGB)",62,[[["self"]],["colortype"]]],[10,"into_reader","","Returns a reader that can be used to obtain the bytes of…",62,[[["self"]],["imageresult"]]],[11,"row_bytes","","Returns the number of bytes in a single row of the image.…",62,[[["self"]],["u64"]]],[11,"total_bytes","","Returns the total number of bytes in the image.",62,[[["self"]],["u64"]]],[11,"scanline_bytes","","Returns the minimum number of bytes that can be…",62,[[["self"]],["u64"]]],[11,"read_image","","Returns all the bytes in the image.",62,[[["self"]],["imageresult",["vec"]]]],[11,"read_image_with_progress","","Same as `read_image` but periodically calls the provided…",62,[[["self"],["f"]],["imageresult",["vec"]]]],[8,"ImageDecoderExt","","ImageDecoderExt trait",N,N],[11,"read_rect","","Read a rectangular section of the image.",63,N],[10,"read_rect_with_progress","","Read a rectangular section of the image, periodically…",63,N],[8,"ConvertBuffer","","Provides color conversions for whole image buffers.",N,N],[10,"convert","","Converts `self` to a buffer of type T",64,[[["self"]],["t"]]],[8,"Pixel","","A generalized pixel.",N,N],[16,"Subpixel","","The underlying subpixel type.",65,N],[10,"channel_count","","Returns the number of channels of this pixel type.",65,[[],["u8"]]],[10,"channels","","Returns the components as a slice.",65,N],[10,"channels_mut","","Returns the components as a mutable slice",65,N],[10,"color_model","","Returns a string that can help to interpret the meaning…",65,[[],["str"]]],[10,"color_type","","Returns the ColorType for this pixel format",65,[[],["colortype"]]],[10,"channels4","","Returns the channels of this pixel as a 4 tuple. If the…",65,N],[10,"from_channels","","Construct a pixel from the 4 channels a, b, c and d. If…",65,N],[10,"from_slice","","Returns a view into a slice.",65,N],[10,"from_slice_mut","","Returns mutable view into a mutable slice.",65,N],[10,"to_rgb","","Convert this pixel to RGB",65,[[["self"]],["rgb"]]],[10,"to_rgba","","Convert this pixel to RGB with an alpha channel",65,[[["self"]],["rgba"]]],[10,"to_luma","","Convert this pixel to luma",65,[[["self"]],["luma"]]],[10,"to_luma_alpha","","Convert this pixel to luma with an alpha channel",65,[[["self"]],["lumaa"]]],[10,"to_bgr","","Convert this pixel to BGR",65,[[["self"]],["bgr"]]],[10,"to_bgra","","Convert this pixel to BGR with an alpha channel",65,[[["self"]],["bgra"]]],[10,"map","","Apply the function `f` to each channel of this pixel.",65,[[["self"],["f"]],["self"]]],[10,"apply","","Apply the function `f` to each channel of this pixel.",65,[[["self"],["f"]]]],[10,"map_with_alpha","","Apply the function `f` to each channel except the alpha…",65,[[["self"],["f"],["g"]],["self"]]],[10,"apply_with_alpha","","Apply the function `f` to each channel except the alpha…",65,[[["self"],["f"],["g"]]]],[10,"map2","","Apply the function `f` to each channel of this pixel and…",65,[[["self"],["self"],["f"]],["self"]]],[10,"apply2","","Apply the function `f` to each channel of this pixel and…",65,[[["self"],["self"],["f"]]]],[10,"invert","","Invert this pixel",65,[[["self"]]]],[10,"blend","","Blend the color of a given pixel into ourself, taking into…",65,[[["self"],["self"]]]],[8,"Primitive","","Primitive trait from old stdlib",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into_iter","","",66,[[["self"]],["i"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"par_bridge","","",66,[[["self"]],["iterbridge"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into_iter","","",67,[[["self"]],["i"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"par_bridge","","",67,[[["self"]],["iterbridge"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into_iter","","",55,[[["self"]],["i"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","image::math::nq","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","image::imageops::colorops","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into","image::flat","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","image::bmp","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","image::dxt","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","image::gif","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","image::hdr","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into_iter","","",32,[[["self"]],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into_iter","","",70,[[["self"]],["i"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"par_bridge","","",70,[[["self"]],["iterbridge"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","image::ico","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","image::jpeg","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","image::png","",38,[[["self"]],["u"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","image::pnm","",47,[[["self"]],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","image::tga","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","image::tiff","",51,[[["self"]],["u"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","image::webp","",52,[[["self"]],["u"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","image::webp::vp8","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"default","image::gif","",26,[[],["frame"]]],[11,"eq","","",25,[[["self"],["disposalmethod"]],["bool"]]],[11,"clone","","",25,[[["self"]],["disposalmethod"]]],[11,"clone","","",26,[[["self"]],["frame"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result",["error"]]]],[11,"index_of","image::imageops::colorops","",68,[[["self"],["luma"]],["usize"]]],[11,"map_color","","",68,[[["self"],["luma"]]]],[11,"index_of","image::math::nq","",12,[[["self"],["rgba"]],["usize"]]],[11,"map_color","","",12,[[["self"],["rgba"]]]],[11,"channel_count","image","",2,[[],["u8"]]],[11,"color_model","","",2,[[],["str"]]],[11,"color_type","","",2,[[],["colortype"]]],[11,"channels","","",2,N],[11,"channels_mut","","",2,N],[11,"channels4","","",2,N],[11,"from_channels","","",2,[[["t"],["t"],["t"],["t"]],["rgb"]]],[11,"from_slice","","",2,N],[11,"from_slice_mut","","",2,N],[11,"to_rgb","","",2,[[["self"]],["rgb"]]],[11,"to_bgr","","",2,[[["self"]],["bgr"]]],[11,"to_rgba","","",2,[[["self"]],["rgba"]]],[11,"to_bgra","","",2,[[["self"]],["bgra"]]],[11,"to_luma","","",2,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",2,[[["self"]],["lumaa"]]],[11,"map","","",2,[[["self"],["f"]],["rgb"]]],[11,"apply","","",2,[[["self"],["f"]]]],[11,"map_with_alpha","","",2,[[["self"],["f"],["g"]],["rgb"]]],[11,"apply_with_alpha","","",2,[[["self"],["f"],["g"]]]],[11,"map2","","",2,[[["self"],["self"],["f"]],["rgb"]]],[11,"apply2","","",2,[[["self"],["rgb"],["f"]]]],[11,"invert","","",2,[[["self"]]]],[11,"blend","","",2,[[["self"],["rgb"]]]],[11,"channel_count","","",4,[[],["u8"]]],[11,"color_model","","",4,[[],["str"]]],[11,"color_type","","",4,[[],["colortype"]]],[11,"channels","","",4,N],[11,"channels_mut","","",4,N],[11,"channels4","","",4,N],[11,"from_channels","","",4,[[["t"],["t"],["t"],["t"]],["bgr"]]],[11,"from_slice","","",4,N],[11,"from_slice_mut","","",4,N],[11,"to_rgb","","",4,[[["self"]],["rgb"]]],[11,"to_bgr","","",4,[[["self"]],["bgr"]]],[11,"to_rgba","","",4,[[["self"]],["rgba"]]],[11,"to_bgra","","",4,[[["self"]],["bgra"]]],[11,"to_luma","","",4,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",4,[[["self"]],["lumaa"]]],[11,"map","","",4,[[["self"],["f"]],["bgr"]]],[11,"apply","","",4,[[["self"],["f"]]]],[11,"map_with_alpha","","",4,[[["self"],["f"],["g"]],["bgr"]]],[11,"apply_with_alpha","","",4,[[["self"],["f"],["g"]]]],[11,"map2","","",4,[[["self"],["self"],["f"]],["bgr"]]],[11,"apply2","","",4,[[["self"],["bgr"],["f"]]]],[11,"invert","","",4,[[["self"]]]],[11,"blend","","",4,[[["self"],["bgr"]]]],[11,"channel_count","","",0,[[],["u8"]]],[11,"color_model","","",0,[[],["str"]]],[11,"color_type","","",0,[[],["colortype"]]],[11,"channels","","",0,N],[11,"channels_mut","","",0,N],[11,"channels4","","",0,N],[11,"from_channels","","",0,[[["t"],["t"],["t"],["t"]],["luma"]]],[11,"from_slice","","",0,N],[11,"from_slice_mut","","",0,N],[11,"to_rgb","","",0,[[["self"]],["rgb"]]],[11,"to_bgr","","",0,[[["self"]],["bgr"]]],[11,"to_rgba","","",0,[[["self"]],["rgba"]]],[11,"to_bgra","","",0,[[["self"]],["bgra"]]],[11,"to_luma","","",0,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",0,[[["self"]],["lumaa"]]],[11,"map","","",0,[[["self"],["f"]],["luma"]]],[11,"apply","","",0,[[["self"],["f"]]]],[11,"map_with_alpha","","",0,[[["self"],["f"],["g"]],["luma"]]],[11,"apply_with_alpha","","",0,[[["self"],["f"],["g"]]]],[11,"map2","","",0,[[["self"],["self"],["f"]],["luma"]]],[11,"apply2","","",0,[[["self"],["luma"],["f"]]]],[11,"invert","","",0,[[["self"]]]],[11,"blend","","",0,[[["self"],["luma"]]]],[11,"channel_count","","",3,[[],["u8"]]],[11,"color_model","","",3,[[],["str"]]],[11,"color_type","","",3,[[],["colortype"]]],[11,"channels","","",3,N],[11,"channels_mut","","",3,N],[11,"channels4","","",3,N],[11,"from_channels","","",3,[[["t"],["t"],["t"],["t"]],["rgba"]]],[11,"from_slice","","",3,N],[11,"from_slice_mut","","",3,N],[11,"to_rgb","","",3,[[["self"]],["rgb"]]],[11,"to_bgr","","",3,[[["self"]],["bgr"]]],[11,"to_rgba","","",3,[[["self"]],["rgba"]]],[11,"to_bgra","","",3,[[["self"]],["bgra"]]],[11,"to_luma","","",3,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",3,[[["self"]],["lumaa"]]],[11,"map","","",3,[[["self"],["f"]],["rgba"]]],[11,"apply","","",3,[[["self"],["f"]]]],[11,"map_with_alpha","","",3,[[["self"],["f"],["g"]],["rgba"]]],[11,"apply_with_alpha","","",3,[[["self"],["f"],["g"]]]],[11,"map2","","",3,[[["self"],["self"],["f"]],["rgba"]]],[11,"apply2","","",3,[[["self"],["rgba"],["f"]]]],[11,"invert","","",3,[[["self"]]]],[11,"blend","","",3,[[["self"],["rgba"]]]],[11,"channel_count","","",5,[[],["u8"]]],[11,"color_model","","",5,[[],["str"]]],[11,"color_type","","",5,[[],["colortype"]]],[11,"channels","","",5,N],[11,"channels_mut","","",5,N],[11,"channels4","","",5,N],[11,"from_channels","","",5,[[["t"],["t"],["t"],["t"]],["bgra"]]],[11,"from_slice","","",5,N],[11,"from_slice_mut","","",5,N],[11,"to_rgb","","",5,[[["self"]],["rgb"]]],[11,"to_bgr","","",5,[[["self"]],["bgr"]]],[11,"to_rgba","","",5,[[["self"]],["rgba"]]],[11,"to_bgra","","",5,[[["self"]],["bgra"]]],[11,"to_luma","","",5,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",5,[[["self"]],["lumaa"]]],[11,"map","","",5,[[["self"],["f"]],["bgra"]]],[11,"apply","","",5,[[["self"],["f"]]]],[11,"map_with_alpha","","",5,[[["self"],["f"],["g"]],["bgra"]]],[11,"apply_with_alpha","","",5,[[["self"],["f"],["g"]]]],[11,"map2","","",5,[[["self"],["self"],["f"]],["bgra"]]],[11,"apply2","","",5,[[["self"],["bgra"],["f"]]]],[11,"invert","","",5,[[["self"]]]],[11,"blend","","",5,[[["self"],["bgra"]]]],[11,"channel_count","","",1,[[],["u8"]]],[11,"color_model","","",1,[[],["str"]]],[11,"color_type","","",1,[[],["colortype"]]],[11,"channels","","",1,N],[11,"channels_mut","","",1,N],[11,"channels4","","",1,N],[11,"from_channels","","",1,[[["t"],["t"],["t"],["t"]],["lumaa"]]],[11,"from_slice","","",1,N],[11,"from_slice_mut","","",1,N],[11,"to_rgb","","",1,[[["self"]],["rgb"]]],[11,"to_bgr","","",1,[[["self"]],["bgr"]]],[11,"to_rgba","","",1,[[["self"]],["rgba"]]],[11,"to_bgra","","",1,[[["self"]],["bgra"]]],[11,"to_luma","","",1,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",1,[[["self"]],["lumaa"]]],[11,"map","","",1,[[["self"],["f"]],["lumaa"]]],[11,"apply","","",1,[[["self"],["f"]]]],[11,"map_with_alpha","","",1,[[["self"],["f"],["g"]],["lumaa"]]],[11,"apply_with_alpha","","",1,[[["self"],["f"],["g"]]]],[11,"map2","","",1,[[["self"],["self"],["f"]],["lumaa"]]],[11,"apply2","","",1,[[["self"],["lumaa"],["f"]]]],[11,"invert","","",1,[[["self"]]]],[11,"blend","","",1,[[["self"],["lumaa"]]]],[11,"convert","","",57,[[["self"]],["imagebuffer",["vec"]]]],[11,"dimensions","image::bmp","",20,N],[11,"colortype","","",20,[[["self"]],["colortype"]]],[11,"into_reader","","",20,[[["self"]],["imageresult"]]],[11,"read_image","","",20,[[["self"]],["imageresult",["vec"]]]],[11,"dimensions","image::dxt","",23,N],[11,"colortype","","",23,[[["self"]],["colortype"]]],[11,"scanline_bytes","","",23,[[["self"]],["u64"]]],[11,"into_reader","","",23,[[["self"]],["imageresult"]]],[11,"read_image","","",23,[[["self"]],["imageresult",["vec"]]]],[11,"dimensions","image::gif","",27,N],[11,"colortype","","",27,[[["self"]],["colortype"]]],[11,"into_reader","","",27,[[["self"]],["imageresult"]]],[11,"read_image","","",27,[[["self"]],["imageresult",["vec"]]]],[11,"dimensions","image::hdr","",31,N],[11,"colortype","","",31,[[["self"]],["colortype"]]],[11,"into_reader","","",31,[[["self"]],["imageresult"]]],[11,"read_image","","",31,[[["self"]],["imageresult",["vec"]]]],[11,"dimensions","image::ico","",34,N],[11,"colortype","","",34,[[["self"]],["colortype"]]],[11,"into_reader","","",34,[[["self"]],["imageresult"]]],[11,"read_image","","",34,[[["self"]],["imageresult",["vec"]]]],[11,"dimensions","image::jpeg","",36,N],[11,"colortype","","",36,[[["self"]],["colortype"]]],[11,"into_reader","","",36,[[["self"]],["imageresult"]]],[11,"read_image","","",36,[[["self"]],["imageresult",["vec"]]]],[11,"dimensions","image::png","",38,N],[11,"colortype","","",38,[[["self"]],["colortype"]]],[11,"into_reader","","",38,[[["self"]],["imageresult"]]],[11,"read_image","","",38,[[["self"]],["imageresult",["vec"]]]],[11,"dimensions","image::pnm","",47,N],[11,"colortype","","",47,[[["self"]],["colortype"]]],[11,"into_reader","","",47,[[["self"]],["imageresult"]]],[11,"read_image","","",47,[[["self"]],["imageresult",["vec"]]]],[11,"dimensions","image::tga","",50,N],[11,"colortype","","",50,[[["self"]],["colortype"]]],[11,"scanline_bytes","","",50,[[["self"]],["u64"]]],[11,"into_reader","","",50,[[["self"]],["imageresult"]]],[11,"read_image","","",50,[[["self"]],["imageresult",["vec"]]]],[11,"dimensions","image::tiff","",51,N],[11,"colortype","","",51,[[["self"]],["colortype"]]],[11,"into_reader","","",51,[[["self"]],["imageresult"]]],[11,"read_image","","",51,[[["self"]],["imageresult",["vec"]]]],[11,"dimensions","image::webp","",52,N],[11,"colortype","","",52,[[["self"]],["colortype"]]],[11,"into_reader","","",52,[[["self"]],["imageresult"]]],[11,"read_image","","",52,[[["self"]],["imageresult",["vec"]]]],[11,"read_rect_with_progress","image::bmp","",20,N],[11,"read_rect_with_progress","image::dxt","",23,N],[11,"read_rect_with_progress","image::hdr","",31,N],[11,"into_frames","image::gif","",27,[[["self"]],["frames"]]],[11,"dimensions","image::flat","",18,N],[11,"bounds","","",18,N],[11,"in_bounds","","",18,[[["self"],["u32"],["u32"]],["bool"]]],[11,"get_pixel","","",18,N],[11,"inner","","",18,[[["self"]],["self"]]],[11,"dimensions","","",19,N],[11,"bounds","","",19,N],[11,"in_bounds","","",19,[[["self"],["u32"],["u32"]],["bool"]]],[11,"get_pixel","","",19,N],[11,"inner","","",19,[[["self"]],["self"]]],[11,"dimensions","image","",57,N],[11,"bounds","","",57,N],[11,"get_pixel","","",57,[[["self"],["u32"],["u32"]],["p"]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y), ignoring bounds…",57,[[["self"],["u32"],["u32"]],["p"]]],[11,"inner","","",57,N],[11,"dimensions","","",11,N],[11,"bounds","","",11,N],[11,"get_pixel","","",11,[[["self"],["u32"],["u32"]],["rgba",["u8"]]]],[11,"inner","","",11,N],[11,"dimensions","","",58,N],[11,"bounds","","",58,N],[11,"get_pixel","","",58,N],[11,"view","","",58,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[11,"inner","","",58,N],[11,"get_pixel_mut","image::flat","",19,N],[11,"put_pixel","","",19,N],[11,"blend_pixel","","",19,N],[11,"inner_mut","","",19,[[["self"]],["self"]]],[11,"get_pixel_mut","image","",57,[[["self"],["u32"],["u32"]],["p"]]],[11,"put_pixel","","",57,[[["self"],["u32"],["u32"],["p"]]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y), ignoring bounds checking.",57,[[["self"],["u32"],["u32"],["p"]]]],[11,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha…",57,[[["self"],["u32"],["u32"],["p"]]]],[11,"inner_mut","","",57,N],[11,"put_pixel","","",11,[[["self"],["u32"],["u32"],["rgba",["u8"]]]]],[11,"blend_pixel","","DEPRECATED: Use iterator `pixels_mut` to blend the pixels…",11,[[["self"],["u32"],["u32"],["rgba",["u8"]]]]],[11,"get_pixel_mut","","DEPRECATED: Do not use is function: It is unimplemented!",11,[[["self"],["u32"],["u32"]],["rgba"]]],[11,"inner_mut","","",11,N],[11,"get_pixel_mut","","",58,N],[11,"put_pixel","","",58,N],[11,"blend_pixel","","DEPRECATED: This method will be removed. Blend the pixel…",58,N],[11,"sub_image","","",58,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[11,"inner_mut","","",58,N],[11,"next","image::hdr","",70,[[["self"]],["option"]]],[11,"size_hint","","",70,N],[11,"next","image","",55,[[["self"]],["option",["imageresult"]]]],[11,"next","","",67,[[["self"]],["option"]]],[11,"next","","",66,[[["self"]],["option"]]],[11,"partial_cmp","image::flat","Compares the logical preconditions.",17,[[["self"],["self"]],["option",["ordering"]]]],[11,"default","image::hdr","",29,[[],["rgbe8pixel"]]],[11,"default","image::webp::vp8","",53,[[],["frame"]]],[11,"eq","image::flat","",15,[[["self"],["samplelayout"]],["bool"]]],[11,"ne","","",15,[[["self"],["samplelayout"]],["bool"]]],[11,"eq","","",16,[[["self"],["error"]],["bool"]]],[11,"ne","","",16,[[["self"],["error"]],["bool"]]],[11,"eq","","",17,[[["self"],["normalform"]],["bool"]]],[11,"eq","image::dxt","",22,[[["self"],["dxtvariant"]],["bool"]]],[11,"eq","image::hdr","",29,[[["self"],["rgbe8pixel"]],["bool"]]],[11,"ne","","",29,[[["self"],["rgbe8pixel"]],["bool"]]],[11,"eq","image::pnm","",46,[[["self"],["sampleencoding"]],["bool"]]],[11,"eq","","",45,[[["self"],["pnmsubtype"]],["bool"]]],[11,"ne","","",45,[[["self"],["pnmsubtype"]],["bool"]]],[11,"eq","image","",6,[[["self"],["colortype"]],["bool"]]],[11,"ne","","",6,[[["self"],["colortype"]],["bool"]]],[11,"eq","","",2,[[["self"],["rgb"]],["bool"]]],[11,"ne","","",2,[[["self"],["rgb"]],["bool"]]],[11,"eq","","",4,[[["self"],["bgr"]],["bool"]]],[11,"ne","","",4,[[["self"],["bgr"]],["bool"]]],[11,"eq","","",0,[[["self"],["luma"]],["bool"]]],[11,"ne","","",0,[[["self"],["luma"]],["bool"]]],[11,"eq","","",3,[[["self"],["rgba"]],["bool"]]],[11,"ne","","",3,[[["self"],["rgba"]],["bool"]]],[11,"eq","","",5,[[["self"],["bgra"]],["bool"]]],[11,"ne","","",5,[[["self"],["bgra"]],["bool"]]],[11,"eq","","",1,[[["self"],["lumaa"]],["bool"]]],[11,"ne","","",1,[[["self"],["lumaa"]],["bool"]]],[11,"eq","","",9,[[["self"],["imageformat"]],["bool"]]],[11,"eq","","",10,[[["self"],["imageoutputformat"]],["bool"]]],[11,"ne","","",10,[[["self"],["imageoutputformat"]],["bool"]]],[11,"from","","",7,[[["error"]],["imageerror"]]],[11,"from","","",7,[[["decodingerror"]],["imageerror"]]],[11,"from","","",6,[[["pixelformat"]],["colortype"]]],[11,"from","","",7,[[["error"]],["imageerror"]]],[11,"from","","",6,N],[11,"from","","",7,[[["decodingerror"]],["imageerror"]]],[11,"from","image::pnm","",49,[[["bitmapheader"]],["self"]]],[11,"from","","",49,[[["graymapheader"]],["self"]]],[11,"from","","",49,[[["pixmapheader"]],["self"]]],[11,"from","","",49,[[["arbitraryheader"]],["self"]]],[11,"from","image","",7,[[["tifferror"]],["imageerror"]]],[11,"from","","",6,[[["colortype"]],["colortype"]]],[11,"from","","",7,[[["error"]],["imageerror"]]],[11,"from","","",10,[[["imageformat"]],["self"]]],[11,"into_iter","image::hdr","",32,N],[11,"clone","image::imageops::colorops","",68,[[["self"]],["bilevel"]]],[11,"clone","image","",8,[[["self"]],["filtertype"]]],[11,"clone","image::flat","",14,[[["self"]],["flatsamples"]]],[11,"clone","","",15,[[["self"]],["samplelayout"]]],[11,"clone","","",18,[[["self"]],["view"]]],[11,"clone","","",19,[[["self"]],["viewmut"]]],[11,"clone","","",16,[[["self"]],["error"]]],[11,"clone","","",17,[[["self"]],["normalform"]]],[11,"clone","image::dxt","",22,[[["self"]],["dxtvariant"]]],[11,"clone","image::hdr","",29,[[["self"]],["rgbe8pixel"]]],[11,"clone","","",30,[[["self"]],["hdrmetadata"]]],[11,"clone","image::pnm","",46,[[["self"]],["sampleencoding"]]],[11,"clone","","",45,[[["self"]],["pnmsubtype"]]],[11,"clone","","",41,[[["self"]],["bitmapheader"]]],[11,"clone","","",42,[[["self"]],["graymapheader"]]],[11,"clone","","",43,[[["self"]],["pixmapheader"]]],[11,"clone","","",40,[[["self"]],["arbitraryheader"]]],[11,"clone","","",44,[[["self"]],["arbitrarytupltype"]]],[11,"clone","image::webp::vp8","",53,[[["self"]],["frame"]]],[11,"clone","image","",56,[[["self"]],["frame"]]],[11,"clone","","",57,[[["self"]],["imagebuffer"]]],[11,"clone","","",6,[[["self"]],["colortype"]]],[11,"clone","","",2,[[["self"]],["rgb"]]],[11,"clone","","",4,[[["self"]],["bgr"]]],[11,"clone","","",0,[[["self"]],["luma"]]],[11,"clone","","",3,[[["self"]],["rgba"]]],[11,"clone","","",5,[[["self"]],["bgra"]]],[11,"clone","","",1,[[["self"]],["lumaa"]]],[11,"clone","","",11,[[["self"]],["dynamicimage"]]],[11,"clone","","",9,[[["self"]],["imageformat"]]],[11,"clone","","",10,[[["self"]],["imageoutputformat"]]],[11,"deref","","",57,N],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","image::flat","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","image::dxt","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","image::hdr","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","image::pnm","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","image::webp::vp8","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","image","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",57,N],[11,"index","image::flat","Return a reference to a single sample at specified…",14,N],[11,"index","image","",57,N],[11,"index","","",2,[[["self"],["usize"]],["t"]]],[11,"index","","",4,[[["self"],["usize"]],["t"]]],[11,"index","","",0,[[["self"],["usize"]],["t"]]],[11,"index","","",3,[[["self"],["usize"]],["t"]]],[11,"index","","",5,[[["self"],["usize"]],["t"]]],[11,"index","","",1,[[["self"],["usize"]],["t"]]],[11,"index_mut","image::flat","Return a mutable reference to a single sample at specified…",14,N],[11,"index_mut","image","",57,N],[11,"index_mut","","",2,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",4,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",3,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",5,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["t"]]],[11,"hash","image::flat","",15,N],[11,"hash","","",16,N],[11,"hash","","",17,N],[11,"hash","image","",6,N],[11,"hash","","",2,N],[11,"hash","","",4,N],[11,"hash","","",0,N],[11,"hash","","",3,N],[11,"hash","","",5,N],[11,"hash","","",1,N],[11,"read","image::dxt","",69,N],[11,"description","image","",7,[[["self"]],["str"]]],[11,"cause","","",7,[[["self"]],["option",["error"]]]],[11,"from_u8","image::gif","Converts `u8` to `Option<Self>`",25,[[["u8"]],["option",["disposalmethod"]]]],[11,"from_rgba","","Creates a frame from pixels in RGBA format. Note: This…",26,N],[11,"from_rgba_speed","","Creates a frame from pixels in RGBA format. `speed` is a…",26,N],[11,"from_palette_pixels","","Creates a frame from a palette and indexed pixels.",26,N],[11,"from_indexed_pixels","","Creates a frame from indexed pixels in the global palette.",26,N],[11,"from_rgb","","Creates a frame from pixels in RGB format. Note: This…",26,N],[11,"from_rgb_speed","","Creates a frame from pixels in RGB format. `speed` is a…",26,N],[11,"expand_palette","image","Expands a color palette by re-using the existing buffer.…",71,N],[11,"row_bytes","","Returns the number of bytes in a single row of the image.…",62,[[["self"]],["u64"]]],[11,"total_bytes","","Returns the total number of bytes in the image.",62,[[["self"]],["u64"]]],[11,"scanline_bytes","","Returns the minimum number of bytes that can be…",62,[[["self"]],["u64"]]],[11,"read_image","","Returns all the bytes in the image.",62,[[["self"]],["imageresult",["vec"]]]],[11,"read_image_with_progress","","Same as `read_image` but periodically calls the provided…",62,[[["self"],["f"]],["imageresult",["vec"]]]],[11,"read_rect","","Read a rectangular section of the image.",63,N],[11,"width","","The width of this image.",61,[[["self"]],["u32"]]],[11,"height","","The height of this image.",61,[[["self"]],["u32"]]],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside…",61,[[["self"],["u32"],["u32"]],["bool"]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",61,N],[11,"pixels","","Returns an Iterator over the pixels of this image. The…",61,[[["self"]],["pixels"]]],[11,"view","","Returns an subimage that is an immutable view into this…",61,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",60,N],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image. The…",60,[[["self"]],["mutpixels"]]],[11,"copy_from","","Copies all of the pixels from another image into this image.",60,[[["self"],["o"],["u32"],["u32"]],["bool"]]],[11,"sub_image","","Returns a subimage that is a view into this image.",60,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]]],"paths":[[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[3,"Bgr"],[3,"Bgra"],[4,"ColorType"],[4,"ImageError"],[4,"FilterType"],[4,"ImageFormat"],[4,"ImageOutputFormat"],[4,"DynamicImage"],[3,"NeuQuant"],[8,"ColorMap"],[3,"FlatSamples"],[3,"SampleLayout"],[4,"Error"],[4,"NormalForm"],[3,"View"],[3,"ViewMut"],[3,"BMPDecoder"],[3,"BMPEncoder"],[4,"DXTVariant"],[3,"DXTDecoder"],[3,"DXTEncoder"],[4,"DisposalMethod"],[3,"Frame"],[3,"Decoder"],[3,"Encoder"],[3,"RGBE8Pixel"],[3,"HDRMetadata"],[3,"HDRAdapter"],[3,"HDRDecoder"],[3,"HDREncoder"],[3,"ICODecoder"],[3,"ICOEncoder"],[3,"JPEGDecoder"],[3,"JPEGEncoder"],[3,"PNGDecoder"],[3,"PNGEncoder"],[3,"ArbitraryHeader"],[3,"BitmapHeader"],[3,"GraymapHeader"],[3,"PixmapHeader"],[4,"ArbitraryTuplType"],[4,"PNMSubtype"],[4,"SampleEncoding"],[3,"PNMDecoder"],[3,"PNMEncoder"],[3,"PNMHeader"],[3,"TGADecoder"],[3,"TIFFDecoder"],[3,"WebpDecoder"],[3,"Frame"],[3,"VP8Decoder"],[3,"Frames"],[3,"Frame"],[3,"ImageBuffer"],[3,"SubImage"],[8,"AnimationDecoder"],[8,"GenericImage"],[8,"GenericImageView"],[8,"ImageDecoder"],[8,"ImageDecoderExt"],[8,"ConvertBuffer"],[8,"Pixel"],[3,"MutPixels"],[3,"Pixels"],[3,"BiLevel"],[3,"DXTReader"],[3,"HDRImageDecoderIterator"],[6,"GrayImage"]]};
searchIndex["inflate"]={"doc":"A DEFLATE decoder written in rust.","items":[[3,"InflateWriter","inflate","A DEFLATE decoder.",N,N],[3,"DeflateDecoder","","A DEFLATE decoder/decompressor.",N,N],[3,"DeflateDecoderBuf","","A DEFLATE decoder/decompressor.",N,N],[3,"InflateStream","","",N,N],[5,"inflate_bytes","","Decompress the given slice of DEFLATE compressed data.",N,N],[5,"inflate_bytes_zlib","","Decompress the given slice of DEFLATE compressed (with…",N,N],[5,"inflate_bytes_zlib_no_checksum","","Decompress the given slice of DEFLATE compressed (with…",N,N],[11,"new","","",0,[[["w"]],["inflatewriter"]]],[11,"from_zlib","","",0,[[["w"]],["inflatewriter"]]],[11,"finish","","",0,[[["self"]],["result"]]],[11,"new","","Create a new `Deflatedecoderbuf` to read from a raw…",1,[[["r"]],["deflatedecoderbuf"]]],[11,"from_zlib","","Create a new `DeflateDecoderbuf` that reads from a zlib…",1,[[["r"]],["deflatedecoderbuf"]]],[11,"from_zlib_no_checksum","","Create a new `DeflateDecoderbuf` that reads from a zlib…",1,[[["r"]],["deflatedecoderbuf"]]],[11,"reset","","Resets the decompressor, and replaces the current inner…",1,[[["self"],["r"]],["r"]]],[11,"reset_data","","Resets the decoder, but continue to read from the same…",1,[[["self"]]]],[11,"get_ref","","Returns a reference to the underlying `BufRead` instance.",1,[[["self"]],["r"]]],[11,"get_mut","","Returns a mutable reference to the underlying `BufRead`…",1,[[["self"]],["r"]]],[11,"into_inner","","Drops the decoder and return the inner `BufRead` instance.",1,[[["self"]],["r"]]],[11,"total_in","","Returns the total bytes read from the underlying `BufRead`…",1,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of bytes output from this decoder.",1,[[["self"]],["u64"]]],[11,"current_checksum","","Returns the calculated checksum value of the currently…",1,[[["self"]],["u32"]]],[11,"new","","Create a new `Deflatedecoderbuf` to read from a raw…",2,[[["r"]],["deflatedecoder"]]],[11,"from_zlib","","Create a new `DeflateDecoderbuf` that reads from a zlib…",2,[[["r"]],["deflatedecoder"]]],[11,"from_zlib_no_checksum","","Create a new `DeflateDecoderbuf` that reads from a zlib…",2,[[["r"]],["deflatedecoder"]]],[11,"reset","","Resets the decompressor, and replaces the current inner…",2,[[["self"],["r"]],["r"]]],[11,"get_ref","","Returns a reference to the underlying reader.",2,[[["self"]],["r"]]],[11,"get_mut","","Returns a mutable reference to the underlying reader.",2,[[["self"]],["r"]]],[11,"into_inner","","Returns the total number of bytes output from this decoder.",2,[[["self"]],["r"]]],[11,"reset_data","","Resets the decoder, but continue to read from the same…",2,[[["self"]]]],[11,"total_in","","Returns the total bytes read from the underlying reader.",2,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of bytes output from this decoder.",2,[[["self"]],["u64"]]],[11,"current_checksum","","Returns the calculated checksum value of the currently…",2,[[["self"]],["u32"]]],[11,"new","","Create a new stream for decoding raw deflate encoded data.",3,[[],["inflatestream"]]],[11,"from_zlib","","Create a new stream for decoding deflate encoded data with…",3,[[],["inflatestream"]]],[11,"from_zlib_no_checksum","","Create a new stream for decoding deflate encoded data with…",3,[[],["inflatestream"]]],[11,"reset","","",3,[[["self"]]]],[11,"reset_to_zlib","","",3,[[["self"]]]],[11,"update","","Try to uncompress/decode the data in `data`.",3,N],[11,"current_checksum","","Returns the calculated checksum value of the currently…",3,[[["self"]],["u32"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"read","","",1,N],[11,"read","","",2,N],[11,"write","","",0,N],[11,"flush","","",0,[[["self"]],["result"]]]],"paths":[[3,"InflateWriter"],[3,"DeflateDecoderBuf"],[3,"DeflateDecoder"],[3,"InflateStream"]]};
searchIndex["input"]={"doc":"A flexible structure for user interactions to be used in…","items":[[3,"AfterRenderArgs","input","After render arguments.",N,N],[3,"CloseArgs","","Close arguments.",N,N],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",N,N],[12,"dt","","Expected idle time in seconds.",0,N],[3,"ButtonArgs","","Button arguments",N,N],[12,"state","","New state of the button.",1,N],[12,"button","","The button that changed state.",1,N],[12,"scancode","","An optional scancode that tells the physical layout of a…",1,N],[3,"RenderArgs","","Render arguments",N,N],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",2,N],[12,"width","","The width of rendered area in points.",2,N],[12,"height","","The height of rendered area in points.",2,N],[12,"draw_width","","The width of rendered area in pixels.",2,N],[12,"draw_height","","The height of rendered area in pixels.",2,N],[3,"TouchArgs","","Touch arguments",N,N],[12,"device","","A unique identifier for touch device.",3,N],[12,"id","","A unique identifier for touch event.",3,N],[12,"x","","The x coordinate of the touch position, normalized 0..1.",3,N],[12,"y","","The y coordinate of the touch position, normalized 0..1.",3,N],[12,"z","","The z coordinate of the touch position, normalized 0..1.",3,N],[12,"px","","The x coordinate of the touch pressure direction.",3,N],[12,"py","","The y coordinate of the touch pressure direction.",3,N],[12,"pz","","The z coordinate of the touch pressure direction.",3,N],[12,"is_3d","","Whether the touch is in 3D.",3,N],[12,"touch","","The touch state.",3,N],[3,"UpdateArgs","","Update arguments, such as delta time in seconds",N,N],[12,"dt","","Delta time in seconds.",4,N],[3,"EventId","","Used to identify events arguments provided by traits.",N,N],[12,"0","","",5,N],[4,"ButtonState","","Stores button state.",N,N],[13,"Press","","Button was pressed.",6,N],[13,"Release","","Button was released.",6,N],[4,"Touch","","Stores the touch state.",N,N],[13,"Start","","The start of touch, for example a finger pressed down on a…",7,N],[13,"Move","","The move of touch, for example a finger moving while…",7,N],[13,"End","","The end of touch, for example taking a finger away from a…",7,N],[13,"Cancel","","The cancel of touch, for example the window loses focus.",7,N],[4,"Button","","Models different kinds of buttons.",N,N],[13,"Keyboard","","A keyboard button.",8,N],[13,"Mouse","","A mouse button.",8,N],[13,"Controller","","A controller button.",8,N],[13,"Hat","","A controller hat (d-Pad)",8,N],[4,"Motion","","Models different kinds of motion.",N,N],[13,"MouseCursor","","x and y in window coordinates.",9,N],[13,"MouseRelative","","x and y in relative coordinates.",9,N],[13,"MouseScroll","","x and y in scroll ticks.",9,N],[13,"ControllerAxis","","controller axis move event.",9,N],[13,"Touch","","touch event.",9,N],[4,"HatState","","",N,N],[13,"Centered","","",10,N],[13,"Up","","",10,N],[13,"Right","","",10,N],[13,"Down","","",10,N],[13,"Left","","",10,N],[13,"RightUp","","",10,N],[13,"RightDown","","",10,N],[13,"LeftUp","","",10,N],[13,"LeftDown","","",10,N],[4,"FileDrag","","Models dragging and dropping files.",N,N],[13,"Hover","","A file is being hovered over the window.",11,N],[13,"Drop","","A file has been dropped into the window.",11,N],[13,"Cancel","","A file was hovered, but has exited the window.",11,N],[4,"Input","","Models input events.",N,N],[13,"Button","","Changed button state.",12,N],[13,"Move","","Moved mouse cursor.",12,N],[13,"Text","","Text (usually from keyboard).",12,N],[13,"Resize","","Window got resized.",12,N],[13,"Focus","","Window gained or lost focus.",12,N],[13,"Cursor","","Window gained or lost cursor.",12,N],[13,"FileDrag","","A file is being dragged or dropped over the window.",12,N],[13,"Close","","Window closed.",12,N],[4,"Loop","","Models loop events.",N,N],[13,"Render","","Render graphics.",13,N],[13,"AfterRender","","After rendering and swapping buffers.",13,N],[13,"Update","","Update the state of the application.",13,N],[13,"Idle","","Do background tasks that can be done incrementally.",13,N],[4,"Event","","Models all events.",N,N],[13,"Input","","Input events.",14,N],[13,"Loop","","Events that commonly used by event loops.",14,N],[13,"Custom","","Custom event.",14,N],[0,"controller","","Back-end agnostic controller events.",N,N],[3,"ControllerButton","input::controller","Components of a controller button event. Not guaranteed…",N,N],[12,"id","","Which controller was the button on.",15,N],[12,"button","","Which button was pressed.",15,N],[3,"ControllerHat","","Components of a controller hat move event (d-Pad).",N,N],[12,"id","","Which Controller was the button on.",16,N],[12,"state","","Which button was pressed.",16,N],[12,"which","","Which hat on the controller was changed",16,N],[3,"ControllerAxisArgs","","Components of a controller axis move event. Not guaranteed…",N,N],[12,"id","","Which controller moved.",17,N],[12,"axis","","The axis that moved.",17,N],[12,"position","","Position of the controller. Usually [-1.0, 1.0], though…",17,N],[8,"ControllerAxisEvent","","The position of a controller axis changed.",N,N],[10,"from_controller_axis_args","","Creates a controller axis event.",18,[[["controlleraxisargs"],["self"]],["option"]]],[10,"controller_axis","","Calls closure if this is a controller axis event.",18,[[["self"],["f"]],["option"]]],[11,"controller_axis_args","","Returns controller axis arguments.",18,[[["self"]],["option",["controlleraxisargs"]]]],[11,"new","","Create a new ControllerButton object. Intended for use by…",15,[[["i32"],["u8"]],["self"]]],[11,"new","","Create a new ControllerButton object. Intended for use by…",16,[[["i32"],["u8"],["hatstate"]],["self"]]],[11,"new","","Create a new ControllerAxisArgs object. Intended for use…",17,[[["i32"],["u8"],["f64"]],["self"]]],[0,"keyboard","input","Back-end agnostic keyboard keys.",N,N],[3,"ModifierKey","input::keyboard","",N,N],[4,"Key","","Represent a keyboard key. Keycodes follows SDL…",N,N],[13,"Unknown","","",19,N],[13,"Backspace","","",19,N],[13,"Tab","","",19,N],[13,"Return","","",19,N],[13,"Escape","","",19,N],[13,"Space","","",19,N],[13,"Exclaim","","",19,N],[13,"Quotedbl","","",19,N],[13,"Hash","","",19,N],[13,"Dollar","","",19,N],[13,"Percent","","",19,N],[13,"Ampersand","","",19,N],[13,"Quote","","",19,N],[13,"LeftParen","","",19,N],[13,"RightParen","","",19,N],[13,"Asterisk","","",19,N],[13,"Plus","","",19,N],[13,"Comma","","",19,N],[13,"Minus","","",19,N],[13,"Period","","",19,N],[13,"Slash","","",19,N],[13,"D0","","",19,N],[13,"D1","","",19,N],[13,"D2","","",19,N],[13,"D3","","",19,N],[13,"D4","","",19,N],[13,"D5","","",19,N],[13,"D6","","",19,N],[13,"D7","","",19,N],[13,"D8","","",19,N],[13,"D9","","",19,N],[13,"Colon","","",19,N],[13,"Semicolon","","",19,N],[13,"Less","","",19,N],[13,"Equals","","",19,N],[13,"Greater","","",19,N],[13,"Question","","",19,N],[13,"At","","",19,N],[13,"LeftBracket","","",19,N],[13,"Backslash","","",19,N],[13,"RightBracket","","",19,N],[13,"Caret","","",19,N],[13,"Underscore","","",19,N],[13,"Backquote","","",19,N],[13,"A","","",19,N],[13,"B","","",19,N],[13,"C","","",19,N],[13,"D","","",19,N],[13,"E","","",19,N],[13,"F","","",19,N],[13,"G","","",19,N],[13,"H","","",19,N],[13,"I","","",19,N],[13,"J","","",19,N],[13,"K","","",19,N],[13,"L","","",19,N],[13,"M","","",19,N],[13,"N","","",19,N],[13,"O","","",19,N],[13,"P","","",19,N],[13,"Q","","",19,N],[13,"R","","",19,N],[13,"S","","",19,N],[13,"T","","",19,N],[13,"U","","",19,N],[13,"V","","",19,N],[13,"W","","",19,N],[13,"X","","",19,N],[13,"Y","","",19,N],[13,"Z","","",19,N],[13,"Delete","","",19,N],[13,"CapsLock","","",19,N],[13,"F1","","",19,N],[13,"F2","","",19,N],[13,"F3","","",19,N],[13,"F4","","",19,N],[13,"F5","","",19,N],[13,"F6","","",19,N],[13,"F7","","",19,N],[13,"F8","","",19,N],[13,"F9","","",19,N],[13,"F10","","",19,N],[13,"F11","","",19,N],[13,"F12","","",19,N],[13,"PrintScreen","","",19,N],[13,"ScrollLock","","",19,N],[13,"Pause","","",19,N],[13,"Insert","","",19,N],[13,"Home","","",19,N],[13,"PageUp","","",19,N],[13,"End","","",19,N],[13,"PageDown","","",19,N],[13,"Right","","",19,N],[13,"Left","","",19,N],[13,"Down","","",19,N],[13,"Up","","",19,N],[13,"NumLockClear","","",19,N],[13,"NumPadDivide","","",19,N],[13,"NumPadMultiply","","",19,N],[13,"NumPadMinus","","",19,N],[13,"NumPadPlus","","",19,N],[13,"NumPadEnter","","",19,N],[13,"NumPad1","","",19,N],[13,"NumPad2","","",19,N],[13,"NumPad3","","",19,N],[13,"NumPad4","","",19,N],[13,"NumPad5","","",19,N],[13,"NumPad6","","",19,N],[13,"NumPad7","","",19,N],[13,"NumPad8","","",19,N],[13,"NumPad9","","",19,N],[13,"NumPad0","","",19,N],[13,"NumPadPeriod","","",19,N],[13,"Application","","",19,N],[13,"Power","","",19,N],[13,"NumPadEquals","","",19,N],[13,"F13","","",19,N],[13,"F14","","",19,N],[13,"F15","","",19,N],[13,"F16","","",19,N],[13,"F17","","",19,N],[13,"F18","","",19,N],[13,"F19","","",19,N],[13,"F20","","",19,N],[13,"F21","","",19,N],[13,"F22","","",19,N],[13,"F23","","",19,N],[13,"F24","","",19,N],[13,"Execute","","",19,N],[13,"Help","","",19,N],[13,"Menu","","",19,N],[13,"Select","","",19,N],[13,"Stop","","",19,N],[13,"Again","","",19,N],[13,"Undo","","",19,N],[13,"Cut","","",19,N],[13,"Copy","","",19,N],[13,"Paste","","",19,N],[13,"Find","","",19,N],[13,"Mute","","",19,N],[13,"VolumeUp","","",19,N],[13,"VolumeDown","","",19,N],[13,"NumPadComma","","",19,N],[13,"NumPadEqualsAS400","","",19,N],[13,"AltErase","","",19,N],[13,"Sysreq","","",19,N],[13,"Cancel","","",19,N],[13,"Clear","","",19,N],[13,"Prior","","",19,N],[13,"Return2","","",19,N],[13,"Separator","","",19,N],[13,"Out","","",19,N],[13,"Oper","","",19,N],[13,"ClearAgain","","",19,N],[13,"CrSel","","",19,N],[13,"ExSel","","",19,N],[13,"NumPad00","","",19,N],[13,"NumPad000","","",19,N],[13,"ThousandsSeparator","","",19,N],[13,"DecimalSeparator","","",19,N],[13,"CurrencyUnit","","",19,N],[13,"CurrencySubUnit","","",19,N],[13,"NumPadLeftParen","","",19,N],[13,"NumPadRightParen","","",19,N],[13,"NumPadLeftBrace","","",19,N],[13,"NumPadRightBrace","","",19,N],[13,"NumPadTab","","",19,N],[13,"NumPadBackspace","","",19,N],[13,"NumPadA","","",19,N],[13,"NumPadB","","",19,N],[13,"NumPadC","","",19,N],[13,"NumPadD","","",19,N],[13,"NumPadE","","",19,N],[13,"NumPadF","","",19,N],[13,"NumPadXor","","",19,N],[13,"NumPadPower","","",19,N],[13,"NumPadPercent","","",19,N],[13,"NumPadLess","","",19,N],[13,"NumPadGreater","","",19,N],[13,"NumPadAmpersand","","",19,N],[13,"NumPadDblAmpersand","","",19,N],[13,"NumPadVerticalBar","","",19,N],[13,"NumPadDblVerticalBar","","",19,N],[13,"NumPadColon","","",19,N],[13,"NumPadHash","","",19,N],[13,"NumPadSpace","","",19,N],[13,"NumPadAt","","",19,N],[13,"NumPadExclam","","",19,N],[13,"NumPadMemStore","","",19,N],[13,"NumPadMemRecall","","",19,N],[13,"NumPadMemClear","","",19,N],[13,"NumPadMemAdd","","",19,N],[13,"NumPadMemSubtract","","",19,N],[13,"NumPadMemMultiply","","",19,N],[13,"NumPadMemDivide","","",19,N],[13,"NumPadPlusMinus","","",19,N],[13,"NumPadClear","","",19,N],[13,"NumPadClearEntry","","",19,N],[13,"NumPadBinary","","",19,N],[13,"NumPadOctal","","",19,N],[13,"NumPadDecimal","","",19,N],[13,"NumPadHexadecimal","","",19,N],[13,"LCtrl","","",19,N],[13,"LShift","","",19,N],[13,"LAlt","","",19,N],[13,"LGui","","",19,N],[13,"RCtrl","","",19,N],[13,"RShift","","",19,N],[13,"RAlt","","",19,N],[13,"RGui","","",19,N],[13,"Mode","","",19,N],[13,"AudioNext","","",19,N],[13,"AudioPrev","","",19,N],[13,"AudioStop","","",19,N],[13,"AudioPlay","","",19,N],[13,"AudioMute","","",19,N],[13,"MediaSelect","","",19,N],[13,"Www","","",19,N],[13,"Mail","","",19,N],[13,"Calculator","","",19,N],[13,"Computer","","",19,N],[13,"AcSearch","","",19,N],[13,"AcHome","","",19,N],[13,"AcBack","","",19,N],[13,"AcForward","","",19,N],[13,"AcStop","","",19,N],[13,"AcRefresh","","",19,N],[13,"AcBookmarks","","",19,N],[13,"BrightnessDown","","",19,N],[13,"BrightnessUp","","",19,N],[13,"DisplaySwitch","","",19,N],[13,"KbdIllumToggle","","",19,N],[13,"KbdIllumDown","","",19,N],[13,"KbdIllumUp","","",19,N],[13,"Eject","","",19,N],[13,"Sleep","","",19,N],[18,"NO_MODIFIER","","No modifier.",20,N],[18,"CTRL","","Ctrl.",20,N],[18,"SHIFT","","Shift.",20,N],[18,"ALT","","Alt.",20,N],[18,"GUI","","Gui.",20,N],[18,"CTRL_SHIFT","","Ctrl + Shift.",20,N],[18,"CTRL_ALT","","Ctrl + Alt.",20,N],[18,"CTRL_GUI","","Ctrl + Gui.",20,N],[18,"CTRL_SHIFT_ALT","","Ctrl + Shift + Alt.",20,N],[18,"CTRL_SHIFT_GUI","","Ctrl + Shift + Gui.",20,N],[18,"CTRL_SHIFT_ALT_GUI","","Ctrl + Shift + Alt + Gui.",20,N],[18,"SHIFT_ALT","","Shift + Alt.",20,N],[18,"SHIFT_GUI","","Shift + Gui.",20,N],[18,"SHIFT_ALT_GUI","","Shift + Alt + Gui.",20,N],[18,"ALT_GUI","","Alt + Gui.",20,N],[11,"empty","","Returns an empty set of flags",20,[[],["modifierkey"]]],[11,"all","","Returns the set containing all flags.",20,[[],["modifierkey"]]],[11,"bits","","Returns the raw value of the flags currently stored.",20,[[["self"]],["u8"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",20,[[["u8"]],["option",["modifierkey"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",20,[[["u8"]],["modifierkey"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",20,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",20,[[["self"],["modifierkey"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",20,[[["self"],["modifierkey"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",20,[[["self"],["modifierkey"]]]],[11,"remove","","Removes the specified flags in-place.",20,[[["self"],["modifierkey"]]]],[11,"toggle","","Toggles the specified flags in-place.",20,[[["self"],["modifierkey"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",20,[[["self"],["modifierkey"],["bool"]]]],[11,"event","","Change modifier key state depending on input.",20,[[["self"],["e"]]]],[11,"code","","Returns an id of the key",19,[[["self"]],["i32"]]],[0,"mouse","input","Back-end agnostic mouse buttons.",N,N],[4,"MouseButton","input::mouse","Represent a mouse button.",N,N],[13,"Unknown","","Unknown mouse button.",21,N],[13,"Left","","Left mouse button.",21,N],[13,"Right","","Right mouse button.",21,N],[13,"Middle","","Middle mouse button.",21,N],[13,"X1","","Extra mouse button number 1.",21,N],[13,"X2","","Extra mouse button number 2.",21,N],[13,"Button6","","Mouse button number 6.",21,N],[13,"Button7","","Mouse button number 7.",21,N],[13,"Button8","","Mouse button number 8.",21,N],[8,"MouseCursorEvent","","The position of the mouse cursor",N,N],[10,"from_xy","","Creates a mouse cursor event.",22,[[["f64"],["f64"],["self"]],["option"]]],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",22,[[["self"],["f"]],["option"]]],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",22,[[["self"]],["option"]]],[8,"MouseRelativeEvent","","The relative movement of mouse cursor",N,N],[10,"from_xy","","Creates a mouse relative event.",23,[[["f64"],["f64"],["self"]],["option"]]],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",23,[[["self"],["f"]],["option"]]],[11,"mouse_relative_args","","Returns mouse relative arguments.",23,[[["self"]],["option"]]],[8,"MouseScrollEvent","","The scroll of the mouse wheel",N,N],[10,"from_xy","","Creates a mouse scroll event.",24,[[["f64"],["f64"],["self"]],["option"]]],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",24,[[["self"],["f"]],["option"]]],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",24,[[["self"]],["option"]]],[0,"generic_event","input","Trait for generic events",N,N],[8,"GenericEvent","input::generic_event","Implemented by all events",N,N],[10,"event_id","","The id of this event.",25,[[["self"]],["eventid"]]],[10,"with_args","","Calls closure with arguments",25,[[["self"],["f"]],["u"]]],[11,"viewport","input","Returns viewport information filling entire render area.",2,[[["self"]],["viewport"]]],[11,"new","","Creates arguments for 2D touch.",3,N],[11,"new_3d","","Creates arguments for 3D touch.",3,N],[11,"position","","The position of the touch in 2D.",3,N],[11,"position_3d","","The position of the touch in 3D.",3,N],[11,"pressure","","The pressure magnitude, normalized 0..1.",3,[[["self"]],["f64"]]],[11,"pressure_3d","","The pressure vector in 3D.",3,N],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",N,N],[10,"from_after_render_args","","Creates an after render event.",26,[[["afterrenderargs"],["self"]],["option"]]],[10,"after_render","","Calls closure if this is an after render event.",26,[[["self"],["f"]],["option"]]],[11,"after_render_args","","Returns after render arguments.",26,[[["self"]],["option",["afterrenderargs"]]]],[8,"CloseEvent","","Window is closing.",N,N],[10,"from_close_args","","Creates a close event from arguments.",27,[[["closeargs"],["self"]],["option"]]],[10,"close","","Calls closure if this is a close event.",27,[[["self"],["f"]],["option"]]],[11,"close_args","","Returns close arguments.",27,[[["self"]],["option",["closeargs"]]]],[8,"CursorEvent","","When window gets or loses cursor",N,N],[10,"from_cursor","","Creates a cursor event.",28,[[["bool"],["self"]],["option"]]],[10,"cursor","","Calls closure if this is a cursor event.",28,[[["self"],["f"]],["option"]]],[11,"cursor_args","","Returns cursor arguments.",28,[[["self"]],["option",["bool"]]]],[8,"FocusEvent","","When window gets or loses focus",N,N],[10,"from_focused","","Creates a focus event.",29,[[["bool"],["self"]],["option"]]],[10,"focus","","Calls closure if this is a focus event.",29,[[["self"],["f"]],["option"]]],[11,"focus_args","","Returns focus arguments.",29,[[["self"]],["option",["bool"]]]],[8,"IdleEvent","","When background tasks should be performed",N,N],[10,"from_idle_args","","Creates an idle event.",30,[[["idleargs"],["self"]],["option"]]],[11,"from_dt","","Creates an update event with delta time.",30,[[["f64"],["self"]],["option"]]],[10,"idle","","Calls closure if this is an idle event.",30,[[["self"],["f"]],["option"]]],[11,"idle_args","","Returns idle arguments.",30,[[["self"]],["option",["idleargs"]]]],[8,"ButtonEvent","","Changed button state.",N,N],[10,"from_button_args","","Creates a button event.",31,[[["buttonargs"],["self"]],["option"]]],[10,"button","","Calls closure if this is a button event.",31,[[["self"],["f"]],["option"]]],[11,"button_args","","Returns button arguments.",31,[[["self"]],["option",["buttonargs"]]]],[8,"PressEvent","","The press of a button",N,N],[10,"from_button","","Creates a press event.",32,[[["button"],["self"]],["option"]]],[10,"press","","Calls closure if this is a press event.",32,[[["self"],["f"]],["option"]]],[11,"press_args","","Returns press arguments.",32,[[["self"]],["option",["button"]]]],[8,"ReleaseEvent","","The release of a button",N,N],[10,"from_button","","Creates a release event.",33,[[["button"],["self"]],["option"]]],[10,"release","","Calls closure if this is a release event.",33,[[["self"],["f"]],["option"]]],[11,"release_args","","Returns release arguments.",33,[[["self"]],["option",["button"]]]],[8,"ResizeEvent","","When the window is resized",N,N],[10,"from_width_height","","Creates a resize event.",34,[[["f64"],["f64"],["self"]],["option"]]],[10,"resize","","Calls closure if this is a resize event.",34,[[["self"],["f"]],["option"]]],[11,"resize_args","","Returns resize arguments.",34,[[["self"]],["option"]]],[8,"RenderEvent","","When the next frame should be rendered",N,N],[10,"from_render_args","","Creates a render event.",35,[[["renderargs"],["self"]],["option"]]],[10,"render","","Calls closure if this is a render event.",35,[[["self"],["f"]],["option"]]],[11,"render_args","","Returns render arguments.",35,[[["self"]],["option",["renderargs"]]]],[8,"TextEvent","","When receiving text from user, such as typing a character",N,N],[10,"from_text","","Creates a text event.",36,[[["str"],["self"]],["option"]]],[10,"text","","Calls closure if this is a text event.",36,[[["self"],["f"]],["option"]]],[11,"text_args","","Returns text arguments.",36,[[["self"]],["option",["string"]]]],[8,"TouchEvent","","When a touch is started, moved, ended or cancelled.",N,N],[10,"from_touch_args","","Creates a touch event.",37,[[["touchargs"],["self"]],["option"]]],[10,"touch","","Calls closure if this is a touch event.",37,[[["self"],["f"]],["option"]]],[11,"touch_args","","Returns touch arguments.",37,[[["self"]],["option",["touchargs"]]]],[8,"UpdateEvent","","When the application state should be updated",N,N],[10,"from_update_args","","Creates an update event.",38,[[["updateargs"],["self"]],["option"]]],[11,"from_dt","","Creates an update event with delta time.",38,[[["f64"],["self"]],["option"]]],[10,"update","","Calls closure if this is an update event.",38,[[["self"],["f"]],["option"]]],[11,"update_args","","Returns update arguments.",38,[[["self"]],["option",["updateargs"]]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","input::controller","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","input::keyboard","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","input::mouse","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from_controller_axis_args","input","",14,[[["controlleraxisargs"],["self"]],["option"]]],[11,"controller_axis","","",14,[[["self"],["f"]],["option"]]],[11,"from_xy","","",14,[[["f64"],["f64"],["self"]],["option"]]],[11,"mouse_cursor","","",14,[[["self"],["f"]],["option"]]],[11,"from_xy","","",14,[[["f64"],["f64"],["self"]],["option"]]],[11,"mouse_relative","","",14,[[["self"],["f"]],["option"]]],[11,"from_xy","","",14,[[["f64"],["f64"],["self"]],["option"]]],[11,"mouse_scroll","","",14,[[["self"],["f"]],["option"]]],[11,"event_id","","",14,[[["self"]],["eventid"]]],[11,"with_args","","",14,[[["self"],["f"]],["u"]]],[11,"from_after_render_args","","",14,[[["afterrenderargs"],["self"]],["option"]]],[11,"after_render","","",14,[[["self"],["f"]],["option"]]],[11,"from_button_args","","",14,[[["buttonargs"],["self"]],["option"]]],[11,"button","","",14,[[["self"],["f"]],["option"]]],[11,"from_close_args","","",14,[[["closeargs"],["self"]],["option"]]],[11,"close","","",14,[[["self"],["f"]],["option"]]],[11,"from_cursor","","",14,[[["bool"],["self"]],["option"]]],[11,"cursor","","",14,[[["self"],["f"]],["option"]]],[11,"from_focused","","",14,[[["bool"],["self"]],["option"]]],[11,"focus","","",14,[[["self"],["f"]],["option"]]],[11,"from_idle_args","","",14,[[["idleargs"],["self"]],["option"]]],[11,"idle","","",14,[[["self"],["f"]],["option"]]],[11,"from_render_args","","",14,[[["renderargs"],["self"]],["option"]]],[11,"render","","",14,[[["self"],["f"]],["option"]]],[11,"from_width_height","","",14,[[["f64"],["f64"],["self"]],["option"]]],[11,"resize","","",14,[[["self"],["f"]],["option"]]],[11,"from_text","","",14,[[["str"],["self"]],["option"]]],[11,"text","","",14,[[["self"],["f"]],["option"]]],[11,"from_touch_args","","",14,[[["touchargs"],["self"]],["option"]]],[11,"touch","","",14,[[["self"],["f"]],["option"]]],[11,"from_update_args","","",14,[[["updateargs"],["self"]],["option"]]],[11,"update","","",14,[[["self"],["f"]],["option"]]],[11,"into","","",14,[[["self"]],["option",["input"]]]],[11,"into","","",14,[[["self"]],["option",["loop"]]]],[11,"extend","input::keyboard","",20,[[["self"],["t"]]]],[11,"partial_cmp","","",20,[[["self"],["modifierkey"]],["option",["ordering"]]]],[11,"lt","","",20,[[["self"],["modifierkey"]],["bool"]]],[11,"le","","",20,[[["self"],["modifierkey"]],["bool"]]],[11,"gt","","",20,[[["self"],["modifierkey"]],["bool"]]],[11,"ge","","",20,[[["self"],["modifierkey"]],["bool"]]],[11,"partial_cmp","","",19,[[["self"],["key"]],["option",["ordering"]]]],[11,"partial_cmp","input::mouse","",21,[[["self"],["mousebutton"]],["option",["ordering"]]]],[11,"default","input::keyboard","",20,[[],["modifierkey"]]],[11,"eq","input::controller","",15,[[["self"],["controllerbutton"]],["bool"]]],[11,"ne","","",15,[[["self"],["controllerbutton"]],["bool"]]],[11,"eq","","",16,[[["self"],["controllerhat"]],["bool"]]],[11,"ne","","",16,[[["self"],["controllerhat"]],["bool"]]],[11,"eq","","",17,[[["self"],["controlleraxisargs"]],["bool"]]],[11,"ne","","",17,[[["self"],["controlleraxisargs"]],["bool"]]],[11,"eq","input::keyboard","",20,[[["self"],["modifierkey"]],["bool"]]],[11,"ne","","",20,[[["self"],["modifierkey"]],["bool"]]],[11,"eq","","",19,[[["self"],["key"]],["bool"]]],[11,"eq","input::mouse","",21,[[["self"],["mousebutton"]],["bool"]]],[11,"eq","input","",39,[[["self"],["afterrenderargs"]],["bool"]]],[11,"eq","","",6,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",1,[[["self"],["buttonargs"]],["bool"]]],[11,"ne","","",1,[[["self"],["buttonargs"]],["bool"]]],[11,"eq","","",40,[[["self"],["closeargs"]],["bool"]]],[11,"eq","","",0,[[["self"],["idleargs"]],["bool"]]],[11,"ne","","",0,[[["self"],["idleargs"]],["bool"]]],[11,"eq","","",2,[[["self"],["renderargs"]],["bool"]]],[11,"ne","","",2,[[["self"],["renderargs"]],["bool"]]],[11,"eq","","",7,[[["self"],["touch"]],["bool"]]],[11,"eq","","",3,[[["self"],["touchargs"]],["bool"]]],[11,"ne","","",3,[[["self"],["touchargs"]],["bool"]]],[11,"eq","","",4,[[["self"],["updateargs"]],["bool"]]],[11,"ne","","",4,[[["self"],["updateargs"]],["bool"]]],[11,"eq","","",5,[[["self"],["eventid"]],["bool"]]],[11,"ne","","",5,[[["self"],["eventid"]],["bool"]]],[11,"eq","","",8,[[["self"],["button"]],["bool"]]],[11,"ne","","",8,[[["self"],["button"]],["bool"]]],[11,"eq","","",9,[[["self"],["motion"]],["bool"]]],[11,"ne","","",9,[[["self"],["motion"]],["bool"]]],[11,"eq","","",10,[[["self"],["hatstate"]],["bool"]]],[11,"eq","","",11,[[["self"],["filedrag"]],["bool"]]],[11,"ne","","",11,[[["self"],["filedrag"]],["bool"]]],[11,"eq","","",12,[[["self"],["input"]],["bool"]]],[11,"ne","","",12,[[["self"],["input"]],["bool"]]],[11,"eq","","",13,[[["self"],["loop"]],["bool"]]],[11,"ne","","",13,[[["self"],["loop"]],["bool"]]],[11,"eq","","",14,[[["self"],["event"]],["bool"]]],[11,"from","input::keyboard","",19,[[["u32"]],["key"]]],[11,"from","input::mouse","",21,[[["u32"]],["mousebutton"]]],[11,"from","input","",8,[[["key"]],["self"]]],[11,"from","","",8,[[["mousebutton"]],["self"]]],[11,"from","","",8,[[["controllerbutton"]],["self"]]],[11,"from","","",12,[[["buttonargs"]],["self"]]],[11,"from","","",9,[[["controlleraxisargs"]],["self"]]],[11,"from","","",12,[[["controlleraxisargs"]],["self"]]],[11,"from","","",9,[[["touchargs"]],["self"]]],[11,"from","","",12,[[["touchargs"]],["self"]]],[11,"from","","",12,[[["motion"]],["self"]]],[11,"from","","",13,[[["renderargs"]],["self"]]],[11,"from","","",14,[[["renderargs"]],["self"]]],[11,"from","","",13,[[["afterrenderargs"]],["self"]]],[11,"from","","",14,[[["afterrenderargs"]],["self"]]],[11,"from","","",13,[[["updateargs"]],["self"]]],[11,"from","","",14,[[["updateargs"]],["self"]]],[11,"from","","",13,[[["idleargs"]],["self"]]],[11,"from","","",14,[[["idleargs"]],["self"]]],[11,"from","","",12,[[["closeargs"]],["self"]]],[11,"from","","",14,[[["t"]],["self"]]],[11,"from","","",14,[[["loop"]],["self"]]],[11,"cmp","input::keyboard","",20,[[["self"],["modifierkey"]],["ordering"]]],[11,"cmp","","",19,[[["self"],["key"]],["ordering"]]],[11,"cmp","input::mouse","",21,[[["self"],["mousebutton"]],["ordering"]]],[11,"clone","input::controller","",15,[[["self"]],["controllerbutton"]]],[11,"clone","","",16,[[["self"]],["controllerhat"]]],[11,"clone","","",17,[[["self"]],["controlleraxisargs"]]],[11,"clone","input::keyboard","",20,[[["self"]],["modifierkey"]]],[11,"clone","","",19,[[["self"]],["key"]]],[11,"clone","input::mouse","",21,[[["self"]],["mousebutton"]]],[11,"clone","input","",39,[[["self"]],["afterrenderargs"]]],[11,"clone","","",6,[[["self"]],["buttonstate"]]],[11,"clone","","",1,[[["self"]],["buttonargs"]]],[11,"clone","","",40,[[["self"]],["closeargs"]]],[11,"clone","","",0,[[["self"]],["idleargs"]]],[11,"clone","","",2,[[["self"]],["renderargs"]]],[11,"clone","","",7,[[["self"]],["touch"]]],[11,"clone","","",3,[[["self"]],["touchargs"]]],[11,"clone","","",4,[[["self"]],["updateargs"]]],[11,"clone","","",5,[[["self"]],["eventid"]]],[11,"clone","","",8,[[["self"]],["button"]]],[11,"clone","","",9,[[["self"]],["motion"]]],[11,"clone","","",10,[[["self"]],["hatstate"]]],[11,"clone","","",11,[[["self"]],["filedrag"]]],[11,"clone","","",12,[[["self"]],["input"]]],[11,"clone","","",13,[[["self"]],["loop"]]],[11,"clone","","",14,[[["self"]],["event"]]],[11,"fmt","input::controller","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","input::keyboard","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","input::mouse","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","input","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"sub","input::keyboard","Returns the set difference of the two sets of flags.",20,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"sub_assign","","Disables all flags enabled in the set.",20,[[["self"],["modifierkey"]]]],[11,"not","","Returns the complement of this set of flags.",20,[[["self"]],["modifierkey"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",20,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"bitor","","Returns the union of the two sets of flags.",20,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",20,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",20,[[["self"],["modifierkey"]]]],[11,"bitor_assign","","Adds the set of flags.",20,[[["self"],["modifierkey"]]]],[11,"bitxor_assign","","Toggles the set of flags.",20,[[["self"],["modifierkey"]]]],[11,"hash","input::controller","",15,N],[11,"hash","","",16,N],[11,"hash","input::keyboard","",20,N],[11,"hash","","",19,N],[11,"hash","input::mouse","",21,N],[11,"hash","input","",6,N],[11,"hash","","",1,N],[11,"hash","","",8,N],[11,"hash","","",10,N],[11,"from_iter","input::keyboard","",20,[[["t"]],["modifierkey"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"serialize","input::controller","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","input::keyboard","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"serialize","input::mouse","",21,[[["self"],["__s"]],["result"]]],[11,"serialize","input","",39,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",40,[[["self"],["__s"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"deserialize","input::controller","",15,[[["__d"]],["result"]]],[11,"deserialize","","",16,[[["__d"]],["result"]]],[11,"deserialize","","",17,[[["__d"]],["result"]]],[11,"deserialize","input::keyboard","",20,[[["__d"]],["result"]]],[11,"deserialize","","",19,[[["__d"]],["result"]]],[11,"deserialize","input::mouse","",21,[[["__d"]],["result"]]],[11,"deserialize","input","",39,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",40,[[["__d"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"deserialize","","",13,[[["__d"]],["result"]]],[11,"after_render_args","","Returns after render arguments.",26,[[["self"]],["option",["afterrenderargs"]]]],[11,"button_args","","Returns button arguments.",31,[[["self"]],["option",["buttonargs"]]]],[11,"press_args","","Returns press arguments.",32,[[["self"]],["option",["button"]]]],[11,"release_args","","Returns release arguments.",33,[[["self"]],["option",["button"]]]],[11,"close_args","","Returns close arguments.",27,[[["self"]],["option",["closeargs"]]]],[11,"cursor_args","","Returns cursor arguments.",28,[[["self"]],["option",["bool"]]]],[11,"focus_args","","Returns focus arguments.",29,[[["self"]],["option",["bool"]]]],[11,"from_dt","","Creates an update event with delta time.",30,[[["f64"],["self"]],["option"]]],[11,"idle_args","","Returns idle arguments.",30,[[["self"]],["option",["idleargs"]]]],[11,"render_args","","Returns render arguments.",35,[[["self"]],["option",["renderargs"]]]],[11,"resize_args","","Returns resize arguments.",34,[[["self"]],["option"]]],[11,"text_args","","Returns text arguments.",36,[[["self"]],["option",["string"]]]],[11,"touch_args","","Returns touch arguments.",37,[[["self"]],["option",["touchargs"]]]],[11,"from_dt","","Creates an update event with delta time.",38,[[["f64"],["self"]],["option"]]],[11,"update_args","","Returns update arguments.",38,[[["self"]],["option",["updateargs"]]]]],"paths":[[3,"IdleArgs"],[3,"ButtonArgs"],[3,"RenderArgs"],[3,"TouchArgs"],[3,"UpdateArgs"],[3,"EventId"],[4,"ButtonState"],[4,"Touch"],[4,"Button"],[4,"Motion"],[4,"HatState"],[4,"FileDrag"],[4,"Input"],[4,"Loop"],[4,"Event"],[3,"ControllerButton"],[3,"ControllerHat"],[3,"ControllerAxisArgs"],[8,"ControllerAxisEvent"],[4,"Key"],[3,"ModifierKey"],[4,"MouseButton"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"GenericEvent"],[8,"AfterRenderEvent"],[8,"CloseEvent"],[8,"CursorEvent"],[8,"FocusEvent"],[8,"IdleEvent"],[8,"ButtonEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"ResizeEvent"],[8,"RenderEvent"],[8,"TextEvent"],[8,"TouchEvent"],[8,"UpdateEvent"],[3,"AfterRenderArgs"],[3,"CloseArgs"]]};
searchIndex["instant"]={"doc":"","items":[[3,"Duration","instant","A `Duration` type to represent a span of time, typically…",N,N],[6,"Instant","","",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"mul","","",0,[[["self"],["u32"]],["duration"]]],[11,"default","","",0,[[],["duration"]]],[11,"div","","",0,[[["self"],["u32"]],["duration"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"add","","",0,[[["self"],["duration"]],["duration"]]],[11,"hash","","",0,N],[11,"sum","","",0,[[["i"]],["duration"]]],[11,"sum","","",0,[[["i"]],["duration"]]],[11,"div_assign","","",0,N],[11,"mul_assign","","",0,N],[11,"sub_assign","","",0,N],[11,"add_assign","","",0,N],[11,"clone","","",0,[[["self"]],["duration"]]],[11,"partial_cmp","","",0,[[["self"],["duration"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["duration"]],["bool"]]],[11,"le","","",0,[[["self"],["duration"]],["bool"]]],[11,"gt","","",0,[[["self"],["duration"]],["bool"]]],[11,"ge","","",0,[[["self"],["duration"]],["bool"]]],[11,"cmp","","",0,[[["self"],["duration"]],["ordering"]]],[11,"sub","","",0,[[["self"],["duration"]],["duration"]]],[11,"eq","","",0,[[["self"],["duration"]],["bool"]]],[11,"ne","","",0,[[["self"],["duration"]],["bool"]]],[11,"new","","Creates a new `Duration` from the specified number of…",0,[[["u64"],["u32"]],["duration"]]],[11,"from_secs","","Creates a new `Duration` from the specified number of…",0,[[["u64"]],["duration"]]],[11,"from_millis","","Creates a new `Duration` from the specified number of…",0,[[["u64"]],["duration"]]],[11,"from_micros","","Creates a new `Duration` from the specified number of…",0,[[["u64"]],["duration"]]],[11,"from_nanos","","Creates a new `Duration` from the specified number of…",0,[[["u64"]],["duration"]]],[11,"as_secs","","Returns the number of whole seconds contained by this…",0,[[["self"]],["u64"]]],[11,"subsec_millis","","Returns the fractional part of this `Duration`, in whole…",0,[[["self"]],["u32"]]],[11,"subsec_micros","","Returns the fractional part of this `Duration`, in whole…",0,[[["self"]],["u32"]]],[11,"subsec_nanos","","Returns the fractional part of this `Duration`, in…",0,[[["self"]],["u32"]]],[11,"as_millis","","Returns the total number of whole milliseconds contained…",0,[[["self"]],["u128"]]],[11,"as_micros","","Returns the total number of whole microseconds contained…",0,[[["self"]],["u128"]]],[11,"as_nanos","","Returns the total number of nanoseconds contained by this…",0,[[["self"]],["u128"]]],[11,"checked_add","","Checked `Duration` addition. Computes `self + other`,…",0,[[["self"],["duration"]],["option",["duration"]]]],[11,"checked_sub","","Checked `Duration` subtraction. Computes `self - other`,…",0,[[["self"],["duration"]],["option",["duration"]]]],[11,"checked_mul","","Checked `Duration` multiplication. Computes `self *…",0,[[["self"],["u32"]],["option",["duration"]]]],[11,"checked_div","","Checked `Duration` division. Computes `self / other`,…",0,[[["self"],["u32"]],["option",["duration"]]]],[11,"as_float_secs","","Returns the number of seconds contained by this `Duration`…",0,[[["self"]],["f64"]]],[11,"from_float_secs","","Creates a new `Duration` from the specified number of…",0,[[["f64"]],["duration"]]],[11,"mul_f64","","Multiply `Duration` by `f64`.",0,[[["self"],["f64"]],["duration"]]],[11,"div_f64","","Divide `Duration` by `f64`.",0,[[["self"],["f64"]],["duration"]]],[11,"div_duration","","Divide `Duration` by `Duration` and return `f64`.",0,[[["self"],["duration"]],["f64"]]]],"paths":[[3,"Duration"]]};
searchIndex["jpeg_decoder"]={"doc":"This crate contains a JPEG decoder.","items":[[3,"Decoder","jpeg_decoder","JPEG decoder",N,N],[3,"ImageInfo","","Represents metadata of an image.",N,N],[12,"width","","The width of the image, in pixels.",0,N],[12,"height","","The height of the image, in pixels.",0,N],[12,"pixel_format","","The pixel format of the image.",0,N],[4,"PixelFormat","","An enumeration over combinations of color spaces and bit…",N,N],[13,"L8","","Luminance (grayscale), 8 bits",1,N],[13,"RGB24","","RGB, 8 bits per channel",1,N],[13,"CMYK32","","CMYK, 8 bits per channel",1,N],[4,"Error","","Errors that can occur while decoding a JPEG image.",N,N],[13,"Format","","The image is not formatted properly. The string contains…",2,N],[13,"Unsupported","","The image makes use of a JPEG feature not (currently)…",2,N],[13,"Io","","An I/O error occurred while decoding the image.",2,N],[13,"Internal","","An internal error occurred while decoding the image.",2,N],[4,"UnsupportedFeature","","An enumeration over JPEG features (currently) unsupported…",N,N],[13,"Hierarchical","","Hierarchical JPEG.",3,N],[13,"Lossless","","Lossless JPEG.",3,N],[13,"ArithmeticEntropyCoding","","JPEG using arithmetic entropy coding instead of Huffman…",3,N],[13,"SamplePrecision","","Sample precision in bits. 8 bit sample precision is what…",3,N],[13,"ComponentCount","","Number of components in an image. 1, 3 and 4 components…",3,N],[13,"DNL","","An image can specify a zero height in the frame header and…",3,N],[13,"SubsamplingRatio","","Subsampling ratio.",3,N],[13,"NonIntegerSubsamplingRatio","","A subsampling ratio not representable as an integer.",3,N],[11,"new","","Creates a new `Decoder` using the reader `reader`.",4,[[["r"]],["decoder"]]],[11,"info","","Returns metadata about the image.",4,[[["self"]],["option",["imageinfo"]]]],[11,"read_info","","Tries to read metadata from the image without decoding it.",4,[[["self"]],["result",["error"]]]],[11,"decode","","Decodes the image and returns the decoded pixels if…",4,[[["self"]],["result",["vec","error"]]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"eq","","",1,[[["self"],["pixelformat"]],["bool"]]],[11,"eq","","",0,[[["self"],["imageinfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["imageinfo"]],["bool"]]],[11,"from","","",2,[[["ioerror"]],["error"]]],[11,"from","","",2,[[["recverror"]],["error"]]],[11,"from","","",2,[[["senderror"]],["error"]]],[11,"clone","","",1,[[["self"]],["pixelformat"]]],[11,"clone","","",0,[[["self"]],["imageinfo"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["stderror"]]]]],"paths":[[3,"ImageInfo"],[4,"PixelFormat"],[4,"Error"],[4,"UnsupportedFeature"],[3,"Decoder"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","items":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group","","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",6,N],[12,"ipv6mr_interface","","",6,N],[3,"hostent","","",N,N],[12,"h_name","","",7,N],[12,"h_aliases","","",7,N],[12,"h_addrtype","","",7,N],[12,"h_length","","",7,N],[12,"h_addr_list","","",7,N],[3,"iovec","","",N,N],[12,"iov_base","","",8,N],[12,"iov_len","","",8,N],[3,"pollfd","","",N,N],[12,"fd","","",9,N],[12,"events","","",9,N],[12,"revents","","",9,N],[3,"winsize","","",N,N],[12,"ws_row","","",10,N],[12,"ws_col","","",10,N],[12,"ws_xpixel","","",10,N],[12,"ws_ypixel","","",10,N],[3,"linger","","",N,N],[12,"l_onoff","","",11,N],[12,"l_linger","","",11,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",12,N],[3,"itimerval","","",N,N],[12,"it_interval","","",13,N],[12,"it_value","","",13,N],[3,"tms","","",N,N],[12,"tms_utime","","",14,N],[12,"tms_stime","","",14,N],[12,"tms_cutime","","",14,N],[12,"tms_cstime","","",14,N],[3,"servent","","",N,N],[12,"s_name","","",15,N],[12,"s_aliases","","",15,N],[12,"s_port","","",15,N],[12,"s_proto","","",15,N],[3,"protoent","","",N,N],[12,"p_name","","",16,N],[12,"p_aliases","","",16,N],[12,"p_proto","","",16,N],[3,"sockaddr","","",N,N],[12,"sa_len","","",17,N],[12,"sa_family","","",17,N],[12,"sa_data","","",17,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_len","","",18,N],[12,"sin6_family","","",18,N],[12,"sin6_port","","",18,N],[12,"sin6_flowinfo","","",18,N],[12,"sin6_addr","","",18,N],[12,"sin6_scope_id","","",18,N],[3,"passwd","","",N,N],[12,"pw_name","","",19,N],[12,"pw_passwd","","",19,N],[12,"pw_uid","","",19,N],[12,"pw_gid","","",19,N],[12,"pw_change","","",19,N],[12,"pw_class","","",19,N],[12,"pw_gecos","","",19,N],[12,"pw_dir","","",19,N],[12,"pw_shell","","",19,N],[12,"pw_expire","","",19,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",20,N],[12,"ifa_name","","",20,N],[12,"ifa_flags","","",20,N],[12,"ifa_addr","","",20,N],[12,"ifa_netmask","","",20,N],[12,"ifa_dstaddr","","",20,N],[12,"ifa_data","","",20,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",21,N],[12,"tm_min","","",21,N],[12,"tm_hour","","",21,N],[12,"tm_mday","","",21,N],[12,"tm_mon","","",21,N],[12,"tm_year","","",21,N],[12,"tm_wday","","",21,N],[12,"tm_yday","","",21,N],[12,"tm_isdst","","",21,N],[12,"tm_gmtoff","","",21,N],[12,"tm_zone","","",21,N],[3,"msghdr","","",N,N],[12,"msg_name","","",22,N],[12,"msg_namelen","","",22,N],[12,"msg_iov","","",22,N],[12,"msg_iovlen","","",22,N],[12,"msg_control","","",22,N],[12,"msg_controllen","","",22,N],[12,"msg_flags","","",22,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",23,N],[12,"cmsg_level","","",23,N],[12,"cmsg_type","","",23,N],[3,"fsid_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",24,N],[12,"if_name","","",24,N],[3,"sockaddr_un","","",N,N],[12,"sun_len","","",25,N],[12,"sun_family","","",25,N],[12,"sun_path","","",25,N],[3,"utsname","","",N,N],[12,"sysname","","",26,N],[12,"nodename","","",26,N],[12,"release","","",26,N],[12,"version","","",26,N],[12,"machine","","",26,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",27,N],[12,"imr_interface","","",27,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",28,N],[12,"aio_offset","","",28,N],[12,"aio_buf","","",28,N],[12,"aio_nbytes","","",28,N],[12,"aio_reqprio","","",28,N],[12,"aio_sigevent","","",28,N],[12,"aio_lio_opcode","","",28,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",29,N],[12,"gl_offs","","",29,N],[12,"gl_pathv","","",29,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",30,N],[12,"ai_family","","",30,N],[12,"ai_socktype","","",30,N],[12,"ai_protocol","","",30,N],[12,"ai_addrlen","","",30,N],[12,"ai_canonname","","",30,N],[12,"ai_addr","","",30,N],[12,"ai_next","","",30,N],[3,"mach_timebase_info","","",N,N],[12,"numer","","",31,N],[12,"denom","","",31,N],[3,"stat","","",N,N],[12,"st_dev","","",32,N],[12,"st_mode","","",32,N],[12,"st_nlink","","",32,N],[12,"st_ino","","",32,N],[12,"st_uid","","",32,N],[12,"st_gid","","",32,N],[12,"st_rdev","","",32,N],[12,"st_atime","","",32,N],[12,"st_atime_nsec","","",32,N],[12,"st_mtime","","",32,N],[12,"st_mtime_nsec","","",32,N],[12,"st_ctime","","",32,N],[12,"st_ctime_nsec","","",32,N],[12,"st_birthtime","","",32,N],[12,"st_birthtime_nsec","","",32,N],[12,"st_size","","",32,N],[12,"st_blocks","","",32,N],[12,"st_blksize","","",32,N],[12,"st_flags","","",32,N],[12,"st_gen","","",32,N],[12,"st_lspare","","",32,N],[12,"st_qspare","","",32,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"pthread_rwlockattr_t","","",N,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",33,N],[12,"si_errno","","",33,N],[12,"si_code","","",33,N],[12,"si_pid","","",33,N],[12,"si_uid","","",33,N],[12,"si_status","","",33,N],[12,"si_addr","","",33,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",34,N],[12,"sa_mask","","",34,N],[12,"sa_flags","","",34,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",35,N],[12,"ss_size","","",35,N],[12,"ss_flags","","",35,N],[3,"fstore_t","","",N,N],[12,"fst_flags","","",36,N],[12,"fst_posmode","","",36,N],[12,"fst_offset","","",36,N],[12,"fst_length","","",36,N],[12,"fst_bytesalloc","","",36,N],[3,"radvisory","","",N,N],[12,"ra_offset","","",37,N],[12,"ra_count","","",37,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",38,N],[12,"f_frsize","","",38,N],[12,"f_blocks","","",38,N],[12,"f_bfree","","",38,N],[12,"f_bavail","","",38,N],[12,"f_files","","",38,N],[12,"f_ffree","","",38,N],[12,"f_favail","","",38,N],[12,"f_fsid","","",38,N],[12,"f_flag","","",38,N],[12,"f_namemax","","",38,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",39,N],[12,"dli_fbase","","",39,N],[12,"dli_sname","","",39,N],[12,"dli_saddr","","",39,N],[3,"sockaddr_in","","",N,N],[12,"sin_len","","",40,N],[12,"sin_family","","",40,N],[12,"sin_port","","",40,N],[12,"sin_addr","","",40,N],[12,"sin_zero","","",40,N],[3,"kevent64_s","","",N,N],[12,"ident","","",41,N],[12,"filter","","",41,N],[12,"flags","","",41,N],[12,"fflags","","",41,N],[12,"data","","",41,N],[12,"udata","","",41,N],[12,"ext","","",41,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",42,N],[12,"dqb_bsoftlimit","","",42,N],[12,"dqb_curbytes","","",42,N],[12,"dqb_ihardlimit","","",42,N],[12,"dqb_isoftlimit","","",42,N],[12,"dqb_curinodes","","",42,N],[12,"dqb_btime","","",42,N],[12,"dqb_itime","","",42,N],[12,"dqb_id","","",42,N],[12,"dqb_spare","","",42,N],[3,"if_msghdr","","",N,N],[12,"ifm_msglen","","",43,N],[12,"ifm_version","","",43,N],[12,"ifm_type","","",43,N],[12,"ifm_addrs","","",43,N],[12,"ifm_flags","","",43,N],[12,"ifm_index","","",43,N],[12,"ifm_data","","",43,N],[3,"termios","","",N,N],[12,"c_iflag","","",44,N],[12,"c_oflag","","",44,N],[12,"c_cflag","","",44,N],[12,"c_lflag","","",44,N],[12,"c_cc","","",44,N],[12,"c_ispeed","","",44,N],[12,"c_ospeed","","",44,N],[3,"flock","","",N,N],[12,"l_start","","",45,N],[12,"l_len","","",45,N],[12,"l_pid","","",45,N],[12,"l_type","","",45,N],[12,"l_whence","","",45,N],[3,"sf_hdtr","","",N,N],[12,"headers","","",46,N],[12,"hdr_cnt","","",46,N],[12,"trailers","","",46,N],[12,"trl_cnt","","",46,N],[3,"lconv","","",N,N],[12,"decimal_point","","",47,N],[12,"thousands_sep","","",47,N],[12,"grouping","","",47,N],[12,"int_curr_symbol","","",47,N],[12,"currency_symbol","","",47,N],[12,"mon_decimal_point","","",47,N],[12,"mon_thousands_sep","","",47,N],[12,"mon_grouping","","",47,N],[12,"positive_sign","","",47,N],[12,"negative_sign","","",47,N],[12,"int_frac_digits","","",47,N],[12,"frac_digits","","",47,N],[12,"p_cs_precedes","","",47,N],[12,"p_sep_by_space","","",47,N],[12,"n_cs_precedes","","",47,N],[12,"n_sep_by_space","","",47,N],[12,"p_sign_posn","","",47,N],[12,"n_sign_posn","","",47,N],[12,"int_p_cs_precedes","","",47,N],[12,"int_n_cs_precedes","","",47,N],[12,"int_p_sep_by_space","","",47,N],[12,"int_n_sep_by_space","","",47,N],[12,"int_p_sign_posn","","",47,N],[12,"int_n_sign_posn","","",47,N],[3,"sigevent","","",N,N],[12,"sigev_notify","","",48,N],[12,"sigev_signo","","",48,N],[12,"sigev_value","","",48,N],[12,"sigev_notify_attributes","","",48,N],[3,"proc_taskinfo","","",N,N],[12,"pti_virtual_size","","",49,N],[12,"pti_resident_size","","",49,N],[12,"pti_total_user","","",49,N],[12,"pti_total_system","","",49,N],[12,"pti_threads_user","","",49,N],[12,"pti_threads_system","","",49,N],[12,"pti_policy","","",49,N],[12,"pti_faults","","",49,N],[12,"pti_pageins","","",49,N],[12,"pti_cow_faults","","",49,N],[12,"pti_messages_sent","","",49,N],[12,"pti_messages_received","","",49,N],[12,"pti_syscalls_mach","","",49,N],[12,"pti_syscalls_unix","","",49,N],[12,"pti_csw","","",49,N],[12,"pti_threadnum","","",49,N],[12,"pti_numrunning","","",49,N],[12,"pti_priority","","",49,N],[3,"proc_bsdinfo","","",N,N],[12,"pbi_flags","","",50,N],[12,"pbi_status","","",50,N],[12,"pbi_xstatus","","",50,N],[12,"pbi_pid","","",50,N],[12,"pbi_ppid","","",50,N],[12,"pbi_uid","","",50,N],[12,"pbi_gid","","",50,N],[12,"pbi_ruid","","",50,N],[12,"pbi_rgid","","",50,N],[12,"pbi_svuid","","",50,N],[12,"pbi_svgid","","",50,N],[12,"rfu_1","","",50,N],[12,"pbi_comm","","",50,N],[12,"pbi_name","","",50,N],[12,"pbi_nfiles","","",50,N],[12,"pbi_pgid","","",50,N],[12,"pbi_pjobc","","",50,N],[12,"e_tdev","","",50,N],[12,"e_tpgid","","",50,N],[12,"pbi_nice","","",50,N],[12,"pbi_start_tvsec","","",50,N],[12,"pbi_start_tvusec","","",50,N],[3,"proc_taskallinfo","","",N,N],[12,"pbsd","","",51,N],[12,"ptinfo","","",51,N],[3,"xsw_usage","","",N,N],[12,"xsu_total","","",52,N],[12,"xsu_avail","","",52,N],[12,"xsu_used","","",52,N],[12,"xsu_pagesize","","",52,N],[12,"xsu_encrypted","","",52,N],[3,"xucred","","",N,N],[12,"cr_version","","",53,N],[12,"cr_uid","","",53,N],[12,"cr_ngroups","","",53,N],[12,"cr_groups","","",53,N],[3,"mach_header","","",N,N],[12,"magic","","",54,N],[12,"cputype","","",54,N],[12,"cpusubtype","","",54,N],[12,"filetype","","",54,N],[12,"ncmds","","",54,N],[12,"sizeofcmds","","",54,N],[12,"flags","","",54,N],[3,"mach_header_64","","",N,N],[12,"magic","","",55,N],[12,"cputype","","",55,N],[12,"cpusubtype","","",55,N],[12,"filetype","","",55,N],[12,"ncmds","","",55,N],[12,"sizeofcmds","","",55,N],[12,"flags","","",55,N],[12,"reserved","","",55,N],[3,"segment_command","","",N,N],[12,"cmd","","",56,N],[12,"cmdsize","","",56,N],[12,"segname","","",56,N],[12,"vmaddr","","",56,N],[12,"vmsize","","",56,N],[12,"fileoff","","",56,N],[12,"filesize","","",56,N],[12,"maxprot","","",56,N],[12,"initprot","","",56,N],[12,"nsects","","",56,N],[12,"flags","","",56,N],[3,"segment_command_64","","",N,N],[12,"cmd","","",57,N],[12,"cmdsize","","",57,N],[12,"segname","","",57,N],[12,"vmaddr","","",57,N],[12,"vmsize","","",57,N],[12,"fileoff","","",57,N],[12,"filesize","","",57,N],[12,"maxprot","","",57,N],[12,"initprot","","",57,N],[12,"nsects","","",57,N],[12,"flags","","",57,N],[3,"load_command","","",N,N],[12,"cmd","","",58,N],[12,"cmdsize","","",58,N],[3,"sockaddr_dl","","",N,N],[12,"sdl_len","","",59,N],[12,"sdl_family","","",59,N],[12,"sdl_index","","",59,N],[12,"sdl_type","","",59,N],[12,"sdl_nlen","","",59,N],[12,"sdl_alen","","",59,N],[12,"sdl_slen","","",59,N],[12,"sdl_data","","",59,N],[3,"sockaddr_inarp","","",N,N],[12,"sin_len","","",60,N],[12,"sin_family","","",60,N],[12,"sin_port","","",60,N],[12,"sin_addr","","",60,N],[12,"sin_srcaddr","","",60,N],[12,"sin_tos","","",60,N],[12,"sin_other","","",60,N],[3,"sockaddr_ctl","","",N,N],[12,"sc_len","","",61,N],[12,"sc_family","","",61,N],[12,"ss_sysaddr","","",61,N],[12,"sc_id","","",61,N],[12,"sc_unit","","",61,N],[12,"sc_reserved","","",61,N],[3,"in_pktinfo","","",N,N],[12,"ipi_ifindex","","",62,N],[12,"ipi_spec_dst","","",62,N],[12,"ipi_addr","","",62,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",63,N],[12,"ipi6_ifindex","","",63,N],[3,"ipc_perm","","",N,N],[12,"uid","","",64,N],[12,"gid","","",64,N],[12,"cuid","","",64,N],[12,"cgid","","",64,N],[12,"mode","","",64,N],[12,"_seq","","",64,N],[12,"_key","","",64,N],[3,"sembuf","","",N,N],[12,"sem_num","","",65,N],[12,"sem_op","","",65,N],[12,"sem_flg","","",65,N],[3,"arphdr","","",N,N],[12,"ar_hrd","","",66,N],[12,"ar_pro","","",66,N],[12,"ar_hln","","",66,N],[12,"ar_pln","","",66,N],[12,"ar_op","","",66,N],[3,"in_addr","","",N,N],[12,"s_addr","","",67,N],[3,"kevent","","",N,N],[12,"ident","","",68,N],[12,"filter","","",68,N],[12,"flags","","",68,N],[12,"fflags","","",68,N],[12,"data","","",68,N],[12,"udata","","",68,N],[3,"semid_ds","","",N,N],[12,"sem_perm","","",69,N],[12,"sem_base","","",69,N],[12,"sem_nsems","","",69,N],[12,"sem_otime","","",69,N],[12,"sem_pad1","","",69,N],[12,"sem_ctime","","",69,N],[12,"sem_pad2","","",69,N],[12,"sem_pad3","","",69,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",70,N],[12,"shm_segsz","","",70,N],[12,"shm_lpid","","",70,N],[12,"shm_cpid","","",70,N],[12,"shm_nattch","","",70,N],[12,"shm_atime","","",70,N],[12,"shm_dtime","","",70,N],[12,"shm_ctime","","",70,N],[12,"shm_internal","","",70,N],[3,"proc_threadinfo","","",N,N],[12,"pth_user_time","","",71,N],[12,"pth_system_time","","",71,N],[12,"pth_cpu_usage","","",71,N],[12,"pth_policy","","",71,N],[12,"pth_run_state","","",71,N],[12,"pth_flags","","",71,N],[12,"pth_sleep_time","","",71,N],[12,"pth_curpri","","",71,N],[12,"pth_priority","","",71,N],[12,"pth_maxpriority","","",71,N],[12,"pth_name","","",71,N],[3,"statfs","","",N,N],[12,"f_bsize","","",72,N],[12,"f_iosize","","",72,N],[12,"f_blocks","","",72,N],[12,"f_bfree","","",72,N],[12,"f_bavail","","",72,N],[12,"f_files","","",72,N],[12,"f_ffree","","",72,N],[12,"f_fsid","","",72,N],[12,"f_owner","","",72,N],[12,"f_type","","",72,N],[12,"f_flags","","",72,N],[12,"f_fssubtype","","",72,N],[12,"f_fstypename","","",72,N],[12,"f_mntonname","","",72,N],[12,"f_mntfromname","","",72,N],[12,"f_reserved","","",72,N],[3,"dirent","","",N,N],[12,"d_ino","","",73,N],[12,"d_seekoff","","",73,N],[12,"d_reclen","","",73,N],[12,"d_namlen","","",73,N],[12,"d_type","","",73,N],[12,"d_name","","",73,N],[3,"pthread_rwlock_t","","",N,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"sockaddr_storage","","",N,N],[12,"ss_len","","",74,N],[12,"ss_family","","",74,N],[3,"utmpx","","",N,N],[12,"ut_user","","",75,N],[12,"ut_id","","",75,N],[12,"ut_line","","",75,N],[12,"ut_pid","","",75,N],[12,"ut_type","","",75,N],[12,"ut_tv","","",75,N],[12,"ut_host","","",75,N],[3,"timeval32","","",N,N],[12,"tv_sec","","",76,N],[12,"tv_usec","","",76,N],[3,"if_data","","",N,N],[12,"ifi_type","","",77,N],[12,"ifi_typelen","","",77,N],[12,"ifi_physical","","",77,N],[12,"ifi_addrlen","","",77,N],[12,"ifi_hdrlen","","",77,N],[12,"ifi_recvquota","","",77,N],[12,"ifi_xmitquota","","",77,N],[12,"ifi_unused1","","",77,N],[12,"ifi_mtu","","",77,N],[12,"ifi_metric","","",77,N],[12,"ifi_baudrate","","",77,N],[12,"ifi_ipackets","","",77,N],[12,"ifi_ierrors","","",77,N],[12,"ifi_opackets","","",77,N],[12,"ifi_oerrors","","",77,N],[12,"ifi_collisions","","",77,N],[12,"ifi_ibytes","","",77,N],[12,"ifi_obytes","","",77,N],[12,"ifi_imcasts","","",77,N],[12,"ifi_omcasts","","",77,N],[12,"ifi_iqdrops","","",77,N],[12,"ifi_noproto","","",77,N],[12,"ifi_recvtiming","","",77,N],[12,"ifi_xmittiming","","",77,N],[12,"ifi_lastchange","","",77,N],[12,"ifi_unused2","","",77,N],[12,"ifi_hwassist","","",77,N],[12,"ifi_reserved1","","",77,N],[12,"ifi_reserved2","","",77,N],[3,"bpf_hdr","","",N,N],[12,"bh_tstamp","","",78,N],[12,"bh_caplen","","",78,N],[12,"bh_datalen","","",78,N],[12,"bh_hdrlen","","",78,N],[3,"pthread_attr_t","","",N,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",79,N],[19,"semun","","",N,N],[12,"val","","",80,N],[12,"buf","","",80,N],[12,"array","","",80,N],[4,"DIR","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"timezone","","",N,N],[5,"CMSG_FIRSTHDR","","",N,N],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR","","",N,N],[5,"CMSG_DATA","","",N,N],[5,"CMSG_SPACE","","",N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",N,[[["c_uint"]],["c_uint"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"_WSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strcasecmp","","",N,N],[5,"strncasecmp","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"fdopendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setegid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"truncate","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"strcasestr","","",N,N],[5,"getline","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetspeed","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"strerror_r","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"setgroups","","",N,N],[5,"ioctl","","",N,N],[5,"kqueue","","",N,N],[5,"unmount","","",N,N],[5,"syscall","","",N,N],[5,"getpwent","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"getprogname","","",N,N],[5,"setprogname","","",N,N],[5,"getloadavg","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"getpeereid","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"sync","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"acct","","",N,N],[5,"setgrent","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"chflags","","",N,N],[5,"fchflags","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"lio_listio","","",N,N],[5,"dirfd","","",N,N],[5,"lutimes","","",N,N],[5,"gettimeofday","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"utmpxname","","",N,N],[5,"getnameinfo","","",N,N],[5,"mincore","","",N,N],[5,"sysctlnametomib","","",N,N],[5,"mprotect","","",N,N],[5,"semget","","",N,N],[5,"semctl","","",N,N],[5,"semop","","",N,N],[5,"shm_open","","",N,N],[5,"ftok","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"shmget","","",N,N],[5,"sysctl","","",N,N],[5,"sysctlbyname","","",N,N],[5,"mach_absolute_time","","",N,N],[5,"mach_timebase_info","","",N,N],[5,"pthread_setname_np","","",N,N],[5,"pthread_get_stackaddr_np","","",N,N],[5,"pthread_get_stacksize_np","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"__error","","",N,N],[5,"backtrace","","",N,N],[5,"statfs","","",N,N],[5,"fstatfs","","",N,N],[5,"kevent","","",N,N],[5,"kevent64","","",N,N],[5,"mount","","",N,N],[5,"ptrace","","",N,N],[5,"quotactl","","",N,N],[5,"sethostname","","",N,N],[5,"sendfile","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"openpty","","",N,N],[5,"forkpty","","",N,N],[5,"login_tty","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"localeconv_l","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"querylocale","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"getdomainname","","",N,N],[5,"setdomainname","","",N,N],[5,"getxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"renamex_np","","",N,N],[5,"renameatx_np","","",N,N],[5,"fremovexattr","","",N,N],[5,"getgrouplist","","",N,N],[5,"initgroups","","",N,N],[5,"waitid","","",N,N],[5,"brk","","",N,N],[5,"sbrk","","",N,N],[5,"settimeofday","","",N,N],[5,"_dyld_image_count","","",N,N],[5,"_dyld_get_image_header","","",N,N],[5,"_dyld_get_image_vmaddr_slide","","",N,N],[5,"_dyld_get_image_name","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[5,"uname","","",N,N],[5,"exchangedata","","",N,N],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"locale_t","","",N,N],[6,"wchar_t","","",N,N],[6,"off_t","","",N,N],[6,"useconds_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"socklen_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_t","","",N,N],[6,"nfds_t","","",N,N],[6,"c_char","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"ino_t","","",N,N],[6,"mode_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"rlim_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"sigset_t","","",N,N],[6,"clockid_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"nl_item","","",N,N],[6,"id_t","","",N,N],[6,"sem_t","","",N,N],[6,"idtype_t","","",N,N],[6,"integer_t","","",N,N],[6,"cpu_type_t","","",N,N],[6,"cpu_subtype_t","","",N,N],[6,"posix_spawnattr_t","","",N,N],[6,"posix_spawn_file_actions_t","","",N,N],[6,"key_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"vm_prot_t","","",N,N],[6,"vm_size_t","","",N,N],[6,"mach_timebase_info_data_t","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[6,"boolean_t","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"ARPOP_REQUEST","","",N,N],[17,"ARPOP_REPLY","","",N,N],[17,"ATF_COM","","",N,N],[17,"ATF_PERM","","",N,N],[17,"ATF_PUBL","","",N,N],[17,"ATF_USETRAILERS","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PATH_MAX","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGINFO","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"IP_TOS","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"IPTOS_ECN_NOTECT","","",N,N],[17,"IPTOS_ECN_MASK","","",N,N],[17,"IPTOS_ECN_ECT1","","",N,N],[17,"IPTOS_ECN_ECT0","","",N,N],[17,"IPTOS_ECN_CE","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"NCCS","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"O_SHLOCK","","",N,N],[17,"O_EXLOCK","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_RDLCK","","",N,N],[17,"F_UNLCK","","",N,N],[17,"F_WRLCK","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"VEOF","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VERASE","","",N,N],[17,"VWERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VREPRINT","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VSUSP","","",N,N],[17,"VDSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VLNEXT","","",N,N],[17,"VDISCARD","","",N,N],[17,"VMIN","","",N,N],[17,"VTIME","","",N,N],[17,"VSTATUS","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"ONLCR","","",N,N],[17,"OXTABS","","",N,N],[17,"ONOEOT","","",N,N],[17,"CIGNORE","","",N,N],[17,"CSIZE","","",N,N],[17,"CS5","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHO","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"ALTWERASE","","",N,N],[17,"IEXTEN","","",N,N],[17,"EXTPROC","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"NOKERNINFO","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"MDMBUF","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_SELF","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"_UTX_USERSIZE","","",N,N],[17,"_UTX_LINESIZE","","",N,N],[17,"_UTX_IDSIZE","","",N,N],[17,"_UTX_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"SIGNATURE","","",N,N],[17,"SHUTDOWN_TIME","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"CODESET","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"D_MD_ORDER","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"BUFSIZ","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"TMP_MAX","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGEMT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"PT_TRACE_ME","","",N,N],[17,"PT_READ_I","","",N,N],[17,"PT_READ_D","","",N,N],[17,"PT_READ_U","","",N,N],[17,"PT_WRITE_I","","",N,N],[17,"PT_WRITE_D","","",N,N],[17,"PT_WRITE_U","","",N,N],[17,"PT_CONTINUE","","",N,N],[17,"PT_KILL","","",N,N],[17,"PT_STEP","","",N,N],[17,"PT_ATTACH","","",N,N],[17,"PT_DETACH","","",N,N],[17,"PT_SIGEXC","","",N,N],[17,"PT_THUPDATE","","",N,N],[17,"PT_ATTACHEXC","","",N,N],[17,"PT_FORCEQUOTA","","",N,N],[17,"PT_DENY_ATTACH","","",N,N],[17,"PT_FIRSTMACH","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"VM_FLAGS_FIXED","","",N,N],[17,"VM_FLAGS_ANYWHERE","","",N,N],[17,"VM_FLAGS_PURGABLE","","",N,N],[17,"VM_FLAGS_RANDOM_ADDR","","",N,N],[17,"VM_FLAGS_NO_CACHE","","",N,N],[17,"VM_FLAGS_RESILIENT_CODESIGN","","",N,N],[17,"VM_FLAGS_RESILIENT_MEDIA","","",N,N],[17,"VM_FLAGS_OVERWRITE","","",N,N],[17,"VM_FLAGS_SUPERPAGE_MASK","","",N,N],[17,"VM_FLAGS_RETURN_DATA_ADDR","","",N,N],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR","","",N,N],[17,"VM_FLAGS_ALIAS_MASK","","",N,N],[17,"VM_FLAGS_USER_ALLOCATE","","",N,N],[17,"VM_FLAGS_USER_MAP","","",N,N],[17,"VM_FLAGS_USER_REMAP","","",N,N],[17,"VM_FLAGS_SUPERPAGE_SHIFT","","",N,N],[17,"SUPERPAGE_NONE","","",N,N],[17,"SUPERPAGE_SIZE_ANY","","",N,N],[17,"VM_FLAGS_SUPERPAGE_NONE","","",N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY","","",N,N],[17,"SUPERPAGE_SIZE_2MB","","",N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB","","",N,N],[17,"VM_MEMORY_MALLOC","","",N,N],[17,"VM_MEMORY_MALLOC_SMALL","","",N,N],[17,"VM_MEMORY_MALLOC_LARGE","","",N,N],[17,"VM_MEMORY_MALLOC_HUGE","","",N,N],[17,"VM_MEMORY_SBRK","","",N,N],[17,"VM_MEMORY_REALLOC","","",N,N],[17,"VM_MEMORY_MALLOC_TINY","","",N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE","","",N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSED","","",N,N],[17,"VM_MEMORY_ANALYSIS_TOOL","","",N,N],[17,"VM_MEMORY_MALLOC_NANO","","",N,N],[17,"VM_MEMORY_MACH_MSG","","",N,N],[17,"VM_MEMORY_IOKIT","","",N,N],[17,"VM_MEMORY_STACK","","",N,N],[17,"VM_MEMORY_GUARD","","",N,N],[17,"VM_MEMORY_SHARED_PMAP","","",N,N],[17,"VM_MEMORY_DYLIB","","",N,N],[17,"VM_MEMORY_OBJC_DISPATCHERS","","",N,N],[17,"VM_MEMORY_UNSHARED_PMAP","","",N,N],[17,"VM_MEMORY_APPKIT","","",N,N],[17,"VM_MEMORY_FOUNDATION","","",N,N],[17,"VM_MEMORY_COREGRAPHICS","","",N,N],[17,"VM_MEMORY_CORESERVICES","","",N,N],[17,"VM_MEMORY_CARBON","","",N,N],[17,"VM_MEMORY_JAVA","","",N,N],[17,"VM_MEMORY_COREDATA","","",N,N],[17,"VM_MEMORY_COREDATA_OBJECTIDS","","",N,N],[17,"VM_MEMORY_ATS","","",N,N],[17,"VM_MEMORY_LAYERKIT","","",N,N],[17,"VM_MEMORY_CGIMAGE","","",N,N],[17,"VM_MEMORY_TCMALLOC","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_DATA","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_SHARED","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_XALLOC","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_MISC","","",N,N],[17,"VM_MEMORY_DYLD","","",N,N],[17,"VM_MEMORY_DYLD_MALLOC","","",N,N],[17,"VM_MEMORY_SQLITE","","",N,N],[17,"VM_MEMORY_JAVASCRIPT_CORE","","",N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","","",N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","","",N,N],[17,"VM_MEMORY_GLSL","","",N,N],[17,"VM_MEMORY_OPENCL","","",N,N],[17,"VM_MEMORY_COREIMAGE","","",N,N],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","","",N,N],[17,"VM_MEMORY_IMAGEIO","","",N,N],[17,"VM_MEMORY_COREPROFILE","","",N,N],[17,"VM_MEMORY_ASSETSD","","",N,N],[17,"VM_MEMORY_OS_ALLOC_ONCE","","",N,N],[17,"VM_MEMORY_LIBDISPATCH","","",N,N],[17,"VM_MEMORY_ACCELERATE","","",N,N],[17,"VM_MEMORY_COREUI","","",N,N],[17,"VM_MEMORY_COREUIFILE","","",N,N],[17,"VM_MEMORY_GENEALOGY","","",N,N],[17,"VM_MEMORY_RAWCAMERA","","",N,N],[17,"VM_MEMORY_CORPSEINFO","","",N,N],[17,"VM_MEMORY_ASL","","",N,N],[17,"VM_MEMORY_SWIFT_RUNTIME","","",N,N],[17,"VM_MEMORY_SWIFT_METADATA","","",N,N],[17,"VM_MEMORY_DHMM","","",N,N],[17,"VM_MEMORY_SCENEKIT","","",N,N],[17,"VM_MEMORY_SKYWALK","","",N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1","","",N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_KILLPAGES","","",N,N],[17,"MS_DEACTIVATE","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EAGAIN","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"EALREADY","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"ELOOP","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"EPROCLIM","","",N,N],[17,"EUSERS","","",N,N],[17,"EDQUOT","","",N,N],[17,"ESTALE","","",N,N],[17,"EREMOTE","","",N,N],[17,"EBADRPC","","",N,N],[17,"ERPCMISMATCH","","",N,N],[17,"EPROGUNAVAIL","","",N,N],[17,"EPROGMISMATCH","","",N,N],[17,"EPROCUNAVAIL","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"EFTYPE","","",N,N],[17,"EAUTH","","",N,N],[17,"ENEEDAUTH","","",N,N],[17,"EPWROFF","","",N,N],[17,"EDEVERR","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"EBADEXEC","","",N,N],[17,"EBADARCH","","",N,N],[17,"ESHLIBVERS","","",N,N],[17,"EBADMACHO","","",N,N],[17,"ECANCELED","","",N,N],[17,"EIDRM","","",N,N],[17,"ENOMSG","","",N,N],[17,"EILSEQ","","",N,N],[17,"ENOATTR","","",N,N],[17,"EBADMSG","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"ENODATA","","",N,N],[17,"ENOLINK","","",N,N],[17,"ENOSR","","",N,N],[17,"ENOSTR","","",N,N],[17,"EPROTO","","",N,N],[17,"ETIME","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"ENOPOLICY","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"EQFULL","","",N,N],[17,"ELAST","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_NODATA","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_PREALLOCATE","","",N,N],[17,"F_RDADVISE","","",N,N],[17,"F_RDAHEAD","","",N,N],[17,"F_NOCACHE","","",N,N],[17,"F_GETPATH","","",N,N],[17,"F_FULLFSYNC","","",N,N],[17,"F_FREEZE_FS","","",N,N],[17,"F_THAW_FS","","",N,N],[17,"F_GLOBAL_NOCACHE","","",N,N],[17,"F_NODIRECT","","",N,N],[17,"F_ALLOCATECONTIG","","",N,N],[17,"F_ALLOCATEALL","","",N,N],[17,"F_PEOFPOSMODE","","",N,N],[17,"F_VOLPOSMODE","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_EACCESS","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"TIOCMODG","","",N,N],[17,"TIOCMODS","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCFLUSH","","",N,N],[17,"TIOCGETD","","",N,N],[17,"TIOCSETD","","",N,N],[17,"TIOCIXON","","",N,N],[17,"TIOCIXOFF","","",N,N],[17,"TIOCSBRK","","",N,N],[17,"TIOCCBRK","","",N,N],[17,"TIOCSDTR","","",N,N],[17,"TIOCCDTR","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCNOTTY","","",N,N],[17,"TIOCPKT","","",N,N],[17,"TIOCPKT_DATA","","",N,N],[17,"TIOCPKT_FLUSHREAD","","",N,N],[17,"TIOCPKT_FLUSHWRITE","","",N,N],[17,"TIOCPKT_STOP","","",N,N],[17,"TIOCPKT_START","","",N,N],[17,"TIOCPKT_NOSTOP","","",N,N],[17,"TIOCPKT_DOSTOP","","",N,N],[17,"TIOCPKT_IOCTL","","",N,N],[17,"TIOCSTOP","","",N,N],[17,"TIOCSTART","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCREMOTE","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"TIOCUCNTL","","",N,N],[17,"TIOCSTAT","","",N,N],[17,"TIOCSCONS","","",N,N],[17,"TIOCCONS","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCEXT","","",N,N],[17,"TIOCSIG","","",N,N],[17,"TIOCDRAIN","","",N,N],[17,"TIOCMSDTRWAIT","","",N,N],[17,"TIOCMGDTRWAIT","","",N,N],[17,"TIOCSDRAINWAIT","","",N,N],[17,"TIOCGDRAINWAIT","","",N,N],[17,"TIOCDSIMICROCODE","","",N,N],[17,"TIOCPTYGRANT","","",N,N],[17,"TIOCPTYGNAME","","",N,N],[17,"TIOCPTYUNLK","","",N,N],[17,"FIONCLEX","","",N,N],[17,"FIONREAD","","",N,N],[17,"FIOASYNC","","",N,N],[17,"FIOSETOWN","","",N,N],[17,"FIOGETOWN","","",N,N],[17,"FIODTYPE","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"B7200","","",N,N],[17,"B14400","","",N,N],[17,"B28800","","",N,N],[17,"B57600","","",N,N],[17,"B76800","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"SIGTRAP","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIM_NLIMITS","","",N,N],[17,"_RLIMIT_POSIX_FLAG","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_ZERO_WIRED_PAGES","","",N,N],[17,"MADV_FREE_REUSABLE","","",N,N],[17,"MADV_FREE_REUSE","","",N,N],[17,"MADV_CAN_REUSE","","",N,N],[17,"MINCORE_INCORE","","",N,N],[17,"MINCORE_REFERENCED","","",N,N],[17,"MINCORE_MODIFIED","","",N,N],[17,"MINCORE_REFERENCED_OTHER","","",N,N],[17,"MINCORE_MODIFIED_OTHER","","",N,N],[17,"IPPROTO_HOPOPTS","","IP6 hop-by-hop options",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_GGP","","gateway2 (deprecated)",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_ST","","Stream protocol II.",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PIGP","","private interior gateway",N,N],[17,"IPPROTO_RCCMON","","BBN RCC Monitoring",N,N],[17,"IPPROTO_NVPII","","network voice protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_ARGUS","","Argus",N,N],[17,"IPPROTO_EMCON","","EMCON",N,N],[17,"IPPROTO_XNET","","Cross Net Debugger",N,N],[17,"IPPROTO_CHAOS","","Chaos",N,N],[17,"IPPROTO_MUX","","Multiplexing",N,N],[17,"IPPROTO_MEAS","","DCN Measurement Subsystems",N,N],[17,"IPPROTO_HMP","","Host Monitoring",N,N],[17,"IPPROTO_PRM","","Packet Radio Measurement",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TRUNK1","","Trunk-1",N,N],[17,"IPPROTO_TRUNK2","","Trunk-2",N,N],[17,"IPPROTO_LEAF1","","Leaf-1",N,N],[17,"IPPROTO_LEAF2","","Leaf-2",N,N],[17,"IPPROTO_RDP","","Reliable Data",N,N],[17,"IPPROTO_IRTP","","Reliable Transaction",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_BLT","","Bulk Data Transfer",N,N],[17,"IPPROTO_NSP","","Network Services",N,N],[17,"IPPROTO_INP","","Merit Internodal",N,N],[17,"IPPROTO_SEP","","Sequential Exchange",N,N],[17,"IPPROTO_3PC","","Third Party Connect",N,N],[17,"IPPROTO_IDPR","","InterDomain Policy Routing",N,N],[17,"IPPROTO_XTP","","XTP",N,N],[17,"IPPROTO_DDP","","Datagram Delivery",N,N],[17,"IPPROTO_CMTP","","Control Message Transport",N,N],[17,"IPPROTO_TPXX","","TP++ Transport",N,N],[17,"IPPROTO_IL","","IL transport protocol",N,N],[17,"IPPROTO_SDRP","","Source Demand Routing",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_IDRP","","InterDomain Routing",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_MHRP","","Mobile Host Routing",N,N],[17,"IPPROTO_BHA","","BHA",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_INLSP","","Integ. Net Layer Security",N,N],[17,"IPPROTO_SWIPE","","IP with encryption",N,N],[17,"IPPROTO_NHRP","","Next Hop Resolution",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_AHIP","","any host internal protocol",N,N],[17,"IPPROTO_CFTP","","CFTP",N,N],[17,"IPPROTO_HELLO","","\"hello\" routing protocol",N,N],[17,"IPPROTO_SATEXPAK","","SATNET/Backroom EXPAK",N,N],[17,"IPPROTO_KRYPTOLAN","","Kryptolan",N,N],[17,"IPPROTO_RVD","","Remote Virtual Disk",N,N],[17,"IPPROTO_IPPC","","Pluribus Packet Core",N,N],[17,"IPPROTO_ADFS","","Any distributed FS",N,N],[17,"IPPROTO_SATMON","","Satnet Monitoring",N,N],[17,"IPPROTO_VISA","","VISA Protocol",N,N],[17,"IPPROTO_IPCV","","Packet Core Utility",N,N],[17,"IPPROTO_CPNX","","Comp. Prot. Net. Executive",N,N],[17,"IPPROTO_CPHB","","Comp. Prot. HeartBeat",N,N],[17,"IPPROTO_WSN","","Wang Span Network",N,N],[17,"IPPROTO_PVP","","Packet Video Protocol",N,N],[17,"IPPROTO_BRSATMON","","BackRoom SATNET Monitoring",N,N],[17,"IPPROTO_ND","","Sun net disk proto (temp.)",N,N],[17,"IPPROTO_WBMON","","WIDEBAND Monitoring",N,N],[17,"IPPROTO_WBEXPAK","","WIDEBAND EXPAK",N,N],[17,"IPPROTO_EON","","ISO cnlp",N,N],[17,"IPPROTO_VMTP","","VMTP",N,N],[17,"IPPROTO_SVMTP","","Secure VMTP",N,N],[17,"IPPROTO_VINES","","Banyon VINES",N,N],[17,"IPPROTO_TTP","","TTP",N,N],[17,"IPPROTO_IGP","","NSFNET-IGP",N,N],[17,"IPPROTO_DGP","","dissimilar gateway prot.",N,N],[17,"IPPROTO_TCF","","TCF",N,N],[17,"IPPROTO_IGRP","","Cisco/GXS IGRP",N,N],[17,"IPPROTO_OSPFIGP","","OSPFIGP",N,N],[17,"IPPROTO_SRPC","","Strite RPC protocol",N,N],[17,"IPPROTO_LARP","","Locus Address Resoloution",N,N],[17,"IPPROTO_MTP","","Multicast Transport",N,N],[17,"IPPROTO_AX25","","AX.25 Frames",N,N],[17,"IPPROTO_IPEIP","","IP encapsulated in IP",N,N],[17,"IPPROTO_MICP","","Mobile Int.ing control",N,N],[17,"IPPROTO_SCCSP","","Semaphore Comm. security",N,N],[17,"IPPROTO_ETHERIP","","Ethernet IP encapsulation",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_APES","","any private encr. scheme",N,N],[17,"IPPROTO_GMTP","","GMTP",N,N],[17,"IPPROTO_PIM","","Protocol Independent Mcast",N,N],[17,"IPPROTO_IPCOMP","","payload compression (IPComp)",N,N],[17,"IPPROTO_PGM","","PGM",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_DIVERT","","divert pseudo-protocol",N,N],[17,"IPPROTO_RAW","","raw IP packet",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"IPPROTO_DONE","","last return value of *_input(), meaning \"all job for this…",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_IMPLINK","","",N,N],[17,"AF_PUP","","",N,N],[17,"AF_CHAOS","","",N,N],[17,"AF_NS","","",N,N],[17,"AF_ISO","","",N,N],[17,"AF_OSI","","",N,N],[17,"AF_ECMA","","",N,N],[17,"AF_DATAKIT","","",N,N],[17,"AF_CCITT","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_DLI","","",N,N],[17,"AF_LAT","","",N,N],[17,"AF_HYLINK","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_LINK","","",N,N],[17,"pseudo_AF_XTP","","",N,N],[17,"AF_COIP","","",N,N],[17,"AF_CNT","","",N,N],[17,"pseudo_AF_RTIP","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_SIP","","",N,N],[17,"pseudo_AF_PIP","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_E164","","",N,N],[17,"pseudo_AF_KEY","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_NATM","","",N,N],[17,"AF_SYSTEM","","",N,N],[17,"AF_NETBIOS","","",N,N],[17,"AF_PPP","","",N,N],[17,"pseudo_AF_HDRCMPLT","","",N,N],[17,"AF_SYS_CONTROL","","",N,N],[17,"SYSPROTO_EVENT","","",N,N],[17,"SYSPROTO_CONTROL","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_IMPLINK","","",N,N],[17,"PF_PUP","","",N,N],[17,"PF_CHAOS","","",N,N],[17,"PF_NS","","",N,N],[17,"PF_ISO","","",N,N],[17,"PF_OSI","","",N,N],[17,"PF_ECMA","","",N,N],[17,"PF_DATAKIT","","",N,N],[17,"PF_CCITT","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_DLI","","",N,N],[17,"PF_LAT","","",N,N],[17,"PF_HYLINK","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_LINK","","",N,N],[17,"PF_XTP","","",N,N],[17,"PF_COIP","","",N,N],[17,"PF_CNT","","",N,N],[17,"PF_SIP","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_RTIP","","",N,N],[17,"PF_PIP","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_NATM","","",N,N],[17,"PF_SYSTEM","","",N,N],[17,"PF_NETBIOS","","",N,N],[17,"PF_PPP","","",N,N],[17,"NET_RT_DUMP","","",N,N],[17,"NET_RT_FLAGS","","",N,N],[17,"NET_RT_IFLIST","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"SOCK_MAXADDRLEN","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_RECVDSTADDR","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_RECVIF","","",N,N],[17,"IP_PKTINFO","","",N,N],[17,"IP_RECVTOS","","",N,N],[17,"IPV6_JOIN_GROUP","","",N,N],[17,"IPV6_LEAVE_GROUP","","",N,N],[17,"IPV6_RECVTCLASS","","",N,N],[17,"IPV6_TCLASS","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"TCP_NOPUSH","","",N,N],[17,"TCP_NOOPT","","",N,N],[17,"TCP_KEEPALIVE","","",N,N],[17,"SOL_LOCAL","","",N,N],[17,"LOCAL_PEERCRED","","",N,N],[17,"LOCAL_PEERPID","","",N,N],[17,"LOCAL_PEEREPID","","",N,N],[17,"LOCAL_PEERUUID","","",N,N],[17,"LOCAL_PEEREUUID","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_USELOOPBACK","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_TIMESTAMP_MONOTONIC","","",N,N],[17,"SO_DONTTRUNC","","",N,N],[17,"SO_WANTMORE","","",N,N],[17,"SO_WANTOOBFLAG","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_LABEL","","",N,N],[17,"SO_PEERLABEL","","",N,N],[17,"SO_NREAD","","",N,N],[17,"SO_NKE","","",N,N],[17,"SO_NOSIGPIPE","","",N,N],[17,"SO_NOADDRERR","","",N,N],[17,"SO_NWRITE","","",N,N],[17,"SO_REUSESHAREUID","","",N,N],[17,"SO_NOTIFYCONFLICT","","",N,N],[17,"SO_RANDOMPORT","","",N,N],[17,"SO_NP_EXTENSIONS","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOF","","",N,N],[17,"MSG_FLUSH","","",N,N],[17,"MSG_HOLD","","",N,N],[17,"MSG_SEND","","",N,N],[17,"MSG_HAVEMORE","","",N,N],[17,"MSG_RCVMORE","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SCM_CREDS","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_OACTIVE","","",N,N],[17,"IFF_SIMPLEX","","",N,N],[17,"IFF_LINK0","","",N,N],[17,"IFF_LINK1","","",N,N],[17,"IFF_LINK2","","",N,N],[17,"IFF_ALTPHYS","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"MAP_COPY","","",N,N],[17,"MAP_RENAME","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_NOEXTEND","","",N,N],[17,"MAP_HASSEMAPHORE","","",N,N],[17,"MAP_NOCACHE","","",N,N],[17,"MAP_JIT","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_CPUTIME","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LP64_OFF64","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_SS_REPL_MAX","","",N,N],[17,"_SC_TRACE_EVENT_NAME_MAX","","",N,N],[17,"_SC_TRACE_NAME_MAX","","",N,N],[17,"_SC_TRACE_SYS_MAX","","",N,N],[17,"_SC_TRACE_USER_EVENT_MAX","","",N,N],[17,"_SC_PASS_MAX","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"_PTHREAD_MUTEX_SIG_init","","",N,N],[17,"_PTHREAD_COND_SIG_init","","",N,N],[17,"_PTHREAD_RWLOCK_SIG_init","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"EVFILT_READ","","",N,N],[17,"EVFILT_WRITE","","",N,N],[17,"EVFILT_AIO","","",N,N],[17,"EVFILT_VNODE","","",N,N],[17,"EVFILT_PROC","","",N,N],[17,"EVFILT_SIGNAL","","",N,N],[17,"EVFILT_TIMER","","",N,N],[17,"EVFILT_MACHPORT","","",N,N],[17,"EVFILT_FS","","",N,N],[17,"EVFILT_USER","","",N,N],[17,"EVFILT_VM","","",N,N],[17,"EV_ADD","","",N,N],[17,"EV_DELETE","","",N,N],[17,"EV_ENABLE","","",N,N],[17,"EV_DISABLE","","",N,N],[17,"EV_ONESHOT","","",N,N],[17,"EV_CLEAR","","",N,N],[17,"EV_RECEIPT","","",N,N],[17,"EV_DISPATCH","","",N,N],[17,"EV_FLAG0","","",N,N],[17,"EV_POLL","","",N,N],[17,"EV_FLAG1","","",N,N],[17,"EV_OOBAND","","",N,N],[17,"EV_ERROR","","",N,N],[17,"EV_EOF","","",N,N],[17,"EV_SYSFLAGS","","",N,N],[17,"NOTE_TRIGGER","","",N,N],[17,"NOTE_FFNOP","","",N,N],[17,"NOTE_FFAND","","",N,N],[17,"NOTE_FFOR","","",N,N],[17,"NOTE_FFCOPY","","",N,N],[17,"NOTE_FFCTRLMASK","","",N,N],[17,"NOTE_FFLAGSMASK","","",N,N],[17,"NOTE_LOWAT","","",N,N],[17,"NOTE_DELETE","","",N,N],[17,"NOTE_WRITE","","",N,N],[17,"NOTE_EXTEND","","",N,N],[17,"NOTE_ATTRIB","","",N,N],[17,"NOTE_LINK","","",N,N],[17,"NOTE_RENAME","","",N,N],[17,"NOTE_REVOKE","","",N,N],[17,"NOTE_NONE","","",N,N],[17,"NOTE_EXIT","","",N,N],[17,"NOTE_FORK","","",N,N],[17,"NOTE_EXEC","","",N,N],[17,"NOTE_SIGNAL","","",N,N],[17,"NOTE_EXITSTATUS","","",N,N],[17,"NOTE_EXIT_DETAIL","","",N,N],[17,"NOTE_PDATAMASK","","",N,N],[17,"NOTE_PCTRLMASK","","",N,N],[17,"NOTE_EXIT_DETAIL_MASK","","",N,N],[17,"NOTE_EXIT_DECRYPTFAIL","","",N,N],[17,"NOTE_EXIT_MEMORY","","",N,N],[17,"NOTE_EXIT_CSERROR","","",N,N],[17,"NOTE_VM_PRESSURE","","",N,N],[17,"NOTE_VM_PRESSURE_TERMINATE","","",N,N],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",N,N],[17,"NOTE_VM_ERROR","","",N,N],[17,"NOTE_SECONDS","","",N,N],[17,"NOTE_USECONDS","","",N,N],[17,"NOTE_NSECONDS","","",N,N],[17,"NOTE_ABSOLUTE","","",N,N],[17,"NOTE_LEEWAY","","",N,N],[17,"NOTE_CRITICAL","","",N,N],[17,"NOTE_BACKGROUND","","",N,N],[17,"NOTE_TRACK","","",N,N],[17,"NOTE_TRACKERR","","",N,N],[17,"NOTE_CHILD","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"OFILL","","",N,N],[17,"NLDLY","","",N,N],[17,"TABDLY","","",N,N],[17,"CRDLY","","",N,N],[17,"FFDLY","","",N,N],[17,"BSDLY","","",N,N],[17,"VTDLY","","",N,N],[17,"OFDEL","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"CR0","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF0","","",N,N],[17,"FF1","","",N,N],[17,"BS0","","",N,N],[17,"BS1","","",N,N],[17,"TAB3","","",N,N],[17,"VT0","","",N,N],[17,"VT1","","",N,N],[17,"IUTF8","","",N,N],[17,"CRTSCTS","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"NI_MAXSERV","","",N,N],[17,"NI_NOFQDN","","",N,N],[17,"NI_NUMERICHOST","","",N,N],[17,"NI_NAMEREQD","","",N,N],[17,"NI_NUMERICSERV","","",N,N],[17,"NI_NUMERICSCOPE","","",N,N],[17,"NI_DGRAM","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"RENAME_SWAP","","",N,N],[17,"RENAME_EXCL","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_FIRST","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"_WSTOPPED","","",N,N],[17,"LOG_NETINFO","","",N,N],[17,"LOG_REMOTEAUTH","","",N,N],[17,"LOG_INSTALL","","",N,N],[17,"LOG_RAS","","",N,N],[17,"LOG_LAUNCHD","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"CTLTYPE","","",N,N],[17,"CTLTYPE_NODE","","",N,N],[17,"CTLTYPE_INT","","",N,N],[17,"CTLTYPE_STRING","","",N,N],[17,"CTLTYPE_QUAD","","",N,N],[17,"CTLTYPE_OPAQUE","","",N,N],[17,"CTLTYPE_STRUCT","","",N,N],[17,"CTLFLAG_RD","","",N,N],[17,"CTLFLAG_WR","","",N,N],[17,"CTLFLAG_RW","","",N,N],[17,"CTLFLAG_NOLOCK","","",N,N],[17,"CTLFLAG_ANYBODY","","",N,N],[17,"CTLFLAG_SECURE","","",N,N],[17,"CTLFLAG_MASKED","","",N,N],[17,"CTLFLAG_NOAUTO","","",N,N],[17,"CTLFLAG_KERN","","",N,N],[17,"CTLFLAG_LOCKED","","",N,N],[17,"CTLFLAG_OID2","","",N,N],[17,"CTL_UNSPEC","","",N,N],[17,"CTL_KERN","","",N,N],[17,"CTL_VM","","",N,N],[17,"CTL_VFS","","",N,N],[17,"CTL_NET","","",N,N],[17,"CTL_DEBUG","","",N,N],[17,"CTL_HW","","",N,N],[17,"CTL_MACHDEP","","",N,N],[17,"CTL_USER","","",N,N],[17,"CTL_MAXID","","",N,N],[17,"KERN_OSTYPE","","",N,N],[17,"KERN_OSRELEASE","","",N,N],[17,"KERN_OSREV","","",N,N],[17,"KERN_VERSION","","",N,N],[17,"KERN_MAXVNODES","","",N,N],[17,"KERN_MAXPROC","","",N,N],[17,"KERN_MAXFILES","","",N,N],[17,"KERN_ARGMAX","","",N,N],[17,"KERN_SECURELVL","","",N,N],[17,"KERN_HOSTNAME","","",N,N],[17,"KERN_HOSTID","","",N,N],[17,"KERN_CLOCKRATE","","",N,N],[17,"KERN_VNODE","","",N,N],[17,"KERN_PROC","","",N,N],[17,"KERN_FILE","","",N,N],[17,"KERN_PROF","","",N,N],[17,"KERN_POSIX1","","",N,N],[17,"KERN_NGROUPS","","",N,N],[17,"KERN_JOB_CONTROL","","",N,N],[17,"KERN_SAVED_IDS","","",N,N],[17,"KERN_BOOTTIME","","",N,N],[17,"KERN_NISDOMAINNAME","","",N,N],[17,"KERN_DOMAINNAME","","",N,N],[17,"KERN_MAXPARTITIONS","","",N,N],[17,"KERN_KDEBUG","","",N,N],[17,"KERN_UPDATEINTERVAL","","",N,N],[17,"KERN_OSRELDATE","","",N,N],[17,"KERN_NTP_PLL","","",N,N],[17,"KERN_BOOTFILE","","",N,N],[17,"KERN_MAXFILESPERPROC","","",N,N],[17,"KERN_MAXPROCPERUID","","",N,N],[17,"KERN_DUMPDEV","","",N,N],[17,"KERN_IPC","","",N,N],[17,"KERN_DUMMY","","",N,N],[17,"KERN_PS_STRINGS","","",N,N],[17,"KERN_USRSTACK32","","",N,N],[17,"KERN_LOGSIGEXIT","","",N,N],[17,"KERN_SYMFILE","","",N,N],[17,"KERN_PROCARGS","","",N,N],[17,"KERN_NETBOOT","","",N,N],[17,"KERN_SYSV","","",N,N],[17,"KERN_AFFINITY","","",N,N],[17,"KERN_TRANSLATE","","",N,N],[17,"KERN_CLASSIC","","",N,N],[17,"KERN_EXEC","","",N,N],[17,"KERN_CLASSICHANDLER","","",N,N],[17,"KERN_AIOMAX","","",N,N],[17,"KERN_AIOPROCMAX","","",N,N],[17,"KERN_AIOTHREADS","","",N,N],[17,"KERN_COREFILE","","",N,N],[17,"KERN_COREDUMP","","",N,N],[17,"KERN_SUGID_COREDUMP","","",N,N],[17,"KERN_PROCDELAYTERM","","",N,N],[17,"KERN_SHREG_PRIVATIZABLE","","",N,N],[17,"KERN_LOW_PRI_WINDOW","","",N,N],[17,"KERN_LOW_PRI_DELAY","","",N,N],[17,"KERN_POSIX","","",N,N],[17,"KERN_USRSTACK64","","",N,N],[17,"KERN_NX_PROTECTION","","",N,N],[17,"KERN_TFP","","",N,N],[17,"KERN_PROCNAME","","",N,N],[17,"KERN_THALTSTACK","","",N,N],[17,"KERN_SPECULATIVE_READS","","",N,N],[17,"KERN_OSVERSION","","",N,N],[17,"KERN_SAFEBOOT","","",N,N],[17,"KERN_RAGEVNODE","","",N,N],[17,"KERN_TTY","","",N,N],[17,"KERN_CHECKOPENEVT","","",N,N],[17,"KERN_THREADNAME","","",N,N],[17,"KERN_MAXID","","",N,N],[17,"KERN_RAGE_PROC","","",N,N],[17,"KERN_RAGE_THREAD","","",N,N],[17,"KERN_UNRAGE_PROC","","",N,N],[17,"KERN_UNRAGE_THREAD","","",N,N],[17,"KERN_OPENEVT_PROC","","",N,N],[17,"KERN_UNOPENEVT_PROC","","",N,N],[17,"KERN_TFP_POLICY","","",N,N],[17,"KERN_TFP_POLICY_DENY","","",N,N],[17,"KERN_TFP_POLICY_DEFAULT","","",N,N],[17,"KERN_KDEFLAGS","","",N,N],[17,"KERN_KDDFLAGS","","",N,N],[17,"KERN_KDENABLE","","",N,N],[17,"KERN_KDSETBUF","","",N,N],[17,"KERN_KDGETBUF","","",N,N],[17,"KERN_KDSETUP","","",N,N],[17,"KERN_KDREMOVE","","",N,N],[17,"KERN_KDSETREG","","",N,N],[17,"KERN_KDGETREG","","",N,N],[17,"KERN_KDREADTR","","",N,N],[17,"KERN_KDPIDTR","","",N,N],[17,"KERN_KDTHRMAP","","",N,N],[17,"KERN_KDPIDEX","","",N,N],[17,"KERN_KDSETRTCDEC","","",N,N],[17,"KERN_KDGETENTROPY","","",N,N],[17,"KERN_KDWRITETR","","",N,N],[17,"KERN_KDWRITEMAP","","",N,N],[17,"KERN_KDREADCURTHRMAP","","",N,N],[17,"KERN_KDSET_TYPEFILTER","","",N,N],[17,"KERN_KDBUFWAIT","","",N,N],[17,"KERN_KDCPUMAP","","",N,N],[17,"KERN_PROC_ALL","","",N,N],[17,"KERN_PROC_PID","","",N,N],[17,"KERN_PROC_PGRP","","",N,N],[17,"KERN_PROC_SESSION","","",N,N],[17,"KERN_PROC_TTY","","",N,N],[17,"KERN_PROC_UID","","",N,N],[17,"KERN_PROC_RUID","","",N,N],[17,"KERN_PROC_LCID","","",N,N],[17,"KIPC_MAXSOCKBUF","","",N,N],[17,"KIPC_SOCKBUF_WASTE","","",N,N],[17,"KIPC_SOMAXCONN","","",N,N],[17,"KIPC_MAX_LINKHDR","","",N,N],[17,"KIPC_MAX_PROTOHDR","","",N,N],[17,"KIPC_MAX_HDR","","",N,N],[17,"KIPC_MAX_DATALEN","","",N,N],[17,"KIPC_MBSTAT","","",N,N],[17,"KIPC_NMBCLUSTERS","","",N,N],[17,"KIPC_SOQLIMITCOMPAT","","",N,N],[17,"VM_METER","","",N,N],[17,"VM_LOADAVG","","",N,N],[17,"VM_MACHFACTOR","","",N,N],[17,"VM_SWAPUSAGE","","",N,N],[17,"VM_MAXID","","",N,N],[17,"HW_MACHINE","","",N,N],[17,"HW_MODEL","","",N,N],[17,"HW_NCPU","","",N,N],[17,"HW_BYTEORDER","","",N,N],[17,"HW_PHYSMEM","","",N,N],[17,"HW_USERMEM","","",N,N],[17,"HW_PAGESIZE","","",N,N],[17,"HW_DISKNAMES","","",N,N],[17,"HW_DISKSTATS","","",N,N],[17,"HW_EPOCH","","",N,N],[17,"HW_FLOATINGPT","","",N,N],[17,"HW_MACHINE_ARCH","","",N,N],[17,"HW_VECTORUNIT","","",N,N],[17,"HW_BUS_FREQ","","",N,N],[17,"HW_CPU_FREQ","","",N,N],[17,"HW_CACHELINE","","",N,N],[17,"HW_L1ICACHESIZE","","",N,N],[17,"HW_L1DCACHESIZE","","",N,N],[17,"HW_L2SETTINGS","","",N,N],[17,"HW_L2CACHESIZE","","",N,N],[17,"HW_L3SETTINGS","","",N,N],[17,"HW_L3CACHESIZE","","",N,N],[17,"HW_TB_FREQ","","",N,N],[17,"HW_MEMSIZE","","",N,N],[17,"HW_AVAILCPU","","",N,N],[17,"HW_MAXID","","",N,N],[17,"USER_CS_PATH","","",N,N],[17,"USER_BC_BASE_MAX","","",N,N],[17,"USER_BC_DIM_MAX","","",N,N],[17,"USER_BC_SCALE_MAX","","",N,N],[17,"USER_BC_STRING_MAX","","",N,N],[17,"USER_COLL_WEIGHTS_MAX","","",N,N],[17,"USER_EXPR_NEST_MAX","","",N,N],[17,"USER_LINE_MAX","","",N,N],[17,"USER_RE_DUP_MAX","","",N,N],[17,"USER_POSIX2_VERSION","","",N,N],[17,"USER_POSIX2_C_BIND","","",N,N],[17,"USER_POSIX2_C_DEV","","",N,N],[17,"USER_POSIX2_CHAR_TERM","","",N,N],[17,"USER_POSIX2_FORT_DEV","","",N,N],[17,"USER_POSIX2_FORT_RUN","","",N,N],[17,"USER_POSIX2_LOCALEDEF","","",N,N],[17,"USER_POSIX2_SW_DEV","","",N,N],[17,"USER_POSIX2_UPE","","",N,N],[17,"USER_STREAM_MAX","","",N,N],[17,"USER_TZNAME_MAX","","",N,N],[17,"USER_MAXID","","",N,N],[17,"CTL_DEBUG_NAME","","",N,N],[17,"CTL_DEBUG_VALUE","","",N,N],[17,"CTL_DEBUG_MAXID","","",N,N],[17,"PRIO_DARWIN_THREAD","","",N,N],[17,"PRIO_DARWIN_PROCESS","","",N,N],[17,"PRIO_DARWIN_BG","","",N,N],[17,"PRIO_DARWIN_NONUI","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"AI_PASSIVE","","",N,N],[17,"AI_CANONNAME","","",N,N],[17,"AI_NUMERICHOST","","",N,N],[17,"AI_NUMERICSERV","","",N,N],[17,"AI_MASK","","",N,N],[17,"AI_ALL","","",N,N],[17,"AI_V4MAPPED_CFG","","",N,N],[17,"AI_ADDRCONFIG","","",N,N],[17,"AI_V4MAPPED","","",N,N],[17,"AI_DEFAULT","","",N,N],[17,"AI_UNUSABLE","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"AIO_LISTIO_MAX","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"WEXITED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"XATTR_NOFOLLOW","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"XATTR_NOSECURITY","","",N,N],[17,"XATTR_NODEFAULT","","",N,N],[17,"XATTR_SHOWCOMPRESSION","","",N,N],[17,"NET_RT_IFLIST2","","",N,N],[17,"RTF_UP","","",N,N],[17,"RTF_GATEWAY","","",N,N],[17,"RTF_HOST","","",N,N],[17,"RTF_REJECT","","",N,N],[17,"RTF_DYNAMIC","","",N,N],[17,"RTF_MODIFIED","","",N,N],[17,"RTF_DONE","","",N,N],[17,"RTF_DELCLONE","","",N,N],[17,"RTF_CLONING","","",N,N],[17,"RTF_XRESOLVE","","",N,N],[17,"RTF_LLINFO","","",N,N],[17,"RTF_STATIC","","",N,N],[17,"RTF_BLACKHOLE","","",N,N],[17,"RTF_NOIFREF","","",N,N],[17,"RTF_PROTO2","","",N,N],[17,"RTF_PROTO1","","",N,N],[17,"RTF_PRCLONING","","",N,N],[17,"RTF_WASCLONED","","",N,N],[17,"RTF_PROTO3","","",N,N],[17,"RTF_PINNED","","",N,N],[17,"RTF_LOCAL","","",N,N],[17,"RTF_BROADCAST","","",N,N],[17,"RTF_MULTICAST","","",N,N],[17,"RTF_IFSCOPE","","",N,N],[17,"RTF_CONDEMNED","","",N,N],[17,"RTF_IFREF","","",N,N],[17,"RTF_PROXY","","",N,N],[17,"RTF_ROUTER","","",N,N],[17,"RTM_VERSION","","",N,N],[17,"RTM_ADD","","",N,N],[17,"RTM_DELETE","","",N,N],[17,"RTM_CHANGE","","",N,N],[17,"RTM_GET","","",N,N],[17,"RTM_LOSING","","",N,N],[17,"RTM_REDIRECT","","",N,N],[17,"RTM_MISS","","",N,N],[17,"RTM_LOCK","","",N,N],[17,"RTM_OLDADD","","",N,N],[17,"RTM_OLDDEL","","",N,N],[17,"RTM_RESOLVE","","",N,N],[17,"RTM_NEWADDR","","",N,N],[17,"RTM_DELADDR","","",N,N],[17,"RTM_IFINFO","","",N,N],[17,"RTM_NEWMADDR","","",N,N],[17,"RTM_DELMADDR","","",N,N],[17,"RTM_IFINFO2","","",N,N],[17,"RTM_NEWMADDR2","","",N,N],[17,"RTM_GET2","","",N,N],[17,"RTV_MTU","","",N,N],[17,"RTV_HOPCOUNT","","",N,N],[17,"RTV_EXPIRE","","",N,N],[17,"RTV_RPIPE","","",N,N],[17,"RTV_SPIPE","","",N,N],[17,"RTV_SSTHRESH","","",N,N],[17,"RTV_RTT","","",N,N],[17,"RTV_RTTVAR","","",N,N],[17,"RTA_DST","","",N,N],[17,"RTA_GATEWAY","","",N,N],[17,"RTA_NETMASK","","",N,N],[17,"RTA_GENMASK","","",N,N],[17,"RTA_IFP","","",N,N],[17,"RTA_IFA","","",N,N],[17,"RTA_AUTHOR","","",N,N],[17,"RTA_BRD","","",N,N],[17,"RTAX_DST","","",N,N],[17,"RTAX_GATEWAY","","",N,N],[17,"RTAX_NETMASK","","",N,N],[17,"RTAX_GENMASK","","",N,N],[17,"RTAX_IFP","","",N,N],[17,"RTAX_IFA","","",N,N],[17,"RTAX_AUTHOR","","",N,N],[17,"RTAX_BRD","","",N,N],[17,"RTAX_MAX","","",N,N],[17,"KERN_PROCARGS2","","",N,N],[17,"PROC_PIDTASKALLINFO","","",N,N],[17,"PROC_PIDTASKINFO","","",N,N],[17,"PROC_PIDTHREADINFO","","",N,N],[17,"MAXCOMLEN","","",N,N],[17,"MAXTHREADNAMESIZE","","",N,N],[17,"XUCRED_VERSION","","",N,N],[17,"LC_SEGMENT","","",N,N],[17,"LC_SEGMENT_64","","",N,N],[17,"MH_MAGIC","","",N,N],[17,"MH_MAGIC_64","","",N,N],[17,"UTUN_OPT_FLAGS","","",N,N],[17,"UTUN_OPT_IFNAME","","",N,N],[17,"DLT_NULL","","",N,N],[17,"DLT_EN10MB","","",N,N],[17,"DLT_EN3MB","","",N,N],[17,"DLT_AX25","","",N,N],[17,"DLT_PRONET","","",N,N],[17,"DLT_CHAOS","","",N,N],[17,"DLT_IEEE802","","",N,N],[17,"DLT_ARCNET","","",N,N],[17,"DLT_SLIP","","",N,N],[17,"DLT_PPP","","",N,N],[17,"DLT_FDDI","","",N,N],[17,"DLT_ATM_RFC1483","","",N,N],[17,"DLT_RAW","","",N,N],[17,"DLT_LOOP","","",N,N],[17,"BPF_ALIGNMENT","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"POSIX_SPAWN_SETEXEC","","",N,N],[17,"POSIX_SPAWN_START_SUSPENDED","","",N,N],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_R","","",N,N],[17,"IPC_W","","",N,N],[17,"IPC_M","","",N,N],[17,"SEM_UNDO","","",N,N],[17,"GETNCNT","","",N,N],[17,"GETPID","","",N,N],[17,"GETVAL","","",N,N],[17,"GETALL","","",N,N],[17,"GETZCNT","","",N,N],[17,"SETVAL","","",N,N],[17,"SETALL","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHMLBA","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"UF_SETTABLE","","",N,N],[17,"UF_NODUMP","","",N,N],[17,"UF_IMMUTABLE","","",N,N],[17,"UF_APPEND","","",N,N],[17,"UF_OPAQUE","","",N,N],[17,"UF_COMPRESSED","","",N,N],[17,"UF_TRACKED","","",N,N],[17,"SF_SETTABLE","","",N,N],[17,"SF_ARCHIVED","","",N,N],[17,"SF_IMMUTABLE","","",N,N],[17,"SF_APPEND","","",N,N],[17,"UF_HIDDEN","","",N,N],[17,"__PTHREAD_MUTEX_SIZE__","","",N,N],[17,"__PTHREAD_COND_SIZE__","","",N,N],[17,"__PTHREAD_CONDATTR_SIZE__","","",N,N],[17,"__PTHREAD_RWLOCK_SIZE__","","",N,N],[17,"__PTHREAD_RWLOCKATTR_SIZE__","","",N,N],[17,"TIOCTIMESTAMP","","",N,N],[17,"TIOCDCDTIMESTAMP","","",N,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",91,[[["self"]],["dir"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",92,[[["self"]],["file"]]],[11,"clone","","",93,[[["self"]],["fpos_t"]]],[11,"clone","","",17,[[["self"]],["sockaddr"]]],[11,"clone","","",18,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",19,[[["self"]],["passwd"]]],[11,"clone","","",20,[[["self"]],["ifaddrs"]]],[11,"clone","","",82,[[["self"]],["fd_set"]]],[11,"clone","","",21,[[["self"]],["tm"]]],[11,"clone","","",22,[[["self"]],["msghdr"]]],[11,"clone","","",23,[[["self"]],["cmsghdr"]]],[11,"clone","","",83,[[["self"]],["fsid_t"]]],[11,"clone","","",24,[[["self"]],["if_nameindex"]]],[11,"clone","","",25,[[["self"]],["sockaddr_un"]]],[11,"clone","","",26,[[["self"]],["utsname"]]],[11,"clone","","",94,[[["self"]],["timezone"]]],[11,"clone","","",27,[[["self"]],["ip_mreq"]]],[11,"clone","","",28,[[["self"]],["aiocb"]]],[11,"clone","","",29,[[["self"]],["glob_t"]]],[11,"clone","","",30,[[["self"]],["addrinfo"]]],[11,"clone","","",31,[[["self"]],["mach_timebase_info"]]],[11,"clone","","",32,[[["self"]],["stat"]]],[11,"clone","","",84,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",85,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",86,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",33,[[["self"]],["siginfo_t"]]],[11,"clone","","",34,[[["self"]],["sigaction"]]],[11,"clone","","",35,[[["self"]],["stack_t"]]],[11,"clone","","",36,[[["self"]],["fstore_t"]]],[11,"clone","","",37,[[["self"]],["radvisory"]]],[11,"clone","","",38,[[["self"]],["statvfs"]]],[11,"clone","","",39,[[["self"]],["dl_info"]]],[11,"clone","","",40,[[["self"]],["sockaddr_in"]]],[11,"clone","","",41,[[["self"]],["kevent64_s"]]],[11,"clone","","",42,[[["self"]],["dqblk"]]],[11,"clone","","",43,[[["self"]],["if_msghdr"]]],[11,"clone","","",44,[[["self"]],["termios"]]],[11,"clone","","",45,[[["self"]],["flock"]]],[11,"clone","","",46,[[["self"]],["sf_hdtr"]]],[11,"clone","","",47,[[["self"]],["lconv"]]],[11,"clone","","",48,[[["self"]],["sigevent"]]],[11,"clone","","",49,[[["self"]],["proc_taskinfo"]]],[11,"clone","","",50,[[["self"]],["proc_bsdinfo"]]],[11,"clone","","",51,[[["self"]],["proc_taskallinfo"]]],[11,"clone","","",52,[[["self"]],["xsw_usage"]]],[11,"clone","","",53,[[["self"]],["xucred"]]],[11,"clone","","",54,[[["self"]],["mach_header"]]],[11,"clone","","",55,[[["self"]],["mach_header_64"]]],[11,"clone","","",56,[[["self"]],["segment_command"]]],[11,"clone","","",57,[[["self"]],["segment_command_64"]]],[11,"clone","","",58,[[["self"]],["load_command"]]],[11,"clone","","",59,[[["self"]],["sockaddr_dl"]]],[11,"clone","","",60,[[["self"]],["sockaddr_inarp"]]],[11,"clone","","",61,[[["self"]],["sockaddr_ctl"]]],[11,"clone","","",62,[[["self"]],["in_pktinfo"]]],[11,"clone","","",63,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",64,[[["self"]],["ipc_perm"]]],[11,"clone","","",65,[[["self"]],["sembuf"]]],[11,"clone","","",66,[[["self"]],["arphdr"]]],[11,"clone","","",67,[[["self"]],["in_addr"]]],[11,"clone","","",68,[[["self"]],["kevent"]]],[11,"clone","","",69,[[["self"]],["semid_ds"]]],[11,"clone","","",70,[[["self"]],["shmid_ds"]]],[11,"clone","","",71,[[["self"]],["proc_threadinfo"]]],[11,"clone","","",72,[[["self"]],["statfs"]]],[11,"clone","","",73,[[["self"]],["dirent"]]],[11,"clone","","",87,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",88,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",89,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",74,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",75,[[["self"]],["utmpx"]]],[11,"clone","","",80,[[["self"]],["semun"]]],[11,"clone","","",76,[[["self"]],["timeval32"]]],[11,"clone","","",77,[[["self"]],["if_data"]]],[11,"clone","","",78,[[["self"]],["bpf_hdr"]]],[11,"clone","","",90,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",79,[[["self"]],["in6_addr"]]]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"sockaddr_un"],[3,"utsname"],[3,"ip_mreq"],[3,"aiocb"],[3,"glob_t"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"sigevent"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"kevent"],[3,"semid_ds"],[3,"shmid_ds"],[3,"proc_threadinfo"],[3,"statfs"],[3,"dirent"],[3,"sockaddr_storage"],[3,"utmpx"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[3,"in6_addr"],[19,"semun"],[4,"c_void"],[3,"fd_set"],[3,"fsid_t"],[3,"pthread_mutexattr_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutex_t"],[3,"pthread_cond_t"],[3,"pthread_attr_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"]]};
searchIndex["linked_hash_map"]={"doc":"A `HashMap` wrapper that holds key-value pairs in…","items":[[3,"LinkedHashMap","linked_hash_map","A linked hash map.",N,N],[3,"Iter","","An insertion-order iterator over a `LinkedHashMap`'s…",N,N],[3,"IterMut","","An insertion-order iterator over a `LinkedHashMap`'s…",N,N],[3,"IntoIter","","A consuming insertion-order iterator over a…",N,N],[3,"Entries","","An insertion-order iterator over a `LinkedHashMap`'s…",N,N],[3,"Keys","","An insertion-order iterator over a `LinkedHashMap`'s keys.",N,N],[3,"Values","","An insertion-order iterator over a `LinkedHashMap`'s values.",N,N],[3,"OccupiedEntry","","A view into a single occupied location in a `LinkedHashMap`.",N,N],[3,"VacantEntry","","A view into a single empty location in a `LinkedHashMap`.",N,N],[4,"Entry","","A view into a single location in a map, which may be…",N,N],[13,"Occupied","","An occupied Entry.",0,N],[13,"Vacant","","A vacant Entry.",0,N],[11,"new","","Creates a linked hash map.",1,[[],["self"]]],[11,"with_capacity","","Creates an empty linked hash map with the given initial…",1,[[["usize"]],["self"]]],[11,"with_hasher","","Creates an empty linked hash map with the given initial…",1,[[["s"]],["self"]]],[11,"with_capacity_and_hasher","","Creates an empty linked hash map with the given initial…",1,[[["usize"],["s"]],["self"]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",1,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It…",1,[[["self"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["k"]],["entry"]]],[11,"entries","","Returns an iterator visiting all entries in insertion…",1,[[["self"]],["entries"]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",1,[[["self"],["k"],["v"]],["option"]]],[11,"contains_key","","Checks if the map contains the given key.",1,[[["self"],["q"]],["bool"]]],[11,"get","","Returns the value corresponding to the key in the map.",1,[[["self"],["q"]],["option"]]],[11,"get_mut","","Returns the mutable reference corresponding to the key in…",1,[[["self"],["q"]],["option"]]],[11,"get_refresh","","Returns the value corresponding to the key in the map.",1,[[["self"],["q"]],["option"]]],[11,"remove","","Removes and returns the value corresponding to the key…",1,[[["self"],["q"]],["option"]]],[11,"capacity","","Returns the maximum number of key-value pairs the map can…",1,[[["self"]],["usize"]]],[11,"pop_front","","Removes the first entry.",1,[[["self"]],["option"]]],[11,"front","","Gets the first entry.",1,[[["self"]],["option"]]],[11,"pop_back","","Removes the last entry.",1,[[["self"]],["option"]]],[11,"back","","Gets the last entry.",1,[[["self"]],["option"]]],[11,"len","","Returns the number of key-value pairs in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether the map is currently empty.",1,[[["self"]],["bool"]]],[11,"hasher","","Returns a reference to the map's hasher.",1,[[["self"]],["s"]]],[11,"clear","","Clears the map of all key-value pairs.",1,[[["self"]]]],[11,"iter","","Returns a double-ended iterator visiting all key-value…",1,[[["self"]],["iter"]]],[11,"iter_mut","","Returns a double-ended iterator visiting all key-value…",1,[[["self"]],["itermut"]]],[11,"keys","","Returns a double-ended iterator visiting all key in order…",1,[[["self"]],["keys"]]],[11,"values","","Returns a double-ended iterator visiting all values in…",1,[[["self"]],["values"]]],[11,"key","","Returns the entry key",0,[[["self"]],["k"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["self"],["f"]],["v"]]],[11,"key","","Gets a reference to the entry key",2,[[["self"]],["k"]]],[11,"get","","Gets a reference to the value in the entry.",2,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",2,[[["self"]],["v"]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the…",2,[[["self"]],["v"]]],[11,"insert","","Sets the value of the entry, and returns the entry's old…",2,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value out of the entry, and returns it",2,[[["self"]],["v"]]],[11,"key","","Gets a reference to the entry key",3,[[["self"]],["k"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",3,[[["self"],["v"]],["v"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"next","","",7,[[["self"]],["option",["occupiedentry"]]]],[11,"size_hint","","",7,N],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"len","","",4,[[["self"]],["usize"]]],[11,"len","","",5,[[["self"]],["usize"]]],[11,"len","","",6,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"partial_cmp","","",1,[[["self"],["self"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["self"]],["bool"]]],[11,"le","","",1,[[["self"],["self"]],["bool"]]],[11,"ge","","",1,[[["self"],["self"]],["bool"]]],[11,"gt","","",1,[[["self"],["self"]],["bool"]]],[11,"default","","",1,[[],["self"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"eq","","",1,[[["self"],["self"]],["bool"]]],[11,"into_iter","","",1,[[["self"]],["intoiter"]]],[11,"cmp","","",1,[[["self"],["self"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"fmt","","Returns a string that lists the key-value pairs in…",1,[[["self"],["formatter"]],["result"]]],[11,"index","","",1,[[["self"],["q"]],["v"]]],[11,"index_mut","","",1,[[["self"],["q"]],["v"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"from_iter","","",1,[[["i"]],["self"]]]],"paths":[[4,"Entry"],[3,"LinkedHashMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Entries"],[3,"Keys"],[3,"Values"]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","items":[[3,"Record","log","The \"payload\" of a log message.",N,N],[3,"RecordBuilder","","Builder for `Record`.",N,N],[3,"Metadata","","Metadata about a log message.",N,N],[3,"MetadataBuilder","","Builder for `Metadata`.",N,N],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",N,N],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't…",N,N],[4,"Level","","An enum representing the available verbosity levels of the…",N,N],[13,"Error","","The \"error\" level.",0,N],[13,"Warn","","The \"warn\" level.",0,N],[13,"Info","","The \"info\" level.",0,N],[13,"Debug","","The \"debug\" level.",0,N],[13,"Trace","","The \"trace\" level.",0,N],[4,"LevelFilter","","An enum representing the available verbosity level filters…",N,N],[13,"Off","","A level lower than all log levels.",1,N],[13,"Error","","Corresponds to the `Error` log level.",1,N],[13,"Warn","","Corresponds to the `Warn` log level.",1,N],[13,"Info","","Corresponds to the `Info` log level.",1,N],[13,"Debug","","Corresponds to the `Debug` log level.",1,N],[13,"Trace","","Corresponds to the `Trace` log level.",1,N],[5,"set_max_level","","Sets the global maximum log level.",N,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",N,[[],["levelfilter"]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",N,[[["log"]],["result",["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",N,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",N,N],[8,"Log","","A trait encapsulating the operations required of a logger.",N,N],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["self"],["record"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],["option",["level"]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],["option",["str"]]]],[11,"file","","The source file containing the message.",3,[[["self"]],["option",["str"]]]],[11,"line","","The line containing the message.",3,[[["self"]],["option",["u32"]]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["self"],["arguments"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["self"],["option",["str"]]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["self"],["option",["str"]]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["self"],["option",["u32"]]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[14,"log","","The standard logging macro.",N,N],[14,"error","","Logs a message at the error level.",N,N],[14,"warn","","Logs a message at the warn level.",N,N],[14,"info","","Logs a message at the info level.",N,N],[14,"debug","","Logs a message at the debug level.",N,N],[14,"trace","","Logs a message at the trace level.",N,N],[14,"log_enabled","","Determines if a message logged at the specified level in…",N,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["level"]],["bool"]]],[11,"eq","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["level"]],["bool"]]],[11,"eq","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ne","","",5,[[["self"],["metadata"]],["bool"]]],[11,"eq","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ne","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"eq","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"ne","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"cmp","","",0,[[["self"],["level"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["levelfilter"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["metadata"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["metadatabuilder"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["level"]],["bool"]]],[11,"le","","",0,[[["self"],["level"]],["bool"]]],[11,"gt","","",0,[[["self"],["level"]],["bool"]]],[11,"ge","","",0,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["levelfilter"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["levelfilter"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["level"]],["bool"]]],[11,"le","","",1,[[["self"],["level"]],["bool"]]],[11,"gt","","",1,[[["self"],["level"]],["bool"]]],[11,"ge","","",1,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["metadata"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"le","","",5,[[["self"],["metadata"]],["bool"]]],[11,"gt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ge","","",5,[[["self"],["metadata"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["metadatabuilder"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"le","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"gt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ge","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"from_str","","",0,[[["str"]],["result",["level"]]]],[11,"from_str","","",1,[[["str"]],["result",["levelfilter"]]]],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"hash","","",5,N],[11,"hash","","",6,N],[11,"clone","","",0,[[["self"]],["level"]]],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]]],"paths":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["lzw"]={"doc":"LZW decoder and encoder","items":[[3,"Decoder","lzw","Decoder for a LZW compressed stream (this algorithm is…",N,N],[3,"DecoderEarlyChange","","Decoder for a LZW compressed stream using an “early…",N,N],[3,"Encoder","","LZW encoder using the algorithm of GIF files.",N,N],[3,"LsbReader","","Reads bits from a byte stream, LSB first.",N,N],[3,"LsbWriter","","Writes bits to a byte stream, LSB first.",N,N],[3,"MsbReader","","Reads bits from a byte stream, MSB first.",N,N],[3,"MsbWriter","","Writes bits to a byte stream, MSB first.",N,N],[4,"Bits","","Containes either the consumed bytes and reconstructed bits…",N,N],[13,"Some","","Consumed bytes, reconstructed bits",0,N],[13,"None","","Consumed bytes",0,N],[5,"encode","","Convenience function that reads and compresses all bytes…",N,[[["r"],["w"],["u8"]],["result"]]],[11,"new","","Creates a new LZW decoder. ",1,[[["r"],["u8"]],["decoder"]]],[11,"decode_bytes","","Tries to obtain and decode a code word from `bytes`.",1,N],[11,"new","","Creates a new LZW decoder. ",2,[[["r"],["u8"]],["decoderearlychange"]]],[11,"decode_bytes","","Tries to obtain and decode a code word from `bytes`.",2,N],[11,"new","","Creates a new LZW encoder.",3,[[["w"],["u8"]],["result",["encoder"]]]],[11,"encode_bytes","","Compresses `bytes` and writes the result into the writer.",3,N],[11,"new","","Creates a new bit reader",4,[[],["lsbreader"]]],[11,"new","","Creates a new bit reader",5,[[],["msbreader"]]],[11,"new","","Creates a new bit reader",6,[[["w"]],["lsbwriter"]]],[11,"new","","Creates a new bit reader",7,[[["w"]],["msbwriter"]]],[8,"BitReader","","A bit reader.",N,N],[10,"read_bits","","Returns the next `n` bits.",8,N],[8,"BitWriter","","A bit writer.",N,N],[10,"write_bits","","Writes the next `n` bits.",9,[[["self"],["u16"],["u8"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"read_bits","","",4,N],[11,"read_bits","","",5,N],[11,"write_bits","","",6,[[["self"],["u16"],["u8"]],["result"]]],[11,"write_bits","","",7,[[["self"],["u16"],["u8"]],["result"]]],[11,"drop","","",3,[[["self"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"write","","",6,N],[11,"flush","","",6,[[["self"]],["result"]]],[11,"write","","",7,N],[11,"flush","","",7,[[["self"]],["result"]]]],"paths":[[4,"Bits"],[3,"Decoder"],[3,"DecoderEarlyChange"],[3,"Encoder"],[3,"LsbReader"],[3,"MsbReader"],[3,"LsbWriter"],[3,"MsbWriter"],[8,"BitReader"],[8,"BitWriter"]]};
searchIndex["malloc_buf"]={"doc":"","items":[[3,"MallocBuffer","malloc_buf","A type that represents a `malloc`'d chunk of memory.",N,N],[11,"new","","Constructs a new `MallocBuffer` for a `malloc`'d buffer…",0,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,N]],"paths":[[3,"MallocBuffer"]]};
searchIndex["memoffset"]={"doc":"A crate used for calculating offsets of struct members and…","items":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",N,N],[14,"span_of","","Produces a range instance representing the sub-slice…",N,N]],"paths":[]};
searchIndex["nodrop"]={"doc":"The nodrop crate has the following cargo feature flags:","items":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",N,N],[11,"new","","Create a new NoDrop.",0,[[["t"]],["nodrop"]]],[11,"into_inner","","Extract the inner value.",0,[[["self"]],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]],["t"]]],[11,"deref_mut","","",0,[[["self"]],["t"]]],[11,"drop","","",0,[[["self"]]]]],"paths":[[3,"NoDrop"]]};
searchIndex["num"]={"doc":"A collection of numeric types and traits for Rust.","items":[[3,"BigInt","num","A big signed integer type.",N,N],[3,"BigUint","","A big unsigned integer type.",N,N],[3,"Complex","","A complex number in Cartesian form.",N,N],[12,"re","","Real portion of the complex number",0,N],[12,"im","","Imaginary portion of the complex number",0,N],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",N,N],[6,"BigRational","","Alias for arbitrary precision rationals.",N,N],[8,"Integer","","",N,N],[10,"div_floor","","Floored integer division.",1,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[["self"],["self"]],["self"]]],[11,"div_ceil","","Ceiled integer division.",1,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[["self"],["self"]],["self"]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",1,N],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",1,[[["self"],["self"]],["extendedgcd"]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",1,N],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",1,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,N],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[["self"],["self"]],["self"]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[["self"],["self"]],["self"]]],[5,"range","","Returns an iterator over the given range [start, stop)…",N,[[["a"],["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",N,[[["a"],["a"],["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[8,"Num","","The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr","","",2,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",2,[[["str"],["u32"]],["result"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",3,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",3,N],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",4,N],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",4,[[["self"]],["bool"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs","","Computes the absolute value.",5,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",5,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",5,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",5,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",5,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Bounded","","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",6,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",6,[[],["self"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Saturating","","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",7,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",7,[[["self"],["self"]],["self"]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",8,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",9,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",10,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",11,[[["self"],["self"]],["option"]]],[8,"PrimInt","","Generic trait for primitive integers.",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",12,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",12,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",12,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[["self"],["u32"]],["self"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",13,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",13,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this…",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type.…",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type.…",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type.…",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type.…",14,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this…",14,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this…",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type.…",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type.…",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type.…",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type.…",14,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this…",14,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type.…",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type.…",14,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted…",15,[[["t"]],["option"]]],[0,"cast","","",N,N],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",13,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",13,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this…",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type.…",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type.…",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type.…",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type.…",14,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this…",14,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this…",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type.…",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type.…",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type.…",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type.…",14,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this…",14,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type.…",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type.…",14,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted…",15,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",16,[[["self"]],["t"]]],[5,"cast","num","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[0,"pow","","",N,N],[8,"Pow","num::pow","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",17,N],[10,"pow","","Returns `self` to the power `rhs`.",17,N],[5,"pow","","Raises a value to the power of exp, using exponentiation…",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",N,[[["t"],["usize"]],["option"]]],[5,"pow","num","Raises a value to the power of exp, using exponentiation…",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",N,[[["t"],["usize"]],["option"]]],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",18,[[],["self"]]],[10,"infinity","","Returns the infinite value.",18,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",18,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",18,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",18,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",18,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",18,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",18,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",18,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",18,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",18,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",18,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",18,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",18,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",18,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",18,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",18,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",18,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",18,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",18,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",18,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",18,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",18,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",18,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",18,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",18,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",18,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",18,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",18,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",18,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",18,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",18,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",18,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",18,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",18,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",18,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",18,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",18,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",18,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",18,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",18,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",18,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",18,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",18,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",18,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",18,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",18,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",18,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",18,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",18,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",18,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",18,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",18,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",18,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",18,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",18,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",18,N],[0,"bigint","","",N,N],[3,"ParseBigIntError","num::bigint","",N,N],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",N,N],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",19,[[["self"]],["option",["bigint"]]]],[3,"BigInt","","A big signed integer type.",N,N],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",N,N],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",20,[[["self"]],["option",["biguint"]]]],[4,"Sign","","A Sign is a `BigInt`'s composing element.",N,N],[13,"Minus","","",21,N],[13,"NoSign","","",21,N],[13,"Plus","","",21,N],[3,"BigUint","","A big unsigned integer type.",N,N],[0,"complex","num","",N,N],[3,"Complex","num::complex","A complex number in Cartesian form.",N,N],[12,"re","","Real portion of the complex number",0,N],[12,"im","","Imaginary portion of the complex number",0,N],[6,"Complex32","","",N,N],[6,"Complex64","","",N,N],[3,"ParseComplexError","","",N,N],[0,"integer","num","",N,N],[8,"Integer","num::integer","",N,N],[10,"div_floor","","Floored integer division.",1,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[["self"],["self"]],["self"]]],[11,"div_ceil","","Ceiled integer division.",1,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[["self"],["self"]],["self"]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",1,N],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",1,[[["self"],["self"]],["extendedgcd"]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",1,N],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",1,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,N],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[["self"],["self"]],["self"]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[["self"],["self"]],["self"]]],[3,"ExtendedGcd","","Greatest common divisor and Bézout coefficients",N,N],[12,"gcd","","",22,N],[12,"x","","",22,N],[12,"y","","",22,N],[5,"div_rem","","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"div_ceil","","Ceiled integer division",N,[[["t"],["t"]],["t"]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",N,[[["t"],["t"]],["t"]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",N,N],[3,"IterBinomial","","An iterator over binomial coefficients.",N,N],[5,"binomial","","Calculate the binomial coefficient.",N,[[["t"],["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",N,N],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",N,[[["t"],["u32"]],["t"]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",N,[[["t"]],["t"]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",N,[[["t"]],["t"]]],[8,"Roots","","Provides methods to compute an integer's square root, cube…",N,N],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",23,[[["self"],["u32"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",23,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",23,[[["self"]],["self"]]],[0,"iter","num","",N,N],[3,"Range","num::iter","An iterator over the range [start, stop)",N,N],[5,"range","","Returns an iterator over the given range [start, stop)…",N,[[["a"],["a"]],["range"]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",N,N],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",N,N],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",N,[[["a"],["a"],["a"]],["rangestep"]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",N,N],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[0,"traits","num","",N,N],[0,"bounds","num::traits","",N,N],[8,"Bounded","num::traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",6,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",6,[[],["self"]]],[0,"cast","num::traits","",N,N],[8,"ToPrimitive","num::traits::cast","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",13,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",13,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this…",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type.…",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type.…",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type.…",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type.…",14,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this…",14,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this…",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type.…",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type.…",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type.…",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type.…",14,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this…",14,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type.…",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type.…",14,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted…",15,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",16,[[["self"]],["t"]]],[0,"float","num::traits","",N,N],[8,"FloatCore","num::traits::float","Generic trait for floating point numbers that works with…",N,N],[10,"infinity","","Returns positive infinity.",24,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",24,[[],["self"]]],[10,"nan","","Returns NaN.",24,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",24,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",24,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",24,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",24,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",24,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",24,[[["self"]],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",24,[[["self"]],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",24,[[["self"]],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",24,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",24,[[["self"]],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",24,[[["self"]],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",24,[[["self"]],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",24,[[["self"]],["self"]]],[11,"trunc","","Return the integer part of a number.",24,[[["self"]],["self"]]],[11,"fract","","Returns the fractional part of a number.",24,[[["self"]],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",24,[[["self"]],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",24,[[["self"]],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",24,[[["self"]],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",24,[[["self"]],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",24,[[["self"],["self"]],["self"]]],[11,"max","","Returns the maximum of the two numbers.",24,[[["self"],["self"]],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",24,[[["self"]],["self"]]],[11,"powi","","Raise a number to an integer power.",24,[[["self"],["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",24,[[["self"]],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",24,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",24,N],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",18,[[],["self"]]],[10,"infinity","","Returns the infinite value.",18,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",18,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",18,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",18,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",18,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",18,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",18,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",18,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",18,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",18,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",18,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",18,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",18,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",18,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",18,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",18,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",18,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",18,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",18,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",18,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",18,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",18,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",18,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",18,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",18,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",18,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",18,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",18,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",18,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",18,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",18,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",18,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",18,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",18,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",18,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",18,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",18,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",18,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",18,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",18,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",18,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",18,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",18,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",18,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",18,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",18,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",18,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",18,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",18,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",18,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",18,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",18,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",18,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",18,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",18,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",18,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",25,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",25,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",25,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",25,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",25,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",25,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",25,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",25,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",25,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",25,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",25,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",25,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",25,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",25,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",25,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",25,[[],["self"]]],[0,"identities","num::traits","",N,N],[8,"Zero","num::traits::identities","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",3,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",3,N],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",4,N],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",4,[[["self"]],["bool"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[0,"int","num::traits","",N,N],[8,"PrimInt","num::traits::int","Generic trait for primitive integers.",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",12,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",12,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",12,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[["self"],["u32"]],["self"]]],[0,"ops","num::traits","",N,N],[0,"checked","num::traits::ops","",N,N],[8,"CheckedAdd","num::traits::ops::checked","Performs addition that returns `None` instead of wrapping…",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",8,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",9,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",10,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",11,[[["self"],["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",N,N],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",26,[[["self"],["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",N,N],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",27,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",N,N],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",28,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",N,N],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",29,[[["self"],["u32"]],["option"]]],[0,"inv","num::traits::ops","",N,N],[8,"Inv","num::traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",N,N],[16,"Output","","The result after applying the operator.",30,N],[10,"inv","","Returns the multiplicative inverse of `self`.",30,N],[0,"mul_add","num::traits::ops","",N,N],[8,"MulAdd","num::traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",N,N],[16,"Output","","The resulting type after applying the fused multiply-add.",31,N],[10,"mul_add","","Performs the fused multiply-add operation.",31,N],[8,"MulAddAssign","","The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign","","Performs the fused multiply-add operation.",32,N],[0,"saturating","num::traits::ops","",N,N],[8,"Saturating","num::traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",7,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",7,[[["self"],["self"]],["self"]]],[0,"wrapping","num::traits::ops","",N,N],[8,"WrappingAdd","num::traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",33,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",34,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",35,[[["self"],["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",N,N],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",36,[[["self"],["u32"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",N,N],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",37,[[["self"],["u32"]],["self"]]],[0,"pow","num::traits","",N,N],[8,"Pow","num::traits::pow","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",17,N],[10,"pow","","Returns `self` to the power `rhs`.",17,N],[5,"pow","","Raises a value to the power of exp, using exponentiation…",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",N,[[["t"],["usize"]],["option"]]],[0,"real","num::traits","",N,N],[8,"Real","num::traits::real","A trait for real number types that do not necessarily have…",N,N],[10,"min_value","","Returns the smallest finite value that this type can…",38,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",38,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",38,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",38,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",38,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",38,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",38,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",38,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",38,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",38,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",38,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",38,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",38,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",38,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",38,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",38,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",38,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",38,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",38,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",38,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",38,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",38,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",38,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",38,[[["self"]],["self"]]],[10,"to_degrees","","Converts radians to degrees.",38,[[["self"]],["self"]]],[10,"to_radians","","Converts degrees to radians.",38,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",38,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",38,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",38,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",38,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",38,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",38,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",38,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",38,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",38,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",38,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",38,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",38,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",38,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",38,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",38,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",38,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",38,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",38,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",38,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",38,[[["self"]],["self"]]],[0,"sign","num::traits","",N,N],[8,"Signed","num::traits::sign","Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs","","Computes the absolute value.",5,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",5,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",5,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",5,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",5,[[["self"]],["bool"]]],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Num","num::traits","The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr","","",2,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",2,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",N,N],[8,"NumRef","","The trait for `Num` types which also implement numeric…",N,N],[8,"RefNum","","The trait for references which implement numeric…",N,N],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",N,N],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",N,N],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",N,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",39,N],[13,"Invalid","","",39,N],[3,"ParseFloatError","","",N,N],[12,"kind","","",40,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"rational","num","",N,N],[3,"Ratio","num::rational","Represents the ratio between two numbers.",N,N],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",N,N],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",N,N],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",N,N],[6,"BigRational","","Alias for arbitrary precision rationals.",N,N],[3,"ParseRatioError","","",N,N],[11,"from","num::bigint","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"from","num::complex","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","num::bigint","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","num::complex","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"from","num::integer","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into_iter","","",45,[[["self"]],["i"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","num::iter","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into_iter","","",46,[[["self"]],["i"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into_iter","","",47,[[["self"]],["i"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into_iter","","",48,[[["self"]],["i"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into_iter","","",49,[[["self"]],["i"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","num::traits","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"from","num::rational","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"fmt","num::bigint","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"sub","","",41,[[["self"],["i64"]],["bigint"]]],[11,"sub","","",41,[[["self"],["usize"]],["bigint"]]],[11,"sub","","",42,[[["self"],["u32"]],["biguint"]]],[11,"sub","","",41,[[["self"],["u8"]],["bigint"]]],[11,"sub","","",42,[[["self"],["u8"]],["biguint"]]],[11,"sub","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"sub","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"sub","","",42,[[["self"],["u8"]],["biguint"]]],[11,"sub","","",41,[[["self"],["i32"]],["bigint"]]],[11,"sub","","",41,[[["self"],["u64"]],["bigint"]]],[11,"sub","","",41,[[["self"],["isize"]],["bigint"]]],[11,"sub","","",42,[[["self"],["u32"]],["biguint"]]],[11,"sub","","",41,[[["self"],["u32"]],["bigint"]]],[11,"sub","","",41,[[["self"],["usize"]],["bigint"]]],[11,"sub","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"sub","","",41,[[["self"],["u8"]],["bigint"]]],[11,"sub","","",41,[[["self"],["i128"]],["bigint"]]],[11,"sub","","",41,[[["self"],["u64"]],["bigint"]]],[11,"sub","","",41,[[["self"],["u32"]],["bigint"]]],[11,"sub","","",42,[[["self"],["u128"]],["biguint"]]],[11,"sub","","",42,[[["self"],["usize"]],["biguint"]]],[11,"sub","","",42,[[["self"],["u64"]],["biguint"]]],[11,"sub","","",41,[[["self"],["i32"]],["bigint"]]],[11,"sub","","",41,[[["self"],["isize"]],["bigint"]]],[11,"sub","","",42,[[["self"],["u16"]],["biguint"]]],[11,"sub","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"sub","","",41,[[["self"],["u16"]],["bigint"]]],[11,"sub","","",42,[[["self"],["usize"]],["biguint"]]],[11,"sub","","",41,[[["self"],["u128"]],["bigint"]]],[11,"sub","","",42,[[["self"],["u16"]],["biguint"]]],[11,"sub","","",41,[[["self"],["i64"]],["bigint"]]],[11,"sub","","",41,[[["self"],["i128"]],["bigint"]]],[11,"sub","","",41,[[["self"],["u128"]],["bigint"]]],[11,"sub","","",41,[[["self"],["u16"]],["bigint"]]],[11,"sub","","",42,[[["self"],["u128"]],["biguint"]]],[11,"sub","","",41,[[["self"],["i8"]],["bigint"]]],[11,"sub","","",42,[[["self"],["u64"]],["biguint"]]],[11,"sub","","",41,[[["self"],["i16"]],["bigint"]]],[11,"sub","","",41,[[["self"],["i8"]],["bigint"]]],[11,"sub","","",41,[[["self"],["i16"]],["bigint"]]],[11,"hash","","",21,N],[11,"hash","","",41,N],[11,"hash","","",42,N],[11,"from_str_radix","","Creates and initializes a BigInt.",41,[[["str"],["u32"]],["result",["bigint","parsebiginterror"]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",42,[[["str"],["u32"]],["result",["biguint","parsebiginterror"]]]],[11,"from_i64","","",41,[[["i64"]],["option",["bigint"]]]],[11,"from_i128","","",41,[[["i128"]],["option",["bigint"]]]],[11,"from_u64","","",41,[[["u64"]],["option",["bigint"]]]],[11,"from_u128","","",41,[[["u128"]],["option",["bigint"]]]],[11,"from_f64","","",41,[[["f64"]],["option",["bigint"]]]],[11,"from_i64","","",42,[[["i64"]],["option",["biguint"]]]],[11,"from_i128","","",42,[[["i128"]],["option",["biguint"]]]],[11,"from_u64","","",42,[[["u64"]],["option",["biguint"]]]],[11,"from_u128","","",42,[[["u128"]],["option",["biguint"]]]],[11,"from_f64","","",42,[[["f64"]],["option",["biguint"]]]],[11,"rem","","",41,[[["self"],["i64"]],["bigint"]]],[11,"rem","","",41,[[["self"],["u16"]],["bigint"]]],[11,"rem","","",41,[[["self"],["u64"]],["bigint"]]],[11,"rem","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"rem","","",41,[[["self"],["usize"]],["bigint"]]],[11,"rem","","",41,[[["self"],["u32"]],["bigint"]]],[11,"rem","","",41,[[["self"],["usize"]],["bigint"]]],[11,"rem","","",42,[[["self"],["u32"]],["biguint"]]],[11,"rem","","",41,[[["self"],["u8"]],["bigint"]]],[11,"rem","","",41,[[["self"],["isize"]],["bigint"]]],[11,"rem","","",42,[[["self"],["u8"]],["biguint"]]],[11,"rem","","",42,[[["self"],["u128"]],["biguint"]]],[11,"rem","","",41,[[["self"],["i128"]],["bigint"]]],[11,"rem","","",41,[[["self"],["i32"]],["bigint"]]],[11,"rem","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"rem","","",42,[[["self"],["u8"]],["biguint"]]],[11,"rem","","",42,[[["self"],["usize"]],["biguint"]]],[11,"rem","","",41,[[["self"],["u64"]],["bigint"]]],[11,"rem","","",41,[[["self"],["i32"]],["bigint"]]],[11,"rem","","",42,[[["self"],["u64"]],["biguint"]]],[11,"rem","","",41,[[["self"],["i64"]],["bigint"]]],[11,"rem","","",42,[[["self"],["u64"]],["biguint"]]],[11,"rem","","",41,[[["self"],["i16"]],["bigint"]]],[11,"rem","","",41,[[["self"],["i16"]],["bigint"]]],[11,"rem","","",42,[[["self"],["u32"]],["biguint"]]],[11,"rem","","",41,[[["self"],["u8"]],["bigint"]]],[11,"rem","","",41,[[["self"],["i8"]],["bigint"]]],[11,"rem","","",42,[[["self"],["u16"]],["biguint"]]],[11,"rem","","",41,[[["self"],["i128"]],["bigint"]]],[11,"rem","","",41,[[["self"],["u128"]],["bigint"]]],[11,"rem","","",42,[[["self"],["u16"]],["biguint"]]],[11,"rem","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"rem","","",42,[[["self"],["u128"]],["biguint"]]],[11,"rem","","",42,[[["self"],["usize"]],["biguint"]]],[11,"rem","","",41,[[["self"],["i8"]],["bigint"]]],[11,"rem","","",41,[[["self"],["u16"]],["bigint"]]],[11,"rem","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"rem","","",41,[[["self"],["isize"]],["bigint"]]],[11,"rem","","",41,[[["self"],["u128"]],["bigint"]]],[11,"rem","","",41,[[["self"],["u32"]],["bigint"]]],[11,"default","","",42,[[],["biguint"]]],[11,"default","","",41,[[],["bigint"]]],[11,"to_i64","","",41,[[["self"]],["option",["i64"]]]],[11,"to_i128","","",41,[[["self"]],["option",["i128"]]]],[11,"to_u64","","",41,[[["self"]],["option",["u64"]]]],[11,"to_u128","","",41,[[["self"]],["option",["u128"]]]],[11,"to_f32","","",41,[[["self"]],["option",["f32"]]]],[11,"to_f64","","",41,[[["self"]],["option",["f64"]]]],[11,"to_i64","","",42,[[["self"]],["option",["i64"]]]],[11,"to_i128","","",42,[[["self"]],["option",["i128"]]]],[11,"to_u64","","",42,[[["self"]],["option",["u64"]]]],[11,"to_u128","","",42,[[["self"]],["option",["u128"]]]],[11,"to_f32","","",42,[[["self"]],["option",["f32"]]]],[11,"to_f64","","",42,[[["self"]],["option",["f64"]]]],[11,"bitxor","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"bitxor","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"bitxor","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"bitxor","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"checked_add","","",41,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_add","","",42,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"abs","","",41,[[["self"]],["bigint"]]],[11,"abs_sub","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"signum","","",41,[[["self"]],["bigint"]]],[11,"is_positive","","",41,[[["self"]],["bool"]]],[11,"is_negative","","",41,[[["self"]],["bool"]]],[11,"checked_sub","","",42,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"checked_sub","","",41,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"zero","","",41,[[],["bigint"]]],[11,"is_zero","","",41,[[["self"]],["bool"]]],[11,"zero","","",42,[[],["biguint"]]],[11,"is_zero","","",42,[[["self"]],["bool"]]],[11,"from","","",41,[[["u16"]],["bigint"]]],[11,"from","","",41,[[["biguint"]],["bigint"]]],[11,"from","","",41,[[["isize"]],["bigint"]]],[11,"from","","",42,[[["u16"]],["biguint"]]],[11,"from","","",41,[[["u64"]],["bigint"]]],[11,"from","","",41,[[["i128"]],["bigint"]]],[11,"from","","",42,[[["u32"]],["biguint"]]],[11,"from","","",41,[[["u32"]],["bigint"]]],[11,"from","","",41,[[["u8"]],["bigint"]]],[11,"from","","",42,[[["usize"]],["biguint"]]],[11,"from","","",41,[[["i8"]],["bigint"]]],[11,"from","","",41,[[["i16"]],["bigint"]]],[11,"from","","",42,[[["u8"]],["biguint"]]],[11,"from","","",42,[[["u128"]],["biguint"]]],[11,"from","","",41,[[["i32"]],["bigint"]]],[11,"from","","",41,[[["u128"]],["bigint"]]],[11,"from","","",42,[[["u64"]],["biguint"]]],[11,"from","","",41,[[["i64"]],["bigint"]]],[11,"from","","",41,[[["usize"]],["bigint"]]],[11,"eq","","",41,[[["self"],["bigint"]],["bool"]]],[11,"eq","","",21,[[["self"],["sign"]],["bool"]]],[11,"eq","","",43,[[["self"],["parsebiginterror"]],["bool"]]],[11,"ne","","",43,[[["self"],["parsebiginterror"]],["bool"]]],[11,"eq","","",42,[[["self"],["biguint"]],["bool"]]],[11,"to_bigint","","",42,[[["self"]],["option",["bigint"]]]],[11,"to_bigint","","",41,[[["self"]],["option",["bigint"]]]],[11,"shl","","",42,[[["self"],["usize"]],["biguint"]]],[11,"shl","","",41,[[["self"],["usize"]],["bigint"]]],[11,"one","","",42,[[],["biguint"]]],[11,"is_one","","",42,[[["self"]],["bool"]]],[11,"one","","",41,[[],["bigint"]]],[11,"is_one","","",41,[[["self"]],["bool"]]],[11,"add_assign","","",42,N],[11,"add_assign","","",41,N],[11,"add_assign","","",41,N],[11,"add_assign","","",42,N],[11,"add_assign","","",42,N],[11,"add_assign","","",42,N],[11,"add_assign","","",41,N],[11,"add_assign","","",41,N],[11,"add_assign","","",41,N],[11,"add_assign","","",41,N],[11,"add_assign","","",41,N],[11,"add_assign","","",41,N],[11,"add_assign","","",42,N],[11,"add_assign","","",41,N],[11,"add_assign","","",41,N],[11,"add_assign","","",42,N],[11,"add_assign","","",42,N],[11,"add_assign","","",41,N],[11,"add_assign","","",41,N],[11,"add_assign","","",42,N],[11,"add_assign","","",41,N],[11,"add_assign","","",41,N],[11,"description","","",43,[[["self"]],["str"]]],[11,"bitor_assign","","",41,N],[11,"bitor_assign","","",42,N],[11,"bitor_assign","","",41,N],[11,"bitor_assign","","",42,N],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"mul_assign","","",41,N],[11,"mul_assign","","",41,N],[11,"mul_assign","","",41,N],[11,"mul_assign","","",42,N],[11,"mul_assign","","",42,N],[11,"mul_assign","","",41,N],[11,"mul_assign","","",41,N],[11,"mul_assign","","",41,N],[11,"mul_assign","","",42,N],[11,"mul_assign","","",41,N],[11,"mul_assign","","",42,N],[11,"mul_assign","","",42,N],[11,"mul_assign","","",41,N],[11,"mul_assign","","",41,N],[11,"mul_assign","","",41,N],[11,"mul_assign","","",41,N],[11,"mul_assign","","",42,N],[11,"mul_assign","","",41,N],[11,"mul_assign","","",41,N],[11,"mul_assign","","",41,N],[11,"mul_assign","","",42,N],[11,"mul_assign","","",42,N],[11,"shl_assign","","",41,N],[11,"shl_assign","","",42,N],[11,"bitand","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"bitand","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"bitand","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"bitand","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"cmp","","",42,[[["self"],["biguint"]],["ordering"]]],[11,"cmp","","",21,[[["self"],["sign"]],["ordering"]]],[11,"cmp","","",41,[[["self"],["bigint"]],["ordering"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"partial_cmp","","",21,[[["self"],["sign"]],["option",["ordering"]]]],[11,"partial_cmp","","",41,[[["self"],["bigint"]],["option",["ordering"]]]],[11,"partial_cmp","","",42,[[["self"],["biguint"]],["option",["ordering"]]]],[11,"neg","","",42,[[["self"]],["biguint"]]],[11,"neg","","Negate Sign value.",21,[[["self"]],["sign"]]],[11,"neg","","",41,[[["self"]],["bigint"]]],[11,"shr_assign","","",41,N],[11,"shr_assign","","",42,N],[11,"checked_mul","","",41,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_mul","","",42,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"bitor","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"bitor","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"bitor","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"bitor","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"shr","","",42,[[["self"],["usize"]],["biguint"]]],[11,"shr","","",41,[[["self"],["usize"]],["bigint"]]],[11,"checked_div","","",41,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_div","","",42,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"from_str","","",42,[[["str"]],["result",["biguint","parsebiginterror"]]]],[11,"from_str","","",41,[[["str"]],["result",["bigint","parsebiginterror"]]]],[11,"nth_root","","",42,[[["self"],["u32"]],["biguint"]]],[11,"sqrt","","",42,[[["self"]],["biguint"]]],[11,"cbrt","","",42,[[["self"]],["biguint"]]],[11,"nth_root","","",41,[[["self"],["u32"]],["bigint"]]],[11,"sqrt","","",41,[[["self"]],["bigint"]]],[11,"cbrt","","",41,[[["self"]],["bigint"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"product","","",41,[[["i"]],["bigint"]]],[11,"product","","",42,[[["i"]],["biguint"]]],[11,"mul","","",41,[[["self"],["u16"]],["bigint"]]],[11,"mul","","",41,[[["self"],["u64"]],["bigint"]]],[11,"mul","","",41,[[["self"],["i8"]],["bigint"]]],[11,"mul","","",41,[[["self"],["i16"]],["bigint"]]],[11,"mul","","",41,[[["self"],["isize"]],["bigint"]]],[11,"mul","","",42,[[["self"],["u128"]],["biguint"]]],[11,"mul","","",41,[[["self"],["u32"]],["bigint"]]],[11,"mul","","",41,[[["self"],["u8"]],["bigint"]]],[11,"mul","","",42,[[["self"],["u8"]],["biguint"]]],[11,"mul","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"mul","","",42,[[["self"],["u16"]],["biguint"]]],[11,"mul","","",41,[[["self"],["u8"]],["bigint"]]],[11,"mul","","",41,[[["self"],["u16"]],["bigint"]]],[11,"mul","","",41,[[["self"],["u64"]],["bigint"]]],[11,"mul","","",42,[[["self"],["usize"]],["biguint"]]],[11,"mul","","",42,[[["self"],["u64"]],["biguint"]]],[11,"mul","","",42,[[["self"],["u32"]],["biguint"]]],[11,"mul","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"mul","","",41,[[["self"],["u128"]],["bigint"]]],[11,"mul","","",41,[[["self"],["i128"]],["bigint"]]],[11,"mul","","",41,[[["self"],["i32"]],["bigint"]]],[11,"mul","","",42,[[["self"],["u32"]],["biguint"]]],[11,"mul","","",42,[[["self"],["u128"]],["biguint"]]],[11,"mul","","",41,[[["self"],["u32"]],["bigint"]]],[11,"mul","","",42,[[["self"],["usize"]],["biguint"]]],[11,"mul","","",41,[[["self"],["i32"]],["bigint"]]],[11,"mul","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"mul","","",41,[[["self"],["isize"]],["bigint"]]],[11,"mul","","",41,[[["self"],["usize"]],["bigint"]]],[11,"mul","","",41,[[["self"],["i128"]],["bigint"]]],[11,"mul","","",41,[[["self"],["usize"]],["bigint"]]],[11,"mul","","",21,[[["self"],["sign"]],["sign"]]],[11,"mul","","",42,[[["self"],["u64"]],["biguint"]]],[11,"mul","","",41,[[["self"],["i8"]],["bigint"]]],[11,"mul","","",41,[[["self"],["i64"]],["bigint"]]],[11,"mul","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"mul","","",41,[[["self"],["i64"]],["bigint"]]],[11,"mul","","",42,[[["self"],["u16"]],["biguint"]]],[11,"mul","","",41,[[["self"],["i16"]],["bigint"]]],[11,"mul","","",42,[[["self"],["u8"]],["biguint"]]],[11,"mul","","",41,[[["self"],["u128"]],["bigint"]]],[11,"rem_assign","","",41,N],[11,"rem_assign","","",41,N],[11,"rem_assign","","",42,N],[11,"rem_assign","","",41,N],[11,"rem_assign","","",41,N],[11,"rem_assign","","",42,N],[11,"rem_assign","","",41,N],[11,"rem_assign","","",41,N],[11,"rem_assign","","",42,N],[11,"rem_assign","","",41,N],[11,"rem_assign","","",42,N],[11,"rem_assign","","",41,N],[11,"rem_assign","","",42,N],[11,"rem_assign","","",41,N],[11,"rem_assign","","",41,N],[11,"rem_assign","","",42,N],[11,"rem_assign","","",41,N],[11,"rem_assign","","",41,N],[11,"rem_assign","","",41,N],[11,"rem_assign","","",42,N],[11,"rem_assign","","",41,N],[11,"rem_assign","","",42,N],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"div_assign","","",41,N],[11,"div_assign","","",41,N],[11,"div_assign","","",42,N],[11,"div_assign","","",41,N],[11,"div_assign","","",42,N],[11,"div_assign","","",42,N],[11,"div_assign","","",41,N],[11,"div_assign","","",41,N],[11,"div_assign","","",41,N],[11,"div_assign","","",42,N],[11,"div_assign","","",41,N],[11,"div_assign","","",41,N],[11,"div_assign","","",41,N],[11,"div_assign","","",41,N],[11,"div_assign","","",41,N],[11,"div_assign","","",41,N],[11,"div_assign","","",42,N],[11,"div_assign","","",42,N],[11,"div_assign","","",42,N],[11,"div_assign","","",41,N],[11,"div_assign","","",41,N],[11,"div_assign","","",42,N],[11,"sum","","",42,[[["i"]],["biguint"]]],[11,"sum","","",41,[[["i"]],["bigint"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"div_rem","","",41,N],[11,"div_floor","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"mod_floor","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"div_mod_floor","","",41,N],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",41,[[["self"],["bigint"]],["bigint"]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",41,[[["self"],["bigint"]],["bigint"]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",41,[[["self"],["bigint"]],["bool"]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",41,[[["self"],["bigint"]],["bool"]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",41,[[["self"]],["bool"]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",41,[[["self"]],["bool"]]],[11,"div_rem","","",42,N],[11,"div_floor","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"mod_floor","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"div_mod_floor","","",42,N],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",42,[[["self"],["biguint"]],["biguint"]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",42,[[["self"],["biguint"]],["biguint"]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",42,[[["self"],["biguint"]],["bool"]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",42,[[["self"],["biguint"]],["bool"]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",42,[[["self"]],["bool"]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",42,[[["self"]],["bool"]]],[11,"div","","",41,[[["self"],["u8"]],["bigint"]]],[11,"div","","",41,[[["self"],["usize"]],["bigint"]]],[11,"div","","",41,[[["self"],["u128"]],["bigint"]]],[11,"div","","",42,[[["self"],["u16"]],["biguint"]]],[11,"div","","",42,[[["self"],["u64"]],["biguint"]]],[11,"div","","",41,[[["self"],["i32"]],["bigint"]]],[11,"div","","",41,[[["self"],["u8"]],["bigint"]]],[11,"div","","",41,[[["self"],["u64"]],["bigint"]]],[11,"div","","",41,[[["self"],["i8"]],["bigint"]]],[11,"div","","",41,[[["self"],["u16"]],["bigint"]]],[11,"div","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"div","","",42,[[["self"],["u16"]],["biguint"]]],[11,"div","","",41,[[["self"],["i8"]],["bigint"]]],[11,"div","","",42,[[["self"],["u128"]],["biguint"]]],[11,"div","","",42,[[["self"],["u8"]],["biguint"]]],[11,"div","","",41,[[["self"],["u64"]],["bigint"]]],[11,"div","","",41,[[["self"],["i128"]],["bigint"]]],[11,"div","","",41,[[["self"],["i16"]],["bigint"]]],[11,"div","","",42,[[["self"],["u8"]],["biguint"]]],[11,"div","","",41,[[["self"],["u128"]],["bigint"]]],[11,"div","","",41,[[["self"],["u32"]],["bigint"]]],[11,"div","","",41,[[["self"],["isize"]],["bigint"]]],[11,"div","","",41,[[["self"],["u16"]],["bigint"]]],[11,"div","","",41,[[["self"],["i32"]],["bigint"]]],[11,"div","","",41,[[["self"],["i16"]],["bigint"]]],[11,"div","","",42,[[["self"],["usize"]],["biguint"]]],[11,"div","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"div","","",42,[[["self"],["usize"]],["biguint"]]],[11,"div","","",41,[[["self"],["u32"]],["bigint"]]],[11,"div","","",42,[[["self"],["u32"]],["biguint"]]],[11,"div","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"div","","",41,[[["self"],["isize"]],["bigint"]]],[11,"div","","",41,[[["self"],["i64"]],["bigint"]]],[11,"div","","",42,[[["self"],["u32"]],["biguint"]]],[11,"div","","",42,[[["self"],["u128"]],["biguint"]]],[11,"div","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"div","","",41,[[["self"],["i128"]],["bigint"]]],[11,"div","","",41,[[["self"],["usize"]],["bigint"]]],[11,"div","","",42,[[["self"],["u64"]],["biguint"]]],[11,"div","","",41,[[["self"],["i64"]],["bigint"]]],[11,"bitxor_assign","","",41,N],[11,"bitxor_assign","","",42,N],[11,"bitxor_assign","","",41,N],[11,"bitxor_assign","","",42,N],[11,"not","","",41,[[["self"]],["bigint"]]],[11,"clone","","",21,[[["self"]],["sign"]]],[11,"clone","","",42,[[["self"]],["biguint"]]],[11,"clone","","",41,[[["self"]],["bigint"]]],[11,"clone","","",43,[[["self"]],["parsebiginterror"]]],[11,"sub_assign","","",42,N],[11,"sub_assign","","",42,N],[11,"sub_assign","","",41,N],[11,"sub_assign","","",41,N],[11,"sub_assign","","",42,N],[11,"sub_assign","","",41,N],[11,"sub_assign","","",41,N],[11,"sub_assign","","",41,N],[11,"sub_assign","","",41,N],[11,"sub_assign","","",41,N],[11,"sub_assign","","",41,N],[11,"sub_assign","","",41,N],[11,"sub_assign","","",41,N],[11,"sub_assign","","",41,N],[11,"sub_assign","","",41,N],[11,"sub_assign","","",42,N],[11,"sub_assign","","",42,N],[11,"sub_assign","","",42,N],[11,"sub_assign","","",41,N],[11,"sub_assign","","",42,N],[11,"sub_assign","","",42,N],[11,"sub_assign","","",41,N],[11,"add","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"add","","",41,[[["self"],["i16"]],["bigint"]]],[11,"add","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"add","","",41,[[["self"],["u32"]],["bigint"]]],[11,"add","","",41,[[["self"],["i64"]],["bigint"]]],[11,"add","","",42,[[["self"],["u64"]],["biguint"]]],[11,"add","","",41,[[["self"],["i32"]],["bigint"]]],[11,"add","","",41,[[["self"],["isize"]],["bigint"]]],[11,"add","","",42,[[["self"],["u32"]],["biguint"]]],[11,"add","","",41,[[["self"],["i32"]],["bigint"]]],[11,"add","","",41,[[["self"],["i64"]],["bigint"]]],[11,"add","","",41,[[["self"],["i8"]],["bigint"]]],[11,"add","","",42,[[["self"],["u8"]],["biguint"]]],[11,"add","","",42,[[["self"],["u64"]],["biguint"]]],[11,"add","","",42,[[["self"],["u128"]],["biguint"]]],[11,"add","","",41,[[["self"],["u16"]],["bigint"]]],[11,"add","","",42,[[["self"],["usize"]],["biguint"]]],[11,"add","","",41,[[["self"],["u32"]],["bigint"]]],[11,"add","","",41,[[["self"],["usize"]],["bigint"]]],[11,"add","","",42,[[["self"],["biguint"]],["biguint"]]],[11,"add","","",41,[[["self"],["u128"]],["bigint"]]],[11,"add","","",42,[[["self"],["usize"]],["biguint"]]],[11,"add","","",42,[[["self"],["u128"]],["biguint"]]],[11,"add","","",41,[[["self"],["i128"]],["bigint"]]],[11,"add","","",41,[[["self"],["u8"]],["bigint"]]],[11,"add","","",42,[[["self"],["u8"]],["biguint"]]],[11,"add","","",41,[[["self"],["u8"]],["bigint"]]],[11,"add","","",41,[[["self"],["i16"]],["bigint"]]],[11,"add","","",41,[[["self"],["isize"]],["bigint"]]],[11,"add","","",42,[[["self"],["u16"]],["biguint"]]],[11,"add","","",41,[[["self"],["u64"]],["bigint"]]],[11,"add","","",41,[[["self"],["u64"]],["bigint"]]],[11,"add","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"add","","",41,[[["self"],["u128"]],["bigint"]]],[11,"add","","",42,[[["self"],["u32"]],["biguint"]]],[11,"add","","",41,[[["self"],["u16"]],["bigint"]]],[11,"add","","",41,[[["self"],["i8"]],["bigint"]]],[11,"add","","",41,[[["self"],["i128"]],["bigint"]]],[11,"add","","",42,[[["self"],["u16"]],["biguint"]]],[11,"add","","",41,[[["self"],["usize"]],["bigint"]]],[11,"bitand_assign","","",42,N],[11,"bitand_assign","","",41,N],[11,"bitand_assign","","",41,N],[11,"bitand_assign","","",42,N],[11,"to_biguint","","",42,[[["self"]],["option",["biguint"]]]],[11,"to_biguint","","",41,[[["self"]],["option",["biguint"]]]],[11,"clone","num::integer","",22,[[["self"]],["extendedgcd"]]],[11,"next","","",45,[[["self"]],["option"]]],[11,"eq","","",22,[[["self"],["extendedgcd"]],["bool"]]],[11,"ne","","",22,[[["self"],["extendedgcd"]],["bool"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","num::traits","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","num::complex","",0,[[["u"]],["option",["complex"]]]],[11,"one","","",0,[[],["complex"]]],[11,"is_one","","",0,[[["self"]],["bool"]]],[11,"set_one","","",0,N],[11,"mul_assign","","",0,N],[11,"mul_assign","","",0,N],[11,"mul_assign","","",0,N],[11,"mul_assign","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"add_assign","","",0,N],[11,"add_assign","","",0,N],[11,"add_assign","","",0,N],[11,"add_assign","","",0,N],[11,"description","","",44,[[["self"]],["str"]]],[11,"eq","","",44,[[["self"],["parsecomplexerror"]],["bool"]]],[11,"ne","","",44,[[["self"],["parsecomplexerror"]],["bool"]]],[11,"eq","","",0,[[["self"],["complex"]],["bool"]]],[11,"ne","","",0,[[["self"],["complex"]],["bool"]]],[11,"from","","",0,[[["t"]],["complex"]]],[11,"from","","",0,[[["t"]],["complex"]]],[11,"from_usize","","",0,[[["usize"]],["option",["complex"]]]],[11,"from_isize","","",0,[[["isize"]],["option",["complex"]]]],[11,"from_u8","","",0,[[["u8"]],["option",["complex"]]]],[11,"from_u16","","",0,[[["u16"]],["option",["complex"]]]],[11,"from_u32","","",0,[[["u32"]],["option",["complex"]]]],[11,"from_u64","","",0,[[["u64"]],["option",["complex"]]]],[11,"from_i8","","",0,[[["i8"]],["option",["complex"]]]],[11,"from_i16","","",0,[[["i16"]],["option",["complex"]]]],[11,"from_i32","","",0,[[["i32"]],["option",["complex"]]]],[11,"from_i64","","",0,[[["i64"]],["option",["complex"]]]],[11,"from_u128","","",0,[[["u128"]],["option",["complex"]]]],[11,"from_i128","","",0,[[["i128"]],["option",["complex"]]]],[11,"from_f32","","",0,[[["f32"]],["option",["complex"]]]],[11,"from_f64","","",0,[[["f64"]],["option",["complex"]]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"],["u32"]],["result",["complex"]]]],[11,"default","","",0,[[],["complex"]]],[11,"mul_add","","",0,[[["self"],["complex"],["complex"]],["complex"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"rem","","",0,N],[11,"rem","","",0,N],[11,"rem","","",0,N],[11,"rem","","",0,N],[11,"hash","","",0,N],[11,"sub","","",0,N],[11,"sub","","",0,N],[11,"sub","","",0,N],[11,"sub","","",0,N],[11,"fmt","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"add","","",0,N],[11,"add","","",0,N],[11,"add","","",0,N],[11,"add","","",0,N],[11,"sub_assign","","",0,N],[11,"sub_assign","","",0,N],[11,"sub_assign","","",0,N],[11,"sub_assign","","",0,N],[11,"clone","","",0,[[["self"]],["complex"]]],[11,"div","","",0,N],[11,"div","","",0,N],[11,"div","","",0,N],[11,"div","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"zero","","",0,[[],["complex"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"set_zero","","",0,N],[11,"sum","","",0,[[["i"]],["complex"]]],[11,"sum","","",0,[[["i"]],["complex"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"div_assign","","",0,N],[11,"div_assign","","",0,N],[11,"div_assign","","",0,N],[11,"div_assign","","",0,N],[11,"rem_assign","","",0,N],[11,"rem_assign","","",0,N],[11,"rem_assign","","",0,N],[11,"rem_assign","","",0,N],[11,"mul","","",0,N],[11,"mul","","",0,N],[11,"mul","","",0,N],[11,"mul","","",0,N],[11,"mul_add_assign","","",0,N],[11,"mul_add_assign","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"product","","",0,[[["i"]],["complex"]]],[11,"product","","",0,[[["i"]],["complex"]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"]],["result",["complex"]]]],[11,"inv","","",0,N],[11,"as_","","",0,[[["self"]],["u"]]],[11,"pow","","",0,N],[11,"pow","","",0,N],[11,"pow","","",0,N],[11,"pow","","",0,N],[11,"pow","","",0,N],[11,"pow","","",0,N],[11,"to_usize","","",0,[[["self"]],["option",["usize"]]]],[11,"to_isize","","",0,[[["self"]],["option",["isize"]]]],[11,"to_u8","","",0,[[["self"]],["option",["u8"]]]],[11,"to_u16","","",0,[[["self"]],["option",["u16"]]]],[11,"to_u32","","",0,[[["self"]],["option",["u32"]]]],[11,"to_u64","","",0,[[["self"]],["option",["u64"]]]],[11,"to_i8","","",0,[[["self"]],["option",["i8"]]]],[11,"to_i16","","",0,[[["self"]],["option",["i16"]]]],[11,"to_i32","","",0,[[["self"]],["option",["i32"]]]],[11,"to_i64","","",0,[[["self"]],["option",["i64"]]]],[11,"to_u128","","",0,[[["self"]],["option",["u128"]]]],[11,"to_i128","","",0,[[["self"]],["option",["i128"]]]],[11,"to_f32","","",0,[[["self"]],["option",["f32"]]]],[11,"to_f64","","",0,[[["self"]],["option",["f64"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"neg","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","num::iter","",46,[[["self"]],["range"]]],[11,"clone","","",48,[[["self"]],["rangestep"]]],[11,"clone","","",49,[[["self"]],["rangestepinclusive"]]],[11,"clone","","",47,[[["self"]],["rangeinclusive"]]],[11,"next","","",46,[[["self"]],["option"]]],[11,"size_hint","","",46,N],[11,"next","","",49,[[["self"]],["option"]]],[11,"next","","",48,[[["self"]],["option"]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,N],[11,"next_back","","",47,[[["self"]],["option"]]],[11,"next_back","","",46,[[["self"]],["option"]]],[11,"mul_assign","num::rational","",50,N],[11,"mul_assign","","",50,N],[11,"mul_assign","","",50,N],[11,"mul_assign","","",50,N],[11,"add_assign","","",50,N],[11,"add_assign","","",50,N],[11,"add_assign","","",50,N],[11,"add_assign","","",50,N],[11,"one","","",50,[[],["ratio"]]],[11,"is_one","","",50,[[["self"]],["bool"]]],[11,"eq","","",51,[[["self"],["parseratioerror"]],["bool"]]],[11,"ne","","",51,[[["self"],["parseratioerror"]],["bool"]]],[11,"eq","","",50,[[["self"],["ratio"]],["bool"]]],[11,"abs","","",50,[[["self"]],["ratio"]]],[11,"abs_sub","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"signum","","",50,[[["self"]],["ratio"]]],[11,"is_positive","","",50,[[["self"]],["bool"]]],[11,"is_negative","","",50,[[["self"]],["bool"]]],[11,"checked_sub","","",50,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"from","","",50,[[["t"]],["ratio"]]],[11,"from","","",50,N],[11,"zero","","",50,[[],["ratio"]]],[11,"is_zero","","",50,[[["self"]],["bool"]]],[11,"checked_add","","",50,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"pow","","",50,[[["self"],["i32"]],["ratio"]]],[11,"pow","","",50,[[["self"],["i64"]],["ratio"]]],[11,"pow","","",50,[[["self"],["u32"]],["ratio"]]],[11,"pow","","",50,[[["self"],["usize"]],["ratio"]]],[11,"pow","","",50,[[["self"],["u8"]],["ratio"]]],[11,"pow","","",50,[[["self"],["i32"]],["ratio"]]],[11,"pow","","",50,[[["self"],["u64"]],["ratio"]]],[11,"pow","","",50,[[["self"],["i16"]],["ratio"]]],[11,"pow","","",50,[[["self"],["isize"]],["ratio"]]],[11,"pow","","",50,[[["self"],["i8"]],["ratio"]]],[11,"pow","","",50,[[["self"],["u32"]],["ratio"]]],[11,"pow","","",50,[[["self"],["u8"]],["ratio"]]],[11,"pow","","",50,[[["self"],["usize"]],["ratio"]]],[11,"pow","","",50,[[["self"],["u16"]],["ratio"]]],[11,"pow","","",50,[[["self"],["u64"]],["ratio"]]],[11,"pow","","",50,[[["self"],["u16"]],["ratio"]]],[11,"pow","","",50,[[["self"],["i8"]],["ratio"]]],[11,"pow","","",50,[[["self"],["i16"]],["ratio"]]],[11,"pow","","",50,[[["self"],["isize"]],["ratio"]]],[11,"pow","","",50,[[["self"],["i64"]],["ratio"]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_i128","","",50,[[["i128"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_u128","","",50,[[["u128"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_i128","","",50,[[["i128"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_u128","","",50,[[["u128"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_i128","","",50,[[["i128"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_u128","","",50,[[["u128"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_i128","","",50,[[["i128"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_u128","","",50,[[["u128"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_i128","","",50,[[["i128"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_u128","","",50,[[["u128"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_i128","","",50,[[["i128"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_u128","","",50,[[["u128"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_i128","","",50,[[["i128"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_u128","","",50,[[["u128"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_i128","","",50,[[["i128"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_u128","","",50,[[["u128"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_i128","","",50,[[["i128"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_u128","","",50,[[["u128"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_i128","","",50,[[["i128"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_u128","","",50,[[["u128"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_i128","","",50,[[["i128"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_u128","","",50,[[["u128"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_i128","","",50,[[["i128"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_u128","","",50,[[["u128"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_i128","","",50,[[["i128"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_u128","","",50,[[["u128"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"rem","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"rem","","",50,[[["self"],["t"]],["ratio"]]],[11,"rem","","",50,[[["self"],["t"]],["ratio"]]],[11,"rem","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"hash","","",50,N],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",50,[[["str"],["u32"]],["result",["ratio","parseratioerror"]]]],[11,"sub","","",50,[[["self"],["t"]],["ratio"]]],[11,"sub","","",50,[[["self"],["t"]],["ratio"]]],[11,"sub","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"sub","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"inv","","",50,[[["self"]],["ratio"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"add","","",50,[[["self"],["t"]],["ratio"]]],[11,"add","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"add","","",50,[[["self"],["t"]],["ratio"]]],[11,"add","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"sub_assign","","",50,N],[11,"sub_assign","","",50,N],[11,"sub_assign","","",50,N],[11,"sub_assign","","",50,N],[11,"clone","","",50,[[["self"]],["ratio"]]],[11,"clone","","",51,[[["self"]],["parseratioerror"]]],[11,"div","","",50,[[["self"],["t"]],["ratio"]]],[11,"div","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"div","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"div","","",50,[[["self"],["t"]],["ratio"]]],[11,"sum","","",50,[[["i"]],["ratio"]]],[11,"sum","","",50,[[["i"]],["ratio"]]],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"div_assign","","",50,N],[11,"div_assign","","",50,N],[11,"div_assign","","",50,N],[11,"div_assign","","",50,N],[11,"rem_assign","","",50,N],[11,"rem_assign","","",50,N],[11,"rem_assign","","",50,N],[11,"rem_assign","","",50,N],[11,"mul","","",50,[[["self"],["t"]],["ratio"]]],[11,"mul","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"mul","","",50,[[["self"],["t"]],["ratio"]]],[11,"mul","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"product","","",50,[[["i"]],["ratio"]]],[11,"product","","",50,[[["i"]],["ratio"]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",50,[[["str"]],["result",["ratio","parseratioerror"]]]],[11,"checked_div","","",50,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"checked_mul","","",50,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"into","","",50,N],[11,"neg","","",50,[[["self"]],["ratio"]]],[11,"partial_cmp","","",50,[[["self"],["ratio"]],["option",["ordering"]]]],[11,"description","","",51,[[["self"]],["str"]]],[11,"cmp","","",50,[[["self"],["ratio"]],["ordering"]]],[11,"new","num::bigint","Creates and initializes a BigInt.",41,[[["sign"],["vec",["u32"]]],["bigint"]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",41,[[["sign"],["biguint"]],["bigint"]]],[11,"from_slice","","Creates and initializes a `BigInt`.",41,N],[11,"assign_from_slice","","Reinitializes a `BigInt`.",41,N],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",41,N],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",41,N],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",41,N],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",41,N],[11,"parse_bytes","","Creates and initializes a `BigInt`.",41,N],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",41,N],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",41,N],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",41,N],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",41,N],[11,"to_signed_bytes_be","","Returns the two's complement byte representation of the…",41,[[["self"]],["vec",["u8"]]]],[11,"to_signed_bytes_le","","Returns the two's complement byte representation of the…",41,[[["self"]],["vec",["u8"]]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",41,[[["self"],["u32"]],["string"]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",41,N],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",41,N],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",41,[[["self"]],["sign"]]],[11,"bits","","Determines the fewest bits necessary to express the…",41,[[["self"]],["usize"]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not…",41,[[["self"]],["option",["biguint"]]]],[11,"checked_add","","",41,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_sub","","",41,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_mul","","",41,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_div","","",41,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",41,[[["self"],["bigint"],["bigint"]],["bigint"]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",41,[[["self"]],["bigint"]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",41,[[["self"]],["bigint"]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",41,[[["self"],["u32"]],["bigint"]]],[11,"new","","Creates and initializes a `BigUint`.",42,[[["vec",["u32"]]],["biguint"]]],[11,"from_slice","","Creates and initializes a `BigUint`.",42,N],[11,"assign_from_slice","","Assign a value to a `BigUint`.",42,N],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",42,N],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",42,N],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",42,N],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",42,N],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",42,N],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",42,[[["self"]],["vec",["u8"]]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",42,[[["self"]],["vec",["u8"]]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",42,[[["self"],["u32"]],["string"]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",42,[[["self"],["u32"]],["vec",["u8"]]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",42,[[["self"],["u32"]],["vec",["u8"]]]],[11,"bits","","Determines the fewest bits necessary to express the…",42,[[["self"]],["usize"]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",42,[[["self"],["biguint"],["biguint"]],["biguint"]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",42,[[["self"]],["biguint"]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",42,[[["self"]],["biguint"]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",42,[[["self"],["u32"]],["biguint"]]],[11,"new","num::complex","Create a new Complex",0,[[["t"],["t"]],["complex"]]],[11,"i","","Returns imaginary unit",0,[[],["complex"]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't…",0,[[["self"]],["t"]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[["self"],["t"]],["complex"]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[["self"],["t"]],["complex"]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[["self"],["u32"]],["complex"]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[["self"]],["complex"]]],[11,"inv","","Returns `1/self`",0,[[["self"]],["complex"]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[["self"],["i32"]],["complex"]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the [Manhattan…",0,[[["self"]],["t"]]],[11,"norm","","Calculate |self|",0,[[["self"]],["t"]]],[11,"arg","","Calculate the principal Arg of self.",0,[[["self"]],["t"]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,N],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[["t"],["t"]],["complex"]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[["self"]],["complex"]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[["self"]],["complex"]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[["self"]],["complex"]]],[11,"powf","","Raises `self` to a floating point power.",0,[[["self"],["t"]],["complex"]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[["self"],["t"]],["complex"]]],[11,"powc","","Raises `self` to a complex power.",0,[[["self"],["complex"]],["complex"]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[["self"],["t"]],["complex"]]],[11,"sin","","Computes the sine of `self`.",0,[[["self"]],["complex"]]],[11,"cos","","Computes the cosine of `self`.",0,[[["self"]],["complex"]]],[11,"tan","","Computes the tangent of `self`.",0,[[["self"]],["complex"]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[["self"]],["complex"]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[["self"]],["complex"]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[["self"]],["complex"]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[["self"]],["complex"]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[["self"]],["complex"]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[["self"]],["complex"]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[["self"]],["complex"]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[["self"]],["complex"]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[["self"]],["complex"]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[["self"]],["complex"]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["self"],["complex"]],["complex"]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[["self"]],["bool"]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[["self"]],["bool"]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[["self"]],["bool"]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[["self"]],["bool"]]],[11,"new","num::integer","For a given n, iterate over all binomial coefficients…",45,[[["t"]],["iterbinomial"]]],[11,"new","num::rational","Creates a new `Ratio`. Fails if `denom` is zero.",50,[[["t"],["t"]],["ratio"]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",50,[[["t"]],["ratio"]]],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or…",50,[[["t"],["t"]],["ratio"]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",50,[[["self"]],["t"]]],[11,"numer","","Gets an immutable reference to the numerator.",50,[[["self"]],["t"]]],[11,"denom","","Gets an immutable reference to the denominator.",50,[[["self"]],["t"]]],[11,"is_integer","","Returns true if the rational number is an integer…",50,[[["self"]],["bool"]]],[11,"reduced","","Returns a reduced copy of self.",50,[[["self"]],["ratio"]]],[11,"recip","","Returns the reciprocal.",50,[[["self"]],["ratio"]]],[11,"floor","","Rounds towards minus infinity.",50,[[["self"]],["ratio"]]],[11,"ceil","","Rounds towards plus infinity.",50,[[["self"]],["ratio"]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",50,[[["self"]],["ratio"]]],[11,"trunc","","Rounds towards zero.",50,[[["self"]],["ratio"]]],[11,"fract","","Returns the fractional part of a number, with division…",50,[[["self"]],["ratio"]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",50,[[["self"],["i32"]],["ratio"]]],[11,"from_float","","Converts a float into a rational number.",50,[[["t"]],["option",["ratio"]]]],[11,"approximate_float","","",50,[[["f"]],["option",["ratio"]]]]],"paths":[[3,"Complex"],[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"Pow"],[8,"Float"],[8,"ToBigInt"],[8,"ToBigUint"],[4,"Sign"],[3,"ExtendedGcd"],[8,"Roots"],[8,"FloatCore"],[8,"FloatConst"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Real"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"BigInt"],[3,"BigUint"],[3,"ParseBigIntError"],[3,"ParseComplexError"],[3,"IterBinomial"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["num_bigint"]={"doc":"A Big integer (signed version: `BigInt`, unsigned version:…","items":[[3,"ParseBigIntError","num_bigint","",N,N],[3,"BigUint","","A big unsigned integer type.",N,N],[3,"BigInt","","A big signed integer type.",N,N],[4,"Sign","","A Sign is a `BigInt`'s composing element.",N,N],[13,"Minus","","",0,N],[13,"NoSign","","",0,N],[13,"Plus","","",0,N],[11,"new","","Creates and initializes a BigInt.",1,[[["sign"],["vec",["u32"]]],["bigint"]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",1,[[["sign"],["biguint"]],["bigint"]]],[11,"from_slice","","Creates and initializes a `BigInt`.",1,N],[11,"assign_from_slice","","Reinitializes a `BigInt`.",1,N],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",1,N],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",1,N],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",1,N],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",1,N],[11,"parse_bytes","","Creates and initializes a `BigInt`.",1,N],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",1,N],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",1,N],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",1,N],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",1,N],[11,"to_signed_bytes_be","","Returns the two's complement byte representation of the…",1,[[["self"]],["vec",["u8"]]]],[11,"to_signed_bytes_le","","Returns the two's complement byte representation of the…",1,[[["self"]],["vec",["u8"]]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",1,[[["self"],["u32"]],["string"]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",1,N],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",1,N],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",1,[[["self"]],["sign"]]],[11,"bits","","Determines the fewest bits necessary to express the…",1,[[["self"]],["usize"]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not…",1,[[["self"]],["option",["biguint"]]]],[11,"checked_add","","",1,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_sub","","",1,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_mul","","",1,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_div","","",1,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",1,[[["self"],["self"],["self"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",1,[[["self"]],["self"]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",1,[[["self"],["u32"]],["self"]]],[11,"new","","Creates and initializes a `BigUint`.",2,[[["vec",["u32"]]],["biguint"]]],[11,"from_slice","","Creates and initializes a `BigUint`.",2,N],[11,"assign_from_slice","","Assign a value to a `BigUint`.",2,N],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",2,N],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",2,N],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",2,N],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",2,N],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",2,N],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",2,[[["self"]],["vec",["u8"]]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",2,[[["self"]],["vec",["u8"]]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",2,[[["self"],["u32"]],["string"]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",2,[[["self"],["u32"]],["vec",["u8"]]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",2,[[["self"],["u32"]],["vec",["u8"]]]],[11,"bits","","Determines the fewest bits necessary to express the…",2,[[["self"]],["usize"]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",2,[[["self"],["self"],["self"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",2,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",2,[[["self"]],["self"]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",2,[[["self"],["u32"]],["self"]]],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",N,N],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",3,[[["self"]],["option",["biguint"]]]],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",N,N],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",4,[[["self"]],["option",["bigint"]]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_bigint","","",1,[[["self"]],["option",["bigint"]]]],[11,"to_bigint","","",2,[[["self"]],["option",["bigint"]]]],[11,"to_biguint","","",1,[[["self"]],["option",["biguint"]]]],[11,"to_biguint","","",2,[[["self"]],["option",["biguint"]]]],[11,"partial_cmp","","",0,[[["self"],["sign"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["bigint"]],["option",["ordering"]]]],[11,"partial_cmp","","",2,[[["self"],["biguint"]],["option",["ordering"]]]],[11,"default","","",1,[[],["bigint"]]],[11,"default","","",2,[[],["biguint"]]],[11,"eq","","",0,[[["self"],["sign"]],["bool"]]],[11,"eq","","",1,[[["self"],["bigint"]],["bool"]]],[11,"eq","","",2,[[["self"],["biguint"]],["bool"]]],[11,"eq","","",5,[[["self"],["parsebiginterror"]],["bool"]]],[11,"ne","","",5,[[["self"],["parsebiginterror"]],["bool"]]],[11,"from","","",1,[[["i64"]],["self"]]],[11,"from","","",1,[[["i128"]],["self"]]],[11,"from","","",1,[[["i8"]],["self"]]],[11,"from","","",1,[[["i16"]],["self"]]],[11,"from","","",1,[[["i32"]],["self"]]],[11,"from","","",1,[[["isize"]],["self"]]],[11,"from","","",1,[[["u64"]],["self"]]],[11,"from","","",1,[[["u128"]],["self"]]],[11,"from","","",1,[[["u8"]],["self"]]],[11,"from","","",1,[[["u16"]],["self"]]],[11,"from","","",1,[[["u32"]],["self"]]],[11,"from","","",1,[[["usize"]],["self"]]],[11,"from","","",1,[[["biguint"]],["self"]]],[11,"from","","",2,[[["u64"]],["self"]]],[11,"from","","",2,[[["u128"]],["self"]]],[11,"from","","",2,[[["u8"]],["self"]]],[11,"from","","",2,[[["u16"]],["self"]]],[11,"from","","",2,[[["u32"]],["self"]]],[11,"from","","",2,[[["usize"]],["self"]]],[11,"cmp","","",0,[[["self"],["sign"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["bigint"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["biguint"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["sign"]]],[11,"clone","","",1,[[["self"]],["bigint"]]],[11,"clone","","",2,[[["self"]],["biguint"]]],[11,"clone","","",5,[[["self"]],["parsebiginterror"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result",["bigint","parsebiginterror"]]]],[11,"from_str","","",2,[[["str"]],["result",["biguint","parsebiginterror"]]]],[11,"add","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"add","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"add","","",1,[[["self"],["u8"]],["bigint"]]],[11,"add","","",1,[[["self"],["u8"]],["bigint"]]],[11,"add","","",1,[[["self"],["u16"]],["bigint"]]],[11,"add","","",1,[[["self"],["u16"]],["bigint"]]],[11,"add","","",1,[[["self"],["usize"]],["bigint"]]],[11,"add","","",1,[[["self"],["usize"]],["bigint"]]],[11,"add","","",1,[[["self"],["i8"]],["bigint"]]],[11,"add","","",1,[[["self"],["i8"]],["bigint"]]],[11,"add","","",1,[[["self"],["i16"]],["bigint"]]],[11,"add","","",1,[[["self"],["i16"]],["bigint"]]],[11,"add","","",1,[[["self"],["isize"]],["bigint"]]],[11,"add","","",1,[[["self"],["isize"]],["bigint"]]],[11,"add","","",1,[[["self"],["u32"]],["bigint"]]],[11,"add","","",1,[[["self"],["u64"]],["bigint"]]],[11,"add","","",1,[[["self"],["u128"]],["bigint"]]],[11,"add","","",1,[[["self"],["u32"]],["bigint"]]],[11,"add","","",1,[[["self"],["u64"]],["bigint"]]],[11,"add","","",1,[[["self"],["u128"]],["bigint"]]],[11,"add","","",1,[[["self"],["i32"]],["bigint"]]],[11,"add","","",1,[[["self"],["i64"]],["bigint"]]],[11,"add","","",1,[[["self"],["i128"]],["bigint"]]],[11,"add","","",1,[[["self"],["i32"]],["bigint"]]],[11,"add","","",1,[[["self"],["i64"]],["bigint"]]],[11,"add","","",1,[[["self"],["i128"]],["bigint"]]],[11,"add","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"add","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"add","","",2,[[["self"],["u8"]],["biguint"]]],[11,"add","","",2,[[["self"],["u8"]],["biguint"]]],[11,"add","","",2,[[["self"],["u16"]],["biguint"]]],[11,"add","","",2,[[["self"],["u16"]],["biguint"]]],[11,"add","","",2,[[["self"],["usize"]],["biguint"]]],[11,"add","","",2,[[["self"],["usize"]],["biguint"]]],[11,"add","","",2,[[["self"],["u32"]],["biguint"]]],[11,"add","","",2,[[["self"],["u64"]],["biguint"]]],[11,"add","","",2,[[["self"],["u128"]],["biguint"]]],[11,"add","","",2,[[["self"],["u32"]],["biguint"]]],[11,"add","","",2,[[["self"],["u64"]],["biguint"]]],[11,"add","","",2,[[["self"],["u128"]],["biguint"]]],[11,"sub","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"sub","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"sub","","",1,[[["self"],["u8"]],["bigint"]]],[11,"sub","","",1,[[["self"],["u8"]],["bigint"]]],[11,"sub","","",1,[[["self"],["u16"]],["bigint"]]],[11,"sub","","",1,[[["self"],["u16"]],["bigint"]]],[11,"sub","","",1,[[["self"],["usize"]],["bigint"]]],[11,"sub","","",1,[[["self"],["usize"]],["bigint"]]],[11,"sub","","",1,[[["self"],["i8"]],["bigint"]]],[11,"sub","","",1,[[["self"],["i8"]],["bigint"]]],[11,"sub","","",1,[[["self"],["i16"]],["bigint"]]],[11,"sub","","",1,[[["self"],["i16"]],["bigint"]]],[11,"sub","","",1,[[["self"],["isize"]],["bigint"]]],[11,"sub","","",1,[[["self"],["isize"]],["bigint"]]],[11,"sub","","",1,[[["self"],["u32"]],["bigint"]]],[11,"sub","","",1,[[["self"],["u64"]],["bigint"]]],[11,"sub","","",1,[[["self"],["u128"]],["bigint"]]],[11,"sub","","",1,[[["self"],["u32"]],["bigint"]]],[11,"sub","","",1,[[["self"],["u64"]],["bigint"]]],[11,"sub","","",1,[[["self"],["u128"]],["bigint"]]],[11,"sub","","",1,[[["self"],["i32"]],["bigint"]]],[11,"sub","","",1,[[["self"],["i64"]],["bigint"]]],[11,"sub","","",1,[[["self"],["i128"]],["bigint"]]],[11,"sub","","",1,[[["self"],["i32"]],["bigint"]]],[11,"sub","","",1,[[["self"],["i64"]],["bigint"]]],[11,"sub","","",1,[[["self"],["i128"]],["bigint"]]],[11,"sub","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"sub","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u8"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u8"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u16"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u16"]],["biguint"]]],[11,"sub","","",2,[[["self"],["usize"]],["biguint"]]],[11,"sub","","",2,[[["self"],["usize"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u32"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u64"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u128"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u32"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u64"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u128"]],["biguint"]]],[11,"mul","","",0,[[["self"],["sign"]],["sign"]]],[11,"mul","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"mul","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"mul","","",1,[[["self"],["u8"]],["bigint"]]],[11,"mul","","",1,[[["self"],["u8"]],["bigint"]]],[11,"mul","","",1,[[["self"],["u16"]],["bigint"]]],[11,"mul","","",1,[[["self"],["u16"]],["bigint"]]],[11,"mul","","",1,[[["self"],["usize"]],["bigint"]]],[11,"mul","","",1,[[["self"],["usize"]],["bigint"]]],[11,"mul","","",1,[[["self"],["i8"]],["bigint"]]],[11,"mul","","",1,[[["self"],["i8"]],["bigint"]]],[11,"mul","","",1,[[["self"],["i16"]],["bigint"]]],[11,"mul","","",1,[[["self"],["i16"]],["bigint"]]],[11,"mul","","",1,[[["self"],["isize"]],["bigint"]]],[11,"mul","","",1,[[["self"],["isize"]],["bigint"]]],[11,"mul","","",1,[[["self"],["u32"]],["bigint"]]],[11,"mul","","",1,[[["self"],["u64"]],["bigint"]]],[11,"mul","","",1,[[["self"],["u128"]],["bigint"]]],[11,"mul","","",1,[[["self"],["u32"]],["bigint"]]],[11,"mul","","",1,[[["self"],["u64"]],["bigint"]]],[11,"mul","","",1,[[["self"],["u128"]],["bigint"]]],[11,"mul","","",1,[[["self"],["i32"]],["bigint"]]],[11,"mul","","",1,[[["self"],["i64"]],["bigint"]]],[11,"mul","","",1,[[["self"],["i128"]],["bigint"]]],[11,"mul","","",1,[[["self"],["i32"]],["bigint"]]],[11,"mul","","",1,[[["self"],["i64"]],["bigint"]]],[11,"mul","","",1,[[["self"],["i128"]],["bigint"]]],[11,"mul","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"mul","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u8"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u8"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u16"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u16"]],["biguint"]]],[11,"mul","","",2,[[["self"],["usize"]],["biguint"]]],[11,"mul","","",2,[[["self"],["usize"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u32"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u64"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u128"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u32"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u64"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u128"]],["biguint"]]],[11,"div","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"div","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"div","","",1,[[["self"],["u8"]],["bigint"]]],[11,"div","","",1,[[["self"],["u8"]],["bigint"]]],[11,"div","","",1,[[["self"],["u16"]],["bigint"]]],[11,"div","","",1,[[["self"],["u16"]],["bigint"]]],[11,"div","","",1,[[["self"],["usize"]],["bigint"]]],[11,"div","","",1,[[["self"],["usize"]],["bigint"]]],[11,"div","","",1,[[["self"],["i8"]],["bigint"]]],[11,"div","","",1,[[["self"],["i8"]],["bigint"]]],[11,"div","","",1,[[["self"],["i16"]],["bigint"]]],[11,"div","","",1,[[["self"],["i16"]],["bigint"]]],[11,"div","","",1,[[["self"],["isize"]],["bigint"]]],[11,"div","","",1,[[["self"],["isize"]],["bigint"]]],[11,"div","","",1,[[["self"],["u32"]],["bigint"]]],[11,"div","","",1,[[["self"],["u64"]],["bigint"]]],[11,"div","","",1,[[["self"],["u128"]],["bigint"]]],[11,"div","","",1,[[["self"],["u32"]],["bigint"]]],[11,"div","","",1,[[["self"],["u64"]],["bigint"]]],[11,"div","","",1,[[["self"],["u128"]],["bigint"]]],[11,"div","","",1,[[["self"],["i32"]],["bigint"]]],[11,"div","","",1,[[["self"],["i64"]],["bigint"]]],[11,"div","","",1,[[["self"],["i128"]],["bigint"]]],[11,"div","","",1,[[["self"],["i32"]],["bigint"]]],[11,"div","","",1,[[["self"],["i64"]],["bigint"]]],[11,"div","","",1,[[["self"],["i128"]],["bigint"]]],[11,"div","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"div","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"div","","",2,[[["self"],["u8"]],["biguint"]]],[11,"div","","",2,[[["self"],["u8"]],["biguint"]]],[11,"div","","",2,[[["self"],["u16"]],["biguint"]]],[11,"div","","",2,[[["self"],["u16"]],["biguint"]]],[11,"div","","",2,[[["self"],["usize"]],["biguint"]]],[11,"div","","",2,[[["self"],["usize"]],["biguint"]]],[11,"div","","",2,[[["self"],["u32"]],["biguint"]]],[11,"div","","",2,[[["self"],["u64"]],["biguint"]]],[11,"div","","",2,[[["self"],["u128"]],["biguint"]]],[11,"div","","",2,[[["self"],["u32"]],["biguint"]]],[11,"div","","",2,[[["self"],["u64"]],["biguint"]]],[11,"div","","",2,[[["self"],["u128"]],["biguint"]]],[11,"rem","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"rem","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"rem","","",1,[[["self"],["u8"]],["bigint"]]],[11,"rem","","",1,[[["self"],["u8"]],["bigint"]]],[11,"rem","","",1,[[["self"],["u16"]],["bigint"]]],[11,"rem","","",1,[[["self"],["u16"]],["bigint"]]],[11,"rem","","",1,[[["self"],["usize"]],["bigint"]]],[11,"rem","","",1,[[["self"],["usize"]],["bigint"]]],[11,"rem","","",1,[[["self"],["i8"]],["bigint"]]],[11,"rem","","",1,[[["self"],["i8"]],["bigint"]]],[11,"rem","","",1,[[["self"],["i16"]],["bigint"]]],[11,"rem","","",1,[[["self"],["i16"]],["bigint"]]],[11,"rem","","",1,[[["self"],["isize"]],["bigint"]]],[11,"rem","","",1,[[["self"],["isize"]],["bigint"]]],[11,"rem","","",1,[[["self"],["u32"]],["bigint"]]],[11,"rem","","",1,[[["self"],["u64"]],["bigint"]]],[11,"rem","","",1,[[["self"],["u128"]],["bigint"]]],[11,"rem","","",1,[[["self"],["u32"]],["bigint"]]],[11,"rem","","",1,[[["self"],["u64"]],["bigint"]]],[11,"rem","","",1,[[["self"],["u128"]],["bigint"]]],[11,"rem","","",1,[[["self"],["i32"]],["bigint"]]],[11,"rem","","",1,[[["self"],["i64"]],["bigint"]]],[11,"rem","","",1,[[["self"],["i128"]],["bigint"]]],[11,"rem","","",1,[[["self"],["i32"]],["bigint"]]],[11,"rem","","",1,[[["self"],["i64"]],["bigint"]]],[11,"rem","","",1,[[["self"],["i128"]],["bigint"]]],[11,"rem","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"rem","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u8"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u8"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u16"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u16"]],["biguint"]]],[11,"rem","","",2,[[["self"],["usize"]],["biguint"]]],[11,"rem","","",2,[[["self"],["usize"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u32"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u64"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u128"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u32"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u64"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u128"]],["biguint"]]],[11,"neg","","Negate Sign value.",0,[[["self"]],["sign"]]],[11,"neg","","",1,[[["self"]],["bigint"]]],[11,"neg","","",2,[[["self"]],["biguint"]]],[11,"add_assign","","",1,[[["self"],["bigint"]]]],[11,"add_assign","","",1,[[["self"],["bigint"]]]],[11,"add_assign","","",1,[[["self"],["u8"]]]],[11,"add_assign","","",1,[[["self"],["u16"]]]],[11,"add_assign","","",1,[[["self"],["usize"]]]],[11,"add_assign","","",1,[[["self"],["i8"]]]],[11,"add_assign","","",1,[[["self"],["i16"]]]],[11,"add_assign","","",1,[[["self"],["isize"]]]],[11,"add_assign","","",1,[[["self"],["u32"]]]],[11,"add_assign","","",1,[[["self"],["u64"]]]],[11,"add_assign","","",1,[[["self"],["u128"]]]],[11,"add_assign","","",1,[[["self"],["i32"]]]],[11,"add_assign","","",1,[[["self"],["i64"]]]],[11,"add_assign","","",1,[[["self"],["i128"]]]],[11,"add_assign","","",2,[[["self"],["biguint"]]]],[11,"add_assign","","",2,[[["self"],["biguint"]]]],[11,"add_assign","","",2,[[["self"],["u8"]]]],[11,"add_assign","","",2,[[["self"],["u16"]]]],[11,"add_assign","","",2,[[["self"],["usize"]]]],[11,"add_assign","","",2,[[["self"],["u32"]]]],[11,"add_assign","","",2,[[["self"],["u64"]]]],[11,"add_assign","","",2,[[["self"],["u128"]]]],[11,"sub_assign","","",1,[[["self"],["bigint"]]]],[11,"sub_assign","","",1,[[["self"],["bigint"]]]],[11,"sub_assign","","",1,[[["self"],["u8"]]]],[11,"sub_assign","","",1,[[["self"],["u16"]]]],[11,"sub_assign","","",1,[[["self"],["usize"]]]],[11,"sub_assign","","",1,[[["self"],["i8"]]]],[11,"sub_assign","","",1,[[["self"],["i16"]]]],[11,"sub_assign","","",1,[[["self"],["isize"]]]],[11,"sub_assign","","",1,[[["self"],["u32"]]]],[11,"sub_assign","","",1,[[["self"],["u64"]]]],[11,"sub_assign","","",1,[[["self"],["u128"]]]],[11,"sub_assign","","",1,[[["self"],["i32"]]]],[11,"sub_assign","","",1,[[["self"],["i64"]]]],[11,"sub_assign","","",1,[[["self"],["i128"]]]],[11,"sub_assign","","",2,[[["self"],["biguint"]]]],[11,"sub_assign","","",2,[[["self"],["biguint"]]]],[11,"sub_assign","","",2,[[["self"],["u8"]]]],[11,"sub_assign","","",2,[[["self"],["u16"]]]],[11,"sub_assign","","",2,[[["self"],["usize"]]]],[11,"sub_assign","","",2,[[["self"],["u32"]]]],[11,"sub_assign","","",2,[[["self"],["u64"]]]],[11,"sub_assign","","",2,[[["self"],["u128"]]]],[11,"mul_assign","","",1,[[["self"],["bigint"]]]],[11,"mul_assign","","",1,[[["self"],["bigint"]]]],[11,"mul_assign","","",1,[[["self"],["u8"]]]],[11,"mul_assign","","",1,[[["self"],["u16"]]]],[11,"mul_assign","","",1,[[["self"],["usize"]]]],[11,"mul_assign","","",1,[[["self"],["i8"]]]],[11,"mul_assign","","",1,[[["self"],["i16"]]]],[11,"mul_assign","","",1,[[["self"],["isize"]]]],[11,"mul_assign","","",1,[[["self"],["u32"]]]],[11,"mul_assign","","",1,[[["self"],["u64"]]]],[11,"mul_assign","","",1,[[["self"],["u128"]]]],[11,"mul_assign","","",1,[[["self"],["i32"]]]],[11,"mul_assign","","",1,[[["self"],["i64"]]]],[11,"mul_assign","","",1,[[["self"],["i128"]]]],[11,"mul_assign","","",2,[[["self"],["biguint"]]]],[11,"mul_assign","","",2,[[["self"],["biguint"]]]],[11,"mul_assign","","",2,[[["self"],["u8"]]]],[11,"mul_assign","","",2,[[["self"],["u16"]]]],[11,"mul_assign","","",2,[[["self"],["usize"]]]],[11,"mul_assign","","",2,[[["self"],["u32"]]]],[11,"mul_assign","","",2,[[["self"],["u64"]]]],[11,"mul_assign","","",2,[[["self"],["u128"]]]],[11,"div_assign","","",1,[[["self"],["bigint"]]]],[11,"div_assign","","",1,[[["self"],["bigint"]]]],[11,"div_assign","","",1,[[["self"],["u8"]]]],[11,"div_assign","","",1,[[["self"],["u16"]]]],[11,"div_assign","","",1,[[["self"],["usize"]]]],[11,"div_assign","","",1,[[["self"],["i8"]]]],[11,"div_assign","","",1,[[["self"],["i16"]]]],[11,"div_assign","","",1,[[["self"],["isize"]]]],[11,"div_assign","","",1,[[["self"],["u32"]]]],[11,"div_assign","","",1,[[["self"],["u64"]]]],[11,"div_assign","","",1,[[["self"],["u128"]]]],[11,"div_assign","","",1,[[["self"],["i32"]]]],[11,"div_assign","","",1,[[["self"],["i64"]]]],[11,"div_assign","","",1,[[["self"],["i128"]]]],[11,"div_assign","","",2,[[["self"],["biguint"]]]],[11,"div_assign","","",2,[[["self"],["biguint"]]]],[11,"div_assign","","",2,[[["self"],["u8"]]]],[11,"div_assign","","",2,[[["self"],["u16"]]]],[11,"div_assign","","",2,[[["self"],["usize"]]]],[11,"div_assign","","",2,[[["self"],["u32"]]]],[11,"div_assign","","",2,[[["self"],["u64"]]]],[11,"div_assign","","",2,[[["self"],["u128"]]]],[11,"rem_assign","","",1,[[["self"],["bigint"]]]],[11,"rem_assign","","",1,[[["self"],["bigint"]]]],[11,"rem_assign","","",1,[[["self"],["u8"]]]],[11,"rem_assign","","",1,[[["self"],["u16"]]]],[11,"rem_assign","","",1,[[["self"],["usize"]]]],[11,"rem_assign","","",1,[[["self"],["i8"]]]],[11,"rem_assign","","",1,[[["self"],["i16"]]]],[11,"rem_assign","","",1,[[["self"],["isize"]]]],[11,"rem_assign","","",1,[[["self"],["u32"]]]],[11,"rem_assign","","",1,[[["self"],["u64"]]]],[11,"rem_assign","","",1,[[["self"],["u128"]]]],[11,"rem_assign","","",1,[[["self"],["i32"]]]],[11,"rem_assign","","",1,[[["self"],["i64"]]]],[11,"rem_assign","","",1,[[["self"],["i128"]]]],[11,"rem_assign","","",2,[[["self"],["biguint"]]]],[11,"rem_assign","","",2,[[["self"],["biguint"]]]],[11,"rem_assign","","",2,[[["self"],["u8"]]]],[11,"rem_assign","","",2,[[["self"],["u16"]]]],[11,"rem_assign","","",2,[[["self"],["usize"]]]],[11,"rem_assign","","",2,[[["self"],["u32"]]]],[11,"rem_assign","","",2,[[["self"],["u64"]]]],[11,"rem_assign","","",2,[[["self"],["u128"]]]],[11,"not","","",1,[[["self"]],["bigint"]]],[11,"bitand","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"bitand","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"bitand","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"bitand","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"bitor","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"bitor","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"bitor","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"bitor","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"bitxor","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"bitxor","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"bitxor","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"bitxor","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"shl","","",1,[[["self"],["usize"]],["bigint"]]],[11,"shl","","",2,[[["self"],["usize"]],["biguint"]]],[11,"shr","","",1,[[["self"],["usize"]],["bigint"]]],[11,"shr","","",2,[[["self"],["usize"]],["biguint"]]],[11,"bitand_assign","","",1,[[["self"],["bigint"]]]],[11,"bitand_assign","","",1,[[["self"],["bigint"]]]],[11,"bitand_assign","","",2,[[["self"],["biguint"]]]],[11,"bitand_assign","","",2,[[["self"],["biguint"]]]],[11,"bitor_assign","","",1,[[["self"],["bigint"]]]],[11,"bitor_assign","","",1,[[["self"],["bigint"]]]],[11,"bitor_assign","","",2,[[["self"],["biguint"]]]],[11,"bitor_assign","","",2,[[["self"],["biguint"]]]],[11,"bitxor_assign","","",1,[[["self"],["bigint"]]]],[11,"bitxor_assign","","",1,[[["self"],["bigint"]]]],[11,"bitxor_assign","","",2,[[["self"],["biguint"]]]],[11,"bitxor_assign","","",2,[[["self"],["biguint"]]]],[11,"shl_assign","","",1,[[["self"],["usize"]]]],[11,"shl_assign","","",2,[[["self"],["usize"]]]],[11,"shr_assign","","",1,[[["self"],["usize"]]]],[11,"shr_assign","","",2,[[["self"],["usize"]]]],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"product","","",1,[[["i"]],["self"]]],[11,"product","","",2,[[["i"]],["self"]]],[11,"sum","","",1,[[["i"]],["self"]]],[11,"sum","","",2,[[["i"]],["self"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"nth_root","","",1,[[["self"],["u32"]],["self"]]],[11,"sqrt","","",1,[[["self"]],["self"]]],[11,"cbrt","","",1,[[["self"]],["self"]]],[11,"nth_root","","",2,[[["self"],["u32"]],["self"]]],[11,"sqrt","","",2,[[["self"]],["self"]]],[11,"cbrt","","",2,[[["self"]],["self"]]],[11,"div_rem","","",1,N],[11,"div_floor","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"mod_floor","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"div_mod_floor","","",1,N],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",1,[[["self"],["bigint"]],["bigint"]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",1,[[["self"],["bigint"]],["bigint"]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["self"],["bigint"]],["bool"]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",1,[[["self"],["bigint"]],["bool"]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",1,[[["self"]],["bool"]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",1,[[["self"]],["bool"]]],[11,"div_rem","","",2,N],[11,"div_floor","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"mod_floor","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"div_mod_floor","","",2,N],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",2,[[["self"],["self"]],["self"]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",2,[[["self"],["biguint"]],["biguint"]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["self"],["biguint"]],["bool"]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",2,[[["self"],["biguint"]],["bool"]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",2,[[["self"]],["bool"]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",2,[[["self"]],["bool"]]],[11,"to_i64","","",1,[[["self"]],["option",["i64"]]]],[11,"to_i128","","",1,[[["self"]],["option",["i128"]]]],[11,"to_u64","","",1,[[["self"]],["option",["u64"]]]],[11,"to_u128","","",1,[[["self"]],["option",["u128"]]]],[11,"to_f32","","",1,[[["self"]],["option",["f32"]]]],[11,"to_f64","","",1,[[["self"]],["option",["f64"]]]],[11,"to_i64","","",2,[[["self"]],["option",["i64"]]]],[11,"to_i128","","",2,[[["self"]],["option",["i128"]]]],[11,"to_u64","","",2,[[["self"]],["option",["u64"]]]],[11,"to_u128","","",2,[[["self"]],["option",["u128"]]]],[11,"to_f32","","",2,[[["self"]],["option",["f32"]]]],[11,"to_f64","","",2,[[["self"]],["option",["f64"]]]],[11,"from_i64","","",1,[[["i64"]],["option",["bigint"]]]],[11,"from_i128","","",1,[[["i128"]],["option",["bigint"]]]],[11,"from_u64","","",1,[[["u64"]],["option",["bigint"]]]],[11,"from_u128","","",1,[[["u128"]],["option",["bigint"]]]],[11,"from_f64","","",1,[[["f64"]],["option",["bigint"]]]],[11,"from_i64","","",2,[[["i64"]],["option",["biguint"]]]],[11,"from_i128","","",2,[[["i128"]],["option",["biguint"]]]],[11,"from_u64","","",2,[[["u64"]],["option",["biguint"]]]],[11,"from_u128","","",2,[[["u128"]],["option",["biguint"]]]],[11,"from_f64","","",2,[[["f64"]],["option",["biguint"]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",1,[[["str"],["u32"]],["result",["bigint","parsebiginterror"]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",2,[[["str"],["u32"]],["result",["biguint","parsebiginterror"]]]],[11,"zero","","",1,[[],["bigint"]]],[11,"is_zero","","",1,[[["self"]],["bool"]]],[11,"zero","","",2,[[],["biguint"]]],[11,"is_zero","","",2,[[["self"]],["bool"]]],[11,"one","","",1,[[],["bigint"]]],[11,"is_one","","",1,[[["self"]],["bool"]]],[11,"one","","",2,[[],["biguint"]]],[11,"is_one","","",2,[[["self"]],["bool"]]],[11,"checked_div","","",1,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_div","","",2,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"checked_sub","","",1,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_sub","","",2,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"checked_mul","","",1,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_mul","","",2,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"checked_add","","",1,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_add","","",2,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"abs","","",1,[[["self"]],["bigint"]]],[11,"abs_sub","","",1,[[["self"],["bigint"]],["bigint"]]],[11,"signum","","",1,[[["self"]],["bigint"]]],[11,"is_positive","","",1,[[["self"]],["bool"]]],[11,"is_negative","","",1,[[["self"]],["bool"]]]],"paths":[[4,"Sign"],[3,"BigInt"],[3,"BigUint"],[8,"ToBigUint"],[8,"ToBigInt"],[3,"ParseBigIntError"]]};
searchIndex["num_complex"]={"doc":"Complex numbers.","items":[[3,"Complex","num_complex","A complex number in Cartesian form.",N,N],[12,"re","","Real portion of the complex number",0,N],[12,"im","","Imaginary portion of the complex number",0,N],[3,"ParseComplexError","","",N,N],[6,"Complex32","","",N,N],[6,"Complex64","","",N,N],[11,"new","","Create a new Complex",0,[[["t"],["t"]],["self"]]],[11,"i","","Returns imaginary unit",0,[[],["self"]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't…",0,[[["self"]],["t"]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[["self"],["t"]],["self"]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[["self"],["t"]],["self"]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[["self"],["u32"]],["self"]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[["self"]],["self"]]],[11,"inv","","Returns `1/self`",0,[[["self"]],["self"]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[["self"],["i32"]],["self"]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the [Manhattan…",0,[[["self"]],["t"]]],[11,"norm","","Calculate |self|",0,[[["self"]],["t"]]],[11,"arg","","Calculate the principal Arg of self.",0,[[["self"]],["t"]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,N],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[["t"],["t"]],["self"]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[["self"]],["self"]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[["self"]],["self"]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[["self"]],["self"]]],[11,"powf","","Raises `self` to a floating point power.",0,[[["self"],["t"]],["self"]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[["self"],["t"]],["self"]]],[11,"powc","","Raises `self` to a complex power.",0,[[["self"],["self"]],["self"]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[["self"],["t"]],["self"]]],[11,"sin","","Computes the sine of `self`.",0,[[["self"]],["self"]]],[11,"cos","","Computes the cosine of `self`.",0,[[["self"]],["self"]]],[11,"tan","","Computes the tangent of `self`.",0,[[["self"]],["self"]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[["self"]],["self"]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[["self"]],["self"]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[["self"]],["self"]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[["self"]],["self"]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[["self"]],["self"]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[["self"]],["self"]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[["self"]],["self"]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[["self"]],["self"]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[["self"]],["self"]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[["self"]],["complex"]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["self"],["complex"]],["complex"]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[["self"]],["bool"]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[["self"]],["bool"]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[["self"]],["bool"]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["complex"]],["bool"]]],[11,"ne","","",0,[[["self"],["complex"]],["bool"]]],[11,"eq","","",1,[[["self"],["parsecomplexerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["parsecomplexerror"]],["bool"]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"]],["result"]]],[11,"add","","",0,N],[11,"add","","",0,N],[11,"add","","",0,N],[11,"add","","",0,N],[11,"sub","","",0,N],[11,"sub","","",0,N],[11,"sub","","",0,N],[11,"sub","","",0,N],[11,"mul","","",0,N],[11,"mul","","",0,N],[11,"mul","","",0,N],[11,"mul","","",0,N],[11,"div","","",0,N],[11,"div","","",0,N],[11,"div","","",0,N],[11,"div","","",0,N],[11,"rem","","",0,N],[11,"rem","","",0,N],[11,"rem","","",0,N],[11,"rem","","",0,N],[11,"neg","","",0,N],[11,"add_assign","","",0,[[["self"],["self"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["self"],["self"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["self"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["self"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["self"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["self"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["self"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["self"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["self"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["self"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"hash","","",0,N],[11,"product","","",0,[[["i"]],["self"]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["complex"]]],[11,"default","","",0,[[],["complex"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"to_usize","","",0,[[["self"]],["option",["usize"]]]],[11,"to_isize","","",0,[[["self"]],["option",["isize"]]]],[11,"to_u8","","",0,[[["self"]],["option",["u8"]]]],[11,"to_u16","","",0,[[["self"]],["option",["u16"]]]],[11,"to_u32","","",0,[[["self"]],["option",["u32"]]]],[11,"to_u64","","",0,[[["self"]],["option",["u64"]]]],[11,"to_i8","","",0,[[["self"]],["option",["i8"]]]],[11,"to_i16","","",0,[[["self"]],["option",["i16"]]]],[11,"to_i32","","",0,[[["self"]],["option",["i32"]]]],[11,"to_i64","","",0,[[["self"]],["option",["i64"]]]],[11,"to_u128","","",0,[[["self"]],["option",["u128"]]]],[11,"to_i128","","",0,[[["self"]],["option",["i128"]]]],[11,"to_f32","","",0,[[["self"]],["option",["f32"]]]],[11,"to_f64","","",0,[[["self"]],["option",["f64"]]]],[11,"from_usize","","",0,[[["usize"]],["option"]]],[11,"from_isize","","",0,[[["isize"]],["option"]]],[11,"from_u8","","",0,[[["u8"]],["option"]]],[11,"from_u16","","",0,[[["u16"]],["option"]]],[11,"from_u32","","",0,[[["u32"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_i8","","",0,[[["i8"]],["option"]]],[11,"from_i16","","",0,[[["i16"]],["option"]]],[11,"from_i32","","",0,[[["i32"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from","","",0,[[["u"]],["option"]]],[11,"as_","","",0,[[["self"]],["u"]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"],["u32"]],["result"]]],[11,"zero","","",0,[[],["self"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"set_zero","","",0,[[["self"]]]],[11,"one","","",0,[[],["self"]]],[11,"is_one","","",0,[[["self"]],["bool"]]],[11,"set_one","","",0,[[["self"]]]],[11,"inv","","",0,N],[11,"mul_add","","",0,[[["self"],["complex"],["complex"]],["complex"]]],[11,"mul_add_assign","","",0,[[["self"],["complex"],["complex"]]]],[11,"mul_add_assign","","",0,[[["self"],["complex"],["complex"]]]],[11,"pow","","",0,N],[11,"pow","","",0,N],[11,"pow","","",0,N],[11,"pow","","",0,N],[11,"pow","","",0,N],[11,"pow","","",0,N]],"paths":[[3,"Complex"],[3,"ParseComplexError"]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs…","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"paths":[]};
searchIndex["num_derive"]={"doc":"Procedural macros to derive numeric traits in Rust.","items":[[24,"FromPrimitive","num_derive","Derives [`num_traits::FromPrimitive`][from] for simple…",N,N],[24,"ToPrimitive","","Derives [`num_traits::ToPrimitive`][to] for simple enums…",N,N],[24,"NumOps","","Derives [`num_traits::NumOps`][num_ops] for newtypes. The…",N,N],[24,"NumCast","","Derives [`num_traits::NumCast`][num_cast] for newtypes.…",N,N],[24,"Zero","","Derives [`num_traits::Zero`][zero] for newtypes. The inner…",N,N],[24,"One","","Derives [`num_traits::One`][one] for newtypes. The inner…",N,N],[24,"Num","","Derives [`num_traits::Num`][num] for newtypes. The inner…",N,N],[24,"Float","","Derives [`num_traits::Float`][float] for newtypes. The…",N,N]],"paths":[]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","items":[[3,"ExtendedGcd","num_integer","Greatest common divisor and Bézout coefficients",N,N],[12,"gcd","","",0,N],[12,"x","","",0,N],[12,"y","","",0,N],[3,"IterBinomial","","An iterator over binomial coefficients.",N,N],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",N,[[["t"]],["t"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",N,[[["t"],["u32"]],["t"]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",N,[[["t"]],["t"]]],[5,"div_rem","","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"div_ceil","","Ceiled integer division",N,[[["t"],["t"]],["t"]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",N,[[["t"],["t"]],["t"]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",N,N],[5,"binomial","","Calculate the binomial coefficient.",N,[[["t"],["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",N,N],[8,"Roots","","Provides methods to compute an integer's square root, cube…",N,N],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",1,[[["self"],["u32"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]],[8,"Integer","","",N,N],[10,"div_floor","","Floored integer division.",2,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",2,[[["self"],["self"]],["self"]]],[11,"div_ceil","","Ceiled integer division.",2,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",2,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",2,[[["self"],["self"]],["self"]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,N],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",2,[[["self"],["self"]],["extendedgcd"]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",2,N],[10,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",2,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",2,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",2,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",2,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",2,N],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",2,[[["self"],["self"]],["self"]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",2,[[["self"],["self"]],["self"]]],[11,"new","","For a given n, iterate over all binomial coefficients…",3,[[["t"]],["iterbinomial"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"ne","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["extendedgcd"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]]],"paths":[[3,"ExtendedGcd"],[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",N,N],[3,"RangeInclusive","","An iterator over the range [start, stop]",N,N],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",N,N],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",N,N],[5,"range","","Returns an iterator over the given range [start, stop)…",N,[[["a"],["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",N,[[["a"],["a"],["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,N],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["range"]]],[11,"clone","","",1,[[["self"]],["rangeinclusive"]]],[11,"clone","","",2,[[["self"]],["rangestep"]]],[11,"clone","","",3,[[["self"]],["rangestepinclusive"]]]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_rational"]={"doc":"Rational numbers","items":[[3,"Ratio","num_rational","Represents the ratio between two numbers.",N,N],[3,"ParseRatioError","","",N,N],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",N,N],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",N,N],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",N,N],[6,"BigRational","","Alias for arbitrary precision rationals.",N,N],[11,"new","","Creates a new `Ratio`. Fails if `denom` is zero.",0,[[["t"],["t"]],["ratio"]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",0,[[["t"]],["ratio"]]],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or…",0,[[["t"],["t"]],["ratio"]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,[[["self"]],["t"]]],[11,"numer","","Gets an immutable reference to the numerator.",0,[[["self"]],["t"]]],[11,"denom","","Gets an immutable reference to the denominator.",0,[[["self"]],["t"]]],[11,"is_integer","","Returns true if the rational number is an integer…",0,[[["self"]],["bool"]]],[11,"reduced","","Returns a reduced copy of self.",0,[[["self"]],["ratio"]]],[11,"recip","","Returns the reciprocal.",0,[[["self"]],["ratio"]]],[11,"floor","","Rounds towards minus infinity.",0,[[["self"]],["ratio"]]],[11,"ceil","","Rounds towards plus infinity.",0,[[["self"]],["ratio"]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",0,[[["self"]],["ratio"]]],[11,"trunc","","Rounds towards zero.",0,[[["self"]],["ratio"]]],[11,"fract","","Returns the fractional part of a number, with division…",0,[[["self"]],["ratio"]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",0,[[["self"],["i32"]],["ratio"]]],[11,"from_float","","Converts a float into a rational number.",0,[[["t"]],["option",["bigrational"]]]],[11,"approximate_float","","",0,[[["f"]],["option",["ratio"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["ratio"]]],[11,"from","","",0,N],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["parseratioerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["parseratioerror"]],["bool"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,[[["str"]],["result",["ratio","parseratioerror"]]]],[11,"add","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"add","","",0,[[["self"],["t"]],["ratio"]]],[11,"add","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"add","","",0,[[["self"],["t"]],["ratio"]]],[11,"sub","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"sub","","",0,[[["self"],["t"]],["ratio"]]],[11,"sub","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"sub","","",0,[[["self"],["t"]],["ratio"]]],[11,"mul","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"mul","","",0,[[["self"],["t"]],["ratio"]]],[11,"mul","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"mul","","",0,[[["self"],["t"]],["ratio"]]],[11,"div","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"div","","",0,[[["self"],["t"]],["ratio"]]],[11,"div","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"div","","",0,[[["self"],["t"]],["ratio"]]],[11,"rem","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"rem","","",0,[[["self"],["t"]],["ratio"]]],[11,"rem","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"rem","","",0,[[["self"],["t"]],["ratio"]]],[11,"neg","","",0,[[["self"]],["ratio"]]],[11,"add_assign","","",0,[[["self"],["ratio"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["self"],["ratio"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["ratio"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["ratio"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["ratio"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["ratio"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["ratio"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["ratio"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["ratio"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["ratio"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"clone","","",0,[[["self"]],["ratio"]]],[11,"clone","","",1,[[["self"]],["parseratioerror"]]],[11,"into","","",0,N],[11,"pow","","",0,[[["self"],["i8"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i8"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i16"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i16"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i32"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i32"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i64"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i64"]],["ratio"]]],[11,"pow","","",0,[[["self"],["isize"]],["ratio"]]],[11,"pow","","",0,[[["self"],["isize"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u8"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u8"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u16"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u16"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u32"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u32"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u64"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u64"]],["ratio"]]],[11,"pow","","",0,[[["self"],["usize"]],["ratio"]]],[11,"pow","","",0,[[["self"],["usize"]],["ratio"]]],[11,"checked_mul","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"checked_div","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"zero","","",0,[[],["ratio"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"checked_add","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"abs","","",0,[[["self"]],["ratio"]]],[11,"abs_sub","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"signum","","",0,[[["self"]],["ratio"]]],[11,"is_positive","","",0,[[["self"]],["bool"]]],[11,"is_negative","","",0,[[["self"]],["bool"]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,[[["str"],["u32"]],["result",["ratio","parseratioerror"]]]],[11,"one","","",0,[[],["ratio"]]],[11,"is_one","","",0,[[["self"]],["bool"]]],[11,"checked_sub","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"inv","","",0,[[["self"]],["ratio"]]],[11,"description","","",1,[[["self"]],["str"]]]],"paths":[[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",N,N],[12,"kind","","",0,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",1,N],[13,"Invalid","","",1,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"bounds","","",N,N],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",N,N],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",3,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",3,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",3,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",3,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",3,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",3,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",3,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",3,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",3,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",3,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",3,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",3,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",3,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",3,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type.…",4,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type.…",4,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type.…",4,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type.…",4,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type.…",4,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type.…",4,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted…",5,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[["self"]],["t"]]],[0,"float","num_traits","",N,N],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",N,N],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[["self"]],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[["self"]],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[["self"]],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[["self"]],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[["self"]],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[["self"]],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[["self"]],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[["self"]],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[["self"]],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[["self"]],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[["self"]],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[["self"]],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[["self"]],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[["self"],["self"]],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[["self"],["self"]],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[["self"]],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["self"],["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[["self"]],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,N],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",8,[[],["self"]]],[10,"infinity","","Returns the infinite value.",8,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",8,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",8,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",8,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",8,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",8,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",8,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",8,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",8,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",8,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",8,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",8,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",8,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",8,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",8,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",8,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",9,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",9,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[],["self"]]],[0,"identities","num_traits","",N,N],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",10,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",10,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[["self"]],["bool"]]],[0,"int","num_traits","",N,N],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",12,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",12,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",12,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[["self"],["u32"]],["self"]]],[0,"ops","num_traits","",N,N],[0,"checked","num_traits::ops","",N,N],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[["self"],["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",N,N],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[["self"],["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",N,N],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",18,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",N,N],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",19,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",N,N],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",20,[[["self"],["u32"]],["option"]]],[0,"inv","num_traits::ops","",N,N],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",N,N],[16,"Output","","The result after applying the operator.",21,N],[10,"inv","","Returns the multiplicative inverse of `self`.",21,N],[0,"mul_add","num_traits::ops","",N,N],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",N,N],[16,"Output","","The resulting type after applying the fused multiply-add.",22,N],[10,"mul_add","","Performs the fused multiply-add operation.",22,N],[8,"MulAddAssign","","The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[["self"],["a"],["b"]]]],[0,"saturating","num_traits::ops","",N,N],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",24,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",24,[[["self"],["self"]],["self"]]],[0,"wrapping","num_traits::ops","",N,N],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",25,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",26,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",27,[[["self"],["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",N,N],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",28,[[["self"],["u32"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",N,N],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",29,[[["self"],["u32"]],["self"]]],[0,"pow","num_traits","",N,N],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",N,[[["t"],["usize"]],["option"]]],[8,"Pow","","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",30,N],[10,"pow","","Returns `self` to the power `rhs`.",30,N],[0,"real","num_traits","",N,N],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",N,N],[10,"min_value","","Returns the smallest finite value that this type can…",31,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",31,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",31,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",31,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",31,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",31,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",31,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",31,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",31,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",31,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",31,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",31,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",31,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",31,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",31,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",31,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",31,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",31,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",31,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",31,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",31,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[["self"]],["self"]]],[10,"to_degrees","","Converts radians to degrees.",31,[[["self"]],["self"]]],[10,"to_radians","","Converts degrees to radians.",31,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",31,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",31,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",31,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",31,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",31,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",31,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",31,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",31,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",31,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",31,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",31,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",31,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",31,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",31,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[["self"]],["self"]]],[0,"sign","num_traits","",N,N],[5,"abs","num_traits::sign","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs","","Computes the absolute value.",32,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",32,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",32,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",32,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",32,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr","","",33,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",33,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",N,N],[8,"NumRef","","The trait for `Num` types which also implement numeric…",N,N],[8,"RefNum","","The trait for references which implement numeric…",N,N],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",N,N],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",N,N],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["objc"]={"doc":"Objective-C Runtime bindings and wrapper for Rust.","items":[[3,"Encoding","objc","An Objective-C type encoding.",N,N],[3,"MessageError","","An error encountered while attempting to send a message.",N,N],[0,"runtime","","A Rust interface for the functionality of the Objective-C…",N,N],[3,"Sel","objc::runtime","A type that represents a method selector.",N,N],[3,"Ivar","","A type that represents an instance variable.",N,N],[3,"Method","","A type that represents a method in a class definition.",N,N],[3,"Class","","A type that represents an Objective-C class.",N,N],[3,"Protocol","","A type that represents an Objective-C protocol.",N,N],[3,"Object","","A type that represents an instance of a class.",N,N],[5,"sel_registerName","","",N,N],[5,"sel_getName","","",N,N],[5,"class_getName","","",N,N],[5,"class_getSuperclass","","",N,N],[5,"class_getInstanceSize","","",N,N],[5,"class_getInstanceMethod","","",N,N],[5,"class_getInstanceVariable","","",N,N],[5,"class_copyMethodList","","",N,N],[5,"class_copyIvarList","","",N,N],[5,"class_addMethod","","",N,N],[5,"class_addIvar","","",N,N],[5,"class_addProtocol","","",N,N],[5,"class_conformsToProtocol","","",N,N],[5,"class_copyProtocolList","","",N,N],[5,"objc_allocateClassPair","","",N,N],[5,"objc_disposeClassPair","","",N,N],[5,"objc_registerClassPair","","",N,N],[5,"class_createInstance","","",N,N],[5,"object_dispose","","",N,N],[5,"object_getClass","","",N,N],[5,"objc_getClassList","","",N,N],[5,"objc_copyClassList","","",N,N],[5,"objc_getClass","","",N,N],[5,"objc_getProtocol","","",N,N],[5,"objc_copyProtocolList","","",N,N],[5,"objc_allocateProtocol","","",N,N],[5,"objc_registerProtocol","","",N,N],[5,"objc_autoreleasePoolPush","","",N,N],[5,"objc_autoreleasePoolPop","","",N,N],[5,"protocol_addMethodDescription","","",N,N],[5,"protocol_addProtocol","","",N,N],[5,"protocol_getName","","",N,N],[5,"protocol_isEqual","","",N,N],[5,"protocol_copyProtocolList","","",N,N],[5,"protocol_conformsToProtocol","","",N,N],[5,"ivar_getName","","",N,N],[5,"ivar_getOffset","","",N,N],[5,"ivar_getTypeEncoding","","",N,N],[5,"method_getName","","",N,N],[5,"method_getImplementation","","",N,N],[5,"method_copyReturnType","","",N,N],[5,"method_copyArgumentType","","",N,N],[5,"method_getNumberOfArguments","","",N,N],[5,"method_setImplementation","","",N,N],[5,"method_exchangeImplementations","","",N,N],[5,"objc_retain","","",N,N],[5,"objc_release","","",N,N],[5,"objc_autorelease","","",N,N],[5,"objc_loadWeakRetained","","",N,N],[5,"objc_initWeak","","",N,N],[5,"objc_destroyWeak","","",N,N],[5,"objc_copyWeak","","",N,N],[6,"BOOL","","The Objective-C `BOOL` type.",N,N],[6,"Imp","","A pointer to the start of a method implementation.",N,N],[17,"YES","","The equivalent of true for Objective-C's `BOOL` type.",N,N],[17,"NO","","The equivalent of false for Objective-C's `BOOL` type.",N,N],[11,"register","","Registers a method with the Objective-C runtime system,…",0,[[["str"]],["sel"]]],[11,"name","","Returns the name of the method specified by self.",0,[[["self"]],["str"]]],[11,"from_ptr","","Wraps a raw pointer to a selector into a `Sel` object.",0,N],[11,"as_ptr","","Returns a pointer to the raw selector.",0,N],[11,"name","","Returns the name of self.",1,[[["self"]],["str"]]],[11,"offset","","Returns the offset of self.",1,[[["self"]],["isize"]]],[11,"type_encoding","","Returns the `Encoding` of self.",1,[[["self"]],["encoding"]]],[11,"name","","Returns the name of self.",2,[[["self"]],["sel"]]],[11,"return_type","","Returns the `Encoding` of self's return type.",2,[[["self"]],["encoding"]]],[11,"argument_type","","Returns the `Encoding` of a single parameter type of self,…",2,[[["self"],["usize"]],["option",["encoding"]]]],[11,"arguments_count","","Returns the number of arguments accepted by self.",2,[[["self"]],["usize"]]],[11,"implementation","","Returns the implementation of self.",2,[[["self"]],["imp"]]],[11,"get","","Returns the class definition of a specified class, or…",3,[[["str"]],["option",["class"]]]],[11,"classes","","Obtains the list of registered class definitions.",3,[[],["mallocbuffer",["class"]]]],[11,"classes_count","","Returns the total number of registered classes.",3,[[],["usize"]]],[11,"name","","Returns the name of self.",3,[[["self"]],["str"]]],[11,"superclass","","Returns the superclass of self, or `None` if self is a…",3,[[["self"]],["option",["class"]]]],[11,"metaclass","","Returns the metaclass of self.",3,[[["self"]],["class"]]],[11,"instance_size","","Returns the size of instances of self.",3,[[["self"]],["usize"]]],[11,"instance_method","","Returns a specified instance method for self, or `None` if…",3,[[["self"],["sel"]],["option",["method"]]]],[11,"instance_variable","","Returns the ivar for a specified instance variable of…",3,[[["self"],["str"]],["option",["ivar"]]]],[11,"instance_methods","","Describes the instance methods implemented by self.",3,[[["self"]],["mallocbuffer",["method"]]]],[11,"conforms_to","","Checks whether this class conforms to the specified…",3,[[["self"],["protocol"]],["bool"]]],[11,"adopted_protocols","","Get a list of the protocols to which this class conforms.",3,[[["self"]],["mallocbuffer",["protocol"]]]],[11,"instance_variables","","Describes the instance variables declared by self.",3,[[["self"]],["mallocbuffer",["ivar"]]]],[11,"get","","Returns the protocol definition of a specified protocol,…",4,[[["str"]],["option",["protocol"]]]],[11,"protocols","","Obtains the list of registered protocol definitions.",4,[[],["mallocbuffer",["protocol"]]]],[11,"adopted_protocols","","Get a list of the protocols to which this protocol conforms.",4,[[["self"]],["mallocbuffer",["protocol"]]]],[11,"conforms_to","","Checks whether this protocol conforms to the specified…",4,[[["self"],["protocol"]],["bool"]]],[11,"name","","Returns the name of self.",4,[[["self"]],["str"]]],[11,"class","","Returns the class of self.",5,[[["self"]],["class"]]],[11,"get_ivar","","Returns a reference to the ivar of self with the given…",5,[[["self"],["str"]],["t"]]],[11,"get_mut_ivar","","Returns a mutable reference to the ivar of self with the…",5,[[["self"],["str"]],["t"]]],[11,"set_ivar","","Sets the value of the ivar of self with the given name.…",5,[[["self"],["str"],["t"]]]],[0,"declare","objc","Functionality for declaring Objective-C classes.",N,N],[3,"ClassDecl","objc::declare","A type for declaring a new class and adding new methods…",N,N],[3,"ProtocolDecl","","A type for declaring a new protocol and adding new methods…",N,N],[8,"MethodImplementation","","Types that can be used as the implementation of an…",N,N],[16,"Callee","","The callee type of the method.",6,N],[16,"Ret","","The return type of the method.",6,N],[16,"Args","","The argument types of the method.",6,N],[10,"imp","","Returns self as an `Imp` of a method.",6,[[["self"]],["imp"]]],[11,"new","","Constructs a `ClassDecl` with the given name and…",7,[[["str"],["class"]],["option",["classdecl"]]]],[11,"root","","Constructs a `ClassDecl` declaring a new root class with…",7,N],[11,"add_method","","Adds a method with the given name and implementation to…",7,[[["self"],["sel"],["f"]]]],[11,"add_class_method","","Adds a class method with the given name and implementation…",7,[[["self"],["sel"],["f"]]]],[11,"add_ivar","","Adds an ivar with type `T` and the provided name to self.…",7,[[["self"],["str"]]]],[11,"add_protocol","","Adds a protocol to self. Panics if the protocol wasn't…",7,[[["self"],["protocol"]]]],[11,"register","","Registers self, consuming it and returning a reference to…",7,[[["self"]],["class"]]],[11,"new","","Constructs a `ProtocolDecl` with the given name. Returns…",8,[[["str"]],["option",["protocoldecl"]]]],[11,"add_method_description","","Adds an instance method declaration with a given…",8,[[["self"],["sel"],["bool"]]]],[11,"add_class_method_description","","Adds a class method declaration with a given description…",8,[[["self"],["sel"],["bool"]]]],[11,"add_protocol","","Adds a requirement on another protocol.",8,[[["self"],["protocol"]]]],[11,"register","","Registers self, consuming it and returning a reference to…",8,[[["self"]],["protocol"]]],[0,"rc","objc","Utilities for reference counting Objective-C objects.",N,N],[3,"StrongPtr","objc::rc","A pointer that strongly references an object, ensuring it…",N,N],[3,"WeakPtr","","A pointer that weakly references an object, allowing to…",N,N],[5,"autoreleasepool","","Execute `f` in the context of a new autorelease pool. The…",N,[[["f"]],["t"]]],[11,"new","","Constructs a `StrongPtr` to a newly created object that…",9,N],[11,"retain","","Retains the given object and constructs a `StrongPtr` to…",9,N],[11,"autorelease","","Autoreleases self, meaning that the object is not…",9,N],[11,"weak","","Returns a `WeakPtr` to self.",9,[[["self"]],["weakptr"]]],[11,"new","","Constructs a `WeakPtr` to the given object. Unsafe because…",10,N],[11,"load","","Loads the object self points to, returning a `StrongPtr`.…",10,[[["self"]],["strongptr"]]],[11,"from_str","objc","Constructs an `Encoding` from its string representation.…",11,[[["str"]],["encoding"]]],[11,"as_str","","Returns self as a `str`.",11,[[["self"]],["str"]]],[8,"Encode","","Types that have an Objective-C type encoding.",N,N],[10,"encode","","Returns the Objective-C type encoding for Self.",12,[[],["encoding"]]],[8,"EncodeArguments","","Types that represent a group of arguments, where each has…",N,N],[16,"Encs","","The type as which the encodings for Self will be returned.",13,N],[10,"encodings","","Returns the Objective-C type encodings for Self.",13,N],[8,"Message","","Types that may be sent Objective-C messages. For example:…",N,N],[11,"send_message","","Sends a message to self with the given selector and…",14,[[["self"],["sel"],["a"]],["result",["messageerror"]]]],[11,"verify_message","","Verifies that the argument and return types match the…",14,[[["self"],["sel"]],["result",["messageerror"]]]],[8,"MessageArguments","","Types that may be used as the arguments of an Objective-C…",N,N],[10,"invoke","","Invoke an `Imp` with the given object, selector, and…",15,N],[14,"class","","Gets a reference to a `Class`.",N,N],[14,"sel","","Registers a selector, returning a `Sel`.",N,N],[14,"msg_send","","Sends a message to an object.",N,N],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","objc::runtime","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","objc::declare","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","objc::rc","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"encode","objc::runtime","",0,[[],["encoding"]]],[11,"eq","","",0,[[["self"],["sel"]],["bool"]]],[11,"eq","","",3,[[["self"],["class"]],["bool"]]],[11,"eq","","",4,[[["self"],["protocol"]],["bool"]]],[11,"eq","objc","",11,[[["self"],["encoding"]],["bool"]]],[11,"clone","objc::runtime","",0,[[["self"]],["sel"]]],[11,"clone","objc::rc","",9,[[["self"]],["strongptr"]]],[11,"clone","","",10,[[["self"]],["self"]]],[11,"clone","objc","",11,[[["self"]],["encoding"]]],[11,"drop","objc::declare","",7,[[["self"]]]],[11,"drop","objc::rc","",9,[[["self"]]]],[11,"drop","","",10,[[["self"]]]],[11,"deref","","",9,N],[11,"fmt","objc","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","objc::runtime","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","objc","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","objc::rc","",9,[[["self"],["formatter"]],["result"]]],[11,"description","objc","",16,[[["self"]],["str"]]],[11,"send_message","","Sends a message to self with the given selector and…",14,[[["self"],["sel"],["a"]],["result",["messageerror"]]]],[11,"verify_message","","Verifies that the argument and return types match the…",14,[[["self"],["sel"]],["result",["messageerror"]]]]],"paths":[[3,"Sel"],[3,"Ivar"],[3,"Method"],[3,"Class"],[3,"Protocol"],[3,"Object"],[8,"MethodImplementation"],[3,"ClassDecl"],[3,"ProtocolDecl"],[3,"StrongPtr"],[3,"WeakPtr"],[3,"Encoding"],[8,"Encode"],[8,"EncodeArguments"],[8,"Message"],[8,"MessageArguments"],[3,"MessageError"]]};
searchIndex["order_and_chaos"]={"doc":"","items":[[3,"Game","order_and_chaos","A game of order and chaos.",N,N],[3,"Move","","A move consists of a piece and a location in the board.",N,N],[4,"GameStatus","","A game of Order and Chaos may be in progress, or won by…",N,N],[13,"InProgress","","",0,N],[13,"OrderWins","","",0,N],[13,"ChaosWins","","",0,N],[4,"MoveType","","A move in Order and Chaos is either placing an X piece or…",N,N],[13,"X","","",1,N],[13,"O","","",1,N],[4,"Player","","A Player is either Order or Chaos.",N,N],[13,"Order","","",2,N],[13,"Chaos","","",2,N],[11,"display","","Print out the current player type.",2,[[["self"]],["str"]]],[11,"other_player","","Get the type of the other player.",2,[[["self"]],["self"]]],[11,"new","","Creates a new move with the specified MoveType and location.",3,[[["movetype"],["usize"],["usize"]],["self"]]],[11,"new","","Create a new game.",4,[[],["self"]]],[11,"last_move","","Return the coordinates of the last move made. Returns none…",4,[[["self"]],["option"]]],[11,"index","","Query the board for the Piece at a given location.",4,[[["self"],["usize"],["usize"]],["option",["movetype"]]]],[11,"size","","Get the size of the board.",4,[[["self"]],["usize"]]],[11,"count_direction","","Counts the number of like pieces in a given direction on…",4,[[["self"],["boarddirection"],["usize"],["usize"]],["usize"]]],[11,"open_indices","","Get a list of the open spaces in the game.",4,N],[11,"get_status","","Query the status of the game. Has a player won or is the…",4,[[["self"]],["gamestatus"]]],[11,"make_move","","Places a piece with a location specified by the move into…",4,[[["self"],["move"]],["option",["game"]]]],[8,"Strategy","","Provides the strategy for an AI player to play the game. A…",N,N],[10,"ai_move","","Specified computer player makes a move in the current game.",5,[[["self"],["player"]],["self"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"ai_move","","",4,[[["self"],["player"]],["game"]]],[11,"partial_cmp","","",2,[[["self"],["player"]],["option",["ordering"]]]],[11,"eq","","",2,[[["self"],["player"]],["bool"]]],[11,"eq","","",0,[[["self"],["gamestatus"]],["bool"]]],[11,"eq","","",1,[[["self"],["movetype"]],["bool"]]],[11,"cmp","","",2,[[["self"],["player"]],["ordering"]]],[11,"clone","","",2,[[["self"]],["player"]]],[11,"clone","","",1,[[["self"]],["movetype"]]],[11,"clone","","",3,[[["self"]],["move"]]],[11,"clone","","",4,[[["self"]],["game"]]],[11,"fmt","","Command line representation of the game. Useful for…",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"GameStatus"],[4,"MoveType"],[4,"Player"],[3,"Move"],[3,"Game"],[8,"Strategy"]]};
searchIndex["ordered_float"]={"doc":"Wrappers for total order on Floats.","items":[[3,"OrderedFloat","ordered_float","A wrapper around Floats providing an implementation of Ord…",N,N],[12,"0","","",0,N],[3,"NotNan","","A wrapper around Floats providing an implementation of Ord…",N,N],[3,"FloatIsNan","","An error indicating an attempt to construct NotNan from a…",N,N],[4,"ParseNotNanError","","An error indicating a parse error from a string for…",N,N],[13,"ParseFloatError","","A plain parse error from the underlying float type.",1,N],[13,"IsNaN","","The parsed float value resulted in a NaN.",1,N],[6,"NotNaN","","A wrapper around Floats providing an implementation of Ord…",N,N],[6,"FloatIsNaN","","An error indicating an attempt to construct NotNan from a…",N,N],[11,"into_inner","","Get the value out.",0,[[["self"]],["t"]]],[11,"new","","Create a NotNan value.",2,[[["t"]],["result",["floatisnan"]]]],[11,"unchecked_new","","Create a NotNan value from a value that is guaranteed to…",2,[[["t"]],["self"]]],[11,"into_inner","","Get the value out.",2,[[["self"]],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"deref","","",0,N],[11,"deref","","",2,N],[11,"from","","",0,[[["t"]],["self"]]],[11,"from","","",2,[[["t"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["orderedfloat"]],["bool"]]],[11,"eq","","",2,[[["self"],["notnan"]],["bool"]]],[11,"ne","","",2,[[["self"],["notnan"]],["bool"]]],[11,"eq","","",3,[[["self"],["floatisnan"]],["bool"]]],[11,"eq","","",1,[[["self"],["parsenotnanerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["parsenotnanerror"]],["bool"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["notnan"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"partial_cmp","","",2,[[["self"],["notnan"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["notnan"]],["bool"]]],[11,"le","","",2,[[["self"],["notnan"]],["bool"]]],[11,"gt","","",2,[[["self"],["notnan"]],["bool"]]],[11,"ge","","",2,[[["self"],["notnan"]],["bool"]]],[11,"from_str","","Convert a &str to `OrderedFloat`. Returns an error if the…",0,[[["str"]],["result"]]],[11,"from_str","","Convert a &str to `NotNan`. Returns an error if the string…",2,[[["str"]],["result"]]],[11,"add","","",2,[[["self"],["self"]],["self"]]],[11,"add","","",2,[[["self"],["t"]],["self"]]],[11,"sub","","",2,[[["self"],["self"]],["self"]]],[11,"sub","","",2,[[["self"],["t"]],["self"]]],[11,"mul","","",2,[[["self"],["self"]],["self"]]],[11,"mul","","",2,[[["self"],["t"]],["self"]]],[11,"div","","",2,[[["self"],["self"]],["self"]]],[11,"div","","",2,[[["self"],["t"]],["self"]]],[11,"rem","","",2,[[["self"],["self"]],["self"]]],[11,"rem","","",2,[[["self"],["t"]],["self"]]],[11,"neg","","",2,[[["self"]],["self"]]],[11,"add_assign","","",2,[[["self"],["self"]]]],[11,"add_assign","","",2,[[["self"],["t"]]]],[11,"sub_assign","","",2,[[["self"],["self"]]]],[11,"sub_assign","","",2,[[["self"],["t"]]]],[11,"mul_assign","","",2,[[["self"],["self"]]]],[11,"mul_assign","","",2,[[["self"],["t"]]]],[11,"div_assign","","",2,[[["self"],["self"]]]],[11,"div_assign","","",2,[[["self"],["t"]]]],[11,"rem_assign","","",2,[[["self"],["self"]]]],[11,"rem_assign","","",2,[[["self"],["t"]]]],[11,"deref_mut","","",0,N],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",2,[[["self"],["h"]]]],[11,"clone","","",0,[[["self"]],["orderedfloat"]]],[11,"clone","","",2,[[["self"]],["notnan"]]],[11,"clone","","",3,[[["self"]],["floatisnan"]]],[11,"clone","","",1,[[["self"]],["parsenotnanerror"]]],[11,"as_mut","","",0,[[["self"]],["t"]]],[11,"as_ref","","",0,[[["self"]],["t"]]],[11,"as_ref","","",2,[[["self"]],["t"]]],[11,"default","","",0,[[],["orderedfloat"]]],[11,"default","","",2,[[],["notnan"]]],[11,"into","","",0,[[["self"]],["f32"]]],[11,"into","","",0,[[["self"]],["f64"]]],[11,"into","","",3,[[["self"]],["error"]]],[11,"min_value","","",0,[[],["self"]]],[11,"max_value","","",0,[[],["self"]]],[11,"min_value","","",2,[[],["self"]]],[11,"max_value","","",2,[[],["self"]]],[11,"to_i64","","",2,[[["self"]],["option",["i64"]]]],[11,"to_u64","","",2,[[["self"]],["option",["u64"]]]],[11,"to_isize","","",2,[[["self"]],["option",["isize"]]]],[11,"to_i8","","",2,[[["self"]],["option",["i8"]]]],[11,"to_i16","","",2,[[["self"]],["option",["i16"]]]],[11,"to_i32","","",2,[[["self"]],["option",["i32"]]]],[11,"to_usize","","",2,[[["self"]],["option",["usize"]]]],[11,"to_u8","","",2,[[["self"]],["option",["u8"]]]],[11,"to_u16","","",2,[[["self"]],["option",["u16"]]]],[11,"to_u32","","",2,[[["self"]],["option",["u32"]]]],[11,"to_f32","","",2,[[["self"]],["option",["f32"]]]],[11,"to_f64","","",2,[[["self"]],["option",["f64"]]]],[11,"from_i64","","",2,[[["i64"]],["option"]]],[11,"from_u64","","",2,[[["u64"]],["option"]]],[11,"from_isize","","",2,[[["isize"]],["option"]]],[11,"from_i8","","",2,[[["i8"]],["option"]]],[11,"from_i16","","",2,[[["i16"]],["option"]]],[11,"from_i32","","",2,[[["i32"]],["option"]]],[11,"from_usize","","",2,[[["usize"]],["option"]]],[11,"from_u8","","",2,[[["u8"]],["option"]]],[11,"from_u16","","",2,[[["u16"]],["option"]]],[11,"from_u32","","",2,[[["u32"]],["option"]]],[11,"from_f32","","",2,[[["f32"]],["option"]]],[11,"from_f64","","",2,[[["f64"]],["option"]]],[11,"from","","",2,[[["f"]],["option"]]],[11,"from_str_radix","","",2,[[["str"],["u32"]],["result"]]],[11,"zero","","",2,[[],["self"]]],[11,"is_zero","","",2,[[["self"]],["bool"]]],[11,"one","","",2,[[],["self"]]],[11,"abs","","",2,[[["self"]],["self"]]],[11,"abs_sub","","",2,[[["self"],["self"]],["self"]]],[11,"signum","","",2,[[["self"]],["self"]]],[11,"is_positive","","",2,[[["self"]],["bool"]]],[11,"is_negative","","",2,[[["self"]],["bool"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"description","","",1,[[["self"]],["str"]]]],"paths":[[3,"OrderedFloat"],[4,"ParseNotNanError"],[3,"NotNan"],[3,"FloatIsNan"]]};
searchIndex["ordermap"]={"doc":"[`OrderMap`] is a hash table where the iteration order of…","items":[[3,"OrderMap","ordermap","A hash table where the iteration order of the key-value…",N,N],[3,"OccupiedEntry","","",N,N],[3,"VacantEntry","","",N,N],[3,"Keys","","",N,N],[3,"Values","","",N,N],[3,"ValuesMut","","",N,N],[3,"Iter","","",N,N],[3,"IterMut","","",N,N],[3,"IntoIter","","",N,N],[3,"Drain","","",N,N],[4,"Entry","","Entry for an existing key-value pair or a vacant location…",N,N],[13,"Occupied","","Existing slot with equivalent key.",0,N],[13,"Vacant","","Vacant slot (no equivalent key in the map).",0,N],[0,"set","","A hash set implemented using `OrderMap`",N,N],[3,"OrderSet","ordermap::set","A hash set where the iteration order of the values is…",N,N],[3,"IntoIter","","",N,N],[3,"Iter","","",N,N],[3,"Drain","","",N,N],[3,"Difference","","",N,N],[3,"Intersection","","",N,N],[3,"SymmetricDifference","","",N,N],[3,"Union","","",N,N],[11,"new","","Create a new set. (Does not allocate.)",1,[[],["self"]]],[11,"with_capacity","","Create a new set with capacity for `n` elements. (Does not…",1,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for `n` elements. (Does not…",1,[[["usize"],["s"]],["self"]]],[11,"len","","Return the number of elements in the set.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the set contains no elements.",1,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new set with `hash_builder`",1,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the set's `BuildHasher`.",1,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",1,[[["self"]],["usize"]]],[11,"clear","","Remove all elements in the set, while preserving its…",1,[[["self"]]]],[11,"reserve","","FIXME Not implemented fully yet",1,[[["self"],["usize"]]]],[11,"insert","","Insert the value into the set.",1,[[["self"],["t"]],["bool"]]],[11,"iter","","Return an iterator over the values of the set, in their…",1,[[["self"]],["iter"]]],[11,"difference","","Return an iterator over the values that are in `self` but…",1,[[["self"],["orderset"]],["difference"]]],[11,"symmetric_difference","","Return an iterator over the values that are in `self` or…",1,[[["self"],["orderset"]],["symmetricdifference"]]],[11,"intersection","","Return an iterator over the values that are in both `self`…",1,[[["self"],["orderset"]],["intersection"]]],[11,"union","","Return an iterator over all values that are in `self` or…",1,[[["self"],["orderset"]],["union"]]],[11,"contains","","Return `true` if an equivalent to `value` exists in the set.",1,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored in the set, if it…",1,[[["self"],["q"]],["option"]]],[11,"get_full","","Return item index and value",1,[[["self"],["q"]],["option"]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",1,[[["self"],["t"]],["option"]]],[11,"remove","","FIXME Same as .swap_remove",1,[[["self"],["q"]],["bool"]]],[11,"swap_remove","","Remove the value from the set, and return `true` if it was…",1,[[["self"],["q"]],["bool"]]],[11,"take","","FIXME Same as .swap_take",1,[[["self"],["q"]],["option"]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is…",1,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it…",1,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last value",1,[[["self"]],["option"]]],[11,"retain","","Scan through each value in the set and keep those where…",1,[[["self"],["f"]]]],[11,"sort","","Sort the set’s values by their default ordering.",1,[[["self"]]]],[11,"sort_by","","Sort the set’s values in place using the comparison…",1,[[["self"],["f"]]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator…",1,[[["self"],["f"]],["intoiter"]]],[11,"drain","","Clears the `OrderSet`, returning all values as a drain…",1,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a value by index",1,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",1,[[["self"],["usize"]],["option"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",1,[[["self"],["orderset"]],["bool"]]],[11,"is_subset","","Returns `true` if all elements of `self` are contained in…",1,[[["self"],["orderset"]],["bool"]]],[11,"is_superset","","Returns `true` if all elements of `other` are contained in…",1,[[["self"],["orderset"]],["bool"]]],[8,"Equivalent","ordermap","Key equivalence trait.",N,N],[10,"equivalent","","Compare self to `key` and return `true` if they are equal.",2,[[["self"],["k"]],["bool"]]],[8,"MutableKeys","","Opt-in mutable access to keys.",N,N],[16,"Key","","",3,N],[16,"Value","","",3,N],[10,"get_full_mut2","","Return item index, mutable reference to key and value",3,[[["self"],["q"]],["option"]]],[10,"retain2","","Scan through each key-value pair in the map and keep those…",3,[[["self"],["f"]]]],[10,"__private_marker","","This method is not useful in itself – it is there to…",3,[[["self"]],["privatemarker"]]],[11,"new","","Create a new map. (Does not allocate.)",4,[[],["self"]]],[11,"with_capacity","","Create a new map with capacity for `n` key-value pairs.…",4,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for `n` key-value pairs.…",4,[[["usize"],["s"]],["self"]]],[11,"len","","Return the number of key-value pairs in the map.",4,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",4,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new map with `hash_builder`",4,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the map's `BuildHasher`.",4,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",4,[[["self"]],["usize"]]],[11,"or_insert","","Computes in O(1) time (amortized average).",0,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Computes in O(1) time (amortized average).",0,[[["self"],["f"]],["v"]]],[11,"key","","",0,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair exists or will…",0,[[["self"]],["usize"]]],[11,"key","","",5,[[["self"]],["k"]]],[11,"get","","",5,[[["self"]],["v"]]],[11,"get_mut","","",5,[[["self"]],["v"]]],[11,"index","","Return the index of the key-value pair",5,[[["self"]],["usize"]]],[11,"into_mut","","",5,[[["self"]],["v"]]],[11,"insert","","",5,[[["self"],["v"]],["v"]]],[11,"remove","","",5,[[["self"]],["v"]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map…",5,N],[11,"key","","",6,[[["self"]],["k"]]],[11,"into_key","","",6,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair will be inserted.",6,[[["self"]],["usize"]]],[11,"insert","","",6,[[["self"],["v"]],["v"]]],[11,"clear","","Remove all key-value pairs in the map, while preserving…",4,[[["self"]]]],[11,"reserve","","Reserve capacity for `additional` more key-value pairs.",4,[[["self"],["usize"]]]],[11,"insert","","Insert a key-value pair in the map.",4,[[["self"],["k"],["v"]],["option"]]],[11,"entry","","Get the given key’s corresponding entry in the map for…",4,[[["self"],["k"]],["entry"]]],[11,"iter","","Return an iterator over the key-value pairs of the map, in…",4,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, in…",4,[[["self"]],["itermut"]]],[11,"keys","","Return an iterator over the keys of the map, in their order",4,[[["self"]],["keys"]]],[11,"values","","Return an iterator over the values of the map, in their…",4,[[["self"]],["values"]]],[11,"values_mut","","Return an iterator over mutable references to the the…",4,[[["self"]],["valuesmut"]]],[11,"contains_key","","Return `true` if and equivalent to `key` exists in the map.",4,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored for `key`, if it is…",4,[[["self"],["q"]],["option"]]],[11,"get_full","","Return item index, key and value",4,[[["self"],["q"]],["option"]]],[11,"get_mut","","",4,[[["self"],["q"]],["option"]]],[11,"get_full_mut","","",4,[[["self"],["q"]],["option"]]],[11,"remove","","NOTE: Same as .swap_remove",4,[[["self"],["q"]],["option"]]],[11,"swap_remove","","Remove the key-value pair equivalent to `key` and return…",4,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to `key` and return…",4,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last key-value pair",4,[[["self"]],["option"]]],[11,"retain","","Scan through each key-value pair in the map and keep those…",4,[[["self"],["f"]]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering of…",4,[[["self"]]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the…",4,[[["self"],["f"]]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value…",4,[[["self"],["f"]],["intoiter"]]],[11,"drain","","Clears the `OrderMap`, returning all key-value pairs as a…",4,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a key-value pair by index",4,[[["self"],["usize"]],["option"]]],[11,"get_index_mut","","Get a key-value pair by index",4,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",4,[[["self"],["usize"]],["option"]]],[14,"ordermap","","Create an `OrderMap` from a list of key-value pairs",N,N],[14,"orderset","","Create an `OrderSet` from a list of values",N,N],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","ordermap::set","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into_iter","","",14,[[["self"]],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"get_full_mut2","ordermap","",4,[[["self"],["q"]],["option"]]],[11,"retain2","","",4,[[["self"],["f"]]]],[11,"__private_marker","","",4,[[["self"]],["privatemarker"]]],[11,"extend","ordermap::set","",1,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"extend","ordermap","Extend the map with all key-value pairs in the iterable.",4,[[["self"],["i"]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",4,[[["self"],["i"]]]],[11,"next","ordermap::set","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,N],[11,"count","","",14,[[["self"]],["usize"]]],[11,"nth","","",14,[[["self"],["usize"]],["option"]]],[11,"last","","",14,[[["self"]],["option"]]],[11,"collect","","",14,[[["self"]],["c"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,N],[11,"count","","",15,[[["self"]],["usize"]]],[11,"nth","","",15,[[["self"],["usize"]],["option"]]],[11,"last","","",15,[[["self"]],["option"]]],[11,"collect","","",15,[[["self"]],["c"]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,N],[11,"count","","",16,[[["self"]],["usize"]]],[11,"nth","","",16,[[["self"],["usize"]],["option"]]],[11,"last","","",16,[[["self"]],["option"]]],[11,"collect","","",16,[[["self"]],["c"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"fold","","",19,[[["self"],["b"],["f"]],["b"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"fold","","",20,[[["self"],["b"],["f"]],["b"]]],[11,"next","ordermap","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"count","","",7,[[["self"]],["usize"]]],[11,"nth","","",7,[[["self"],["usize"]],["option"]]],[11,"last","","",7,[[["self"]],["option"]]],[11,"collect","","",7,[[["self"]],["c"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"count","","",8,[[["self"]],["usize"]]],[11,"nth","","",8,[[["self"],["usize"]],["option"]]],[11,"last","","",8,[[["self"]],["option"]]],[11,"collect","","",8,[[["self"]],["c"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"count","","",9,[[["self"]],["usize"]]],[11,"nth","","",9,[[["self"],["usize"]],["option"]]],[11,"last","","",9,[[["self"]],["option"]]],[11,"collect","","",9,[[["self"]],["c"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"count","","",10,[[["self"]],["usize"]]],[11,"nth","","",10,[[["self"],["usize"]],["option"]]],[11,"last","","",10,[[["self"]],["option"]]],[11,"collect","","",10,[[["self"]],["c"]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,N],[11,"count","","",11,[[["self"]],["usize"]]],[11,"nth","","",11,[[["self"],["usize"]],["option"]]],[11,"last","","",11,[[["self"]],["option"]]],[11,"collect","","",11,[[["self"]],["c"]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,N],[11,"count","","",12,[[["self"]],["usize"]]],[11,"nth","","",12,[[["self"],["usize"]],["option"]]],[11,"last","","",12,[[["self"]],["option"]]],[11,"collect","","",12,[[["self"]],["c"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,N],[11,"count","","",13,[[["self"]],["usize"]]],[11,"nth","","",13,[[["self"],["usize"]],["option"]]],[11,"last","","",13,[[["self"]],["option"]]],[11,"collect","","",13,[[["self"]],["c"]]],[11,"len","ordermap::set","",14,[[["self"]],["usize"]]],[11,"len","","",15,[[["self"]],["usize"]]],[11,"len","ordermap","",7,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"len","","",12,[[["self"]],["usize"]]],[11,"default","ordermap::set","Return an empty `OrderSet`",1,[[],["self"]]],[11,"default","ordermap","Return an empty `OrderMap`",4,[[],["self"]]],[11,"next_back","ordermap::set","",14,[[["self"]],["option"]]],[11,"next_back","","",15,[[["self"]],["option"]]],[11,"next_back","","",16,[[["self"]],["option"]]],[11,"next_back","","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","ordermap","",7,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"eq","ordermap::set","",1,[[["self"],["orderset"]],["bool"]]],[11,"eq","ordermap","",4,[[["self"],["ordermap"]],["bool"]]],[11,"into_iter","ordermap::set","",1,N],[11,"into_iter","ordermap","",4,N],[11,"clone","ordermap::set","",1,[[["self"]],["orderset"]]],[11,"clone","ordermap","",4,[[["self"]],["ordermap"]]],[11,"fmt","ordermap::set","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","ordermap","",4,[[["self"],["formatter"]],["result"]]],[11,"index","","Panics if `key` is not present in the map.",4,[[["self"],["q"]],["v"]]],[11,"index_mut","","Panics if `key` is not present in the map.",4,[[["self"],["q"]],["v"]]],[11,"from_iter","ordermap::set","",1,[[["i"]],["self"]]],[11,"from_iter","ordermap","Create an `OrderMap` from the sequence of key-value pairs…",4,[[["i"]],["self"]]]],"paths":[[4,"Entry"],[3,"OrderSet"],[8,"Equivalent"],[8,"MutableKeys"],[3,"OrderMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"]]};
searchIndex["petgraph"]={"doc":"petgraph is a graph data structure library.","items":[[4,"Direction","petgraph","Edge direction.",N,N],[13,"Outgoing","","An `Outgoing` edge is an outward edge from the current node.",0,N],[13,"Incoming","","An `Incoming` edge is an inbound edge to the current node.",0,N],[4,"Directed","","Marker type for a directed graph.",N,N],[4,"Undirected","","Marker type for an undirected graph.",N,N],[0,"visit","","Graph traits and graph traversals.",N,N],[3,"NodeFiltered","petgraph::visit","A node-filtering graph adaptor.",N,N],[12,"0","","",1,N],[12,"1","","",1,N],[3,"NodeFilteredNeighbors","","A filtered neighbors iterator.",N,N],[3,"NodeFilteredNodes","","A filtered node references iterator.",N,N],[3,"NodeFilteredEdgeReferences","","A filtered edges iterator.",N,N],[3,"NodeFilteredEdges","","A filtered edges iterator.",N,N],[3,"EdgeFiltered","","An edge-filtering graph adaptor.",N,N],[12,"0","","",2,N],[12,"1","","",2,N],[3,"EdgeFilteredNeighbors","","A filtered neighbors iterator.",N,N],[3,"EdgeFilteredEdges","","A filtered edges iterator.",N,N],[3,"Reversed","","An edge-reversing graph adaptor.",N,N],[12,"0","","",3,N],[3,"ReversedEdgeReference","","A reversed edge reference",N,N],[3,"ReversedEdgeReferences","","A reversed edge references iterator.",N,N],[3,"Time","","Strictly monotonically increasing event time for a depth…",N,N],[12,"0","","",4,N],[3,"Dfs","","Visit nodes of a graph in a depth-first-search (DFS)…",N,N],[12,"stack","","The stack of nodes to visit",5,N],[12,"discovered","","The map of discovered nodes",5,N],[3,"DfsPostOrder","","Visit nodes in a depth-first-search (DFS) emitting nodes…",N,N],[12,"stack","","The stack of nodes to visit",6,N],[12,"discovered","","The map of discovered nodes",6,N],[12,"finished","","The map of finished nodes",6,N],[3,"Bfs","","A breadth first search (BFS) of a graph.",N,N],[12,"stack","","The queue of nodes to visit",7,N],[12,"discovered","","The map of discovered nodes",7,N],[3,"Topo","","A topological order traversal for a graph.",N,N],[3,"WalkerIter","","A walker and its context wrapped into an iterator.",N,N],[4,"DfsEvent","","A depth first search (DFS) visitor event.",N,N],[13,"Discover","","",8,N],[13,"TreeEdge","","An edge of the tree formed by the traversal.",8,N],[13,"BackEdge","","An edge to an already visited node.",8,N],[13,"CrossForwardEdge","","A cross or forward edge.",8,N],[13,"Finish","","",8,N],[4,"Control","","Control flow for callbacks.",N,N],[13,"Continue","","",9,N],[13,"Break","","",9,N],[5,"depth_first_search","","A recursive depth first search.",N,[[["g"],["i"],["f"]],["c"]]],[11,"breaking","","",9,[[],["control"]]],[11,"break_value","","Get the value in `Control::Break(_)`, if present.",9,[[["self"]],["option"]]],[11,"new","","Create a new Dfs, using the graph's visitor map, and put…",5,[[["g"],["n"]],["self"]]],[11,"from_parts","","Create a `Dfs` from a vector and a visit map",5,[[["vec"],["vm"]],["self"]]],[11,"reset","","Clear the visit state",5,[[["self"],["g"]]]],[11,"empty","","Create a new Dfs using the graph's visitor map, and no…",5,[[["g"]],["self"]]],[11,"move_to","","Keep the discovered map, but clear the visit stack and…",5,[[["self"],["n"]]]],[11,"next","","Return the next node in the dfs, or None if the traversal…",5,[[["self"],["g"]],["option"]]],[11,"new","","Create a new `DfsPostOrder` using the graph's visitor map,…",6,[[["g"],["n"]],["self"]]],[11,"empty","","Create a new `DfsPostOrder` using the graph's visitor map,…",6,[[["g"]],["self"]]],[11,"reset","","Clear the visit state",6,[[["self"],["g"]]]],[11,"move_to","","Keep the discovered and finished map, but clear the visit…",6,[[["self"],["n"]]]],[11,"next","","Return the next node in the traversal, or `None` if the…",6,[[["self"],["g"]],["option"]]],[11,"new","","Create a new Bfs, using the graph's visitor map, and put…",7,[[["g"],["n"]],["self"]]],[11,"next","","Return the next node in the bfs, or None if the traversal…",7,[[["self"],["g"]],["option"]]],[11,"new","","Create a new `Topo`, using the graph's visitor map, and…",10,[[["g"]],["self"]]],[11,"reset","","Clear visited state, and put all initial nodes in the to…",10,[[["self"],["g"]]]],[11,"next","","Return the next node in the current topological order…",10,[[["self"],["g"]],["option"]]],[11,"context","","",11,[[["self"]],["c"]]],[11,"inner_ref","","",11,[[["self"]],["w"]]],[11,"inner_mut","","",11,[[["self"]],["w"]]],[11,"from_fn","","Create an `NodeFiltered` adaptor from the closure `filter`.",1,[[["g"],["f"]],["self"]]],[11,"from_fn","","Create an `EdgeFiltered` adaptor from the closure `filter`.",2,[[["g"],["f"]],["self"]]],[8,"FilterNode","","A graph filter for nodes.",N,N],[10,"include_node","","Return true to have the node be part of the graph",12,[[["self"],["n"]],["bool"]]],[8,"FilterEdge","","A graph filter for edges",N,N],[10,"include_edge","","Return true to have the edge be part of the graph",13,[[["self"],["edge"]],["bool"]]],[8,"ControlFlow","","Control flow for callbacks.",N,N],[10,"continuing","","",14,[[],["self"]]],[10,"should_break","","",14,[[["self"]],["bool"]]],[8,"Walker","","A walker is a traversal state, but where part of the…",N,N],[16,"Item","","",15,N],[10,"walk_next","","Advance to the next item",15,[[["self"],["context"]],["option"]]],[11,"iter","","Create an iterator out of the walker and given `context`.",15,[[["self"],["context"]],["walkeriter"]]],[8,"GraphBase","","Base graph trait: defines the associated node identifier…",N,N],[16,"EdgeId","","edge identifier",16,N],[16,"NodeId","","node identifier",16,N],[8,"GraphRef","","A copyable reference to a graph.",N,N],[8,"IntoNeighbors","","Access to the neighbors of each node",N,N],[16,"Neighbors","","",17,N],[10,"neighbors","","Return an iterator of the neighbors of node `a`.",17,N],[8,"IntoNeighborsDirected","","Access to the neighbors of each node, through incoming or…",N,N],[16,"NeighborsDirected","","",18,N],[10,"neighbors_directed","","",18,N],[8,"IntoEdges","","Access to the edges of each node.",N,N],[16,"Edges","","",19,N],[10,"edges","","",19,N],[8,"IntoEdgesDirected","","Access to all edges of each node, in the specified…",N,N],[16,"EdgesDirected","","",20,N],[10,"edges_directed","","",20,N],[8,"IntoNodeIdentifiers","","Access to the sequence of the graph’s `NodeId`s.",N,N],[16,"NodeIdentifiers","","",21,N],[10,"node_identifiers","","",21,N],[8,"Data","","Define associated data for nodes and edges",N,N],[16,"NodeWeight","","",22,N],[16,"EdgeWeight","","",22,N],[8,"EdgeRef","","An edge reference.",N,N],[16,"NodeId","","",23,N],[16,"EdgeId","","",23,N],[16,"Weight","","",23,N],[10,"source","","The source node of the edge.",23,N],[10,"target","","The target node of the edge.",23,N],[10,"weight","","A reference to the weight of the edge.",23,N],[10,"id","","The edge’s identifier.",23,N],[8,"NodeRef","","A node reference.",N,N],[16,"NodeId","","",24,N],[16,"Weight","","",24,N],[10,"id","","",24,N],[10,"weight","","",24,N],[8,"IntoNodeReferences","","Access to the sequence of the graph’s nodes",N,N],[16,"NodeRef","","",25,N],[16,"NodeReferences","","",25,N],[10,"node_references","","",25,N],[8,"IntoEdgeReferences","","Access to the sequence of the graph’s edges",N,N],[16,"EdgeRef","","",26,N],[16,"EdgeReferences","","",26,N],[10,"edge_references","","",26,N],[8,"GraphProp","","Edge kind property (directed or undirected edges)",N,N],[16,"EdgeType","","The kind edges in the graph.",27,N],[11,"is_directed","","",27,[[["self"]],["bool"]]],[8,"NodeIndexable","","The graph’s `NodeId`s map to indices",N,N],[10,"node_bound","","Return an upper bound of the node indices in the graph…",28,[[["self"]],["usize"]]],[10,"to_index","","Convert `a` to an integer index.",28,N],[10,"from_index","","Convert `i` to a node index",28,N],[8,"NodeCount","","A graph with a known node count.",N,N],[10,"node_count","","",29,[[["self"]],["usize"]]],[8,"NodeCompactIndexable","","The graph’s `NodeId`s map to indices, in a range without…",N,N],[8,"VisitMap","","A mapping for storing the visited status for NodeId `N`.",N,N],[10,"visit","","Mark `a` as visited.",30,[[["self"],["n"]],["bool"]]],[10,"is_visited","","Return whether `a` has been visited before.",30,[[["self"],["n"]],["bool"]]],[8,"Visitable","","A graph that can create a map that tracks the visited…",N,N],[16,"Map","","The associated map type",31,N],[10,"visit_map","","Create a new visitor map",31,N],[10,"reset_map","","Reset the visitor map (and resize to new size of graph if…",31,N],[8,"GetAdjacencyMatrix","","Create or access the adjacency matrix of a graph.",N,N],[16,"AdjMatrix","","The associated adjacency matrix type",32,N],[10,"adjacency_matrix","","Create the adjacency matrix",32,N],[10,"is_adjacent","","Return true if there is an edge from `a` to `b`, false…",32,N],[0,"data","petgraph","Graph traits for associated data and graph construction.",N,N],[3,"FilterElements","petgraph::data","An iterator that filters graph elements.",N,N],[4,"Element","","A graph element.",N,N],[13,"Node","","A graph node.",33,N],[12,"weight","petgraph::data::Element","",33,N],[13,"Edge","petgraph::data","A graph edge.",33,N],[12,"source","petgraph::data::Element","",33,N],[12,"target","","",33,N],[12,"weight","","",33,N],[8,"DataMap","petgraph::data","Access node and edge weights (associated data).",N,N],[10,"node_weight","","",34,N],[10,"edge_weight","","",34,N],[8,"DataMapMut","","Access node and edge weights mutably.",N,N],[10,"node_weight_mut","","",35,N],[10,"edge_weight_mut","","",35,N],[8,"Build","","A graph that can be extended with further nodes and edges",N,N],[10,"add_node","","",36,N],[11,"add_edge","","Add a new edge. If parallel edges (duplicate) are not…",36,N],[10,"update_edge","","Add or update the edge from `a` to `b`. Return the id of…",36,N],[8,"Create","","A graph that can be created",N,N],[10,"with_capacity","","",37,[[["usize"],["usize"]],["self"]]],[8,"FromElements","","Create a graph from an iterator of elements.",N,N],[11,"from_elements","","",38,[[["i"]],["self"]]],[8,"ElementIterator","","Iterator adaptors for iterators of `Element`.",N,N],[11,"filter_elements","","Create an iterator adaptor that filters graph elements.",39,[[["self"],["f"]],["filterelements"]]],[0,"algo","petgraph","Graph algorithms.",N,N],[3,"DfsSpace","petgraph::algo","Workspace for a graph traversal.",N,N],[3,"MinSpanningTree","","An iterator producing a minimum spanning forest of a graph.",N,N],[3,"Cycle","","An algorithm error: a cycle was found in the graph.",N,N],[3,"NegativeCycle","","An algorithm error: a cycle of negative weights was found…",N,N],[5,"is_isomorphic","","[Graph] Return `true` if the graphs `g0` and `g1` are…",N,[[["graph"],["graph"]],["bool"]]],[5,"is_isomorphic_matching","","[Graph] Return `true` if the graphs `g0` and `g1` are…",N,[[["graph"],["graph"],["f"],["g"]],["bool"]]],[5,"dijkstra","","[Generic] Dijkstra's shortest path algorithm.",N,N],[5,"astar","","[Generic] A* shortest path algorithm.",N,N],[5,"connected_components","","[Generic] Return the number of connected components of the…",N,[[["g"]],["usize"]]],[5,"is_cyclic_undirected","","[Generic] Return `true` if the input graph contains a cycle.",N,[[["g"]],["bool"]]],[5,"toposort","","[Generic] Perform a topological sort of a directed graph.",N,[[["g"],["option",["dfsspace"]]],["result",["vec","cycle"]]]],[5,"is_cyclic_directed","","[Generic] Return `true` if the input directed graph…",N,[[["g"]],["bool"]]],[5,"has_path_connecting","","[Generic] Check if there exists a path starting at `from`…",N,N],[5,"scc","","Renamed to `kosaraju_scc`.",N,[[["g"]],["vec",["vec"]]]],[5,"kosaraju_scc","","[Generic] Compute the strongly connected components using…",N,[[["g"]],["vec",["vec"]]]],[5,"tarjan_scc","","[Generic] Compute the strongly connected components using…",N,[[["g"]],["vec",["vec"]]]],[5,"condensation","","[Graph] Condense every strongly connected component into a…",N,[[["graph"],["bool"]],["graph",["vec"]]]],[5,"min_spanning_tree","","[Generic] Compute a minimum spanning tree of a graph.",N,[[["g"]],["minspanningtree"]]],[5,"bellman_ford","","[Generic] Compute shortest paths from node `source` to all…",N,N],[0,"dominators","","Compute dominators of a control-flow graph.",N,N],[3,"Dominators","petgraph::algo::dominators","The dominance relation for some graph and root.",N,N],[3,"DominatorsIter","","Iterator for a node's dominators.",N,N],[5,"simple_fast","","This is an implementation of the engineered [\"Simple, Fast…",N,N],[11,"root","","Get the root node used to construct these dominance…",40,[[["self"]],["n"]]],[11,"immediate_dominator","","Get the immediate dominator of the given node.",40,[[["self"],["n"]],["option"]]],[11,"strict_dominators","","Iterate over the given node's that strict dominators.",40,[[["self"],["n"]],["option",["dominatorsiter"]]]],[11,"dominators","","Iterate over all of the given node's dominators (including…",40,[[["self"],["n"]],["option",["dominatorsiter"]]]],[8,"Measure","petgraph::algo","Associated data that can be used for measures (such as…",N,N],[8,"FloatMeasure","","A floating-point measure.",N,N],[10,"zero","","",41,[[],["self"]]],[10,"infinite","","",41,[[],["self"]]],[11,"new","","",42,[[["g"]],["self"]]],[11,"node_id","","Return a node id that participates in the cycle",43,[[["self"]],["n"]]],[0,"graphmap","petgraph","`GraphMap<N, E, Ty>` is a graph datastructure where node…",N,N],[3,"GraphMap","petgraph::graphmap","`GraphMap<N, E, Ty>` is a graph datastructure using an…",N,N],[3,"Nodes","","",N,N],[3,"Neighbors","","",N,N],[3,"NeighborsDirected","","",N,N],[3,"Edges","","",N,N],[3,"AllEdges","","",N,N],[3,"AllEdgesMut","","",N,N],[3,"Ptr","","A reference that is hashed and compared by its pointer…",N,N],[12,"0","","",44,N],[3,"NodeIdentifiers","","",N,N],[3,"NodeReferences","","",N,N],[6,"UnGraphMap","","A `GraphMap` with undirected edges.",N,N],[6,"DiGraphMap","","A `GraphMap` with directed edges.",N,N],[8,"NodeTrait","","A trait group for `GraphMap`'s node identifier.",N,N],[11,"new","","Create a new `GraphMap`",45,[[],["self"]]],[11,"with_capacity","","Create a new `GraphMap` with estimated capacity.",45,[[["usize"],["usize"]],["self"]]],[11,"capacity","","Return the current node and edge capacity of the graph.",45,N],[11,"is_directed","","Whether the graph has directed edges.",45,[[["self"]],["bool"]]],[11,"from_edges","","Create a new `GraphMap` from an iterable of edges.",45,[[["i"]],["self"]]],[11,"node_count","","Return the number of nodes in the graph.",45,[[["self"]],["usize"]]],[11,"edge_count","","Return the number of edges in the graph.",45,[[["self"]],["usize"]]],[11,"clear","","Remove all nodes and edges",45,[[["self"]]]],[11,"add_node","","Add node `n` to the graph.",45,[[["self"],["n"]],["n"]]],[11,"remove_node","","Return `true` if node `n` was removed.",45,[[["self"],["n"]],["bool"]]],[11,"contains_node","","Return `true` if the node is contained in the graph.",45,[[["self"],["n"]],["bool"]]],[11,"add_edge","","Add an edge connecting `a` and `b` to the graph, with…",45,[[["self"],["n"],["n"],["e"]],["option"]]],[11,"remove_edge","","Remove edge from `a` to `b` from the graph and return the…",45,[[["self"],["n"],["n"]],["option"]]],[11,"contains_edge","","Return `true` if the edge connecting `a` with `b` is…",45,[[["self"],["n"],["n"]],["bool"]]],[11,"nodes","","Return an iterator over the nodes of the graph.",45,[[["self"]],["nodes"]]],[11,"neighbors","","Return an iterator of all nodes with an edge starting from…",45,[[["self"],["n"]],["neighbors"]]],[11,"neighbors_directed","","Return an iterator of all neighbors that have an edge…",45,[[["self"],["n"],["direction"]],["neighborsdirected"]]],[11,"edges","","Return an iterator of target nodes with an edge starting…",45,[[["self"],["n"]],["edges"]]],[11,"edge_weight","","Return a reference to the edge weight connecting `a` with…",45,[[["self"],["n"],["n"]],["option"]]],[11,"edge_weight_mut","","Return a mutable reference to the edge weight connecting…",45,[[["self"],["n"],["n"]],["option"]]],[11,"all_edges","","Return an iterator over all edges of the graph with their…",45,[[["self"]],["alledges"]]],[11,"all_edges_mut","","Return an iterator over all edges of the graph in…",45,[[["self"]],["alledgesmut"]]],[11,"into_graph","","Return a `Graph` that corresponds to this `GraphMap`.",45,[[["self"]],["graph"]]],[0,"dot","petgraph","Simple graphviz dot file format output.",N,N],[3,"Dot","petgraph::dot","`Dot` implements output to graphviz .dot format for a graph.",N,N],[4,"Config","","`Dot` configuration.",N,N],[13,"NodeIndexLabel","","Use indices for node labels.",46,N],[13,"EdgeIndexLabel","","Use indices for edge labels.",46,N],[13,"EdgeNoLabel","","Use no edge labels.",46,N],[11,"new","","Create a `Dot` formatting wrapper with default…",47,[[["g"]],["self"]]],[11,"with_config","","Create a `Dot` formatting wrapper with custom configuration.",47,N],[0,"unionfind","petgraph","`UnionFind<K>` is a disjoint-set data structure.",N,N],[3,"UnionFind","petgraph::unionfind","`UnionFind<K>` is a disjoint-set data structure. It tracks…",N,N],[11,"new","","Create a new `UnionFind` of `n` disjoint sets.",48,[[["usize"]],["self"]]],[11,"find","","Return the representative for `x`.",48,[[["self"],["k"]],["k"]]],[11,"find_mut","","Return the representative for `x`.",48,[[["self"],["k"]],["k"]]],[11,"union","","Unify the two sets containing `x` and `y`.",48,[[["self"],["k"],["k"]],["bool"]]],[11,"into_labeling","","Return a vector mapping each element to its representative.",48,[[["self"]],["vec"]]],[0,"csr","petgraph","Compressed Sparse Row (CSR) is a sparse adjacency matrix…",N,N],[3,"Csr","petgraph::csr","Compressed Sparse Row ([`CSR`]) is a sparse adjacency…",N,N],[3,"EdgesNotSorted","","Csr creation error: edges were not in sorted order.",N,N],[3,"Edges","","",N,N],[3,"EdgeReference","","",N,N],[3,"EdgeReferences","","",N,N],[3,"Neighbors","","",N,N],[3,"NodeIdentifiers","","",N,N],[6,"NodeIndex","","Csr node index type, a plain integer.",N,N],[6,"EdgeIndex","","Csr edge index type, a plain integer.",N,N],[11,"new","","Create an empty `Csr`.",49,[[],["self"]]],[11,"with_nodes","","Create a new [`Csr`] with `n` nodes. `N` must implement…",49,[[["usize"]],["self"]]],[11,"from_sorted_edges","","Create a new `Csr` from a sorted sequence of edges",49,N],[11,"node_count","","",49,[[["self"]],["usize"]]],[11,"edge_count","","",49,[[["self"]],["usize"]]],[11,"is_directed","","",49,[[["self"]],["bool"]]],[11,"clear_edges","","Remove all edges",49,[[["self"]]]],[11,"add_node","","Adds a new node with the given weight, returning the…",49,[[["self"],["n"]],["nodeindex"]]],[11,"add_edge","","Return `true` if the edge was added",49,[[["self"],["nodeindex"],["nodeindex"],["e"]],["bool"]]],[11,"contains_edge","","Computes in O(log |V|) time.",49,[[["self"],["nodeindex"],["nodeindex"]],["bool"]]],[11,"out_degree","","Computes in O(1) time.",49,[[["self"],["nodeindex"]],["usize"]]],[11,"neighbors_slice","","Computes in O(1) time.",49,N],[11,"edges_slice","","Computes in O(1) time.",49,N],[11,"edges","","Return an iterator of all edges of `a`.",49,[[["self"],["nodeindex"]],["edges"]]],[11,"weight","","Access the edge’s weight.",50,[[["self"]],["e"]]],[0,"prelude","petgraph","Commonly used items.",N,N],[0,"graph","","`Graph<N, E, Ty, Ix>` is a graph datastructure using an…",N,N],[3,"Edge","petgraph::graph","The graph's edge type.",N,N],[12,"weight","","Associated edge data.",51,N],[3,"EdgeIndex","","Edge identifier.",N,N],[3,"EdgeIndices","","Iterator over the edge indices of a graph.",N,N],[3,"EdgeReference","","Reference to a `Graph` edge.",N,N],[3,"EdgeReferences","","Iterator over all edges of a graph.",N,N],[3,"EdgeWeightsMut","","Iterator yielding mutable access to all edge weights.",N,N],[3,"Edges","","Iterator over the edges of from or to a node",N,N],[3,"Externals","","An iterator over either the nodes without edges to them or…",N,N],[3,"Frozen","","`Frozen` is a graph wrapper.",N,N],[3,"Graph","","`Graph<N, E, Ty, Ix>` is a graph datastructure using an…",N,N],[3,"Neighbors","","Iterator over the neighbors of a node.",N,N],[3,"Node","","The graph's node type.",N,N],[12,"weight","","Associated node data.",52,N],[3,"NodeIndex","","Node identifier.",N,N],[3,"NodeIndices","","Iterator over the node indices of a graph.",N,N],[3,"NodeWeightsMut","","Iterator yielding mutable access to all node weights.",N,N],[3,"NodeReferences","","Iterator over all nodes of a graph.",N,N],[3,"WalkNeighbors","","A “walker” object that can be used to step through the…",N,N],[5,"edge_index","","Short version of `EdgeIndex::new`",N,[[["usize"]],["edgeindex"]]],[5,"node_index","","Short version of `NodeIndex::new`",N,[[["usize"]],["nodeindex"]]],[6,"DefaultIx","","The default integer type for graph indices. `u32` is the…",N,N],[6,"DiGraph","","A `Graph` with directed edges.",N,N],[6,"UnGraph","","A `Graph` with undirected edges.",N,N],[8,"GraphIndex","","A  `GraphIndex` is a node or edge index.",N,N],[8,"IndexType","","Trait for the unsigned integer type used for node and edge…",N,N],[10,"new","","",53,[[["usize"]],["self"]]],[10,"index","","",53,[[["self"]],["usize"]]],[10,"max","","",53,[[],["self"]]],[0,"stable_graph","petgraph","`StableGraph` keeps indices stable across removals.",N,N],[3,"StableGraph","petgraph::stable_graph","`StableGraph<N, E, Ty, Ix>` is a graph datastructure using…",N,N],[3,"NodeReferences","","Iterator over all nodes of a graph.",N,N],[3,"EdgeReference","","Reference to a `StableGraph` edge.",N,N],[3,"Edges","","Iterator over the edges of from or to a node",N,N],[3,"EdgeReferences","","Iterator over all edges of a graph.",N,N],[3,"Neighbors","","Iterator over the neighbors of a node.",N,N],[3,"WalkNeighbors","","A “walker” object that can be used to step through the…",N,N],[3,"NodeIndices","","Iterator over the node indices of a graph.",N,N],[3,"EdgeIndices","","Iterator over the edge indices of a graph.",N,N],[6,"StableDiGraph","","A `StableGraph` with directed edges.",N,N],[6,"StableUnGraph","","A `StableGraph` with undirected edges.",N,N],[8,"EdgeType","petgraph","A graph's edge type determines whether is has directed…",N,N],[10,"is_directed","","",54,[[],["bool"]]],[8,"IntoWeightedEdge","","Convert an element like `(i, j)` or `(i, j, w)` into a…",N,N],[16,"NodeId","","",55,N],[10,"into_weighted_edge","","",55,N],[11,"opposite","","Return the opposite `Direction`.",0,[[["self"]],["direction"]]],[11,"index","","Return `0` for `Outgoing` and `1` for `Incoming`.",0,[[["self"]],["usize"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"equivalent","","",0,[[["self"],["k"]],["bool"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","petgraph::visit","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into_iter","","",59,[[["self"]],["i"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into_iter","","",60,[[["self"]],["i"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into_iter","","",61,[[["self"]],["i"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into_iter","","",62,[[["self"]],["i"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into_iter","","",63,[[["self"]],["i"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into_iter","","",65,[[["self"]],["i"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"equivalent","","",4,[[["self"],["k"]],["bool"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","petgraph::data","",66,[[["self"]],["u"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into_iter","","",66,[[["self"]],["i"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"equivalent","","",33,[[["self"],["k"]],["bool"]]],[11,"into","petgraph::algo","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into_iter","","",67,[[["self"]],["i"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into","petgraph::algo::dominators","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into_iter","","",69,[[["self"]],["i"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into","petgraph::graphmap","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into_iter","","",70,[[["self"]],["i"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into_iter","","",71,[[["self"]],["i"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into_iter","","",72,[[["self"]],["i"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into_iter","","",73,[[["self"]],["i"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into_iter","","",74,[[["self"]],["i"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into_iter","","",75,[[["self"]],["i"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"equivalent","","",44,[[["self"],["k"]],["bool"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into_iter","","",76,[[["self"]],["i"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into_iter","","",77,[[["self"]],["i"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into","petgraph::graph","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"equivalent","","",78,[[["self"],["k"]],["bool"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"equivalent","","",79,[[["self"],["k"]],["bool"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into_iter","","",81,[[["self"]],["i"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"into_iter","","",82,[[["self"]],["i"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"into_iter","","",83,[[["self"]],["i"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into_iter","","",84,[[["self"]],["i"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into_iter","","",85,[[["self"]],["i"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"into_iter","","",87,[[["self"]],["i"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"into_iter","","",88,[[["self"]],["i"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into_iter","","",90,[[["self"]],["i"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into_iter","","",91,[[["self"]],["i"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into","petgraph::stable_graph","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into_iter","","",94,[[["self"]],["i"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into_iter","","",96,[[["self"]],["i"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into_iter","","",97,[[["self"]],["i"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into_iter","","",98,[[["self"]],["i"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into_iter","","",100,[[["self"]],["i"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into_iter","","",101,[[["self"]],["i"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"into","petgraph::dot","",47,[[["self"]],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"equivalent","","",46,[[["self"],["k"]],["bool"]]],[11,"into","petgraph::unionfind","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","petgraph::csr","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"into_iter","","",103,[[["self"]],["i"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into_iter","","",104,[[["self"]],["i"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"from","","",105,[[["t"]],["t"]]],[11,"into_iter","","",105,[[["self"]],["i"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into_iter","","",106,[[["self"]],["i"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"continuing","petgraph::visit","",9,[[],["self"]]],[11,"should_break","","",9,[[["self"]],["bool"]]],[11,"walk_next","","",5,[[["self"],["g"]],["option"]]],[11,"walk_next","","",6,[[["self"],["g"]],["option"]]],[11,"walk_next","","",7,[[["self"],["g"]],["option"]]],[11,"walk_next","","",10,[[["self"],["g"]],["option"]]],[11,"source","","",64,N],[11,"target","","",64,N],[11,"weight","","",64,N],[11,"id","","",64,N],[11,"source","petgraph::graph","",89,N],[11,"target","","",89,N],[11,"weight","","",89,[[["self"]],["e"]]],[11,"id","","",89,N],[11,"source","petgraph::stable_graph","",95,N],[11,"target","","",95,N],[11,"weight","","",95,[[["self"]],["e"]]],[11,"id","","",95,N],[11,"source","petgraph::csr","",50,N],[11,"target","","",50,N],[11,"weight","","",50,[[["self"]],["e"]]],[11,"id","","",50,N],[11,"add_node","petgraph::graph","",80,N],[11,"add_edge","","",80,N],[11,"update_edge","","",80,N],[11,"add_node","petgraph::stable_graph","",93,N],[11,"add_edge","","",93,N],[11,"update_edge","","",93,N],[11,"add_node","petgraph::graphmap","",45,N],[11,"add_edge","","",45,N],[11,"update_edge","","",45,N],[11,"with_capacity","petgraph::graph","",80,[[["usize"],["usize"]],["self"]]],[11,"with_capacity","petgraph::stable_graph","",93,[[["usize"],["usize"]],["self"]]],[11,"with_capacity","petgraph::graphmap","",45,[[["usize"],["usize"]],["self"]]],[11,"from_elements","petgraph::graph","",80,[[["i"]],["self"]]],[11,"from_elements","petgraph::stable_graph","",93,[[["i"]],["self"]]],[11,"from_elements","petgraph::graphmap","",45,[[["i"]],["self"]]],[11,"index","petgraph::graph","",78,[[["self"]],["usize"]]],[11,"is_node_index","","",78,[[],["bool"]]],[11,"index","","",79,[[["self"]],["usize"]]],[11,"is_node_index","","",79,[[],["bool"]]],[11,"is_directed","petgraph","",56,[[],["bool"]]],[11,"is_directed","","",57,[[],["bool"]]],[11,"neighbors","petgraph::visit","",3,N],[11,"neighbors_directed","","",3,N],[11,"node_identifiers","","",3,N],[11,"node_references","","",3,N],[11,"edge_references","","",3,N],[11,"node_bound","petgraph::graph","",80,[[["self"]],["usize"]]],[11,"to_index","","",80,[[["self"],["nodeindex"]],["usize"]]],[11,"from_index","","",80,N],[11,"node_bound","petgraph::visit","",1,[[["self"]],["usize"]]],[11,"to_index","","",1,N],[11,"from_index","","",1,N],[11,"node_bound","","",2,[[["self"]],["usize"]]],[11,"to_index","","",2,N],[11,"from_index","","",2,N],[11,"node_bound","","",3,[[["self"]],["usize"]]],[11,"to_index","","",3,N],[11,"from_index","","",3,N],[11,"node_bound","petgraph::graphmap","",45,[[["self"]],["usize"]]],[11,"to_index","","",45,N],[11,"from_index","","",45,N],[11,"node_bound","petgraph::stable_graph","Return an upper bound of the node indices in the graph",93,[[["self"]],["usize"]]],[11,"to_index","","",93,[[["self"],["nodeindex"]],["usize"]]],[11,"from_index","","",93,N],[11,"node_bound","petgraph::graph","",92,[[["self"]],["usize"]]],[11,"to_index","","",92,N],[11,"from_index","","",92,N],[11,"node_bound","petgraph::csr","",49,[[["self"]],["usize"]]],[11,"to_index","","",49,N],[11,"from_index","","",49,N],[11,"node_count","petgraph::graph","",80,[[["self"]],["usize"]]],[11,"node_count","petgraph::stable_graph","",93,[[["self"]],["usize"]]],[11,"node_count","petgraph::visit","",2,[[["self"]],["usize"]]],[11,"node_count","","",3,[[["self"]],["usize"]]],[11,"node_count","petgraph::graphmap","",45,[[["self"]],["usize"]]],[11,"node_count","petgraph::graph","",92,[[["self"]],["usize"]]],[11,"node_count","petgraph::csr","",49,[[["self"]],["usize"]]],[11,"visit_map","petgraph::graph","",80,[[["self"]],["fixedbitset"]]],[11,"reset_map","","",80,N],[11,"visit_map","petgraph::stable_graph","",93,[[["self"]],["fixedbitset"]]],[11,"reset_map","","",93,N],[11,"visit_map","petgraph::graphmap","",45,[[["self"]],["hashset"]]],[11,"reset_map","","",45,N],[11,"visit_map","petgraph::visit","",1,N],[11,"reset_map","","",1,N],[11,"visit_map","","",2,N],[11,"reset_map","","",2,N],[11,"visit_map","","",3,N],[11,"reset_map","","",3,N],[11,"visit_map","petgraph::graph","",92,N],[11,"reset_map","","",92,N],[11,"visit_map","petgraph::csr","",49,[[["self"]],["fixedbitset"]]],[11,"reset_map","","",49,N],[11,"adjacency_matrix","petgraph::graphmap","",45,[[["self"]]]],[11,"is_adjacent","","",45,N],[11,"adjacency_matrix","petgraph::graph","",92,N],[11,"is_adjacent","","",92,N],[11,"adjacency_matrix","","",80,[[["self"]],["fixedbitset"]]],[11,"is_adjacent","","",80,[[["self"],["fixedbitset"],["nodeindex"],["nodeindex"]],["bool"]]],[11,"adjacency_matrix","petgraph::stable_graph","",93,[[["self"]],["fixedbitset"]]],[11,"is_adjacent","","",93,[[["self"],["fixedbitset"],["nodeindex"],["nodeindex"]],["bool"]]],[11,"node_weight","petgraph::visit","",1,N],[11,"edge_weight","","",1,N],[11,"node_weight","","",3,N],[11,"edge_weight","","",3,N],[11,"node_weight","petgraph::graph","",80,N],[11,"edge_weight","","",80,N],[11,"node_weight","petgraph::stable_graph","",93,N],[11,"edge_weight","","",93,N],[11,"node_weight","petgraph::graph","",92,N],[11,"edge_weight","","",92,N],[11,"node_weight_mut","petgraph::visit","",3,N],[11,"edge_weight_mut","","",3,N],[11,"node_weight_mut","petgraph::graph","",80,N],[11,"edge_weight_mut","","",80,N],[11,"node_weight_mut","petgraph::stable_graph","",93,N],[11,"edge_weight_mut","","",93,N],[11,"node_weight_mut","petgraph::graph","",92,N],[11,"edge_weight_mut","","",92,N],[11,"extend","petgraph::graphmap","",45,[[["self"],["i"]]]],[11,"next","petgraph::visit","",11,[[["self"]],["option"]]],[11,"next","","",58,[[["self"]],["option"]]],[11,"next","","",59,[[["self"]],["option"]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"next","","",61,[[["self"]],["option"]]],[11,"next","","",62,[[["self"]],["option"]]],[11,"next","","",63,[[["self"]],["option"]]],[11,"next","","",65,[[["self"]],["option"]]],[11,"next","petgraph::data","",66,[[["self"]],["option"]]],[11,"next","petgraph::algo::dominators","",69,[[["self"]],["option"]]],[11,"next","petgraph::algo","",67,[[["self"]],["option"]]],[11,"next","petgraph::graphmap","",70,[[["self"]],["option"]]],[11,"size_hint","","",70,N],[11,"next","","",71,[[["self"]],["option"]]],[11,"next","","",72,[[["self"]],["option"]]],[11,"next","","",73,[[["self"]],["option"]]],[11,"next","","",74,[[["self"]],["option"]]],[11,"size_hint","","",74,N],[11,"count","","",74,[[["self"]],["usize"]]],[11,"nth","","",74,[[["self"],["usize"]],["option"]]],[11,"last","","",74,[[["self"]],["option"]]],[11,"next","","",75,[[["self"]],["option"]]],[11,"size_hint","","",75,N],[11,"count","","",75,[[["self"]],["usize"]]],[11,"nth","","",75,[[["self"],["usize"]],["option"]]],[11,"last","","",75,[[["self"]],["option"]]],[11,"next","","",76,[[["self"]],["option"]]],[11,"next","","",77,[[["self"]],["option"]]],[11,"next","petgraph::graph","",81,[[["self"]],["option",["nodeindex"]]]],[11,"next","","",82,[[["self"]],["option",["nodeindex"]]]],[11,"next","","",83,[[["self"]],["option"]]],[11,"next","","",84,[[["self"]],["option"]]],[11,"size_hint","","",84,N],[11,"next","","",85,[[["self"]],["option"]]],[11,"size_hint","","",85,N],[11,"next","","",87,[[["self"]],["option"]]],[11,"size_hint","","",87,N],[11,"next","","",88,[[["self"]],["option"]]],[11,"size_hint","","",88,N],[11,"next","","",90,[[["self"]],["option"]]],[11,"size_hint","","",90,N],[11,"next","","",91,[[["self"]],["option"]]],[11,"size_hint","","",91,N],[11,"next","petgraph::stable_graph","",94,[[["self"]],["option"]]],[11,"size_hint","","",94,N],[11,"next","","",96,[[["self"]],["option"]]],[11,"next","","",97,[[["self"]],["option"]]],[11,"next","","",98,[[["self"]],["option",["nodeindex"]]]],[11,"next","","",100,[[["self"]],["option"]]],[11,"size_hint","","",100,N],[11,"next","","",101,[[["self"]],["option"]]],[11,"size_hint","","",101,N],[11,"next","petgraph::csr","",103,[[["self"]],["option"]]],[11,"next","","",104,[[["self"]],["option"]]],[11,"next","","",105,[[["self"]],["option"]]],[11,"size_hint","","",105,N],[11,"next","","",106,[[["self"]],["option"]]],[11,"size_hint","","",106,N],[11,"partial_cmp","petgraph::visit","",4,[[["self"],["time"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["time"]],["bool"]]],[11,"le","","",4,[[["self"],["time"]],["bool"]]],[11,"gt","","",4,[[["self"],["time"]],["bool"]]],[11,"ge","","",4,[[["self"],["time"]],["bool"]]],[11,"partial_cmp","petgraph::graphmap","",44,[[["self"],["ptr"]],["option",["ordering"]]]],[11,"partial_cmp","petgraph::graph","",78,[[["self"],["nodeindex"]],["option",["ordering"]]]],[11,"lt","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"le","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"gt","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"ge","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"partial_cmp","","",79,[[["self"],["edgeindex"]],["option",["ordering"]]]],[11,"lt","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"le","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"gt","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"ge","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"partial_cmp","petgraph","",0,[[["self"],["direction"]],["option",["ordering"]]]],[11,"default","petgraph::visit","",4,[[],["time"]]],[11,"default","","",9,[[],["self"]]],[11,"default","petgraph::algo","",42,[[],["self"]]],[11,"default","petgraph::graphmap","",45,[[],["self"]]],[11,"default","petgraph::graph","",78,[[],["nodeindex"]]],[11,"default","","",79,[[],["edgeindex"]]],[11,"default","","",80,[[],["self"]]],[11,"default","petgraph::stable_graph","",93,[[],["self"]]],[11,"default","petgraph::csr","",49,[[],["self"]]],[11,"next_back","petgraph::graphmap","",74,[[["self"]],["option"]]],[11,"next_back","","",75,[[["self"]],["option"]]],[11,"next_back","petgraph::graph","",87,[[["self"]],["option"]]],[11,"next_back","","",88,[[["self"]],["option"]]],[11,"next_back","","",90,[[["self"]],["option"]]],[11,"next_back","","",91,[[["self"]],["option"]]],[11,"next_back","petgraph::stable_graph","",94,[[["self"]],["option"]]],[11,"next_back","","",97,[[["self"]],["option"]]],[11,"next_back","","",100,[[["self"]],["option"]]],[11,"next_back","","",101,[[["self"]],["option"]]],[11,"eq","petgraph::visit","",4,[[["self"],["time"]],["bool"]]],[11,"ne","","",4,[[["self"],["time"]],["bool"]]],[11,"eq","petgraph::data","",33,[[["self"],["element"]],["bool"]]],[11,"ne","","",33,[[["self"],["element"]],["bool"]]],[11,"eq","petgraph::algo","",43,[[["self"],["cycle"]],["bool"]]],[11,"ne","","",43,[[["self"],["cycle"]],["bool"]]],[11,"eq","","",68,[[["self"],["negativecycle"]],["bool"]]],[11,"ne","","",68,[[["self"],["negativecycle"]],["bool"]]],[11,"eq","petgraph::graphmap","Ptr compares by pointer equality, i.e if they point to the…",44,[[["self"],["ptr"]],["bool"]]],[11,"eq","petgraph::graph","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"ne","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"eq","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"ne","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"eq","","",89,[[["self"],["self"]],["bool"]]],[11,"eq","petgraph::stable_graph","",95,[[["self"],["self"]],["bool"]]],[11,"eq","petgraph::dot","",46,[[["self"],["config"]],["bool"]]],[11,"ne","","",46,[[["self"],["config"]],["bool"]]],[11,"eq","petgraph","",0,[[["self"],["direction"]],["bool"]]],[11,"from","petgraph::graph","",78,[[["ix"]],["self"]]],[11,"from","petgraph::stable_graph","",93,[[["graph"]],["self"]]],[11,"from","petgraph::graph","",80,[[["stablegraph"]],["self"]]],[11,"cmp","petgraph::visit","",4,[[["self"],["time"]],["ordering"]]],[11,"cmp","petgraph::graphmap","Ptr is ordered by pointer value, i.e. an arbitrary but…",44,[[["self"],["ptr"]],["ordering"]]],[11,"cmp","petgraph::graph","",78,[[["self"],["nodeindex"]],["ordering"]]],[11,"cmp","","",79,[[["self"],["edgeindex"]],["ordering"]]],[11,"cmp","petgraph","",0,[[["self"],["direction"]],["ordering"]]],[11,"clone","petgraph::visit","",4,[[["self"]],["time"]]],[11,"clone","","",8,[[["self"]],["dfsevent"]]],[11,"clone","","",9,[[["self"]],["control"]]],[11,"clone","","",5,[[["self"]],["dfs"]]],[11,"clone","","",6,[[["self"]],["dfspostorder"]]],[11,"clone","","",7,[[["self"]],["bfs"]]],[11,"clone","","",10,[[["self"]],["topo"]]],[11,"clone","","",11,[[["self"]],["walkeriter"]]],[11,"clone","","",1,[[["self"]],["nodefiltered"]]],[11,"clone","","",2,[[["self"]],["edgefiltered"]]],[11,"clone","","",3,[[["self"]],["reversed"]]],[11,"clone","","",64,[[["self"]],["reversededgereference"]]],[11,"clone","petgraph::data","",33,[[["self"]],["element"]]],[11,"clone","petgraph::algo::dominators","",40,[[["self"]],["dominators"]]],[11,"clone","petgraph::algo","",42,[[["self"]],["dfsspace"]]],[11,"clone","","",43,[[["self"]],["cycle"]]],[11,"clone","","",68,[[["self"]],["negativecycle"]]],[11,"clone","petgraph::graphmap","",45,[[["self"]],["graphmap"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","petgraph::graph","",78,[[["self"]],["nodeindex"]]],[11,"clone","","",79,[[["self"]],["edgeindex"]]],[11,"clone","","",52,[[["self"]],["self"]]],[11,"clone","","",51,[[["self"]],["self"]]],[11,"clone","","",80,[[["self"]],["self"]]],[11,"clone_from","","",80,[[["self"],["self"]]]],[11,"clone","","",82,[[["self"]],["self"]]],[11,"clone","","",83,[[["self"]],["self"]]],[11,"clone","","",86,[[["self"]],["self"]]],[11,"clone","","",87,[[["self"]],["nodeindices"]]],[11,"clone","","",88,[[["self"]],["edgeindices"]]],[11,"clone","","",89,[[["self"]],["self"]]],[11,"clone","petgraph::stable_graph","",93,[[["self"]],["self"]]],[11,"clone_from","","",93,[[["self"],["self"]]]],[11,"clone","","",95,[[["self"]],["self"]]],[11,"clone","","",99,[[["self"]],["self"]]],[11,"clone","petgraph::unionfind","",48,[[["self"]],["unionfind"]]],[11,"clone","petgraph::csr","",49,[[["self"]],["self"]]],[11,"clone","","",102,[[["self"]],["edgesnotsorted"]]],[11,"clone","","",103,[[["self"]],["edges"]]],[11,"clone","","",50,[[["self"]],["self"]]],[11,"clone","","",105,[[["self"]],["neighbors"]]],[11,"clone","petgraph","",0,[[["self"]],["self"]]],[11,"clone","","",56,[[["self"]],["self"]]],[11,"clone","","",57,[[["self"]],["self"]]],[11,"deref","petgraph::graphmap","",44,[[["self"]],["t"]]],[11,"deref","petgraph::graph","",92,[[["self"]],["g"]]],[11,"fmt","petgraph::dot","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::visit","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::data","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::algo::dominators","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::algo","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::graphmap","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::graph","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::stable_graph","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::dot","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::unionfind","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::csr","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"index","petgraph::graphmap","",45,N],[11,"index","petgraph::graph","",80,[[["self"],["nodeindex"]],["n"]]],[11,"index","","",80,[[["self"],["edgeindex"]],["e"]]],[11,"index","petgraph::stable_graph","",93,[[["self"],["nodeindex"]],["n"]]],[11,"index","","",93,[[["self"],["edgeindex"]],["e"]]],[11,"index","petgraph::graph","",92,N],[11,"index","petgraph::csr","",49,[[["self"],["nodeindex"]],["n"]]],[11,"index_mut","petgraph::graphmap","",45,N],[11,"index_mut","petgraph::graph","",80,[[["self"],["nodeindex"]],["n"]]],[11,"index_mut","","",80,[[["self"],["edgeindex"]],["e"]]],[11,"index_mut","petgraph::stable_graph","",93,[[["self"],["nodeindex"]],["n"]]],[11,"index_mut","","",93,[[["self"],["edgeindex"]],["e"]]],[11,"index_mut","petgraph::graph","",92,N],[11,"index_mut","petgraph::csr","",49,[[["self"],["nodeindex"]],["n"]]],[11,"hash","petgraph::visit","",4,N],[11,"hash","petgraph::graphmap","",44,[[["self"],["h"]]]],[11,"hash","petgraph::graph","",78,N],[11,"hash","","",79,N],[11,"hash","petgraph","",0,N],[11,"from_iter","petgraph::graphmap","",45,[[["i"]],["self"]]],[11,"iter","petgraph::visit","Create an iterator out of the walker and given `context`.",15,[[["self"],["context"]],["walkeriter"]]],[11,"new","petgraph::stable_graph","Create a new `StableGraph` with directed edges.",93,[[],["self"]]],[11,"with_capacity","","Create a new `StableGraph` with estimated capacity.",93,[[["usize"],["usize"]],["self"]]],[11,"capacity","","Return the current node and edge capacity of the graph.",93,N],[11,"clear","","Remove all nodes and edges",93,[[["self"]]]],[11,"clear_edges","","Remove all edges",93,[[["self"]]]],[11,"node_count","","Return the number of nodes (vertices) in the graph.",93,[[["self"]],["usize"]]],[11,"edge_count","","Return the number of edges in the graph.",93,[[["self"]],["usize"]]],[11,"is_directed","","Whether the graph has directed edges or not.",93,[[["self"]],["bool"]]],[11,"add_node","","Add a node (also called vertex) with associated data…",93,[[["self"],["n"]],["nodeindex"]]],[11,"remove_node","","Remove `a` from the graph if it exists, and return its…",93,[[["self"],["nodeindex"]],["option"]]],[11,"contains_node","","",93,[[["self"],["nodeindex"]],["bool"]]],[11,"add_edge","","Add an edge from `a` to `b` to the graph, with its…",93,[[["self"],["nodeindex"],["nodeindex"],["e"]],["edgeindex"]]],[11,"update_edge","","Add or update an edge from `a` to `b`. If the edge already…",93,[[["self"],["nodeindex"],["nodeindex"],["e"]],["edgeindex"]]],[11,"remove_edge","","Remove an edge and return its edge weight, or `None` if it…",93,[[["self"],["edgeindex"]],["option"]]],[11,"node_weight","","Access the weight for node `a`.",93,[[["self"],["nodeindex"]],["option"]]],[11,"node_weight_mut","","Access the weight for node `a`, mutably.",93,[[["self"],["nodeindex"]],["option"]]],[11,"node_indices","","Return an iterator over the node indices of the graph",93,[[["self"]],["nodeindices"]]],[11,"edge_weight","","Access the weight for edge `e`.",93,[[["self"],["edgeindex"]],["option"]]],[11,"edge_weight_mut","","Access the weight for edge `e`, mutably",93,[[["self"],["edgeindex"]],["option"]]],[11,"edge_endpoints","","Access the source and target nodes for `e`.",93,[[["self"],["edgeindex"]],["option"]]],[11,"edge_indices","","Return an iterator over the node indices of the graph",93,[[["self"]],["edgeindices"]]],[11,"find_edge","","Lookup an edge from `a` to `b`.",93,[[["self"],["nodeindex"],["nodeindex"]],["option",["edgeindex"]]]],[11,"find_edge_undirected","","Lookup an edge between `a` and `b`, in either direction.",93,[[["self"],["nodeindex"],["nodeindex"]],["option"]]],[11,"neighbors","","Return an iterator of all nodes with an edge starting from…",93,[[["self"],["nodeindex"]],["neighbors"]]],[11,"neighbors_directed","","Return an iterator of all neighbors that have an edge…",93,[[["self"],["nodeindex"],["direction"]],["neighbors"]]],[11,"neighbors_undirected","","Return an iterator of all neighbors that have an edge…",93,[[["self"],["nodeindex"]],["neighbors"]]],[11,"edges","","Return an iterator of all edges of `a`.",93,[[["self"],["nodeindex"]],["edges"]]],[11,"edges_directed","","Return an iterator of all edges of `a`, in the specified…",93,[[["self"],["nodeindex"],["direction"]],["edges"]]],[11,"index_twice_mut","","Index the `StableGraph` by two indices, any combination of…",93,N],[11,"retain_nodes","","Keep all nodes that return `true` from the `visit`…",93,[[["self"],["f"]]]],[11,"retain_edges","","Keep all edges that return `true` from the `visit`…",93,[[["self"],["f"]]]],[11,"from_edges","","Create a new `StableGraph` from an iterable of edges.",93,[[["i"]],["self"]]],[11,"map","","Create a new `StableGraph` by mapping node and edge…",93,[[["self"],["f"],["g"]],["stablegraph"]]],[11,"filter_map","","Create a new `StableGraph` by mapping nodes and edges. A…",93,[[["self"],["f"],["g"]],["stablegraph"]]],[11,"extend_with_edges","","Extend the graph from an iterable of edges.",93,[[["self"],["i"]]]],[11,"weight","","Access the edge’s weight.",95,[[["self"]],["e"]]],[11,"detach","","Return a “walker” object that can be used to step through…",98,[[["self"]],["walkneighbors"]]],[11,"next","","Step to the next edge and its endpoint node in the walk…",99,[[["self"],["stablegraph"]],["option"]]],[11,"next_node","","",99,[[["self"],["stablegraph"]],["option",["nodeindex"]]]],[11,"next_edge","","",99,[[["self"],["stablegraph"]],["option",["edgeindex"]]]],[11,"new","petgraph::graph","Create a new `Frozen` from a mutable reference to a graph.",92,[[["g"]],["self"]]],[11,"index_twice_mut","","Index the `Graph` by two indices, any combination of node…",92,N],[11,"new","","",78,[[["usize"]],["self"]]],[11,"index","","",78,[[["self"]],["usize"]]],[11,"end","","",78,[[],["self"]]],[11,"new","","",79,[[["usize"]],["self"]]],[11,"index","","",79,[[["self"]],["usize"]]],[11,"end","","An invalid `EdgeIndex` used to denote absence of an edge,…",79,[[],["self"]]],[11,"next_edge","","Accessor for data structure internals: the first edge in…",52,[[["self"],["direction"]],["edgeindex"]]],[11,"next_edge","","Accessor for data structure internals: the next edge for…",51,[[["self"],["direction"]],["edgeindex"]]],[11,"source","","Return the source node index.",51,[[["self"]],["nodeindex"]]],[11,"target","","Return the target node index.",51,[[["self"]],["nodeindex"]]],[11,"new","","Create a new `Graph` with directed edges.",80,[[],["self"]]],[11,"new_undirected","","Create a new `Graph` with undirected edges.",80,[[],["self"]]],[11,"with_capacity","","Create a new `Graph` with estimated capacity.",80,[[["usize"],["usize"]],["self"]]],[11,"node_count","","Return the number of nodes (vertices) in the graph.",80,[[["self"]],["usize"]]],[11,"edge_count","","Return the number of edges in the graph.",80,[[["self"]],["usize"]]],[11,"is_directed","","Whether the graph has directed edges or not.",80,[[["self"]],["bool"]]],[11,"add_node","","Add a node (also called vertex) with associated data…",80,[[["self"],["n"]],["nodeindex"]]],[11,"node_weight","","Access the weight for node `a`.",80,[[["self"],["nodeindex"]],["option"]]],[11,"node_weight_mut","","Access the weight for node `a`, mutably.",80,[[["self"],["nodeindex"]],["option"]]],[11,"add_edge","","Add an edge from `a` to `b` to the graph, with its…",80,[[["self"],["nodeindex"],["nodeindex"],["e"]],["edgeindex"]]],[11,"update_edge","","Add or update an edge from `a` to `b`. If the edge already…",80,[[["self"],["nodeindex"],["nodeindex"],["e"]],["edgeindex"]]],[11,"edge_weight","","Access the weight for edge `e`.",80,[[["self"],["edgeindex"]],["option"]]],[11,"edge_weight_mut","","Access the weight for edge `e`, mutably.",80,[[["self"],["edgeindex"]],["option"]]],[11,"edge_endpoints","","Access the source and target nodes for `e`.",80,[[["self"],["edgeindex"]],["option"]]],[11,"remove_node","","Remove `a` from the graph if it exists, and return its…",80,[[["self"],["nodeindex"]],["option"]]],[11,"remove_edge","","Remove an edge and return its edge weight, or `None` if it…",80,[[["self"],["edgeindex"]],["option"]]],[11,"neighbors","","Return an iterator of all nodes with an edge starting from…",80,[[["self"],["nodeindex"]],["neighbors"]]],[11,"neighbors_directed","","Return an iterator of all neighbors that have an edge…",80,[[["self"],["nodeindex"],["direction"]],["neighbors"]]],[11,"neighbors_undirected","","Return an iterator of all neighbors that have an edge…",80,[[["self"],["nodeindex"]],["neighbors"]]],[11,"edges","","Return an iterator of all edges of `a`.",80,[[["self"],["nodeindex"]],["edges"]]],[11,"edges_directed","","Return an iterator of all edges of `a`, in the specified…",80,[[["self"],["nodeindex"],["direction"]],["edges"]]],[11,"contains_edge","","Lookup if there is an edge from `a` to `b`.",80,[[["self"],["nodeindex"],["nodeindex"]],["bool"]]],[11,"find_edge","","Lookup an edge from `a` to `b`.",80,[[["self"],["nodeindex"],["nodeindex"]],["option",["edgeindex"]]]],[11,"find_edge_undirected","","Lookup an edge between `a` and `b`, in either direction.",80,[[["self"],["nodeindex"],["nodeindex"]],["option"]]],[11,"externals","","Return an iterator over either the nodes without edges to…",80,[[["self"],["direction"]],["externals"]]],[11,"node_indices","","Return an iterator over the node indices of the graph",80,[[["self"]],["nodeindices"]]],[11,"node_weights_mut","","Return an iterator yielding mutable access to all node…",80,[[["self"]],["nodeweightsmut"]]],[11,"edge_indices","","Return an iterator over the edge indices of the graph",80,[[["self"]],["edgeindices"]]],[11,"edge_references","","Create an iterator over all edges, in indexed order.",80,[[["self"]],["edgereferences"]]],[11,"edge_weights_mut","","Return an iterator yielding mutable access to all edge…",80,[[["self"]],["edgeweightsmut"]]],[11,"raw_nodes","","Access the internal node array.",80,N],[11,"raw_edges","","Access the internal edge array.",80,N],[11,"into_nodes_edges","","Convert the graph into a vector of Nodes and a vector of…",80,N],[11,"first_edge","","Accessor for data structure internals: the first edge in…",80,[[["self"],["nodeindex"],["direction"]],["option",["edgeindex"]]]],[11,"next_edge","","Accessor for data structure internals: the next edge for…",80,[[["self"],["edgeindex"],["direction"]],["option",["edgeindex"]]]],[11,"index_twice_mut","","Index the `Graph` by two indices, any combination of node…",80,N],[11,"reverse","","Reverse the direction of all edges",80,[[["self"]]]],[11,"clear","","Remove all nodes and edges",80,[[["self"]]]],[11,"clear_edges","","Remove all edges",80,[[["self"]]]],[11,"capacity","","Return the current node and edge capacity of the graph.",80,N],[11,"reserve_nodes","","Reserves capacity for at least `additional` more nodes to…",80,[[["self"],["usize"]]]],[11,"reserve_edges","","Reserves capacity for at least `additional` more edges to…",80,[[["self"],["usize"]]]],[11,"reserve_exact_nodes","","Reserves the minimum capacity for exactly `additional`…",80,[[["self"],["usize"]]]],[11,"reserve_exact_edges","","Reserves the minimum capacity for exactly `additional`…",80,[[["self"],["usize"]]]],[11,"shrink_to_fit_nodes","","Shrinks the capacity of the underlying nodes collection as…",80,[[["self"]]]],[11,"shrink_to_fit_edges","","Shrinks the capacity of the underlying edges collection as…",80,[[["self"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the graph as much as possible.",80,[[["self"]]]],[11,"retain_nodes","","Keep all nodes that return `true` from the `visit`…",80,[[["self"],["f"]]]],[11,"retain_edges","","Keep all edges that return `true` from the `visit`…",80,[[["self"],["f"]]]],[11,"from_edges","","Create a new `Graph` from an iterable of edges.",80,[[["i"]],["self"]]],[11,"extend_with_edges","","Extend the graph from an iterable of edges.",80,[[["self"],["i"]]]],[11,"map","","Create a new `Graph` by mapping node and edge weights to…",80,[[["self"],["f"],["g"]],["graph"]]],[11,"filter_map","","Create a new `Graph` by mapping nodes and edges. A node or…",80,[[["self"],["f"],["g"]],["graph"]]],[11,"into_edge_type","","Convert the graph into either undirected or directed. No…",80,[[["self"]],["graph"]]],[11,"detach","","Return a “walker” object that can be used to step through…",82,[[["self"]],["walkneighbors"]]],[11,"next","","Step to the next edge and its endpoint node in the walk…",86,[[["self"],["graph"]],["option"]]],[11,"next_node","","",86,[[["self"],["graph"]],["option",["nodeindex"]]]],[11,"next_edge","","",86,[[["self"],["graph"]],["option",["edgeindex"]]]],[11,"weight","","Access the edge’s weight.",89,[[["self"]],["e"]]]],"paths":[[4,"Direction"],[3,"NodeFiltered"],[3,"EdgeFiltered"],[3,"Reversed"],[3,"Time"],[3,"Dfs"],[3,"DfsPostOrder"],[3,"Bfs"],[4,"DfsEvent"],[4,"Control"],[3,"Topo"],[3,"WalkerIter"],[8,"FilterNode"],[8,"FilterEdge"],[8,"ControlFlow"],[8,"Walker"],[8,"GraphBase"],[8,"IntoNeighbors"],[8,"IntoNeighborsDirected"],[8,"IntoEdges"],[8,"IntoEdgesDirected"],[8,"IntoNodeIdentifiers"],[8,"Data"],[8,"EdgeRef"],[8,"NodeRef"],[8,"IntoNodeReferences"],[8,"IntoEdgeReferences"],[8,"GraphProp"],[8,"NodeIndexable"],[8,"NodeCount"],[8,"VisitMap"],[8,"Visitable"],[8,"GetAdjacencyMatrix"],[4,"Element"],[8,"DataMap"],[8,"DataMapMut"],[8,"Build"],[8,"Create"],[8,"FromElements"],[8,"ElementIterator"],[3,"Dominators"],[8,"FloatMeasure"],[3,"DfsSpace"],[3,"Cycle"],[3,"Ptr"],[3,"GraphMap"],[4,"Config"],[3,"Dot"],[3,"UnionFind"],[3,"Csr"],[3,"EdgeReference"],[3,"Edge"],[3,"Node"],[8,"IndexType"],[8,"EdgeType"],[8,"IntoWeightedEdge"],[4,"Directed"],[4,"Undirected"],[3,"NodeFilteredNeighbors"],[3,"NodeFilteredNodes"],[3,"NodeFilteredEdgeReferences"],[3,"NodeFilteredEdges"],[3,"EdgeFilteredNeighbors"],[3,"EdgeFilteredEdges"],[3,"ReversedEdgeReference"],[3,"ReversedEdgeReferences"],[3,"FilterElements"],[3,"MinSpanningTree"],[3,"NegativeCycle"],[3,"DominatorsIter"],[3,"Nodes"],[3,"Neighbors"],[3,"NeighborsDirected"],[3,"Edges"],[3,"AllEdges"],[3,"AllEdgesMut"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[3,"NodeIndex"],[3,"EdgeIndex"],[3,"Graph"],[3,"Externals"],[3,"Neighbors"],[3,"Edges"],[3,"NodeWeightsMut"],[3,"EdgeWeightsMut"],[3,"WalkNeighbors"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"EdgeReference"],[3,"NodeReferences"],[3,"EdgeReferences"],[3,"Frozen"],[3,"StableGraph"],[3,"NodeReferences"],[3,"EdgeReference"],[3,"Edges"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"WalkNeighbors"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"EdgesNotSorted"],[3,"Edges"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"NodeIdentifiers"]]};
searchIndex["png"]={"doc":"PNG encoder and decoder This crate contains a PNG encoder…","items":[[3,"PixelDimensions","png","Pixel dimensions information",N,N],[12,"xppu","","Pixels per unit, X axis",0,N],[12,"yppu","","Pixels per unit, Y axis",0,N],[12,"unit","","Either Meter or Unspecified",0,N],[3,"FrameControl","","Frame control information",N,N],[12,"sequence_number","","Sequence number of the animation chunk, starting from 0",1,N],[12,"width","","Width of the following frame",1,N],[12,"height","","Height of the following frame",1,N],[12,"x_offset","","X position at which to render the following frame",1,N],[12,"y_offset","","Y position at which to render the following frame",1,N],[12,"delay_num","","Frame delay fraction numerator",1,N],[12,"delay_den","","Frame delay fraction denominator",1,N],[12,"dispose_op","","Type of frame area disposal to be done after rendering…",1,N],[12,"blend_op","","Type of frame area rendering for this frame",1,N],[3,"AnimationControl","","Animation control information",N,N],[12,"num_frames","","Number of frames",2,N],[12,"num_plays","","Number of times to loop this APNG. 0 indicates infinite…",2,N],[3,"Info","","PNG info struct",N,N],[12,"width","","",3,N],[12,"height","","",3,N],[12,"bit_depth","","",3,N],[12,"color_type","","",3,N],[12,"interlaced","","",3,N],[12,"trns","","",3,N],[12,"pixel_dims","","",3,N],[12,"palette","","",3,N],[12,"frame_control","","",3,N],[12,"animation_control","","",3,N],[12,"compression","","",3,N],[12,"filter","","",3,N],[3,"Transformations","","Output transformations",N,N],[3,"Decoder","","PNG Decoder",N,N],[3,"Reader","","PNG reader (mostly high-level interface)",N,N],[3,"OutputInfo","","Output info",N,N],[12,"width","","",4,N],[12,"height","","",4,N],[12,"color_type","","",4,N],[12,"bit_depth","","",4,N],[12,"line_size","","",4,N],[3,"StreamingDecoder","","PNG StreamingDecoder (low-level interface)",N,N],[3,"Limits","","",N,N],[12,"pixels","","max number of pixels: `width * height` (default: 67M = 226)",5,N],[3,"Encoder","","PNG Encoder",N,N],[3,"Writer","","PNG writer",N,N],[4,"ColorType","","",N,N],[13,"Grayscale","","",6,N],[13,"RGB","","",6,N],[13,"Indexed","","",6,N],[13,"GrayscaleAlpha","","",6,N],[13,"RGBA","","",6,N],[4,"BitDepth","","Bit depth of the png file",N,N],[13,"One","","",7,N],[13,"Two","","",7,N],[13,"Four","","",7,N],[13,"Eight","","",7,N],[13,"Sixteen","","",7,N],[4,"Unit","","Physical unit of the pixel dimensions",N,N],[13,"Unspecified","","",8,N],[13,"Meter","","",8,N],[4,"Compression","","",N,N],[13,"Default","","Default level  ",9,N],[13,"Fast","","Fast minimal compression",9,N],[13,"Best","","Higher compression level  ",9,N],[13,"Huffman","","",9,N],[13,"Rle","","",9,N],[4,"Decoded","","Result of the decoding process",N,N],[13,"Nothing","","Nothing decoded yet",10,N],[13,"Header","","",10,N],[13,"ChunkBegin","","",10,N],[13,"ChunkComplete","","",10,N],[13,"PixelDimensions","","",10,N],[13,"AnimationControl","","",10,N],[13,"FrameControl","","",10,N],[13,"ImageData","","Decoded raw image data.",10,N],[13,"PartialChunk","","",10,N],[13,"ImageEnd","","",10,N],[4,"DecodingError","","",N,N],[13,"IoError","","",11,N],[13,"Format","","",11,N],[13,"InvalidSignature","","",11,N],[13,"CrcMismatch","","",11,N],[12,"recover","png::DecodingError","bytes to skip to try to recover from this error",11,N],[12,"crc_val","","Stored CRC32 value",11,N],[12,"crc_sum","","Calculated CRC32 sum",11,N],[12,"chunk","","",11,N],[13,"Other","png","",11,N],[13,"CorruptFlateStream","","",11,N],[4,"EncodingError","","",N,N],[13,"IoError","","",12,N],[13,"Format","","",12,N],[4,"FilterType","","",N,N],[13,"NoFilter","","",13,N],[13,"Sub","","",13,N],[13,"Up","","",13,N],[13,"Avg","","",13,N],[13,"Paeth","","",13,N],[0,"chunk","","Chunk types and functions",N,N],[5,"is_critical","png::chunk","Returns true if the chunk is critical.",N,[[["chunktype"]],["bool"]]],[5,"is_private","","Returns true if the chunk is private.",N,[[["chunktype"]],["bool"]]],[5,"reserved_set","","Checks whether the reserved bit of the chunk name is set.…",N,[[["chunktype"]],["bool"]]],[5,"safe_to_copy","","Returns true if the chunk is safe to copy if unknown.",N,[[["chunktype"]],["bool"]]],[6,"ChunkType","","",N,N],[17,"IHDR","","Image header",N,N],[17,"PLTE","","Palette",N,N],[17,"IDAT","","Image data",N,N],[17,"IEND","","Image trailer",N,N],[17,"tRNS","","Transparency",N,N],[17,"bKGD","","Background colour",N,N],[17,"tIME","","Image last-modification time",N,N],[17,"pHYs","","Physical pixel dimensions",N,N],[17,"acTL","","Animation control",N,N],[17,"fcTL","","Frame control",N,N],[17,"fdAT","","Frame data",N,N],[11,"new","png","Creates a new StreamingDecoder",14,[[],["streamingdecoder"]]],[11,"reset","","Resets the StreamingDecoder",14,[[["self"]]]],[11,"update","","Low level StreamingDecoder interface.",14,N],[11,"buffer_size","","Returns the size needed to hold a decoded frame",4,[[["self"]],["usize"]]],[11,"new","","",15,[[["r"]],["decoder"]]],[11,"new_with_limits","","",15,[[["r"],["limits"]],["decoder"]]],[11,"set_limits","","Images that are considered too big",15,[[["self"],["limits"]]]],[11,"read_info","","Reads all meta data until the first IDAT chunk",15,[[["self"]],["result",["decodingerror"]]]],[11,"info","","",16,[[["self"]],["info"]]],[11,"next_frame","","Decodes the next frame into `buf`",16,N],[11,"next_row","","Returns the next processed row of the image",16,[[["self"]],["result",["option","decodingerror"]]]],[11,"next_interlaced_row","","Returns the next processed row of the image",16,[[["self"]],["result",["option","decodingerror"]]]],[11,"output_color_type","","Returns the color type and the number of bits per sample…",16,N],[11,"output_buffer_size","","Returns the number of bytes required to hold a…",16,[[["self"]],["usize"]]],[11,"output_line_size","","Returns the number of bytes required to hold a…",16,[[["self"],["u32"]],["usize"]]],[11,"new","","",17,[[["w"],["u32"],["u32"]],["encoder"]]],[11,"write_header","","",17,[[["self"]],["result",["writer","encodingerror"]]]],[11,"write_chunk","","",18,N],[11,"write_image_data","","Writes the image data.",18,N],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",13,[[["u8"]],["option",["filtertype"]]]],[11,"samples","","Returns the number of samples used per pixel of `ColorType`",6,[[["self"]],["usize"]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",6,[[["u8"]],["option",["colortype"]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",7,[[["u8"]],["option",["bitdepth"]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a…",8,[[["u8"]],["option",["unit"]]]],[11,"size","","Size of the image",3,N],[11,"is_animated","","Returns true if the image is an APNG image.",3,[[["self"]],["bool"]]],[11,"animation_control","","Returns the frame control information of the image",3,[[["self"]],["option",["animationcontrol"]]]],[11,"frame_control","","Returns the frame control information of the current frame",3,[[["self"]],["option",["framecontrol"]]]],[11,"bits_per_pixel","","Returns the bits per pixel",3,[[["self"]],["usize"]]],[11,"bytes_per_pixel","","Returns the bytes per pixel",3,[[["self"]],["usize"]]],[11,"raw_bytes","","Returns the number of bytes needed for one deinterlaced…",3,[[["self"]],["usize"]]],[11,"raw_row_length","","Returns the number of bytes needed for one deinterlaced row ",3,[[["self"]],["usize"]]],[11,"raw_row_length_from_width","","Returns the number of bytes needed for one deinterlaced…",3,[[["self"],["u32"]],["usize"]]],[18,"IDENTITY","","No transformation",19,N],[18,"STRIP_16","","Strip 16-bit samples to 8 bits",19,N],[18,"STRIP_ALPHA","","Discard the alpha channel",19,N],[18,"PACKING","","Expand 1; 2 and 4-bit samples to bytes",19,N],[18,"PACKSWAP","","Change order of packed pixels to LSB first",19,N],[18,"EXPAND","","Expand paletted images to RGB; expand grayscale images of…",19,N],[18,"INVERT_MONO","","Invert monochrome images",19,N],[18,"SHIFT","","Normalize pixels to the sBIT depth",19,N],[18,"BGR","","Flip RGB to BGR; RGBA to BGRA",19,N],[18,"SWAP_ALPHA","","Flip RGBA to ARGB or GA to AG",19,N],[18,"SWAP_ENDIAN","","Byte-swap 16-bit samples",19,N],[18,"INVERT_ALPHA","","Change alpha from opacity to transparency",19,N],[18,"STRIP_FILLER","","",19,N],[18,"STRIP_FILLER_BEFORE","","",19,N],[18,"STRIP_FILLER_AFTER","","",19,N],[18,"GRAY_TO_RGB","","",19,N],[18,"EXPAND_16","","",19,N],[18,"SCALE_16","","",19,N],[11,"empty","","Returns an empty set of flags",19,[[],["transformations"]]],[11,"all","","Returns the set containing all flags.",19,[[],["transformations"]]],[11,"bits","","Returns the raw value of the flags currently stored.",19,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",19,[[["u32"]],["option",["transformations"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",19,[[["u32"]],["transformations"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",19,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",19,[[["self"],["transformations"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",19,[[["self"],["transformations"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",19,[[["self"],["transformations"]]]],[11,"remove","","Removes the specified flags in-place.",19,[[["self"],["transformations"]]]],[11,"toggle","","Toggles the specified flags in-place.",19,[[["self"],["transformations"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",19,[[["self"],["transformations"],["bool"]]]],[8,"Parameter","","Configuration parameter trait",N,N],[10,"set_param","","",20,[[["self"],["object"]]]],[8,"HasParameters","","Object has parameters",N,N],[11,"set","","",21,[[["self"],["t"]],["self"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"set_param","","",19,[[["self"],["decoder"]]]],[11,"set_param","","",6,[[["self"],["encoder"]]]],[11,"set_param","","",7,[[["self"],["encoder"]]]],[11,"set_param","","",13,[[["self"],["encoder"]]]],[11,"extend","","",19,[[["self"],["t"]]]],[11,"partial_cmp","","",19,[[["self"],["transformations"]],["option",["ordering"]]]],[11,"lt","","",19,[[["self"],["transformations"]],["bool"]]],[11,"le","","",19,[[["self"],["transformations"]],["bool"]]],[11,"gt","","",19,[[["self"],["transformations"]],["bool"]]],[11,"ge","","",19,[[["self"],["transformations"]],["bool"]]],[11,"default","","",5,[[],["limits"]]],[11,"default","","",3,[[],["info"]]],[11,"eq","","",13,[[["self"],["filtertype"]],["bool"]]],[11,"eq","","",6,[[["self"],["colortype"]],["bool"]]],[11,"eq","","",7,[[["self"],["bitdepth"]],["bool"]]],[11,"eq","","",8,[[["self"],["unit"]],["bool"]]],[11,"eq","","",19,[[["self"],["transformations"]],["bool"]]],[11,"ne","","",19,[[["self"],["transformations"]],["bool"]]],[11,"from","","",11,[[["error"]],["decodingerror"]]],[11,"from","","",11,[[["string"]],["decodingerror"]]],[11,"from","","",12,[[["error"]],["encodingerror"]]],[11,"from","","",9,[[["compression"]],["self"]]],[11,"cmp","","",19,[[["self"],["transformations"]],["ordering"]]],[11,"clone","","",5,[[["self"]],["limits"]]],[11,"clone","","",13,[[["self"]],["filtertype"]]],[11,"clone","","",6,[[["self"]],["colortype"]]],[11,"clone","","",7,[[["self"]],["bitdepth"]]],[11,"clone","","",0,[[["self"]],["pixeldimensions"]]],[11,"clone","","",8,[[["self"]],["unit"]]],[11,"clone","","",1,[[["self"]],["framecontrol"]]],[11,"clone","","",2,[[["self"]],["animationcontrol"]]],[11,"clone","","",9,[[["self"]],["compression"]]],[11,"clone","","",19,[[["self"]],["transformations"]]],[11,"drop","","",18,[[["self"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"sub","","Returns the set difference of the two sets of flags.",19,[[["self"],["transformations"]],["transformations"]]],[11,"sub_assign","","Disables all flags enabled in the set.",19,[[["self"],["transformations"]]]],[11,"not","","Returns the complement of this set of flags.",19,[[["self"]],["transformations"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",19,[[["self"],["transformations"]],["transformations"]]],[11,"bitor","","Returns the union of the two sets of flags.",19,[[["self"],["transformations"]],["transformations"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",19,[[["self"],["transformations"]],["transformations"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",19,[[["self"],["transformations"]]]],[11,"bitor_assign","","Adds the set of flags.",19,[[["self"],["transformations"]]]],[11,"bitxor_assign","","Toggles the set of flags.",19,[[["self"],["transformations"]]]],[11,"hash","","",19,N],[11,"from_iter","","",19,[[["t"]],["transformations"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"description","","",11,[[["self"]],["str"]]],[11,"description","","",12,[[["self"]],["str"]]],[11,"set","","",21,[[["self"],["t"]],["self"]]]],"paths":[[3,"PixelDimensions"],[3,"FrameControl"],[3,"AnimationControl"],[3,"Info"],[3,"OutputInfo"],[3,"Limits"],[4,"ColorType"],[4,"BitDepth"],[4,"Unit"],[4,"Compression"],[4,"Decoded"],[4,"DecodingError"],[4,"EncodingError"],[4,"FilterType"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[3,"Writer"],[3,"Transformations"],[8,"Parameter"],[8,"HasParameters"]]};
searchIndex["proc_macro2"]={"doc":"A wrapper around the procedural macro API of the…","items":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",N,N],[3,"LexError","","Error returned from `TokenStream::from_str`.",N,N],[3,"Span","","A region of source code, along with macro expansion…",N,N],[3,"Group","","A delimited token stream.",N,N],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",N,N],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",N,N],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",N,N],[4,"TokenTree","","A single token or a delimited sequence of token trees…",N,N],[13,"Group","","A token stream surrounded by bracket delimiters.",0,N],[13,"Ident","","An identifier.",0,N],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,N],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis","","`( ... )`",1,N],[13,"Brace","","`{ ... }`",1,N],[13,"Bracket","","`[ ... ]`",1,N],[13,"None","","`Ø ... Ø`",1,N],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",N,N],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",N,N],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"empty","","",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[["self"]],["span"]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["self"],["span"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"f64_unsuffixed","","",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",8,[[["f32"]],["literal"]]],[11,"string","","",8,[[["str"]],["literal"]]],[11,"character","","",8,[[["char"]],["literal"]]],[11,"byte_string","","",8,N],[11,"span","","",8,[[["self"]],["span"]]],[11,"set_span","","",8,[[["self"],["span"]]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","proc_macro2::token_stream","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"extend","proc_macro2","",3,[[["self"],["i"]]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],["option",["tokentree"]]]],[11,"partial_cmp","proc_macro2","",7,[[["self"],["ident"]],["option",["ordering"]]]],[11,"default","","",3,[[],["self"]]],[11,"eq","","",1,[[["self"],["delimiter"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["self"],["ident"]],["bool"]]],[11,"eq","","",7,[[["self"],["t"]],["bool"]]],[11,"from","","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"into_iter","","",3,[[["self"]],["intoiter"]]],[11,"cmp","","",7,[[["self"],["ident"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"clone","proc_macro2::token_stream","",10,[[["self"]],["intoiter"]]],[11,"fmt","proc_macro2","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["self"],["formatter"]],["result"]]],[11,"from_str","proc_macro2","",3,[[["str"]],["result",["tokenstream","lexerror"]]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_iter","","",3,[[["i"]],["self"]]]],"paths":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["project"]={"doc":"","items":[[0,"board","project","",N,N],[3,"Move","project::board","",N,N],[3,"Game","","",N,N],[4,"GameStatus","","",N,N],[13,"InProgress","","",0,N],[13,"OrderWins","","",0,N],[13,"ChaosWins","","",0,N],[4,"MoveType","","",N,N],[13,"X","","",1,N],[13,"O","","",1,N],[4,"BoardDirection","","",N,N],[13,"Row","","",2,N],[13,"Column","","",2,N],[13,"Diagonal","","",2,N],[13,"AntiDiagonal","","",2,N],[11,"new","","",3,[[["movetype"],["usize"],["usize"]],["self"]]],[11,"new","","",4,[[],["self"]]],[11,"last_move","","",4,[[["self"]],["option"]]],[11,"flat_index","","",4,[[["self"],["usize"],["usize"]],["option",["movetype"]]]],[11,"size","","",4,[[["self"]],["usize"]]],[11,"count_direction","","",4,[[["self"],["boarddirection"],["usize"],["usize"]],["usize"]]],[11,"open_indicies","","",4,N],[11,"get_status","","",4,[[["self"]],["gamestatus"]]],[11,"make_move","","",4,[[["self"],["move"]],["option",["game"]]]],[0,"strategy","project","",N,N],[4,"Player","project::strategy","",N,N],[13,"Order","","",5,N],[13,"Chaos","","",5,N],[5,"ai_move","","",N,[[["game"],["player"]],["game"]]],[5,"mini_max","","",N,[[["game"],["player"]],["option",["move"]]]],[11,"display","","",5,[[["self"]],["str"]]],[11,"other_player","","",5,[[["self"]],["self"]]],[11,"into","project::board","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","project::strategy","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"partial_cmp","","",5,[[["self"],["player"]],["option",["ordering"]]]],[11,"eq","project::board","",0,[[["self"],["gamestatus"]],["bool"]]],[11,"eq","","",1,[[["self"],["movetype"]],["bool"]]],[11,"eq","","",2,[[["self"],["boarddirection"]],["bool"]]],[11,"eq","project::strategy","",5,[[["self"],["player"]],["bool"]]],[11,"cmp","","",5,[[["self"],["player"]],["ordering"]]],[11,"clone","project::board","",1,[[["self"]],["movetype"]]],[11,"clone","","",3,[[["self"]],["move"]]],[11,"clone","","",2,[[["self"]],["boarddirection"]]],[11,"clone","","",4,[[["self"]],["game"]]],[11,"clone","project::strategy","",5,[[["self"]],["player"]]],[11,"fmt","project::board","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","project::strategy","",5,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"GameStatus"],[4,"MoveType"],[4,"BoardDirection"],[3,"Move"],[3,"Game"],[4,"Player"]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust…","items":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",N,N],[10,"append","","For use by `ToTokens` implementations.",0,[[["self"],["u"]]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[["self"],["i"],["u"]]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[["self"],["i"],["u"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`]…",N,N],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,[[["self"],["tokenstream"]]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]],[14,"quote","","The whole point.",N,N],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",N,N],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]]],"paths":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","items":[[8,"RngCore","rand","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types…",1,N],[10,"from_seed","","Create a new PRNG using the given seed.",1,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],["result",["error"]]]],[4,"ErrorKind","","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",2,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",2,N],[13,"Transient","","A transient failure which likely can be resolved or worked…",2,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",2,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",3,N],[12,"msg","","The error message",3,N],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",N,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",N,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions.",N,N],[3,"Alphanumeric","rand::distributions","Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform","","Sample values uniformly between two bounds.",N,N],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",N,N],[3,"Open01","","A distribution to sample floating point numbers uniformly…",N,N],[3,"Bernoulli","","The Bernoulli distribution.",N,N],[3,"WeightedIndex","","A distribution using weighted sampling to pick a…",N,N],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",N,N],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",N,N],[3,"Exp","","The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1","","Samples floating-point numbers according to the…",N,N],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,"Triangular","","The triangular distribution.",N,N],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter","","An iterator that generates random values of `T` with…",N,N],[3,"Standard","","A generic random value distribution, implemented for many…",N,N],[3,"Weighted","","A value with a particular weight for use with…",N,N],[12,"weight","","The numerical weight of this item",4,N],[12,"item","","The actual item which is being weighted",4,N],[3,"WeightedChoice","","A distribution that selects from a finite collection of…",N,N],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem","","The provided iterator contained no items.",5,N],[13,"NegativeWeight","","A weight lower than zero was used.",5,N],[13,"AllWeightsZero","","All items in the provided iterator had a weight of zero.",5,N],[0,"uniform","","A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",N,N],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",N,N],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",N,N],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,"SampleUniform","","Helper trait for creating objects using the correct…",N,N],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",6,N],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",N,N],[16,"X","","The type sampled by this implementation.",7,N],[10,"new","","Construct self, with inclusive lower bound and exclusive…",7,[[["b1"],["b2"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",7,[[["b1"],["b2"]],["self"]]],[10,"sample","","Sample a value.",7,N],[11,"sample_single","","Sample a single value uniformly from a range with…",7,N],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,"borrow","","Immutably borrows from an owned value. See…",8,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",9,[[["b1"],["b2"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",9,[[["b1"],["b2"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `Bernoulli` with the given probability of…",10,[[["f64"]],["bernoulli"]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",10,[[["u32"],["u32"]],["bernoulli"]]],[11,"new","","Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],["result",["weightedindex","weightederror"]]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",12,[[],["unitspheresurface"]]],[11,"new","","Construct a new `UnitCircle` distribution.",13,[[],["unitcircle"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"],["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",15,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",16,[[["f64"],["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"],["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",19,[[["f64"],["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",20,[[["f64"],["f64"]],["lognormal"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",22,[[["f64"],["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",24,[[["u64"],["f64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"],["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",26,[[["v"]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"],["f64"],["f64"]],["triangular"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"],["f64"]],["weibull"]]],[8,"Distribution","","Types (distributions) that can be used to create a random…",N,N],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[["self"],["r"]],["distiter"]]],[11,"new","","Create a new `WeightedChoice`.",30,N],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng","","Pseudo-random number generators.",N,N],[0,"rngs","","Random number generators and adapters for common usage:",N,N],[3,"JitterRng","rand::rngs","A true random number generator based on jitter in the CPU…",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`]…",N,N],[13,"NoTimer","","No timer available.",31,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",31,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",31,N],[13,"TinyVariantions","","Variations of deltas of time too small.",31,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",31,N],[3,"OsRng","","A random number generator that retrieves randomness…",N,N],[3,"EntropyRng","","An interface returning random data from external…",N,N],[3,"SmallRng","","An RNG recommended when small state, cheap initialization…",N,N],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",N,N],[0,"adapter","","Wrappers / adapters forming RNGs",N,N],[3,"ReadRng","rand::rngs::adapter","An RNG that reads random bytes straight from any type…",N,N],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",N,N],[11,"new","","Create a new `ReadRng` from a `Read`.",32,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",33,[[["r"],["u64"],["rsdr"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",33,[[["self"]],["result",["error"]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",34,[[],["self"]]],[0,"mock","","Mock random number generator",N,N],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",35,[[["u64"],["u64"]],["self"]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[3,"SliceChooseIter","rand::seq","Iterator over multiple choices, as returned by…",N,N],[5,"sample_iter","","Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],["usize"]],["result",["vec","vec"]]]],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",N,N],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",N,N],[0,"index","","Index sampling",N,N],[4,"IndexVec","rand::seq::index","A vector of indices.",N,N],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",N,N],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",N,N],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",N,[[["r"],["usize"],["usize"]],["indexvec"]]],[11,"len","","Returns the number of indices",36,[[["self"]],["usize"]]],[11,"index","","Return the value at the given `index`.",36,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",36,[[["self"]],["vec",["usize"]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",36,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",36,[[["self"]],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",N,N],[16,"Item","","The element type.",37,N],[10,"choose","","Returns a reference to one random element of the slice, or…",37,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",37,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Produces an iterator that chooses `amount` elements from…",37,[[["self"],["r"],["usize"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], where the likelihood of each…",37,[[["self"],["r"],["f"]],["result",["weightederror"]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], where the likelihood of each…",37,[[["self"],["r"],["f"]],["result",["weightederror"]]]],[10,"shuffle","","Shuffle a mutable slice in place.",37,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",37,N],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",N,N],[11,"choose","","Choose one element at random from the iterator. If you…",38,[[["self"],["r"]],["option"]]],[11,"choose_multiple_fill","","Collects `amount` values at random from the iterator into…",38,N],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",38,[[["self"],["r"],["usize"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen","","Return a random value supporting the [`Standard`]…",39,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",39,[[["self"],["b1"],["b2"]],["t"]]],[11,"sample","","Sample a new value, using the given distribution.",39,[[["self"],["d"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",39,[[["self"],["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",39,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",39,[[["self"],["t"]],["result",["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",39,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",39,[[["self"],["u32"],["u32"]],["bool"]]],[11,"choose","","Return a random element from `values`.",39,N],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",39,N],[11,"shuffle","","Shuffle a mutable slice in place.",39,N],[8,"AsByteSliceMut","","Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",40,N],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",40,[[["self"]]]],[8,"FromEntropy","","A convenience extension to [`SeedableRng`] allowing…",N,N],[10,"from_entropy","","Creates a new instance, automatically seeded with fresh…",41,[[],["self"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","rand::distributions","",42,[[["self"]],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","rand::distributions::uniform","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","rand::distributions","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into_iter","","",47,[[["self"]],["i"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","rand::distributions::uniform","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","rand::rngs","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from_entropy","","",54,[[],["r"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from_entropy","","",55,[[],["r"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into","rand::rngs::adapter","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","rand::rngs::mock","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","rand::seq","",57,[[["self"]],["u"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into_iter","","",57,[[["self"]],["i"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","rand::seq::index","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"into_iter","","",59,[[["self"]],["i"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"next_u32","rand::rngs","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,N],[11,"try_fill_bytes","","",52,N],[11,"clone","","",52,[[["self"]],["jitterrng"]]],[11,"clone","","",31,[[["self"]],["timererror"]]],[11,"eq","","",31,[[["self"],["timererror"]],["bool"]]],[11,"from","rand","",3,[[["timererror"]],["error"]]],[11,"fmt","rand::rngs","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",31,[[["self"]],["str"]]],[11,"read","rand","",0,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",2,[[["self"],["errorkind"]],["bool"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"clone","","",2,[[["self"]],["errorkind"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","rand::rngs","",53,[[["self"]],["osrng"]]],[11,"next_u32","","",53,[[["self"]],["u32"]]],[11,"next_u64","","",53,[[["self"]],["u64"]]],[11,"fill_bytes","","",53,N],[11,"try_fill_bytes","","",53,N],[11,"fmt","","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"new","rand::distributions::uniform","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",50,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",50,[[["b1"],["b2"]],["self"]]],[11,"sample","","",50,N],[11,"sample_single","","",50,N],[11,"new","","",50,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",50,[[["b1"],["b2"]],["self"]]],[11,"sample","","",50,N],[11,"sample_single","","",50,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,[[["self"],["r"]],["duration"]]],[11,"sample","","",9,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",10,[[["self"],["r"]],["bool"]]],[11,"sample","","",11,[[["self"],["r"]],["usize"]]],[11,"sample","","",12,N],[11,"sample","","",13,N],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["f64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","","",18,[[["self"],["r"]],["f64"]]],[11,"sample","","",45,[[["self"],["r"]],["f64"]]],[11,"sample","","",19,[[["self"],["r"]],["f64"]]],[11,"sample","","",20,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",21,[[["self"],["r"]],["f64"]]],[11,"sample","","",22,[[["self"],["r"]],["f64"]]],[11,"sample","","",23,[[["self"],["r"]],["u64"]]],[11,"sample","","",24,[[["self"],["r"]],["u64"]]],[11,"sample","","",25,[[["self"],["r"]],["f64"]]],[11,"sample","","",26,[[["self"],["r"]],["vec",["f64"]]]],[11,"sample","","",27,[[["self"],["r"]],["f64"]]],[11,"sample","","",28,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["f32"]]],[11,"sample","","",43,[[["self"],["r"]],["f32"]]],[11,"sample","","",44,[[["self"],["r"]],["f32"]]],[11,"sample","","",48,[[["self"],["r"]],["f64"]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["u8"]]],[11,"sample","","",48,[[["self"],["r"]],["u16"]]],[11,"sample","","",48,[[["self"],["r"]],["u32"]]],[11,"sample","","",48,[[["self"],["r"]],["u64"]]],[11,"sample","","",48,[[["self"],["r"]],["u128"]]],[11,"sample","","",48,[[["self"],["r"]],["usize"]]],[11,"sample","","",48,[[["self"],["r"]],["i8"]]],[11,"sample","","",48,[[["self"],["r"]],["i16"]]],[11,"sample","","",48,[[["self"],["r"]],["i32"]]],[11,"sample","","",48,[[["self"],["r"]],["i64"]]],[11,"sample","","",48,[[["self"],["r"]],["i128"]]],[11,"sample","","",48,[[["self"],["r"]],["isize"]]],[11,"sample","","",48,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",48,[[["self"],["r"]],["bool"]]],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,[[["self"],["r"]],["option"]]],[11,"sample","","",48,[[["self"],["r"]],["wrapping"]]],[11,"sample","","",30,[[["self"],["r"]],["t"]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,N],[11,"next","rand::seq::index","",58,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",58,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","rand::seq","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,N],[11,"len","","",57,[[["self"]],["usize"]]],[11,"default","rand::rngs","",34,[[],["self"]]],[11,"default","","",56,[[],["threadrng"]]],[11,"eq","rand::distributions","",5,[[["self"],["weightederror"]],["bool"]]],[11,"eq","rand::seq::index","",36,[[["self"],["indexvec"]],["bool"]]],[11,"from","rand::distributions::uniform","",9,[[["range"]],["uniform"]]],[11,"from","","",9,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand::seq::index","",36,[[["vec",["u32"]]],["self"]]],[11,"from","","",36,[[["vec",["usize"]]],["self"]]],[11,"clone","rand::distributions::uniform","",9,[[["self"]],["uniform"]]],[11,"clone","","",49,[[["self"]],["uniformint"]]],[11,"clone","","",50,[[["self"]],["uniformfloat"]]],[11,"clone","","",51,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",10,[[["self"]],["bernoulli"]]],[11,"clone","","",11,[[["self"]],["weightedindex"]]],[11,"clone","","",5,[[["self"]],["weightederror"]]],[11,"clone","","",12,[[["self"]],["unitspheresurface"]]],[11,"clone","","",13,[[["self"]],["unitcircle"]]],[11,"clone","","",14,[[["self"]],["gamma"]]],[11,"clone","","",15,[[["self"]],["chisquared"]]],[11,"clone","","",16,[[["self"]],["fisherf"]]],[11,"clone","","",17,[[["self"]],["studentt"]]],[11,"clone","","",18,[[["self"]],["beta"]]],[11,"clone","","",45,[[["self"]],["standardnormal"]]],[11,"clone","","",19,[[["self"]],["normal"]]],[11,"clone","","",20,[[["self"]],["lognormal"]]],[11,"clone","","",46,[[["self"]],["exp1"]]],[11,"clone","","",21,[[["self"]],["exp"]]],[11,"clone","","",22,[[["self"]],["pareto"]]],[11,"clone","","",23,[[["self"]],["poisson"]]],[11,"clone","","",24,[[["self"]],["binomial"]]],[11,"clone","","",25,[[["self"]],["cauchy"]]],[11,"clone","","",26,[[["self"]],["dirichlet"]]],[11,"clone","","",27,[[["self"]],["triangular"]]],[11,"clone","","",28,[[["self"]],["weibull"]]],[11,"clone","","",43,[[["self"]],["openclosed01"]]],[11,"clone","","",44,[[["self"]],["open01"]]],[11,"clone","","",48,[[["self"]],["standard"]]],[11,"clone","","",4,[[["self"]],["weighted"]]],[11,"clone","rand::rngs::adapter","",33,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs::mock","",35,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",54,[[["self"]],["smallrng"]]],[11,"clone","","",55,[[["self"]],["stdrng"]]],[11,"clone","","",56,[[["self"]],["threadrng"]]],[11,"clone","rand::seq::index","",36,[[["self"]],["indexvec"]]],[11,"clone","","",59,[[["self"]],["indexvecintoiter"]]],[11,"fmt","rand::distributions","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions::uniform","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::adapter","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::mock","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq::index","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq","",57,[[["self"],["formatter"]],["result"]]],[11,"description","rand::distributions","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]],[11,"next_u32","rand::rngs::adapter","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,N],[11,"try_fill_bytes","","",32,N],[11,"next_u32","","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,N],[11,"try_fill_bytes","","",33,N],[11,"next_u32","rand::rngs","",34,[[["self"]],["u32"]]],[11,"next_u64","","",34,[[["self"]],["u64"]]],[11,"fill_bytes","","",34,N],[11,"try_fill_bytes","","",34,N],[11,"next_u32","rand::rngs::mock","",35,[[["self"]],["u32"]]],[11,"next_u64","","",35,[[["self"]],["u64"]]],[11,"fill_bytes","","",35,N],[11,"try_fill_bytes","","",35,N],[11,"next_u32","rand::rngs","",54,[[["self"]],["u32"]]],[11,"next_u64","","",54,[[["self"]],["u64"]]],[11,"fill_bytes","","",54,N],[11,"try_fill_bytes","","",54,N],[11,"next_u32","","",55,[[["self"]],["u32"]]],[11,"next_u64","","",55,[[["self"]],["u64"]]],[11,"fill_bytes","","",55,N],[11,"try_fill_bytes","","",55,N],[11,"next_u32","","",56,[[["self"]],["u32"]]],[11,"next_u64","","",56,[[["self"]],["u64"]]],[11,"fill_bytes","","",56,N],[11,"try_fill_bytes","","",56,N],[11,"from_seed","","",54,N],[11,"from_rng","","",54,[[["r"]],["result",["error"]]]],[11,"from_seed","","",55,N],[11,"from_rng","","",55,[[["r"]],["result",["error"]]]],[11,"should_retry","rand","True if this kind of error may resolve itself on retry.",2,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",2,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",2,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",3,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",3,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",3,[[["self"]],["option",["box"]]]],[11,"new","rand::rngs","Create a new `JitterRng`. Makes use of `std::time` for a…",52,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied,…",52,N],[11,"set_rounds","","Configures how many rounds are used to generate each…",52,N],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing…",52,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run…",52,[[["self"],["bool"]],["i64"]]],[11,"new","","Create a new `OsRng`.",53,[[],["result",["osrng","error"]]]]],"paths":[[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[3,"Weighted"],[4,"WeightedError"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"Bernoulli"],[3,"WeightedIndex"],[3,"UnitSphereSurface"],[3,"UnitCircle"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,"Distribution"],[3,"WeightedChoice"],[4,"TimerError"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"Alphanumeric"],[3,"OpenClosed01"],[3,"Open01"],[3,"StandardNormal"],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"JitterRng"],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"]={"doc":"The ChaCha random number generator.","items":[[3,"ChaChaRng","rand_chacha","A cryptographically secure random number generator that…",N,N],[3,"ChaChaCore","","The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",0,[[["chachacore"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["chacharng"]]],[11,"clone","","",1,[[["self"]],["chachacore"]]],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"from_seed","","",1,N],[11,"generate","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N]],"paths":[[3,"ChaChaRng"],[3,"ChaChaCore"]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","items":[[4,"ErrorKind","rand_core","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",0,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",0,N],[13,"Transient","","A transient failure which likely can be resolved or worked…",0,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",0,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",1,N],[12,"msg","","The error message",1,N],[0,"block","","The `BlockRngCore` trait and implementation helpers",N,N],[8,"BlockRngCore","rand_core::block","A trait for RNGs which do not generate random numbers…",N,N],[16,"Item","","Results element type, e.g. `u32`.",2,N],[16,"Results","","Results type. This is the 'block' an RNG implementing…",2,N],[10,"generate","","Generate a new block of results.",2,N],[3,"BlockRng","","A wrapper type implementing [`RngCore`] for some type…",N,N],[12,"core","","The core part of the RNG, implementing the `generate`…",3,N],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",N,N],[12,"core","","The core part of the RNG, implementing the `generate`…",4,N],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,N],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",N,N],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",N,N],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,N],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",N,N],[8,"RngCore","rand_core","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",5,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",5,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",5,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",5,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types…",6,N],[10,"from_seed","","Create a new PRNG using the given seed.",6,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",6,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",6,[[["r"]],["result",["error"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","rand_core::block","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from_seed","","",4,N],[11,"seed_from_u64","","",4,[[["u64"]],["blockrng64"]]],[11,"from_rng","","",4,[[["s"]],["result",["blockrng64","error"]]]],[11,"from_seed","","",3,N],[11,"seed_from_u64","","",3,[[["u64"]],["blockrng"]]],[11,"from_rng","","",3,[[["s"]],["result",["blockrng","error"]]]],[11,"read","rand_core","",5,N],[11,"next_u32","rand_core::block","",4,[[["self"]],["u32"]]],[11,"next_u64","","",4,[[["self"]],["u64"]]],[11,"fill_bytes","","",4,N],[11,"try_fill_bytes","","",4,N],[11,"next_u32","","",3,[[["self"]],["u32"]]],[11,"next_u64","","",3,[[["self"]],["u64"]]],[11,"fill_bytes","","",3,N],[11,"try_fill_bytes","","",3,N],[11,"fmt","rand_core","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"clone","rand_core::block","",4,[[["self"]],["blockrng64"]]],[11,"clone","","",3,[[["self"]],["blockrng"]]],[11,"clone","rand_core","",0,[[["self"]],["errorkind"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core::block","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"should_retry","rand_core","True if this kind of error may resolve itself on retry.",0,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",0,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",0,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",1,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",1,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",1,[[["self"]],["option",["box"]]]],[11,"new","rand_core::block","Create a new `BlockRng` from an existing RNG implementing…",3,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",3,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",3,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",3,N],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",4,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",4,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",4,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",4,N]],"paths":[[4,"ErrorKind"],[3,"Error"],[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","items":[[3,"Hc128Rng","rand_hc","A cryptographically secure random number generator that…",N,N],[3,"Hc128Core","","The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["hc128rng"]]],[11,"clone","","",1,[[["self"]],["hc128core"]]],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"from_seed","","Create an HC-128 random number generator with a seed. The…",1,N],[11,"generate","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N]],"paths":[[3,"Hc128Rng"],[3,"Hc128Core"]]};
searchIndex["rand_isaac"]={"doc":"The ISAAC and ISAAC-64 random number generators.","items":[[0,"isaac","rand_isaac","The ISAAC random number generator.",N,N],[3,"IsaacRng","rand_isaac::isaac","A random number generator that uses the ISAAC algorithm.",N,N],[3,"IsaacCore","","The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,"new_from_u64","","Create an ISAAC random number generator using an `u64` as…",0,[[["u64"]],["self"]]],[0,"isaac64","rand_isaac","The ISAAC-64 random number generator.",N,N],[3,"Isaac64Rng","rand_isaac::isaac64","A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,"Isaac64Core","","The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",1,[[["u64"]],["self"]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",2,[[["u64"]],["self"]]],[11,"from","rand_isaac::isaac","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","rand_isaac::isaac64","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"fmt","rand_isaac::isaac","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand_isaac::isaac64","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","rand_isaac::isaac","",0,[[["self"]],["isaacrng"]]],[11,"clone","","",3,[[["self"]],["isaaccore"]]],[11,"clone","rand_isaac::isaac64","",1,[[["self"]],["isaac64rng"]]],[11,"clone","","",2,[[["self"]],["isaac64core"]]],[11,"from_seed","rand_isaac::isaac","",0,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",0,[[["u64"]],["self"]]],[11,"from_rng","","",0,[[["s"]],["result",["error"]]]],[11,"from_seed","","",3,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",3,[[["u64"]],["self"]]],[11,"from_rng","","",3,[[["r"]],["result",["error"]]]],[11,"from_seed","rand_isaac::isaac64","",1,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["s"]],["result",["error"]]]],[11,"from_seed","","",2,N],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["r"]],["result",["error"]]]],[11,"generate","rand_isaac::isaac","Refills the output buffer, `results`. See also the…",3,[[["self"],["isaacarray"]]]],[11,"generate","rand_isaac::isaac64","Refills the output buffer, `results`. See also the…",2,[[["self"],["isaacarray"]]]],[11,"next_u32","rand_isaac::isaac","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"next_u32","rand_isaac::isaac64","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N]],"paths":[[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"IsaacCore"]]};
searchIndex["rand_jitter"]={"doc":"Non-physical true random number generator based on timing…","items":[[3,"JitterRng","rand_jitter","A true random number generator based on jitter in the CPU…",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`]…",N,N],[13,"NoTimer","","No timer available.",0,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",0,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",0,N],[13,"TinyVariantions","","Variations of deltas of time too small.",0,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",0,N],[11,"new","","Create a new `JitterRng`. Makes use of `std::time` for a…",1,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied,…",1,N],[11,"set_rounds","","Configures how many rounds are used to generate each…",1,[[["self"],["u8"]]]],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing…",1,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run…",1,[[["self"],["bool"]],["i64"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["timererror"]],["bool"]]],[11,"clone","","",0,[[["self"]],["timererror"]]],[11,"clone","","",1,[[["self"]],["jitterrng"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N]],"paths":[[4,"TimerError"],[3,"JitterRng"]]};
searchIndex["rand_os"]={"doc":"Interface to the random number generator of the operating…","items":[[3,"OsRng","rand_os","A random number generator that retrieves randomness…",N,N],[11,"new","","Create a new `OsRng`.",0,[[],["result",["osrng","error"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["osrng"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N]],"paths":[[3,"OsRng"]]};
searchIndex["rand_pcg"]={"doc":"The PCG random number generators.","items":[[3,"Lcg64Xsh32","rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,"Mcg128Xsl64","","A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new","","Construct an instance compatible with PCG seed and stream.",0,[[["u64"],["u64"]],["self"]]],[11,"new","","Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32","","`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg","","A friendly name for `Mcg128Xsl64`.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["lcg64xsh32"]]],[11,"clone","","",1,[[["self"]],["mcg128xsl64"]]],[11,"from_seed","","",0,N],[11,"from_seed","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N]],"paths":[[3,"Lcg64Xsh32"],[3,"Mcg128Xsl64"]]};
searchIndex["rand_xorshift"]={"doc":"The xorshift random number generator.","items":[[3,"XorShiftRng","rand_xorshift","An Xorshift random number generator.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["xorshiftrng"]]],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N]],"paths":[[3,"XorShiftRng"]]};
searchIndex["rayon"]={"doc":"Data-parallelism library that makes it easy to convert…","items":[[5,"current_num_threads","rayon","Returns the number of threads in the current registry. If…",N,[[],["usize"]]],[3,"ThreadPool","","Represents a user created [thread-pool].",N,N],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",N,N],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",N,N],[5,"join","","Takes two closures and potentially runs them in parallel.…",N,N],[5,"join_context","","Identical to `join`, except that the closures have a…",N,N],[3,"FnContext","","Provides the calling context to a closure called by…",N,N],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure…",N,[[["op"]],["r"]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",N,N],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\"…",N,N],[0,"collections","","Parallel iterator types for [standard…",N,N],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps…",N,N],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a binary…",N,N],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for…",N,N],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",N,N],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for…",N,N],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",N,N],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash…",N,N],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a hash map",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",N,N],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash…",N,N],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a hash set",N,N],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for…",N,N],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a linked…",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a linked list",N,N],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for…",N,N],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a…",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a…",N,N],[0,"iter","rayon","Traits for writing parallel programs using an…",N,N],[4,"Either","rayon::iter","The enum `Either` with variants `Left` and `Right` is a…",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[3,"IterBridge","","`IterBridge` is a parallel iterator that wraps a…",N,N],[3,"Chain","","`Chain` is an iterator that joins `b` after `a` in one…",N,N],[3,"Chunks","","`Chunks` is an iterator that groups elements of an…",N,N],[3,"Enumerate","","`Enumerate` is an iterator that returns the current count…",N,N],[3,"Filter","","`Filter` takes a predicate `filter_op` and filters out…",N,N],[3,"FilterMap","","`FilterMap` creates an iterator that uses `filter_op` to…",N,N],[3,"FlatMap","","`FlatMap` maps each element to an iterator, then flattens…",N,N],[3,"Flatten","","`Flatten` turns each element to an iterator, then flattens…",N,N],[3,"Fold","","`Fold` is an iterator that applies a function over an…",N,N],[3,"FoldWith","","`FoldWith` is an iterator that applies a function over an…",N,N],[3,"TryFold","","`TryFold` is an iterator that applies a function over an…",N,N],[3,"TryFoldWith","","`TryFoldWith` is an iterator that applies a function over…",N,N],[3,"Skip","","`Skip` is an iterator that skips over the first `n`…",N,N],[3,"Split","","`Split` is a parallel iterator using arbitrary data and a…",N,N],[3,"Take","","`Take` is an iterator that iterates over the first `n`…",N,N],[3,"Map","","`Map` is an iterator that transforms the elements of an…",N,N],[3,"MapWith","","`MapWith` is an iterator that transforms the elements of…",N,N],[3,"MapInit","","`MapInit` is an iterator that transforms the elements of…",N,N],[3,"Zip","","`Zip` is an iterator that zips up `a` and `b` into a…",N,N],[3,"ZipEq","","An [`IndexedParallelIterator`] that iterates over two…",N,N],[3,"Interleave","","`Interleave` is an iterator that interleaves elements of…",N,N],[3,"InterleaveShortest","","`InterleaveShortest` is an iterator that works similarly…",N,N],[3,"Intersperse","","`Intersperse` is an iterator that inserts a particular…",N,N],[3,"Update","","`Update` is an iterator that mutates the elements of an…",N,N],[3,"Rev","","`Rev` is an iterator that produces elements in reverse…",N,N],[3,"MinLen","","`MinLen` is an iterator that imposes a minimum length on…",N,N],[3,"MaxLen","","`MaxLen` is an iterator that imposes a maximum length on…",N,N],[3,"Cloned","","`Cloned` is an iterator that clones the elements of an…",N,N],[3,"Inspect","","`Inspect` is an iterator that calls a function with a…",N,N],[3,"WhileSome","","`WhileSome` is an iterator that yields the `Some` elements…",N,N],[3,"Repeat","","Iterator adaptor for the `repeat()` function.",N,N],[3,"RepeatN","","Iterator adaptor for the `repeatn()` function.",N,N],[3,"Empty","","Iterator adaptor for the `empty()` function.",N,N],[3,"Once","","Iterator adaptor for the `once()` function.",N,N],[5,"split","","The `split` function takes arbitrary data and a closure…",N,[[["d"],["s"]],["split"]]],[5,"repeat","","Creates a parallel iterator that endlessly repeats `elt`…",N,[[["t"]],["repeat"]]],[5,"repeatn","","Creates a parallel iterator that produces `n` repeats of…",N,[[["t"],["usize"]],["repeatn"]]],[5,"empty","","Creates a parallel iterator that produces nothing.",N,[[],["empty"]]],[5,"once","","Creates a parallel iterator that produces an element…",N,[[["t"]],["once"]]],[0,"plumbing","","Traits and functions used to implement parallel iteration.…",N,N],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel…",N,N],[5,"bridge_producer_consumer","","This helper function is used to \"connect\" a producer and a…",N,N],[5,"bridge_unindexed","","A variant of [`bridge_producer_consumer`] where the…",N,N],[8,"ProducerCallback","","The `ProducerCallback` trait is a kind of generic closure,…",N,N],[16,"Output","","The type of value returned by this callback. Analogous to…",1,N],[10,"callback","","Invokes the callback with the given producer as argument.…",1,N],[8,"Producer","","A `Producer` is effectively a \"splittable `IntoIterator`\".…",N,N],[16,"Item","","The type of item that will be produced by this producer…",2,N],[16,"IntoIter","","The type of iterator we will become.",2,N],[10,"into_iter","","Convert `self` into an iterator; at this point, no more…",2,N],[11,"min_len","","The minimum number of items that we will process…",2,[[["self"]],["usize"]]],[11,"max_len","","The maximum number of items that we will process…",2,[[["self"]],["usize"]]],[10,"split_at","","Split into two producers; one produces items `0..index`,…",2,N],[11,"fold_with","","Iterate the producer, feeding each element to `folder`,…",2,[[["self"],["f"]],["f"]]],[8,"Consumer","","A consumer is effectively a [generalized \"fold\"…",N,N],[16,"Folder","","The type of folder that this consumer can be converted into.",3,N],[16,"Reducer","","The type of reducer that is produced if this consumer is…",3,N],[16,"Result","","The type of result that this consumer will ultimately…",3,N],[10,"split_at","","Divide the consumer into two consumers, one processing…",3,N],[10,"into_folder","","Convert the consumer into a folder that can consume items…",3,N],[10,"full","","Hint whether this `Consumer` would like to stop processing…",3,[[["self"]],["bool"]]],[8,"Folder","","The `Folder` trait encapsulates [the standard fold…",N,N],[16,"Result","","The type of result that will ultimately be produced by the…",4,N],[10,"consume","","Consume next item and return new sequential state.",4,[[["self"],["item"]],["self"]]],[11,"consume_iter","","Consume items from the iterator until full, and return new…",4,[[["self"],["i"]],["self"]]],[10,"complete","","Finish consuming items, produce final result.",4,N],[10,"full","","Hint whether this `Folder` would like to stop processing…",4,[[["self"]],["bool"]]],[8,"Reducer","","The reducer is the final step of a `Consumer` -- after a…",N,N],[10,"reduce","","Reduce two final results into one; this is executed after…",5,[[["self"],["result"],["result"]],["result"]]],[8,"UnindexedConsumer","","A stateless consumer can be freely copied. These consumers…",N,N],[10,"split_off_left","","Splits off a \"left\" consumer and returns it. The `self`…",6,[[["self"]],["self"]]],[10,"to_reducer","","Creates a reducer that can be used to combine the results…",6,N],[8,"UnindexedProducer","","A variant on `Producer` which does not know its exact…",N,N],[16,"Item","","The type of item returned by this producer.",7,N],[10,"split","","Split midway into a new producer if possible, otherwise…",7,N],[10,"fold_with","","Iterate the producer, feeding each element to `folder`,…",7,[[["self"],["f"]],["f"]]],[11,"take","rayon::iter","Take only `n` repeats of the element, similar to the…",8,[[["self"],["usize"]],["repeatn"]]],[11,"zip","","Iterate tuples repeating the element with items from…",8,[[["self"],["z"]],["zip",["repeatn"]]]],[8,"ParallelBridge","","Conversion trait to convert an `Iterator` to a…",N,N],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[["self"]],["iterbridge"]]],[8,"IntoParallelIterator","","`IntoParallelIterator` implements the conversion to a…",N,N],[16,"Iter","","The parallel iterator type that will be created.",10,N],[16,"Item","","The type of item that the parallel iterator will produce.",10,N],[10,"into_par_iter","","Converts `self` into a parallel iterator.",10,N],[8,"IntoParallelRefIterator","","`IntoParallelRefIterator` implements the conversion to a…",N,N],[16,"Iter","","The type of the parallel iterator that will be returned.",11,N],[16,"Item","","The type of item that the parallel iterator will produce.…",11,N],[10,"par_iter","","Converts `self` into a parallel iterator.",11,N],[8,"IntoParallelRefMutIterator","","`IntoParallelRefMutIterator` implements the conversion to…",N,N],[16,"Iter","","The type of iterator that will be created.",12,N],[16,"Item","","The type of item that will be produced; this is typically…",12,N],[10,"par_iter_mut","","Creates the parallel iterator from `self`.",12,N],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",N,N],[16,"Item","","The type of item that this parallel iterator produces. For…",13,N],[11,"for_each","","Executes `OP` on each item produced by the iterator, in…",13,[[["self"],["op"]]]],[11,"for_each_with","","Executes `OP` on the given `init` value with each item…",13,[[["self"],["t"],["op"]]]],[11,"for_each_init","","Executes `OP` on a value returned by `init` with each item…",13,[[["self"],["init"],["op"]]]],[11,"try_for_each","","Executes a fallible `OP` on each item produced by the…",13,[[["self"],["op"]],["r"]]],[11,"try_for_each_with","","Executes a fallible `OP` on the given `init` value with…",13,[[["self"],["t"],["op"]],["r"]]],[11,"try_for_each_init","","Executes a fallible `OP` on a value returned by `init`…",13,[[["self"],["init"],["op"]],["r"]]],[11,"count","","Counts the number of items in this parallel iterator.",13,[[["self"]],["usize"]]],[11,"map","","Applies `map_op` to each item of this iterator, producing…",13,[[["self"],["f"]],["map"]]],[11,"map_with","","Applies `map_op` to the given `init` value with each item…",13,[[["self"],["t"],["f"]],["mapwith"]]],[11,"map_init","","Applies `map_op` to a value returned by `init` with each…",13,[[["self"],["init"],["f"]],["mapinit"]]],[11,"cloned","","Creates an iterator which clones all of its elements. This…",13,[[["self"]],["cloned"]]],[11,"inspect","","Applies `inspect_op` to a reference to each item of this…",13,[[["self"],["op"]],["inspect"]]],[11,"update","","Mutates each item of this iterator before yielding it.",13,[[["self"],["f"]],["update"]]],[11,"filter","","Applies `filter_op` to each item of this iterator,…",13,[[["self"],["p"]],["filter"]]],[11,"filter_map","","Applies `filter_op` to each item of this iterator to get…",13,[[["self"],["p"]],["filtermap"]]],[11,"flat_map","","Applies `map_op` to each item of this iterator to get…",13,[[["self"],["f"]],["flatmap"]]],[11,"flatten","","An adaptor that flattens iterable `Item`s into one large…",13,[[["self"]],["flatten"]]],[11,"reduce","","Reduces the items in the iterator into one item using…",13,N],[11,"reduce_with","","Reduces the items in the iterator into one item using…",13,[[["self"],["op"]],["option"]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a…",13,N],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a…",13,[[["self"],["op"]],["option"]]],[11,"fold","","Parallel fold is similar to sequential fold except that…",13,[[["self"],["id"],["f"]],["fold"]]],[11,"fold_with","","Applies `fold_op` to the given `init` value with each item…",13,[[["self"],["t"],["f"]],["foldwith"]]],[11,"try_fold","","Perform a fallible parallel fold.",13,[[["self"],["id"],["f"]],["tryfold"]]],[11,"try_fold_with","","Perform a fallible parallel fold with a cloneable `init`…",13,[[["self"],["t"],["f"]],["tryfoldwith"]]],[11,"sum","","Sums up the items in the iterator.",13,[[["self"]],["s"]]],[11,"product","","Multiplies all the items in the iterator.",13,[[["self"]],["p"]]],[11,"min","","Computes the minimum of all the items in the iterator. If…",13,[[["self"]],["option"]]],[11,"min_by","","Computes the minimum of all the items in the iterator with…",13,[[["self"],["f"]],["option"]]],[11,"min_by_key","","Computes the item that yields the minimum value for the…",13,[[["self"],["f"]],["option"]]],[11,"max","","Computes the maximum of all the items in the iterator. If…",13,[[["self"]],["option"]]],[11,"max_by","","Computes the maximum of all the items in the iterator with…",13,[[["self"],["f"]],["option"]]],[11,"max_by_key","","Computes the item that yields the maximum value for the…",13,[[["self"],["f"]],["option"]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",13,[[["self"],["c"]],["chain"]]],[11,"find_any","","Searches for some item in the parallel iterator that…",13,[[["self"],["p"]],["option"]]],[11,"find_first","","Searches for the sequentially first item in the parallel…",13,[[["self"],["p"]],["option"]]],[11,"find_last","","Searches for the sequentially last item in the parallel…",13,[[["self"],["p"]],["option"]]],[11,"any","","Searches for some item in the parallel iterator that…",13,[[["self"],["p"]],["bool"]]],[11,"all","","Tests that every item in the parallel iterator matches the…",13,[[["self"],["p"]],["bool"]]],[11,"while_some","","Creates an iterator over the `Some` items of this…",13,[[["self"]],["whilesome"]]],[11,"collect","","Create a fresh collection containing all the element…",13,[[["self"]],["c"]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of…",13,N],[11,"partition","","Partitions the items of a parallel iterator into a pair of…",13,N],[11,"partition_map","","Partitions and maps the items of a parallel iterator into…",13,N],[11,"intersperse","","Intersperses clones of an element between items of this…",13,N],[10,"drive_unindexed","","Internal method used to define the behavior of this…",13,N],[11,"opt_len","","Internal method used to define the behavior of this…",13,[[["self"]],["option",["usize"]]]],[8,"IndexedParallelIterator","","An iterator that supports \"random access\" to its data,…",N,N],[11,"collect_into_vec","","Collects the results of the iterator into the specified…",14,[[["self"],["vec"]]]],[11,"unzip_into_vecs","","Unzips the results of the iterator into the specified…",14,[[["self"],["vec"],["vec"]]]],[11,"zip","","Iterate over tuples `(A, B)`, where the items `A` are from…",14,[[["self"],["z"]],["zip"]]],[11,"zip_eq","","The same as `Zip`, but requires that both iterators have…",14,[[["self"],["z"]],["zipeq"]]],[11,"interleave","","Interleave elements of this iterator and the other given…",14,[[["self"],["i"]],["interleave"]]],[11,"interleave_shortest","","Interleave elements of this iterator and the other given…",14,[[["self"],["i"]],["interleaveshortest"]]],[11,"chunks","","Split an iterator up into fixed-size chunks.",14,[[["self"],["usize"]],["chunks"]]],[11,"cmp","","Lexicographically compares the elements of this…",14,[[["self"],["i"]],["ordering"]]],[11,"partial_cmp","","Lexicographically compares the elements of this…",14,[[["self"],["i"]],["option",["ordering"]]]],[11,"eq","","Determines if the elements of this `ParallelIterator` are…",14,[[["self"],["i"]],["bool"]]],[11,"ne","","Determines if the elements of this `ParallelIterator` are…",14,[[["self"],["i"]],["bool"]]],[11,"lt","","Determines if the elements of this `ParallelIterator` are…",14,[[["self"],["i"]],["bool"]]],[11,"le","","Determines if the elements of this `ParallelIterator` are…",14,[[["self"],["i"]],["bool"]]],[11,"gt","","Determines if the elements of this `ParallelIterator` are…",14,[[["self"],["i"]],["bool"]]],[11,"ge","","Determines if the elements of this `ParallelIterator` are…",14,[[["self"],["i"]],["bool"]]],[11,"enumerate","","Yields an index along with each item.",14,[[["self"]],["enumerate"]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",14,[[["self"],["usize"]],["skip"]]],[11,"take","","Creates an iterator that yields the first `n` elements.",14,[[["self"],["usize"]],["take"]]],[11,"position_any","","Searches for some item in the parallel iterator that…",14,[[["self"],["p"]],["option",["usize"]]]],[11,"position_first","","Searches for the sequentially first item in the parallel…",14,[[["self"],["p"]],["option",["usize"]]]],[11,"position_last","","Searches for the sequentially last item in the parallel…",14,[[["self"],["p"]],["option",["usize"]]]],[11,"rev","","Produces a new iterator with the elements of this iterator…",14,[[["self"]],["rev"]]],[11,"with_min_len","","Sets the minimum length of iterators desired to process in…",14,[[["self"],["usize"]],["minlen"]]],[11,"with_max_len","","Sets the maximum length of iterators desired to process in…",14,[[["self"],["usize"]],["maxlen"]]],[10,"len","","Produces an exact count of how many items this iterator…",14,[[["self"]],["usize"]]],[10,"drive","","Internal method used to define the behavior of this…",14,N],[10,"with_producer","","Internal method used to define the behavior of this…",14,N],[8,"FromParallelIterator","","`FromParallelIterator` implements the creation of a…",N,N],[10,"from_par_iter","","Creates an instance of the collection from the parallel…",15,[[["i"]],["self"]]],[8,"ParallelExtend","","`ParallelExtend` extends an existing collection with items…",N,N],[10,"par_extend","","Extends an instance of the collection with the elements…",16,[[["self"],["i"]]]],[0,"option","rayon","Parallel iterator types for [options][std::option]",N,N],[3,"IntoIter","rayon::option","A parallel iterator over the value in [`Some`] variant of…",N,N],[3,"Iter","","A parallel iterator over a reference to the [`Some`]…",N,N],[3,"IterMut","","A parallel iterator over a mutable reference to the…",N,N],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",N,N],[8,"ParallelBridge","rayon::prelude","Conversion trait to convert an `Iterator` to a…",N,N],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[["self"]],["iterbridge"]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type…",N,N],[3,"Iter","rayon::range","Parallel iterator over a range, implemented for all…",N,N],[0,"result","rayon","Parallel iterator types for [results][std::result]",N,N],[3,"IntoIter","rayon::result","Parallel iterator over a result",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a result",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a result",N,N],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",N,N],[3,"Iter","rayon::slice","Parallel iterator over immutable items in a slice",N,N],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks of…",N,N],[3,"Windows","","Parallel iterator over immutable overlapping windows of a…",N,N],[3,"IterMut","","Parallel iterator over mutable items in a slice",N,N],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of a…",N,N],[3,"Split","","Parallel iterator over slices separated by a predicate",N,N],[3,"SplitMut","","Parallel iterator over mutable slices separated by a…",N,N],[8,"ParallelSlice","","Parallel extensions for slices.",N,N],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the rest…",17,N],[11,"par_split","","Returns a parallel iterator over subslices separated by…",17,[[["self"],["p"]],["split"]]],[11,"par_windows","","Returns a parallel iterator over all contiguous windows of…",17,[[["self"],["usize"]],["windows"]]],[11,"par_chunks","","Returns a parallel iterator over at most `chunk_size`…",17,[[["self"],["usize"]],["chunks"]]],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",N,N],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement…",18,N],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices…",18,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut","","Returns a parallel iterator over at most `chunk_size`…",18,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort","","Sorts the slice in parallel.",18,[[["self"]]]],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",18,[[["self"],["f"]]]],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction function.",18,[[["self"],["f"]]]],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the…",18,[[["self"]]]],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function,…",18,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction…",18,[[["self"],["f"]]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",N,N],[3,"Chars","rayon::str","Parallel iterator over the characters of a string",N,N],[3,"CharIndices","","Parallel iterator over the characters of a string, with…",N,N],[3,"Bytes","","Parallel iterator over the bytes of a string",N,N],[3,"EncodeUtf16","","Parallel iterator over a string encoded as UTF-16",N,N],[3,"Split","","Parallel iterator over substrings separated by a pattern",N,N],[3,"SplitTerminator","","Parallel iterator over substrings separated by a…",N,N],[3,"Lines","","Parallel iterator over lines in a string",N,N],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",N,N],[3,"Matches","","Parallel iterator over substrings that match a pattern",N,N],[3,"MatchIndices","","Parallel iterator over substrings that match a pattern,…",N,N],[8,"ParallelString","","Parallel extensions for strings.",N,N],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement…",19,[[["self"]],["str"]]],[11,"par_chars","","Returns a parallel iterator over the characters of a string.",19,[[["self"]],["chars"]]],[11,"par_char_indices","","Returns a parallel iterator over the characters of a…",19,[[["self"]],["charindices"]]],[11,"par_bytes","","Returns a parallel iterator over the bytes of a string.",19,[[["self"]],["bytes"]]],[11,"par_encode_utf16","","Returns a parallel iterator over a string encoded as UTF-16.",19,[[["self"]],["encodeutf16"]]],[11,"par_split","","Returns a parallel iterator over substrings separated by a…",19,[[["self"],["p"]],["split"]]],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by…",19,[[["self"],["p"]],["splitterminator"]]],[11,"par_lines","","Returns a parallel iterator over the lines of a string,…",19,[[["self"]],["lines"]]],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a…",19,[[["self"]],["splitwhitespace"]]],[11,"par_matches","","Returns a parallel iterator over substrings that match a…",19,[[["self"],["p"]],["matches"]]],[11,"par_match_indices","","Returns a parallel iterator over substrings that match a…",19,[[["self"],["p"]],["matchindices"]]],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",N,N],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",N,N],[11,"into","rayon","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::binary_heap","",25,[[["self"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into_par_iter","","",26,[[["self"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_map","",27,[[["self"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into_par_iter","","",28,[[["self"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into_par_iter","","",29,[[["self"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_set","",30,[[["self"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into_par_iter","","",31,[[["self"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_map","",32,[[["self"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into_par_iter","","",33,[[["self"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into_par_iter","","",34,[[["self"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_set","",35,[[["self"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into_par_iter","","",36,[[["self"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::linked_list","",37,[[["self"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into_par_iter","","",38,[[["self"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into_par_iter","","",39,[[["self"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::vec_deque","",40,[[["self"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into_par_iter","","",41,[[["self"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into_par_iter","","",42,[[["self"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::iter","",0,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_par_iter","","",43,[[["self"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into_par_iter","","",44,[[["self"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into_par_iter","","",45,[[["self"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into_par_iter","","",46,[[["self"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into_par_iter","","",47,[[["self"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into_par_iter","","",48,[[["self"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into_par_iter","","",49,[[["self"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into_par_iter","","",50,[[["self"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into_par_iter","","",51,[[["self"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into_par_iter","","",52,[[["self"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into_par_iter","","",53,[[["self"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into_par_iter","","",54,[[["self"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into_par_iter","","",55,[[["self"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_par_iter","","",56,[[["self"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into_par_iter","","",57,[[["self"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into_par_iter","","",58,[[["self"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into_par_iter","","",59,[[["self"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into_par_iter","","",60,[[["self"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into_par_iter","","",61,[[["self"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into_par_iter","","",62,[[["self"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into_par_iter","","",63,[[["self"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into_par_iter","","",64,[[["self"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into_par_iter","","",65,[[["self"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into_par_iter","","",66,[[["self"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into_par_iter","","",67,[[["self"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into_par_iter","","",68,[[["self"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into_par_iter","","",69,[[["self"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into_par_iter","","",70,[[["self"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into_par_iter","","",71,[[["self"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into_par_iter","","",72,[[["self"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into_par_iter","","",8,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_par_iter","","",73,[[["self"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into_par_iter","","",74,[[["self"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into_par_iter","","",75,[[["self"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::option","",76,[[["self"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into_par_iter","","",77,[[["self"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into_par_iter","","",78,[[["self"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::range","",79,[[["self"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::result","",80,[[["self"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_par_iter","","",81,[[["self"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into_par_iter","","",82,[[["self"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::slice","",83,[[["self"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_par_iter","","",84,[[["self"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into_par_iter","","",85,[[["self"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into_par_iter","","",86,[[["self"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into_par_iter","","",87,[[["self"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_par_iter","","",88,[[["self"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into_par_iter","","",89,[[["self"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::str","",90,[[["self"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into_par_iter","","",91,[[["self"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into_par_iter","","",92,[[["self"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into_par_iter","","",93,[[["self"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into_par_iter","","",94,[[["self"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into_par_iter","","",95,[[["self"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into_par_iter","","",96,[[["self"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_par_iter","","",97,[[["self"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into_par_iter","","",98,[[["self"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into_par_iter","","",99,[[["self"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::vec","",100,[[["self"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"default","rayon","",21,[[],["threadpoolbuilder"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"drop","","",20,N],[11,"description","","",22,[[["self"]],["str"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"as_ref","rayon::iter","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,N],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"extend","","",0,N],[11,"clone","","",0,[[["self"]],["either"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",0,N],[11,"hash","","",0,N],[11,"deref_mut","","",0,N],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,N],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"into","","",0,[[["self"]],["result"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"drive_unindexed","rayon::collections::binary_heap","",25,N],[11,"opt_len","","",25,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",26,N],[11,"opt_len","","",26,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::btree_map","",27,N],[11,"opt_len","","",27,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",28,N],[11,"opt_len","","",28,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",29,N],[11,"opt_len","","",29,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::btree_set","",30,N],[11,"opt_len","","",30,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",31,N],[11,"opt_len","","",31,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::hash_map","",32,N],[11,"opt_len","","",32,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",33,N],[11,"opt_len","","",33,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",34,N],[11,"opt_len","","",34,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::hash_set","",35,N],[11,"opt_len","","",35,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",36,N],[11,"opt_len","","",36,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::linked_list","",37,N],[11,"opt_len","","",37,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",38,N],[11,"opt_len","","",38,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",39,N],[11,"opt_len","","",39,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::vec_deque","",40,N],[11,"opt_len","","",40,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",41,N],[11,"opt_len","","",41,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",42,N],[11,"opt_len","","",42,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::iter","",43,N],[11,"drive_unindexed","","",44,N],[11,"opt_len","","",44,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",45,N],[11,"opt_len","","",45,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",46,N],[11,"opt_len","","",46,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",47,N],[11,"drive_unindexed","","",48,N],[11,"drive_unindexed","","",49,N],[11,"drive_unindexed","","",50,N],[11,"drive_unindexed","","",51,N],[11,"drive_unindexed","","",52,N],[11,"drive_unindexed","","",53,N],[11,"drive_unindexed","","",54,N],[11,"drive_unindexed","","",55,N],[11,"opt_len","","",55,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",56,N],[11,"drive_unindexed","","",57,N],[11,"opt_len","","",57,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",58,N],[11,"opt_len","","",58,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",59,N],[11,"opt_len","","",59,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",60,N],[11,"opt_len","","",60,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",61,N],[11,"opt_len","","",61,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",62,N],[11,"opt_len","","",62,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",63,N],[11,"opt_len","","",63,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",64,N],[11,"opt_len","","",64,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",65,N],[11,"opt_len","","",65,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",66,N],[11,"opt_len","","",66,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",67,N],[11,"opt_len","","",67,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",68,N],[11,"opt_len","","",68,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",69,N],[11,"opt_len","","",69,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",71,N],[11,"opt_len","","",71,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",72,N],[11,"drive_unindexed","","",8,N],[11,"drive_unindexed","","",73,N],[11,"opt_len","","",73,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",74,N],[11,"opt_len","","",74,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",75,N],[11,"opt_len","","",75,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::option","",76,N],[11,"opt_len","","",76,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",77,N],[11,"opt_len","","",77,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::range","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::result","",80,N],[11,"opt_len","","",80,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",81,N],[11,"opt_len","","",81,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",82,N],[11,"opt_len","","",82,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::slice","",83,N],[11,"opt_len","","",83,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",84,N],[11,"opt_len","","",84,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",85,N],[11,"opt_len","","",85,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",86,N],[11,"opt_len","","",86,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",87,N],[11,"opt_len","","",87,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",88,N],[11,"drive_unindexed","","",89,N],[11,"drive_unindexed","rayon::str","",90,N],[11,"drive_unindexed","","",91,N],[11,"drive_unindexed","","",92,N],[11,"drive_unindexed","","",93,N],[11,"drive_unindexed","","",94,N],[11,"drive_unindexed","","",95,N],[11,"drive_unindexed","","",96,N],[11,"drive_unindexed","","",97,N],[11,"drive_unindexed","","",98,N],[11,"drive_unindexed","","",99,N],[11,"drive_unindexed","rayon::vec","",100,N],[11,"opt_len","","",100,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::iter","",0,N],[11,"opt_len","","",0,[[["self"]],["option",["usize"]]]],[11,"drive","rayon::collections::binary_heap","",25,N],[11,"len","","",25,[[["self"]],["usize"]]],[11,"with_producer","","",25,N],[11,"drive","","",26,N],[11,"len","","",26,[[["self"]],["usize"]]],[11,"with_producer","","",26,N],[11,"drive","rayon::collections::vec_deque","",40,N],[11,"len","","",40,[[["self"]],["usize"]]],[11,"with_producer","","",40,N],[11,"drive","","",41,N],[11,"len","","",41,[[["self"]],["usize"]]],[11,"with_producer","","",41,N],[11,"drive","","",42,N],[11,"len","","",42,[[["self"]],["usize"]]],[11,"with_producer","","",42,N],[11,"drive","rayon::iter","",44,N],[11,"len","","",44,[[["self"]],["usize"]]],[11,"with_producer","","",44,N],[11,"drive","","",45,N],[11,"len","","",45,[[["self"]],["usize"]]],[11,"with_producer","","",45,N],[11,"drive","","",46,N],[11,"len","","",46,[[["self"]],["usize"]]],[11,"with_producer","","",46,N],[11,"len","","",55,[[["self"]],["usize"]]],[11,"drive","","",55,N],[11,"with_producer","","",55,N],[11,"len","","",57,[[["self"]],["usize"]]],[11,"drive","","",57,N],[11,"with_producer","","",57,N],[11,"drive","","",58,N],[11,"len","","",58,[[["self"]],["usize"]]],[11,"with_producer","","",58,N],[11,"drive","","",59,N],[11,"len","","",59,[[["self"]],["usize"]]],[11,"with_producer","","",59,N],[11,"drive","","",60,N],[11,"len","","",60,[[["self"]],["usize"]]],[11,"with_producer","","",60,N],[11,"drive","","",61,N],[11,"len","","",61,[[["self"]],["usize"]]],[11,"with_producer","","",61,N],[11,"drive","","",62,N],[11,"len","","",62,[[["self"]],["usize"]]],[11,"with_producer","","",62,N],[11,"drive","","",63,N],[11,"len","","",63,[[["self"]],["usize"]]],[11,"with_producer","","",63,N],[11,"drive","","",64,N],[11,"len","","",64,[[["self"]],["usize"]]],[11,"with_producer","","",64,N],[11,"drive","","",65,N],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,N],[11,"drive","","",66,N],[11,"len","","",66,[[["self"]],["usize"]]],[11,"with_producer","","",66,N],[11,"drive","","",67,N],[11,"len","","",67,[[["self"]],["usize"]]],[11,"with_producer","","",67,N],[11,"drive","","",68,N],[11,"len","","",68,[[["self"]],["usize"]]],[11,"with_producer","","",68,N],[11,"drive","","",69,N],[11,"len","","",69,[[["self"]],["usize"]]],[11,"with_producer","","",69,N],[11,"drive","","",70,N],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,N],[11,"drive","","",71,N],[11,"len","","",71,[[["self"]],["usize"]]],[11,"with_producer","","",71,N],[11,"drive","","",73,N],[11,"with_producer","","",73,N],[11,"len","","",73,[[["self"]],["usize"]]],[11,"drive","","",74,N],[11,"len","","",74,[[["self"]],["usize"]]],[11,"with_producer","","",74,N],[11,"drive","","",75,N],[11,"len","","",75,[[["self"]],["usize"]]],[11,"with_producer","","",75,N],[11,"drive","rayon::option","",76,N],[11,"len","","",76,[[["self"]],["usize"]]],[11,"with_producer","","",76,N],[11,"drive","","",77,N],[11,"len","","",77,[[["self"]],["usize"]]],[11,"with_producer","","",77,N],[11,"drive","","",78,N],[11,"len","","",78,[[["self"]],["usize"]]],[11,"with_producer","","",78,N],[11,"drive","rayon::range","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","rayon::result","",80,N],[11,"len","","",80,[[["self"]],["usize"]]],[11,"with_producer","","",80,N],[11,"drive","","",81,N],[11,"len","","",81,[[["self"]],["usize"]]],[11,"with_producer","","",81,N],[11,"drive","","",82,N],[11,"len","","",82,[[["self"]],["usize"]]],[11,"with_producer","","",82,N],[11,"drive","rayon::slice","",83,N],[11,"len","","",83,[[["self"]],["usize"]]],[11,"with_producer","","",83,N],[11,"drive","","",84,N],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,N],[11,"drive","","",85,N],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,N],[11,"drive","","",86,N],[11,"len","","",86,[[["self"]],["usize"]]],[11,"with_producer","","",86,N],[11,"drive","","",87,N],[11,"len","","",87,[[["self"]],["usize"]]],[11,"with_producer","","",87,N],[11,"drive","rayon::vec","",100,N],[11,"len","","",100,[[["self"]],["usize"]]],[11,"with_producer","","",100,N],[11,"drive","rayon::iter","",0,N],[11,"len","","",0,[[["self"]],["usize"]]],[11,"with_producer","","",0,N],[11,"par_extend","","",0,[[["self"],["i"]]]],[11,"clone","rayon::collections::binary_heap","",25,[[["self"]],["intoiter"]]],[11,"clone","","",26,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_map","",28,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_set","",31,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_map","",33,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_set","",36,[[["self"]],["self"]]],[11,"clone","rayon::collections::linked_list","",37,[[["self"]],["intoiter"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","rayon::collections::vec_deque","",40,[[["self"]],["intoiter"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","rayon::iter","",43,[[["self"]],["iterbridge"]]],[11,"clone","","",44,[[["self"]],["chain"]]],[11,"clone","","",45,[[["self"]],["chunks"]]],[11,"clone","","",46,[[["self"]],["enumerate"]]],[11,"clone","","",47,[[["self"]],["filter"]]],[11,"clone","","",48,[[["self"]],["filtermap"]]],[11,"clone","","",49,[[["self"]],["flatmap"]]],[11,"clone","","",50,[[["self"]],["flatten"]]],[11,"clone","","",51,[[["self"]],["fold"]]],[11,"clone","","",52,[[["self"]],["foldwith"]]],[11,"clone","","",53,[[["self"]],["tryfold"]]],[11,"clone","","",54,[[["self"]],["tryfoldwith"]]],[11,"clone","","",55,[[["self"]],["skip"]]],[11,"clone","","",56,[[["self"]],["split"]]],[11,"clone","","",57,[[["self"]],["take"]]],[11,"clone","","",58,[[["self"]],["map"]]],[11,"clone","","",59,[[["self"]],["mapwith"]]],[11,"clone","","",60,[[["self"]],["mapinit"]]],[11,"clone","","",61,[[["self"]],["zip"]]],[11,"clone","","",62,[[["self"]],["zipeq"]]],[11,"clone","","",63,[[["self"]],["interleave"]]],[11,"clone","","",64,[[["self"]],["interleaveshortest"]]],[11,"clone","","",65,[[["self"]],["intersperse"]]],[11,"clone","","",66,[[["self"]],["update"]]],[11,"clone","","",67,[[["self"]],["rev"]]],[11,"clone","","",68,[[["self"]],["minlen"]]],[11,"clone","","",69,[[["self"]],["maxlen"]]],[11,"clone","","",70,[[["self"]],["cloned"]]],[11,"clone","","",71,[[["self"]],["inspect"]]],[11,"clone","","",72,[[["self"]],["whilesome"]]],[11,"clone","","",8,[[["self"]],["repeat"]]],[11,"clone","","",73,[[["self"]],["repeatn"]]],[11,"clone","","",74,[[["self"]],["self"]]],[11,"clone","","",75,[[["self"]],["once"]]],[11,"clone","rayon::option","",76,[[["self"]],["intoiter"]]],[11,"clone","","",77,[[["self"]],["self"]]],[11,"clone","rayon::range","",79,[[["self"]],["iter"]]],[11,"clone","rayon::result","",80,[[["self"]],["intoiter"]]],[11,"clone","","",81,[[["self"]],["self"]]],[11,"clone","rayon::slice","",83,[[["self"]],["self"]]],[11,"clone","","",84,[[["self"]],["self"]]],[11,"clone","","",85,[[["self"]],["self"]]],[11,"clone","","",88,[[["self"]],["self"]]],[11,"clone","rayon::str","",90,[[["self"]],["chars"]]],[11,"clone","","",91,[[["self"]],["charindices"]]],[11,"clone","","",92,[[["self"]],["bytes"]]],[11,"clone","","",93,[[["self"]],["encodeutf16"]]],[11,"clone","","",94,[[["self"]],["split"]]],[11,"clone","","",95,[[["self"]],["splitterminator"]]],[11,"clone","","",96,[[["self"]],["lines"]]],[11,"clone","","",97,[[["self"]],["splitwhitespace"]]],[11,"clone","","",98,[[["self"]],["matches"]]],[11,"clone","","",99,[[["self"]],["matchindices"]]],[11,"clone","rayon::vec","",100,[[["self"]],["intoiter"]]],[11,"fmt","rayon::collections::binary_heap","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::btree_map","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::btree_set","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::hash_map","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::hash_set","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::linked_list","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::vec_deque","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::iter","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::option","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::range","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::result","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::slice","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::str","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::vec","",100,[[["self"],["formatter"]],["result"]]],[11,"new","rayon","Deprecated in favor of `ThreadPoolBuilder::build`.",20,[[["configuration"]],["result",["threadpool","box"]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",20,[[["self"],["op"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",20,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",20,[[["self"]],["option",["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",20,[[["self"]],["option",["bool"]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",20,N],[11,"scope","","Creates a scope that executes within this thread-pool.…",20,[[["self"],["op"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",20,N],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",21,[[],["threadpoolbuilder"]]],[11,"build","","Create a new `ThreadPool` initialized using this…",21,[[["self"]],["result",["threadpool","threadpoolbuilderror"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",21,[[["self"]],["result",["threadpoolbuilderror"]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",21,[[["self"],["f"]],["threadpoolbuilder"]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",21,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",21,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"stack_size","","Set the stack size of the worker threads",21,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"breadth_first","","Suggest to worker threads that they execute spawned jobs…",21,[[["self"]],["threadpoolbuilder"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",21,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",21,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"migrated","","Returns `true` if the closure was called from a different…",23,[[["self"]],["bool"]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",24,N],[11,"is_left","rayon::iter","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"left_or","","Return left value or given value",0,[[["self"],["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[["self"]],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["self"],["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["self"],["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[["self"]],["r"]]],[11,"right_or_else","","Returns left value or computes it from a closure",0,[[["self"],["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]]],"paths":[[4,"Either"],[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[3,"Repeat"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[8,"ParallelString"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"ThreadPoolBuildError"],[3,"FnContext"],[3,"Scope"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapWith"],[3,"MapInit"],[3,"Zip"],[3,"ZipEq"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"Update"],[3,"Rev"],[3,"MinLen"],[3,"MaxLen"],[3,"Cloned"],[3,"Inspect"],[3,"WhileSome"],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"IntoIter"]]};
searchIndex["rayon_core"]={"doc":"Under construction","items":[[3,"ThreadPool","rayon_core","Represents a user created [thread-pool].",N,N],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",N,N],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",N,N],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",N,N],[3,"Configuration","","Contains the rayon thread pool configuration. Use…",N,N],[3,"FnContext","","Provides the calling context to a closure called by…",N,N],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",N,[[],["option",["usize"]]]],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether…",N,[[],["option",["bool"]]]],[5,"join","","Takes two closures and potentially runs them in parallel.…",N,N],[5,"join_context","","Identical to `join`, except that the closures have a…",N,N],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure…",N,[[["op"]],["r"]]],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\"…",N,[[["f"]]]],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",N,[[],["usize"]]],[5,"initialize","","Deprecated in favor of `ThreadPoolBuilder::build_global`.",N,[[["configuration"]],["result",["box"]]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",0,[[["self"],["body"]]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",1,[[["configuration"]],["result",["threadpool","box"]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",1,[[["self"],["op"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",1,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",1,[[["self"]],["option",["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",1,[[["self"]],["option",["bool"]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",1,N],[11,"scope","","Creates a scope that executes within this thread-pool.…",1,[[["self"],["op"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",1,[[["self"],["op"]]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",2,[[],["threadpoolbuilder"]]],[11,"build","","Create a new `ThreadPool` initialized using this…",2,[[["self"]],["result",["threadpool","threadpoolbuilderror"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",2,[[["self"]],["result",["threadpoolbuilderror"]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",2,[[["self"],["f"]],["self"]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",2,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",2,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"stack_size","","Set the stack size of the worker threads",2,[[["self"],["usize"]],["self"]]],[11,"breadth_first","","Suggest to worker threads that they execute spawned jobs…",2,[[["self"]],["self"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",2,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",2,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"new","","Creates and return a valid rayon thread pool…",3,[[],["configuration"]]],[11,"build","","Deprecated in favor of `ThreadPoolBuilder::build`.",3,[[["self"]],["result",["threadpool","box"]]]],[11,"thread_name","","Deprecated in favor of `ThreadPoolBuilder::thread_name`.",3,[[["self"],["f"]],["self"]]],[11,"num_threads","","Deprecated in favor of `ThreadPoolBuilder::num_threads`.",3,[[["self"],["usize"]],["configuration"]]],[11,"panic_handler","","Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",3,[[["self"],["h"]],["configuration"]]],[11,"stack_size","","Deprecated in favor of `ThreadPoolBuilder::stack_size`.",3,[[["self"],["usize"]],["self"]]],[11,"breadth_first","","Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",3,[[["self"]],["self"]]],[11,"start_handler","","Deprecated in favor of `ThreadPoolBuilder::start_handler`.",3,[[["self"],["h"]],["configuration"]]],[11,"exit_handler","","Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",3,[[["self"],["h"]],["configuration"]]],[11,"migrated","","Returns `true` if the closure was called from a different…",4,[[["self"]],["bool"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"default","","",2,[[],["threadpoolbuilder"]]],[11,"default","","",3,[[],["configuration"]]],[11,"drop","","",1,[[["self"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]]],"paths":[[3,"Scope"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"],[3,"ThreadPoolBuildError"]]};
searchIndex["rustc_demangle"]={"doc":"Demangle Rust compiler symbol names.","items":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",N,N],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when…",N,N],[5,"demangle","","De-mangles a Rust symbol into a more readable version",N,[[["str"]],["demangle"]]],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the…",N,[[["str"]],["result",["demangle","trydemangleerror"]]]],[11,"as_str","","Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["trydemangleerror"]]]],"paths":[[3,"Demangle"],[3,"TryDemangleError"]]};
searchIndex["rustc_hash"]={"doc":"Fast, non-cryptographic hash used by rustc and Firefox.","items":[[3,"FxHasher","rustc_hash","A speedy hash algorithm for use within rustc. The hashmap…",N,N],[6,"FxHashMap","","Type alias for a hashmap using the `fx` hash algorithm.",N,N],[6,"FxHashSet","","Type alias for a hashmap using the `fx` hash algorithm.",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["fxhasher"]]],[11,"write","","",0,N],[11,"write_u8","","",0,[[["self"],["u8"]]]],[11,"write_u16","","",0,[[["self"],["u16"]]]],[11,"write_u32","","",0,[[["self"],["u32"]]]],[11,"write_u64","","",0,[[["self"],["u64"]]]],[11,"write_usize","","",0,[[["self"],["usize"]]]],[11,"finish","","",0,[[["self"]],["u64"]]]],"paths":[[3,"FxHasher"]]};
searchIndex["rusttype"]={"doc":"RustType is a pure Rust alternative to libraries like…","items":[[3,"Curve","rusttype","A quadratic Bezier curve, starting at `p[0]`, ending at…",N,N],[12,"p","","",0,N],[3,"Line","","A straight line between two points, `p[0]` and `p[1]`",N,N],[12,"p","","",1,N],[3,"Point","","A point in 2-dimensional space, with each dimension of…",N,N],[12,"x","","",2,N],[12,"y","","",2,N],[3,"Rect","","A rectangle, with top-left corner at `min`, and…",N,N],[12,"min","","",3,N],[12,"max","","",3,N],[3,"Vector","","A vector in 2-dimensional space, with each dimension of…",N,N],[12,"x","","",4,N],[12,"y","","",4,N],[3,"FontCollection","","A collection of fonts read straight from a font file's…",N,N],[3,"Font","","A single font. This may or may not own the font data.",N,N],[3,"Codepoint","","Represents a Unicode code point.",N,N],[12,"0","","",5,N],[3,"GlyphId","","Represents a glyph identifier for a particular font. This…",N,N],[12,"0","","",6,N],[3,"Glyph","","A single glyph of a font. this may either be a thin…",N,N],[3,"SharedGlyphData","","",N,N],[12,"id","","",7,N],[12,"extents","","",7,N],[12,"scale_for_1_pixel","","",7,N],[12,"unit_h_metrics","","",7,N],[12,"shape","","",7,N],[3,"HMetrics","","The \"horizontal metrics\" of a glyph. This is useful for…",N,N],[12,"advance_width","","The horizontal offset that the origin of the next glyph…",8,N],[12,"left_side_bearing","","The horizontal offset between the origin of this glyph and…",8,N],[3,"VMetrics","","The \"vertical metrics\" of a font at a particular scale.…",N,N],[12,"ascent","","The highest point that any glyph in the font extends to…",9,N],[12,"descent","","The lowest point that any glyph in the font extends to…",9,N],[12,"line_gap","","The gap to leave between the descent of one line and the…",9,N],[3,"ScaledGlyph","","A glyph augmented with scaling information. You can query…",N,N],[3,"PositionedGlyph","","A glyph augmented with positioning and scaling…",N,N],[3,"Scale","","Defines the size of a rendered face of a font, in pixels,…",N,N],[12,"x","","Horizontal scale, in pixels.",10,N],[12,"y","","Vertical scale, in pixels.",10,N],[3,"IntoFontsIter","","",N,N],[3,"GlyphIter","","",N,N],[3,"LayoutIter","","",N,N],[3,"Contour","","A closed loop consisting of a sequence of `Segment`s.",N,N],[12,"segments","","",11,N],[4,"SharedBytes","","`SharedBytes` handles the lifetime of font data used in…",N,N],[13,"ByRef","","",12,N],[13,"ByArc","","",12,N],[4,"Segment","","Part of a `Contour`, either a `Line` or a `Curve`.",N,N],[13,"Line","","",13,N],[13,"Curve","","",13,N],[4,"Error","","The type for errors returned by rusttype.",N,N],[13,"UnrecognizedFormat","","Font data presented to rusttype is not in a format that…",14,N],[13,"IllFormed","","Font data presented to rusttype was ill-formed (lacking…",14,N],[13,"CollectionIndexOutOfBounds","","The caller tried to access the `i`'th font from a…",14,N],[13,"CollectionContainsMultipleFonts","","The caller tried to convert a `FontCollection` into a font…",14,N],[5,"point","","A convenience function for generating `Point`s.",N,[[["n"],["n"]],["point"]]],[5,"vector","","A convenience function for generating `Vector`s.",N,[[["n"],["n"]],["vector"]]],[11,"width","","",3,[[["self"]],["n"]]],[11,"height","","",3,[[["self"]],["n"]]],[0,"gpu_cache","","This module provides capabilities for managing a cache of…",N,N],[3,"Cache","rusttype::gpu_cache","An implementation of a dynamic GPU glyph cache. See the…",N,N],[3,"CacheBuilder","","Builder & rebuilder for `Cache`.",N,N],[4,"CacheReadErr","","Returned from `Cache::rect_for`.",N,N],[13,"GlyphNotCached","","Indicates that the requested glyph is not present in the…",15,N],[4,"CacheWriteErr","","Returned from `Cache::cache_queued`.",N,N],[13,"GlyphTooLarge","","At least one of the queued glyphs is too big to fit into…",16,N],[13,"NoRoomForWholeQueue","","Not all of the requested glyphs can fit into the cache,…",16,N],[4,"CachedBy","","Successful method of caching of the queue.",N,N],[13,"Adding","","Added any additional glyphs into the texture without…",17,N],[13,"Reordering","","Fit the glyph queue by re-ordering all glyph texture…",17,N],[6,"TextureCoords","","Texture coordinates (floating point) of the quad for a…",N,N],[11,"dimensions","","`width` & `height` dimensions of the 2D texture that will…",18,[[["self"],["u32"],["u32"]],["self"]]],[11,"scale_tolerance","","Specifies the tolerances (maximum allowed difference) for…",18,[[["self"],["v"]],["self"]]],[11,"position_tolerance","","Specifies the tolerances (maximum allowed difference) for…",18,[[["self"],["v"]],["self"]]],[11,"pad_glyphs","","Pack glyphs in texture with a padding of a single zero…",18,[[["self"],["bool"]],["self"]]],[11,"multithread","","When multiple CPU cores are available spread rasterization…",18,[[["self"],["bool"]],["self"]]],[11,"build","","Constructs a new cache. Note that this is just the CPU…",18,[[["self"]],["cache"]]],[11,"rebuild","","Rebuilds a cache with new attributes. Carries over the…",18,[[["self"],["cache"]]]],[11,"builder","","Returns a default `CacheBuilder`.",19,[[],["cachebuilder"]]],[11,"scale_tolerance","","Returns the current scale tolerance for the cache.",19,[[["self"]],["f32"]]],[11,"position_tolerance","","Returns the current subpixel position tolerance for the…",19,[[["self"]],["f32"]]],[11,"dimensions","","Returns the cache texture dimensions assumed by the cache.…",19,N],[11,"queue_glyph","","Queue a glyph for caching by the next call to…",19,[[["self"],["usize"],["positionedglyph"]]]],[11,"clear","","Clears the cache. Does not affect the glyph queue.",19,[[["self"]]]],[11,"clear_queue","","Clears the glyph queue.",19,[[["self"]]]],[11,"to_builder","","Returns a `CacheBuilder` with this cache's attributes.",19,[[["self"]],["cachebuilder"]]],[11,"cache_queued","","Caches the queued glyphs. If this is unsuccessful, the…",19,[[["self"],["f"]],["result",["cachedby","cachewriteerr"]]]],[11,"rect_for","","Retrieves the (floating point) texture coordinates of the…",19,[[["self"],["usize"],["positionedglyph"]],["result",["option","cachereaderr"]]]],[8,"IntoGlyphId","rusttype","A trait for types that can be converted into a `GlyphId`,…",N,N],[10,"into_glyph_id","","Convert `self` into a `GlyphId`, consulting the index map…",20,[[["self"],["font"]],["glyphid"]]],[11,"uniform","","Uniform scaling, equivalent to `Scale { x: s, y: s }`.",10,[[["f32"]],["scale"]]],[11,"from_bytes","","Constructs a font collection from an array of bytes,…",21,[[["b"]],["result",["fontcollection","error"]]]],[11,"into_font","","If this `FontCollection` holds a single font, or a…",21,[[["self"]],["result",["font","error"]]]],[11,"font_at","","Gets the font at index `i` in the font collection, if it…",21,[[["self"],["usize"]],["result",["font","error"]]]],[11,"into_fonts","","Converts `self` into an `Iterator` yielding each `Font`…",21,[[["self"]],["intofontsiter"]]],[11,"from_bytes","","Constructs a font from an array of bytes, this is a…",22,[[["b"]],["result",["font","error"]]]],[11,"v_metrics","","The \"vertical metrics\" for this font at a given scale.…",22,[[["self"],["scale"]],["vmetrics"]]],[11,"v_metrics_unscaled","","Get the unscaled VMetrics for this font, shared by all…",22,[[["self"]],["vmetrics"]]],[11,"units_per_em","","Returns the units per EM square of this font",22,[[["self"]],["u16"]]],[11,"glyph_count","","The number of glyphs present in this font. Glyph…",22,[[["self"]],["usize"]]],[11,"glyph","","Returns the corresponding glyph for a Unicode code point…",22,[[["self"],["c"]],["glyph"]]],[11,"glyphs_for","","A convenience function.",22,[[["self"],["i"]],["glyphiter"]]],[11,"font_name_strings","","Returns an iterator over the names for this font.",22,[[["self"]],["fontnameiter",["sharedbytes"]]]],[11,"layout","","A convenience function for laying out glyphs for a string…",22,[[["self"],["str"],["scale"],["point",["f32"]]],["layoutiter"]]],[11,"pair_kerning","","Returns additional kerning to apply as well as that given…",22,[[["self"],["scale"],["a"],["b"]],["f32"]]],[11,"font","","The font to which this glyph belongs. If the glyph is a…",23,[[["self"]],["option",["font"]]]],[11,"id","","The glyph identifier for this glyph.",23,[[["self"]],["glyphid"]]],[11,"scaled","","Augments this glyph with scaling information, making…",23,[[["self"],["scale"]],["scaledglyph"]]],[11,"standalone","","Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces…",23,[[["self"]],["glyph"]]],[11,"get_data","","Get the data from this glyph (such as width, extents,…",23,[[["self"]],["option",["arc"]]]],[11,"id","","The glyph identifier for this glyph.",24,[[["self"]],["glyphid"]]],[11,"font","","The font to which this glyph belongs. If the glyph is a…",24,[[["self"]],["option",["font"]]]],[11,"into_unscaled","","A reference to this glyph without the scaling",24,[[["self"]],["glyph"]]],[11,"unscaled","","Removes the scaling from this glyph",24,[[["self"]],["glyph"]]],[11,"positioned","","Augments this glyph with positioning information, making…",24,[[["self"],["point",["f32"]]],["positionedglyph"]]],[11,"scale","","",24,[[["self"]],["scale"]]],[11,"h_metrics","","Retrieves the \"horizontal metrics\" of this glyph. See…",24,[[["self"]],["hmetrics"]]],[11,"shape","","Produces a list of the contours that make up the shape of…",24,[[["self"]],["option",["vec"]]]],[11,"exact_bounding_box","","The bounding box of the shape of this glyph, not to be…",24,[[["self"]],["option",["rect"]]]],[11,"standalone","","Constructs a glyph that owns its data from this glyph.…",24,[[["self"]],["scaledglyph"]]],[11,"id","","The glyph identifier for this glyph.",25,[[["self"]],["glyphid"]]],[11,"font","","The font to which this glyph belongs. If the glyph is a…",25,[[["self"]],["option",["font"]]]],[11,"unpositioned","","A reference to this glyph without positioning",25,[[["self"]],["scaledglyph"]]],[11,"into_unpositioned","","Removes the positioning from this glyph",25,[[["self"]],["scaledglyph"]]],[11,"pixel_bounding_box","","The conservative pixel-boundary bounding box for this…",25,[[["self"]],["option",["rect"]]]],[11,"shape","","Similar to `ScaledGlyph::shape()`, but with the position…",25,[[["self"]],["option",["vec"]]]],[11,"scale","","",25,[[["self"]],["scale"]]],[11,"position","","",25,[[["self"]],["point",["f32"]]]],[11,"draw","","Rasterises this glyph. For each pixel in the rect given by…",25,[[["self"],["o"]]]],[11,"standalone","","Constructs a glyph that owns its data from this glyph.…",25,[[["self"]],["positionedglyph"]]],[11,"set_position","","Resets positioning information and recalculates the pixel…",25,[[["self"],["point",["f32"]]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into_iter","","",26,[[["self"]],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"into_iter","","",27,[[["self"]],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"into_iter","","",28,[[["self"]],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","rusttype::gpu_cache","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into_glyph_id","rusttype","",5,[[["self"],["font"]],["glyphid"]]],[11,"into_glyph_id","","",6,[[["self"],["font"]],["glyphid"]]],[11,"next","","",26,[[["self"]],["option"]]],[11,"next","","",27,[[["self"]],["option",["glyph"]]]],[11,"next","","",28,[[["self"]],["option",["positionedglyph"]]]],[11,"partial_cmp","","",2,[[["self"],["point"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["point"]],["bool"]]],[11,"le","","",2,[[["self"],["point"]],["bool"]]],[11,"gt","","",2,[[["self"],["point"]],["bool"]]],[11,"ge","","",2,[[["self"],["point"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["vector"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["vector"]],["bool"]]],[11,"le","","",4,[[["self"],["vector"]],["bool"]]],[11,"gt","","",4,[[["self"],["vector"]],["bool"]]],[11,"ge","","",4,[[["self"],["vector"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["line"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["line"]],["bool"]]],[11,"le","","",1,[[["self"],["line"]],["bool"]]],[11,"gt","","",1,[[["self"],["line"]],["bool"]]],[11,"ge","","",1,[[["self"],["line"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["curve"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["curve"]],["bool"]]],[11,"le","","",0,[[["self"],["curve"]],["bool"]]],[11,"gt","","",0,[[["self"],["curve"]],["bool"]]],[11,"ge","","",0,[[["self"],["curve"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["rect"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["rect"]],["bool"]]],[11,"le","","",3,[[["self"],["rect"]],["bool"]]],[11,"gt","","",3,[[["self"],["rect"]],["bool"]]],[11,"ge","","",3,[[["self"],["rect"]],["bool"]]],[11,"partial_cmp","rusttype::gpu_cache","",15,[[["self"],["cachereaderr"]],["option",["ordering"]]]],[11,"partial_cmp","","",16,[[["self"],["cachewriteerr"]],["option",["ordering"]]]],[11,"partial_cmp","","",17,[[["self"],["cachedby"]],["option",["ordering"]]]],[11,"partial_cmp","rusttype","",5,[[["self"],["codepoint"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"le","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"gt","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"ge","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["glyphid"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"le","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"gt","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"ge","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["hmetrics"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"le","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"gt","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"ge","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["vmetrics"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"le","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"gt","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"ge","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["scale"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["scale"]],["bool"]]],[11,"le","","",10,[[["self"],["scale"]],["bool"]]],[11,"gt","","",10,[[["self"],["scale"]],["bool"]]],[11,"ge","","",10,[[["self"],["scale"]],["bool"]]],[11,"default","rusttype::gpu_cache","",18,[[],["self"]]],[11,"eq","rusttype","",2,[[["self"],["point"]],["bool"]]],[11,"ne","","",2,[[["self"],["point"]],["bool"]]],[11,"eq","","",4,[[["self"],["vector"]],["bool"]]],[11,"ne","","",4,[[["self"],["vector"]],["bool"]]],[11,"eq","","",1,[[["self"],["line"]],["bool"]]],[11,"ne","","",1,[[["self"],["line"]],["bool"]]],[11,"eq","","",0,[[["self"],["curve"]],["bool"]]],[11,"ne","","",0,[[["self"],["curve"]],["bool"]]],[11,"eq","","",3,[[["self"],["rect"]],["bool"]]],[11,"ne","","",3,[[["self"],["rect"]],["bool"]]],[11,"eq","rusttype::gpu_cache","",15,[[["self"],["cachereaderr"]],["bool"]]],[11,"eq","","",16,[[["self"],["cachewriteerr"]],["bool"]]],[11,"eq","","",17,[[["self"],["cachedby"]],["bool"]]],[11,"eq","rusttype","",5,[[["self"],["codepoint"]],["bool"]]],[11,"ne","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"eq","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"ne","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"eq","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"ne","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"eq","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"ne","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"eq","","",10,[[["self"],["scale"]],["bool"]]],[11,"ne","","",10,[[["self"],["scale"]],["bool"]]],[11,"from","","",12,N],[11,"from","","",12,[[["arc"]],["sharedbytes"]]],[11,"from","","",12,[[["box"]],["sharedbytes"]]],[11,"from","","",12,[[["vec",["u8"]]],["sharedbytes"]]],[11,"from","","",12,[[["t"]],["sharedbytes"]]],[11,"from","","",9,[[["vmetrics"]],["self"]]],[11,"cmp","","",2,[[["self"],["point"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["vector"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["rect"]],["ordering"]]],[11,"cmp","rusttype::gpu_cache","",15,[[["self"],["cachereaderr"]],["ordering"]]],[11,"cmp","","",16,[[["self"],["cachewriteerr"]],["ordering"]]],[11,"cmp","","",17,[[["self"],["cachedby"]],["ordering"]]],[11,"cmp","rusttype","",5,[[["self"],["codepoint"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["glyphid"]],["ordering"]]],[11,"clone","","",2,[[["self"]],["point"]]],[11,"clone","","",4,[[["self"]],["vector"]]],[11,"clone","","",1,[[["self"]],["line"]]],[11,"clone","","",0,[[["self"]],["curve"]]],[11,"clone","","",3,[[["self"]],["rect"]]],[11,"clone","rusttype::gpu_cache","",18,[[["self"]],["cachebuilder"]]],[11,"clone","","",15,[[["self"]],["cachereaderr"]]],[11,"clone","","",16,[[["self"]],["cachewriteerr"]]],[11,"clone","","",17,[[["self"]],["cachedby"]]],[11,"clone","rusttype","",21,[[["self"]],["fontcollection"]]],[11,"clone","","",22,[[["self"]],["font"]]],[11,"clone","","",12,[[["self"]],["sharedbytes"]]],[11,"clone","","",5,[[["self"]],["codepoint"]]],[11,"clone","","",6,[[["self"]],["glyphid"]]],[11,"clone","","",23,[[["self"]],["glyph"]]],[11,"clone","","",8,[[["self"]],["hmetrics"]]],[11,"clone","","",9,[[["self"]],["vmetrics"]]],[11,"clone","","",24,[[["self"]],["scaledglyph"]]],[11,"clone","","",25,[[["self"]],["positionedglyph"]]],[11,"clone","","",10,[[["self"]],["scale"]]],[11,"clone","","",27,[[["self"]],["glyphiter"]]],[11,"clone","","",28,[[["self"]],["layoutiter"]]],[11,"clone","","",13,[[["self"]],["segment"]]],[11,"clone","","",11,[[["self"]],["contour"]]],[11,"deref","","",12,N],[11,"fmt","rusttype::gpu_cache","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","rusttype","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rusttype::gpu_cache","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","rusttype","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"add","","",4,[[["self"],["vector"]],["vector"]]],[11,"add","","",2,[[["self"],["vector"]],["point"]]],[11,"add","","",4,[[["self"],["point"]],["point"]]],[11,"sub","","",2,[[["self"],["point"]],["vector"]]],[11,"sub","","",4,[[["self"],["vector"]],["vector"]]],[11,"sub","","",2,[[["self"],["vector"]],["point"]]],[11,"mul","","",4,[[["self"],["f32"]],["vector",["f32"]]]],[11,"mul","","",4,[[["self"],["f64"]],["vector",["f64"]]]],[11,"mul","","",9,[[["self"],["f32"]],["self"]]],[11,"div","","",4,[[["self"],["f32"]],["vector",["f32"]]]],[11,"div","","",4,[[["self"],["f64"]],["vector",["f64"]]]],[11,"hash","","",2,N],[11,"hash","","",4,N],[11,"hash","","",3,N],[11,"hash","rusttype::gpu_cache","",15,N],[11,"hash","","",16,N],[11,"hash","","",17,N],[11,"hash","rusttype","",5,N],[11,"hash","","",6,N],[11,"description","rusttype::gpu_cache","",15,[[["self"]],["str"]]],[11,"description","","",16,[[["self"]],["str"]]],[11,"description","rusttype","",14,[[["self"]],["str"]]]],"paths":[[3,"Curve"],[3,"Line"],[3,"Point"],[3,"Rect"],[3,"Vector"],[3,"Codepoint"],[3,"GlyphId"],[3,"SharedGlyphData"],[3,"HMetrics"],[3,"VMetrics"],[3,"Scale"],[3,"Contour"],[4,"SharedBytes"],[4,"Segment"],[4,"Error"],[4,"CacheReadErr"],[4,"CacheWriteErr"],[4,"CachedBy"],[3,"CacheBuilder"],[3,"Cache"],[8,"IntoGlyphId"],[3,"FontCollection"],[3,"Font"],[3,"Glyph"],[3,"ScaledGlyph"],[3,"PositionedGlyph"],[3,"IntoFontsIter"],[3,"GlyphIter"],[3,"LayoutIter"]]};
searchIndex["scoped_threadpool"]={"doc":"This crate provides a stable, safe and scoped threadpool.","items":[[3,"Pool","scoped_threadpool","A threadpool that acts as a handle to a number of threads…",N,N],[3,"Scope","","Handle to the scope during which the threadpool is borrowed.",N,N],[11,"new","","Construct a threadpool with the given number of threads.…",0,[[["u32"]],["pool"]]],[11,"scoped","","Borrows the pool and allows executing jobs on other…",0,[[["self"],["f"]],["r"]]],[11,"thread_count","","Returns the number of threads inside this pool.",0,[[["self"]],["u32"]]],[11,"execute","","Execute a job on the threadpool.",1,[[["self"],["f"]]]],[11,"join_all","","Blocks until all currently queued jobs have run to…",1,[[["self"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"drop","","",0,[[["self"]]]],[11,"drop","","",1,[[["self"]]]]],"paths":[[3,"Pool"],[3,"Scope"]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of…","items":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always","","Always run on scope exit.",N,N],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred…",N,[[["t"],["f"]],["scopeguard",["always"]]]],[8,"Strategy","","",N,N],[10,"should_run","","Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through…",1,[[["t"],["f"]],["scopeguard"]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",N,N],[14,"defer_on_unwind","","Macro to create a `ScopeGuard` (run on unwinding from…",N,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"should_run","","",2,[[],["bool"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"drop","","",1,[[["self"]]]]],"paths":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]};
searchIndex["serde"]={"doc":"Serde","items":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",N,N],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",N,N],[13,"Bool","","The input contained a boolean value that was not expected.",0,N],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,N],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,N],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,N],[13,"Char","","The input contained a `char` that was not expected.",0,N],[13,"Str","","The input contained a `&str` or `String` that was not…",0,N],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,N],[13,"Unit","","The input contained a unit `()` that was not expected.",0,N],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,N],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,N],[13,"Seq","","The input contained a sequence that was not expected.",0,N],[13,"Map","","The input contained a map that was not expected.",0,N],[13,"Enum","","The input contained an enum that was not expected.",0,N],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,N],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,N],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,N],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,N],[13,"Other","","A message stating what uncategorized thing the input…",0,N],[0,"value","","Building blocks for deserializing basic values using the…",N,N],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",N,N],[3,"UnitDeserializer","","A deserializer holding a `()`.",N,N],[3,"BoolDeserializer","","A deserializer holding a `bool`.",N,N],[3,"I8Deserializer","","A deserializer holding an `i8`.",N,N],[3,"I16Deserializer","","A deserializer holding an `i16`.",N,N],[3,"I32Deserializer","","A deserializer holding an `i32`.",N,N],[3,"I64Deserializer","","A deserializer holding an `i64`.",N,N],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",N,N],[3,"U8Deserializer","","A deserializer holding a `u8`.",N,N],[3,"U16Deserializer","","A deserializer holding a `u16`.",N,N],[3,"U64Deserializer","","A deserializer holding a `u64`.",N,N],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",N,N],[3,"F32Deserializer","","A deserializer holding an `f32`.",N,N],[3,"F64Deserializer","","A deserializer holding an `f64`.",N,N],[3,"CharDeserializer","","A deserializer holding a `char`.",N,N],[3,"I128Deserializer","","A deserializer holding an `i128`.",N,N],[3,"U128Deserializer","","A deserializer holding a `u128`.",N,N],[3,"U32Deserializer","","A deserializer holding a `u32`.",N,N],[3,"StrDeserializer","","A deserializer holding a `&str`.",N,N],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",N,N],[3,"StringDeserializer","","A deserializer holding a `String`.",N,N],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",N,N],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",N,N],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",N,N],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",N,N],[3,"MapDeserializer","","A deserializer that iterates over a map.",N,N],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",N,N],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,N],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[["self"]],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[["self"]],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",N,N],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,N],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,N],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",N,N],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["self"],["formatter"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",N,N],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",N,N],[16,"Value","","The type produced by using this seed.",10,N],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["self"],["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",11,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",N,N],[16,"Value","","The value produced by this visitor.",12,N],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["self"],["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["self"],["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["self"],["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["self"],["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["self"],["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["self"],["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["self"],["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["self"],["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["self"],["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["self"],["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["self"],["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["self"],["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["self"],["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["self"],["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["self"],["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["self"],["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["self"],["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,N],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,N],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["self"],["vec",["u8"]]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[["self"]],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["self"],["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[["self"]],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["self"],["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["self"],["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["self"],["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["self"],["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",13,N],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],["result",["option"]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],["option",["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",14,N],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],["result",["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],["result",["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],["result",["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],["option",["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",15,N],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,N],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["self"],["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[["self"]],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",16,N],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[["self"]],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["self"],["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[["self"]],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["self"],["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,N],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",N,N],[16,"Deserializer","","The type of the deserializer being converted into.",17,N],[10,"into_deserializer","","Convert this value into a deserializer.",17,N],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",N,N],[8,"Error","","Trait used by `Serialize` implementations to generically…",N,N],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",N,N],[16,"Ok","","The output type produced by this `Serializer` during…",20,N],[16,"Error","","The error type when some error occurs during serialization.",20,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,N],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,N],[10,"serialize_none","","Serialize a [`None`] value.",20,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,N],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[["self"]],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,N],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[["self"]],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,N],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[["self"]],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,N],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[["self"]],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,N],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["self"],["k"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[["self"]],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,N],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[["self"]],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,N],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[["self"]],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",11,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",N,N],[16,"Ok","","The output type produced by this `Serializer` during…",20,N],[16,"Error","","The error type when some error occurs during serialization.",20,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,N],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,N],[10,"serialize_none","","Serialize a [`None`] value.",20,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",N,N],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",N,N],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","serde::de::value","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","serde::ser","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],["result",["ignoredany"]]]],[11,"deserialize_bool","serde::de::value","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",30,N],[11,"deserialize_enum","","",30,N],[11,"deserialize_identifier","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",31,N],[11,"deserialize_enum","","",31,N],[11,"deserialize_identifier","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",32,N],[11,"deserialize_enum","","",32,N],[11,"deserialize_identifier","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",33,N],[11,"deserialize_enum","","",33,N],[11,"deserialize_identifier","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",34,N],[11,"deserialize_enum","","",34,N],[11,"deserialize_identifier","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",35,N],[11,"deserialize_enum","","",35,N],[11,"deserialize_identifier","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",36,N],[11,"deserialize_enum","","",36,N],[11,"deserialize_identifier","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",37,N],[11,"deserialize_enum","","",37,N],[11,"deserialize_identifier","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",38,N],[11,"deserialize_enum","","",38,N],[11,"deserialize_identifier","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",39,N],[11,"deserialize_enum","","",39,N],[11,"deserialize_identifier","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",40,N],[11,"deserialize_enum","","",40,N],[11,"deserialize_identifier","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",41,N],[11,"deserialize_enum","","",41,N],[11,"deserialize_identifier","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",42,N],[11,"deserialize_enum","","",42,N],[11,"deserialize_identifier","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",43,N],[11,"deserialize_enum","","",43,N],[11,"deserialize_identifier","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",44,N],[11,"deserialize_enum","","",44,N],[11,"deserialize_identifier","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",45,N],[11,"deserialize_enum","","",45,N],[11,"deserialize_identifier","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",46,N],[11,"deserialize_identifier","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",46,N],[11,"deserialize_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",47,N],[11,"deserialize_bool","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",47,N],[11,"deserialize_identifier","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",1,N],[11,"deserialize_bool","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",1,N],[11,"deserialize_identifier","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",48,N],[11,"deserialize_bool","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",48,N],[11,"deserialize_identifier","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",49,N],[11,"deserialize_bool","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",49,N],[11,"deserialize_identifier","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",2,N],[11,"deserialize_identifier","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",2,N],[11,"deserialize_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",3,N],[11,"deserialize_enum","","",3,N],[11,"deserialize_identifier","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",4,N],[11,"deserialize_enum","","",4,N],[11,"deserialize_identifier","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",5,N],[11,"deserialize_enum","","",5,N],[11,"deserialize_identifier","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",6,N],[11,"deserialize_bool","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",6,N],[11,"deserialize_identifier","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["self"],["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","",28,[[["self"],["bool"]],["result"]]],[11,"visit_i64","","",28,[[["self"],["i64"]],["result"]]],[11,"visit_u64","","",28,[[["self"],["u64"]],["result"]]],[11,"visit_f64","","",28,[[["self"],["f64"]],["result"]]],[11,"visit_str","","",28,[[["self"],["str"]],["result"]]],[11,"visit_none","","",28,[[["self"]],["result"]]],[11,"visit_some","","",28,[[["self"],["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["self"],["d"]],["result"]]],[11,"visit_unit","","",28,[[["self"]],["result"]]],[11,"visit_seq","","",28,[[["self"],["a"]],["result"]]],[11,"visit_map","","",28,[[["self"],["a"]],["result"]]],[11,"visit_bytes","","",28,N],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],["result",["option"]]]],[11,"size_hint","","",3,[[["self"]],["option",["usize"]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],["result",["option"]]]],[11,"size_hint","","",5,[[["self"]],["option",["usize"]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],["result",["option"]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["self"],["tk"],["tv"]],["result",["option"]]]],[11,"size_hint","","",5,[[["self"]],["option",["usize"]]]],[11,"variant_seed","","",46,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",47,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",1,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",48,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",49,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",6,[[["self"],["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"default","serde::de","",28,[[],["ignoredany"]]],[11,"eq","serde::de::value","",29,[[["self"],["error"]],["bool"]]],[11,"ne","","",29,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",0,[[["self"],["unexpected"]],["bool"]]],[11,"ne","","",0,[[["self"],["unexpected"]],["bool"]]],[11,"clone","serde::de::value","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"fmt","serde::de::value","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","serde::de","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"paths":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","items":[[24,"Serialize","serde_derive","",N,N],[24,"Deserialize","","",N,N]],"paths":[]};
searchIndex["shared_library"]={"doc":"","items":[[4,"LoadingError","shared_library","Error that can happen while loading the shared library.",N,N],[13,"LibraryNotFound","","",0,N],[12,"descr","shared_library::LoadingError","",0,N],[13,"SymbolNotFound","shared_library","One of the symbols could not be found in the library.",0,N],[12,"symbol","shared_library::LoadingError","The symbol.",0,N],[0,"dynamic_library","shared_library","Dynamic library facilities.",N,N],[3,"DynamicLibrary","shared_library::dynamic_library","",N,N],[11,"open","","Lazily loads the dynamic library named `filename` into…",1,[[["option",["path"]]],["result",["string"]]]],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic…",1,[[["path"]]]],[11,"create_path","","From a slice of paths, create a new vector which is…",1,N],[11,"envvar","","Returns the environment variable for this process's…",1,[[],["str"]]],[11,"search_path","","Returns the current search path for dynamic libraries…",1,[[],["vec",["pathbuf"]]]],[11,"symbol","","Returns the address of where symbol `symbol` was loaded…",1,[[["self"],["str"]],["result",["string"]]]],[14,"shared_library","shared_library","",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","shared_library::dynamic_library","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","shared_library","",0,[[["self"]],["loadingerror"]]],[11,"drop","shared_library::dynamic_library","",1,[[["self"]]]],[11,"fmt","shared_library","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"LoadingError"],[3,"DynamicLibrary"]]};
searchIndex["smallvec"]={"doc":"Small vectors in various sizes. These store a certain…","items":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and…",N,N],[3,"SmallVec","","A `Vec`-like container that can store a small number of…",N,N],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its…",N,N],[5,"unreachable","","Hint to the optimizer that any code path which calls this…",N,N],[8,"VecLike","","Common operations implemented by both `Vec` and `SmallVec`.",N,N],[10,"push","","Append an element to the vector.",0,[[["self"],["t"]]]],[8,"ExtendFromSlice","","Trait to be implemented by a collection that can be…",N,N],[10,"extend_from_slice","","Extends a collection from a slice of its element type",1,N],[8,"Array","","Types that can be used as the backing store for a SmallVec",N,N],[16,"Item","","The type of the array's elements.",2,N],[10,"size","","Returns the number of items the array can hold.",2,[[],["usize"]]],[10,"ptr","","Returns a pointer to the first element of the array.",2,N],[10,"ptr_mut","","Returns a mutable pointer to the first element of the array.",2,N],[11,"new","","Construct an empty vector",3,[[],["smallvec"]]],[11,"with_capacity","","Construct an empty vector with enough capacity…",3,[[["usize"]],["self"]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",3,[[["vec"]],["smallvec"]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"]],["smallvec"]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"set_len","","Sets the length of a vector.",3,[[["self"],["usize"]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",3,[[["self"]],["usize"]]],[11,"len","","The number of elements stored in the vector",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the vector is empty",3,[[["self"]],["bool"]]],[11,"capacity","","The number of items the vector can hold without reallocating",3,[[["self"]],["usize"]]],[11,"spilled","","Returns `true` if the data has spilled into a separate…",3,[[["self"]],["bool"]]],[11,"drain","","Empty the vector and return an iterator over its former…",3,[[["self"]],["drain"]]],[11,"push","","Append an item to the vector.",3,N],[11,"pop","","Remove an item from the end of the vector and return it,…",3,[[["self"]],["option"]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap,…",3,[[["self"],["usize"]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be…",3,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity for `additional` more…",3,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",3,[[["self"]]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and…",3,[[["self"],["usize"]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",3,N],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",3,N],[11,"swap_remove","","Remove the element at position `index`, replacing it with…",3,N],[11,"clear","","Remove all elements from the vector.",3,[[["self"]]]],[11,"remove","","Remove and return the element at position `index`,…",3,N],[11,"insert","","Insert an element at position `index`, shifting all…",3,N],[11,"insert_many","","Insert multiple elements at position `index`, shifting all…",3,[[["self"],["usize"],["i"]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the…",3,[[["self"]],["vec"]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise…",3,[[["self"]],["result"]]],[11,"retain","","Retains only the elements specified by the predicate.",3,[[["self"],["f"]]]],[11,"dedup","","Removes consecutive duplicate elements.",3,[[["self"]]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given…",3,[[["self"],["f"]]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",3,[[["self"],["f"]]]],[11,"from_raw_parts","","Creates a `SmallVec` directly from the raw components of…",3,N],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",3,N],[11,"insert_from_slice","","Copy elements from a slice into the vector at position…",3,N],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",3,N],[11,"resize","","Resizes the vector so that its length is equal to `len`.",3,N],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`. ``` use…",3,N],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",N,N],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"push","","",3,N],[11,"extend_from_slice","","",3,N],[11,"extend","","",3,[[["self"],["i"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"partial_cmp","","",3,[[["self"],["smallvec"]],["option",["ordering"]]]],[11,"default","","",3,[[],["smallvec"]]],[11,"as_mut","","",3,N],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"eq","","",3,[[["self"],["smallvec"]],["bool"]]],[11,"ne","","",3,[[["self"],["smallvec"]],["bool"]]],[11,"from","","",3,N],[11,"from","","",3,[[["vec"]],["smallvec"]]],[11,"from","","",3,[[["a"]],["smallvec"]]],[11,"as_ref","","",3,N],[11,"into_iter","","",3,N],[11,"cmp","","",3,[[["self"],["smallvec"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["smallvec"]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"deref","","",3,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"hash","","",3,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["i"]],["smallvec"]]],[11,"borrow","","",3,N],[11,"write","","",3,N],[11,"write_all","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,N]],"paths":[[8,"VecLike"],[8,"ExtendFromSlice"],[8,"Array"],[3,"SmallVec"],[3,"Drain"],[3,"IntoIter"]]};
searchIndex["stb_truetype"]={"doc":"","items":[[3,"FontInfo","stb_truetype","",N,N],[3,"Vertex","","",N,N],[12,"x","","",0,N],[12,"y","","",0,N],[12,"cx","","",0,N],[12,"cy","","",0,N],[3,"Rect","","",N,N],[12,"x0","","",1,N],[12,"y0","","",1,N],[12,"x1","","",1,N],[12,"y1","","",1,N],[3,"HMetrics","","",N,N],[12,"advance_width","","",2,N],[12,"left_side_bearing","","",2,N],[3,"VMetrics","","",N,N],[12,"ascent","","",3,N],[12,"descent","","",3,N],[12,"line_gap","","",3,N],[3,"FontNameIter","","",N,N],[4,"VertexType","","",N,N],[13,"MoveTo","","",4,N],[13,"LineTo","","",4,N],[13,"CurveTo","","",4,N],[4,"PlatformId","","",N,N],[13,"Unicode","","",5,N],[13,"Mac","","",5,N],[13,"Iso","","",5,N],[13,"Microsoft","","",5,N],[4,"UnicodeEid","","",N,N],[13,"Unicode_1_0","","",6,N],[13,"Unicode_1_1","","",6,N],[13,"Iso_10646","","",6,N],[13,"Unicode_2_0_Bmp","","",6,N],[13,"Unicode_2_0_Full","","",6,N],[4,"MicrosoftEid","","",N,N],[13,"Symbol","","",7,N],[13,"UnicodeBMP","","",7,N],[13,"Shiftjis","","",7,N],[13,"UnicodeFull","","",7,N],[4,"MacEid","","",N,N],[13,"Roman","","",8,N],[13,"Arabic","","",8,N],[13,"Japanese","","",8,N],[13,"Hebrew","","",8,N],[13,"ChineseTrad","","",8,N],[13,"Greek","","",8,N],[13,"Korean","","",8,N],[13,"Russian","","",8,N],[4,"MicrosoftLang","","",N,N],[13,"English","","",9,N],[13,"Italian","","",9,N],[13,"Chinese","","",9,N],[13,"Japanese","","",9,N],[13,"Dutch","","",9,N],[13,"Korean","","",9,N],[13,"French","","",9,N],[13,"Russian","","",9,N],[13,"German","","",9,N],[13,"Hebrew","","",9,N],[13,"Swedish","","",9,N],[4,"MacLang","","",N,N],[13,"English","","",10,N],[13,"Japanese","","",10,N],[13,"Arabic","","",10,N],[13,"Korean","","",10,N],[13,"Dutch","","",10,N],[13,"Russian","","",10,N],[13,"French","","",10,N],[13,"Spanish","","",10,N],[13,"German","","",10,N],[13,"Swedish","","",10,N],[13,"Hebrew","","",10,N],[13,"ChineseSimplified","","",10,N],[13,"Italian","","",10,N],[13,"ChineseTrad","","",10,N],[4,"PlatformEncodingLanguageId","","",N,N],[13,"Unicode","","",11,N],[13,"Mac","","",11,N],[13,"Iso","","",11,N],[13,"Microsoft","","",11,N],[5,"is_font","","Return `true` if `data` holds a font stored in a format…",N,N],[5,"is_collection","","Return `true` if `data` holds a TrueType Collection,…",N,N],[5,"get_font_offset_for_index","","Each .ttf/.ttc file may have more than one font. Each font…",N,N],[11,"vertex_type","","",0,[[["self"]],["vertextype"]]],[11,"new","","Given an offset into the file that defines a font, this…",12,[[["data"],["usize"]],["option",["fontinfo"]]]],[11,"get_num_glyphs","","",12,[[["self"]],["u32"]]],[11,"find_glyph_index","","If you're going to perform multiple operations on the same…",12,[[["self"],["u32"]],["u32"]]],[11,"get_codepoint_shape","","Returns the series of vertices encoding the shape of the…",12,[[["self"],["u32"]],["option",["vec"]]]],[11,"get_glyph_box","","Like `get_codepoint_box`, but takes a glyph index. Use…",12,[[["self"],["u32"]],["option",["rect"]]]],[11,"get_codepoint_box","","Gets the bounding box of the visible part of the glyph, in…",12,[[["self"],["u32"]],["option",["rect"]]]],[11,"is_glyph_empty","","returns true if nothing is drawn for this glyph",12,[[["self"],["u32"]],["bool"]]],[11,"get_glyph_shape","","Like `get_codepoint_shape`, but takes a glyph index…",12,[[["self"],["u32"]],["option",["vec"]]]],[11,"get_glyph_h_metrics","","like `get_codepoint_h_metrics`, but takes a glyph index…",12,[[["self"],["u32"]],["hmetrics"]]],[11,"get_glyph_kern_advance","","like `get_codepoint_kern_advance`, but takes glyph indices…",12,[[["self"],["u32"],["u32"]],["i32"]]],[11,"get_codepoint_kern_advance","","an additional amount to add to the 'advance' value between…",12,[[["self"],["u32"],["u32"]],["i32"]]],[11,"get_codepoint_h_metrics","","`left_side_bearing` is the offset from the current…",12,[[["self"],["u32"]],["hmetrics"]]],[11,"get_v_metrics","","`ascent` is the coordinate above the baseline the font…",12,[[["self"]],["vmetrics"]]],[11,"get_bounding_box","","the bounding box around all possible characters",12,[[["self"]],["rect",["i16"]]]],[11,"scale_for_pixel_height","","computes a scale factor to produce a font whose \"height\"…",12,[[["self"],["f32"]],["f32"]]],[11,"units_per_em","","Returns the units per EM square of this font.",12,[[["self"]],["u16"]]],[11,"scale_for_mapping_em_to_pixels","","computes a scale factor to produce a font whose EM size is…",12,[[["self"],["f32"]],["f32"]]],[11,"get_glyph_bitmap_box_subpixel","","like `get_codepoint_bitmap_box_subpixel`, but takes a…",12,[[["self"],["u32"],["f32"],["f32"],["f32"],["f32"]],["option",["rect"]]]],[11,"get_glyph_bitmap_box","","like `get_codepoint_bitmap_box`, but takes a glyph index…",12,[[["self"],["u32"],["f32"],["f32"]],["option",["rect"]]]],[11,"get_codepoint_bitmap_box_subpixel","","same as get_codepoint_bitmap_box, but you can specify a…",12,[[["self"],["u32"],["f32"],["f32"],["f32"],["f32"]],["option",["rect"]]]],[11,"get_codepoint_bitmap_box","","get the bounding box of the bitmap centered around the…",12,[[["self"],["u32"],["f32"],["f32"]],["option",["rect"]]]],[11,"get_font_name_strings","","",12,[[["self"]],["fontnameiter"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,N],[11,"count","","",13,[[["self"]],["usize"]]],[11,"last","","",13,[[["self"]],["option"]]],[11,"nth","","",13,[[["self"],["usize"]],["option"]]],[11,"partial_cmp","","",5,[[["self"],["platformid"]],["option",["ordering"]]]],[11,"partial_cmp","","",6,[[["self"],["unicodeeid"]],["option",["ordering"]]]],[11,"partial_cmp","","",7,[[["self"],["microsofteid"]],["option",["ordering"]]]],[11,"partial_cmp","","",8,[[["self"],["maceid"]],["option",["ordering"]]]],[11,"partial_cmp","","",9,[[["self"],["microsoftlang"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["maclang"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["platformencodinglanguageid"]],["option",["ordering"]]]],[11,"lt","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"le","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"gt","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"ge","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"eq","","",0,[[["self"],["vertex"]],["bool"]]],[11,"ne","","",0,[[["self"],["vertex"]],["bool"]]],[11,"eq","","",4,[[["self"],["vertextype"]],["bool"]]],[11,"eq","","",1,[[["self"],["rect"]],["bool"]]],[11,"ne","","",1,[[["self"],["rect"]],["bool"]]],[11,"eq","","",2,[[["self"],["hmetrics"]],["bool"]]],[11,"ne","","",2,[[["self"],["hmetrics"]],["bool"]]],[11,"eq","","",3,[[["self"],["vmetrics"]],["bool"]]],[11,"ne","","",3,[[["self"],["vmetrics"]],["bool"]]],[11,"eq","","",5,[[["self"],["platformid"]],["bool"]]],[11,"eq","","",6,[[["self"],["unicodeeid"]],["bool"]]],[11,"eq","","",7,[[["self"],["microsofteid"]],["bool"]]],[11,"eq","","",8,[[["self"],["maceid"]],["bool"]]],[11,"eq","","",9,[[["self"],["microsoftlang"]],["bool"]]],[11,"eq","","",10,[[["self"],["maclang"]],["bool"]]],[11,"eq","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"ne","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"cmp","","",5,[[["self"],["platformid"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["unicodeeid"]],["ordering"]]],[11,"cmp","","",7,[[["self"],["microsofteid"]],["ordering"]]],[11,"cmp","","",8,[[["self"],["maceid"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["microsoftlang"]],["ordering"]]],[11,"cmp","","",10,[[["self"],["maclang"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["platformencodinglanguageid"]],["ordering"]]],[11,"clone","","",12,[[["self"]],["fontinfo"]]],[11,"clone","","",0,[[["self"]],["vertex"]]],[11,"clone","","",4,[[["self"]],["vertextype"]]],[11,"clone","","",1,[[["self"]],["rect"]]],[11,"clone","","",2,[[["self"]],["hmetrics"]]],[11,"clone","","",3,[[["self"]],["vmetrics"]]],[11,"clone","","",5,[[["self"]],["platformid"]]],[11,"clone","","",6,[[["self"]],["unicodeeid"]]],[11,"clone","","",7,[[["self"]],["microsofteid"]]],[11,"clone","","",8,[[["self"]],["maceid"]]],[11,"clone","","",9,[[["self"]],["microsoftlang"]]],[11,"clone","","",10,[[["self"]],["maclang"]]],[11,"clone","","",11,[[["self"]],["platformencodinglanguageid"]]],[11,"clone","","",13,[[["self"]],["fontnameiter"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"hash","","",4,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",3,N],[11,"hash","","",5,N],[11,"hash","","",6,N],[11,"hash","","",7,N],[11,"hash","","",8,N],[11,"hash","","",9,N],[11,"hash","","",10,N],[11,"hash","","",11,N]],"paths":[[3,"Vertex"],[3,"Rect"],[3,"HMetrics"],[3,"VMetrics"],[4,"VertexType"],[4,"PlatformId"],[4,"UnicodeEid"],[4,"MicrosoftEid"],[4,"MacEid"],[4,"MicrosoftLang"],[4,"MacLang"],[4,"PlatformEncodingLanguageId"],[3,"FontInfo"],[3,"FontNameIter"]]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust…","items":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",N,N],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token","","",0,N],[12,"style","","",0,N],[12,"bracket_token","","",0,N],[12,"path","","",0,N],[12,"tts","","",0,N],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",N,N],[12,"ident","","",1,N],[12,"paren_token","","",1,N],[12,"nested","","",1,N],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",N,N],[12,"ident","","",2,N],[12,"eq_token","","",2,N],[12,"lit","","",2,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"attrs","","Attributes tagged on the field.",3,N],[12,"vis","","Visibility of the field.",3,N],[12,"ident","","Name of the field, if any.",3,N],[12,"colon_token","","",3,N],[12,"ty","","Type of the field.",3,N],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",N,N],[12,"brace_token","","",4,N],[12,"named","","",4,N],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",N,N],[12,"paren_token","","",5,N],[12,"unnamed","","",5,N],[3,"Variant","","An enum variant.",N,N],[12,"attrs","","Attributes tagged on the variant.",6,N],[12,"ident","","Name of the variant.",6,N],[12,"fields","","Content stored in the variant.",6,N],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate","","A crate-level visibility: `crate`.",N,N],[12,"crate_token","","",7,N],[3,"VisPublic","","A public visibility level: `pub`.",N,N],[12,"pub_token","","",8,N],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",N,N],[12,"pub_token","","",9,N],[12,"paren_token","","",9,N],[12,"in_token","","",9,N],[12,"path","","",9,N],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",N,N],[12,"attrs","","",10,N],[12,"bracket_token","","",10,N],[12,"elems","","",10,N],[3,"ExprAssign","","An assignment expression: `a = compute()`.",N,N],[12,"attrs","","",11,N],[12,"left","","",11,N],[12,"eq_token","","",11,N],[12,"right","","",11,N],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",N,N],[12,"attrs","","",12,N],[12,"left","","",12,N],[12,"op","","",12,N],[12,"right","","",12,N],[3,"ExprAsync","","An async block: `async { ... }`.",N,N],[12,"attrs","","",13,N],[12,"async_token","","",13,N],[12,"capture","","",13,N],[12,"block","","",13,N],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",N,N],[12,"attrs","","",14,N],[12,"left","","",14,N],[12,"op","","",14,N],[12,"right","","",14,N],[3,"ExprBlock","","A blocked scope: `{ ... }`.",N,N],[12,"attrs","","",15,N],[12,"label","","",15,N],[12,"block","","",15,N],[3,"ExprBox","","A box expression: `box f`.",N,N],[12,"attrs","","",16,N],[12,"box_token","","",16,N],[12,"expr","","",16,N],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",N,N],[12,"attrs","","",17,N],[12,"break_token","","",17,N],[12,"label","","",17,N],[12,"expr","","",17,N],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",N,N],[12,"attrs","","",18,N],[12,"func","","",18,N],[12,"paren_token","","",18,N],[12,"args","","",18,N],[3,"ExprCast","","A cast expression: `foo as f64`.",N,N],[12,"attrs","","",19,N],[12,"expr","","",19,N],[12,"as_token","","",19,N],[12,"ty","","",19,N],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",N,N],[12,"attrs","","",20,N],[12,"asyncness","","",20,N],[12,"movability","","",20,N],[12,"capture","","",20,N],[12,"or1_token","","",20,N],[12,"inputs","","",20,N],[12,"or2_token","","",20,N],[12,"output","","",20,N],[12,"body","","",20,N],[3,"ExprContinue","","A `continue`, with an optional label.",N,N],[12,"attrs","","",21,N],[12,"continue_token","","",21,N],[12,"label","","",21,N],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",N,N],[12,"attrs","","",22,N],[12,"base","","",22,N],[12,"dot_token","","",22,N],[12,"member","","",22,N],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",N,N],[12,"attrs","","",23,N],[12,"label","","",23,N],[12,"for_token","","",23,N],[12,"pat","","",23,N],[12,"in_token","","",23,N],[12,"expr","","",23,N],[12,"body","","",23,N],[3,"ExprGroup","","An expression contained within invisible delimiters.",N,N],[12,"attrs","","",24,N],[12,"group_token","","",24,N],[12,"expr","","",24,N],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",N,N],[12,"attrs","","",25,N],[12,"if_token","","",25,N],[12,"cond","","",25,N],[12,"then_branch","","",25,N],[12,"else_branch","","",25,N],[3,"ExprInPlace","","A placement expression: `place <- value`.",N,N],[12,"attrs","","",26,N],[12,"place","","",26,N],[12,"arrow_token","","",26,N],[12,"value","","",26,N],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",N,N],[12,"attrs","","",27,N],[12,"expr","","",27,N],[12,"bracket_token","","",27,N],[12,"index","","",27,N],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",N,N],[12,"attrs","","",28,N],[12,"let_token","","",28,N],[12,"pats","","",28,N],[12,"eq_token","","",28,N],[12,"expr","","",28,N],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",N,N],[12,"attrs","","",29,N],[12,"lit","","",29,N],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",N,N],[12,"attrs","","",30,N],[12,"label","","",30,N],[12,"loop_token","","",30,N],[12,"body","","",30,N],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",N,N],[12,"attrs","","",31,N],[12,"mac","","",31,N],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",N,N],[12,"attrs","","",32,N],[12,"match_token","","",32,N],[12,"expr","","",32,N],[12,"brace_token","","",32,N],[12,"arms","","",32,N],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",N,N],[12,"attrs","","",33,N],[12,"receiver","","",33,N],[12,"dot_token","","",33,N],[12,"method","","",33,N],[12,"turbofish","","",33,N],[12,"paren_token","","",33,N],[12,"args","","",33,N],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",N,N],[12,"attrs","","",34,N],[12,"paren_token","","",34,N],[12,"expr","","",34,N],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",N,N],[12,"attrs","","",35,N],[12,"qself","","",35,N],[12,"path","","",35,N],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",N,N],[12,"attrs","","",36,N],[12,"from","","",36,N],[12,"limits","","",36,N],[12,"to","","",36,N],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",N,N],[12,"attrs","","",37,N],[12,"and_token","","",37,N],[12,"mutability","","",37,N],[12,"expr","","",37,N],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",N,N],[12,"attrs","","",38,N],[12,"bracket_token","","",38,N],[12,"expr","","",38,N],[12,"semi_token","","",38,N],[12,"len","","",38,N],[3,"ExprReturn","","A `return`, with an optional value to be returned.",N,N],[12,"attrs","","",39,N],[12,"return_token","","",39,N],[12,"expr","","",39,N],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",N,N],[12,"attrs","","",40,N],[12,"path","","",40,N],[12,"brace_token","","",40,N],[12,"fields","","",40,N],[12,"dot2_token","","",40,N],[12,"rest","","",40,N],[3,"ExprTry","","A try-expression: `expr?`.",N,N],[12,"attrs","","",41,N],[12,"expr","","",41,N],[12,"question_token","","",41,N],[3,"ExprTryBlock","","A try block: `try { ... }`.",N,N],[12,"attrs","","",42,N],[12,"try_token","","",42,N],[12,"block","","",42,N],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",N,N],[12,"attrs","","",43,N],[12,"paren_token","","",43,N],[12,"elems","","",43,N],[3,"ExprType","","A type ascription expression: `foo: f64`.",N,N],[12,"attrs","","",44,N],[12,"expr","","",44,N],[12,"colon_token","","",44,N],[12,"ty","","",44,N],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",N,N],[12,"attrs","","",45,N],[12,"op","","",45,N],[12,"expr","","",45,N],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",N,N],[12,"attrs","","",46,N],[12,"unsafe_token","","",46,N],[12,"block","","",46,N],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",N,N],[12,"tts","","",47,N],[3,"ExprWhile","","A while loop: `while expr { ... }`.",N,N],[12,"attrs","","",48,N],[12,"label","","",48,N],[12,"while_token","","",48,N],[12,"cond","","",48,N],[12,"body","","",48,N],[3,"ExprYield","","A yield expression: `yield expr`.",N,N],[12,"attrs","","",49,N],[12,"yield_token","","",49,N],[12,"expr","","",49,N],[3,"Index","","The index of an unnamed tuple struct field.",N,N],[12,"index","","",50,N],[12,"span","","",50,N],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",N,N],[12,"attrs","","",51,N],[12,"leading_vert","","",51,N],[12,"pats","","",51,N],[12,"guard","","",51,N],[12,"fat_arrow_token","","",51,N],[12,"body","","",51,N],[12,"comma","","",51,N],[3,"Block","","A braced block containing Rust statements.",N,N],[12,"brace_token","","",52,N],[12,"stmts","","Statements in a block",52,N],[3,"FieldPat","","A single field in a struct pattern.",N,N],[12,"attrs","","",53,N],[12,"member","","",53,N],[12,"colon_token","","",53,N],[12,"pat","","",53,N],[3,"FieldValue","","A field-value pair in a struct literal.",N,N],[12,"attrs","","Attributes tagged on the field.",54,N],[12,"member","","Name or index of the field.",54,N],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",54,N],[12,"expr","","Value of the field.",54,N],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",N,N],[12,"name","","",55,N],[12,"colon_token","","",55,N],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",N,N],[12,"attrs","","",56,N],[12,"let_token","","",56,N],[12,"pats","","",56,N],[12,"ty","","",56,N],[12,"init","","",56,N],[12,"semi_token","","",56,N],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",N,N],[12,"colon2_token","","",57,N],[12,"lt_token","","",57,N],[12,"args","","",57,N],[12,"gt_token","","",57,N],[3,"PatBox","","A box pattern: `box v`.",N,N],[12,"box_token","","",58,N],[12,"pat","","",58,N],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",N,N],[12,"by_ref","","",59,N],[12,"mutability","","",59,N],[12,"ident","","",59,N],[12,"subpat","","",59,N],[3,"PatLit","","A literal pattern: `0`.",N,N],[12,"expr","","",60,N],[3,"PatMacro","","A macro in expression position.",N,N],[12,"mac","","",61,N],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",N,N],[12,"qself","","",62,N],[12,"path","","",62,N],[3,"PatRange","","A range pattern: `1..=2`.",N,N],[12,"lo","","",63,N],[12,"limits","","",63,N],[12,"hi","","",63,N],[3,"PatRef","","A reference pattern: `&mut (first, second)`.",N,N],[12,"and_token","","",64,N],[12,"mutability","","",64,N],[12,"pat","","",64,N],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",N,N],[12,"bracket_token","","",65,N],[12,"front","","",65,N],[12,"middle","","",65,N],[12,"dot2_token","","",65,N],[12,"comma_token","","",65,N],[12,"back","","",65,N],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",N,N],[12,"path","","",66,N],[12,"brace_token","","",66,N],[12,"fields","","",66,N],[12,"dot2_token","","",66,N],[3,"PatTuple","","A tuple pattern: `(a, b)`.",N,N],[12,"paren_token","","",67,N],[12,"front","","",67,N],[12,"dot2_token","","",67,N],[12,"comma_token","","",67,N],[12,"back","","",67,N],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",N,N],[12,"path","","",68,N],[12,"pat","","",68,N],[3,"PatVerbatim","","Tokens in pattern position not interpreted by Syn.",N,N],[12,"tts","","",69,N],[3,"PatWild","","A pattern that matches any value: `_`.",N,N],[12,"underscore_token","","",70,N],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token","","",71,N],[12,"lt_token","","",71,N],[12,"lifetimes","","",71,N],[12,"gt_token","","",71,N],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",N,N],[12,"attrs","","",72,N],[12,"const_token","","",72,N],[12,"ident","","",72,N],[12,"colon_token","","",72,N],[12,"ty","","",72,N],[12,"eq_token","","",72,N],[12,"default","","",72,N],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",N,N],[12,"lt_token","","",73,N],[12,"params","","",73,N],[12,"gt_token","","",73,N],[12,"where_clause","","",73,N],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",N,N],[12,"attrs","","",74,N],[12,"lifetime","","",74,N],[12,"colon_token","","",74,N],[12,"bounds","","",74,N],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",N,N],[12,"lhs_ty","","",75,N],[12,"eq_token","","",75,N],[12,"rhs_ty","","",75,N],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",N,N],[12,"lifetime","","",76,N],[12,"colon_token","","",76,N],[12,"bounds","","",76,N],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",N,N],[12,"lifetimes","","Any lifetimes from a `for` binding",77,N],[12,"bounded_ty","","The type being bounded",77,N],[12,"colon_token","","",77,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",77,N],[3,"TraitBound","","A trait used as a bound on a type parameter.",N,N],[12,"paren_token","","",78,N],[12,"modifier","","",78,N],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",78,N],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",78,N],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",N,N],[12,"attrs","","",79,N],[12,"ident","","",79,N],[12,"colon_token","","",79,N],[12,"bounds","","",79,N],[12,"eq_token","","",79,N],[12,"default","","",79,N],[3,"WhereClause","","A `where` clause in a definition: `where T:…",N,N],[12,"where_token","","",80,N],[12,"predicates","","",80,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",N,N],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"ArgCaptured","","An explicitly typed pattern captured by a function…",N,N],[12,"pat","","",81,N],[12,"colon_token","","",81,N],[12,"ty","","",81,N],[3,"ArgSelf","","Self captured by value in a function signature: `self` or…",N,N],[12,"mutability","","",82,N],[12,"self_token","","",82,N],[3,"ArgSelfRef","","Self captured by reference in a function signature:…",N,N],[12,"and_token","","",83,N],[12,"lifetime","","",83,N],[12,"mutability","","",83,N],[12,"self_token","","",83,N],[3,"FnDecl","","Header of a function declaration, without including the…",N,N],[12,"fn_token","","",84,N],[12,"generics","","",84,N],[12,"paren_token","","",84,N],[12,"inputs","","",84,N],[12,"variadic","","",84,N],[12,"output","","",84,N],[3,"ForeignItemFn","","A foreign function in an `extern` block.",N,N],[12,"attrs","","",85,N],[12,"vis","","",85,N],[12,"ident","","",85,N],[12,"decl","","",85,N],[12,"semi_token","","",85,N],[3,"ForeignItemMacro","","A macro invocation within an extern block.",N,N],[12,"attrs","","",86,N],[12,"mac","","",86,N],[12,"semi_token","","",86,N],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",N,N],[12,"attrs","","",87,N],[12,"vis","","",87,N],[12,"static_token","","",87,N],[12,"mutability","","",87,N],[12,"ident","","",87,N],[12,"colon_token","","",87,N],[12,"ty","","",87,N],[12,"semi_token","","",87,N],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",N,N],[12,"attrs","","",88,N],[12,"vis","","",88,N],[12,"type_token","","",88,N],[12,"ident","","",88,N],[12,"semi_token","","",88,N],[3,"ForeignItemVerbatim","","Tokens in an `extern` block not interpreted by Syn.",N,N],[12,"tts","","",89,N],[3,"ImplItemConst","","An associated constant within an impl block.",N,N],[12,"attrs","","",90,N],[12,"vis","","",90,N],[12,"defaultness","","",90,N],[12,"const_token","","",90,N],[12,"ident","","",90,N],[12,"colon_token","","",90,N],[12,"ty","","",90,N],[12,"eq_token","","",90,N],[12,"expr","","",90,N],[12,"semi_token","","",90,N],[3,"ImplItemExistential","","An existential type within an impl block.",N,N],[12,"attrs","","",91,N],[12,"existential_token","","",91,N],[12,"type_token","","",91,N],[12,"ident","","",91,N],[12,"generics","","",91,N],[12,"colon_token","","",91,N],[12,"bounds","","",91,N],[12,"semi_token","","",91,N],[3,"ImplItemMacro","","A macro invocation within an impl block.",N,N],[12,"attrs","","",92,N],[12,"mac","","",92,N],[12,"semi_token","","",92,N],[3,"ImplItemMethod","","A method within an impl block.",N,N],[12,"attrs","","",93,N],[12,"vis","","",93,N],[12,"defaultness","","",93,N],[12,"sig","","",93,N],[12,"block","","",93,N],[3,"ImplItemType","","An associated type within an impl block.",N,N],[12,"attrs","","",94,N],[12,"vis","","",94,N],[12,"defaultness","","",94,N],[12,"type_token","","",94,N],[12,"ident","","",94,N],[12,"generics","","",94,N],[12,"eq_token","","",94,N],[12,"ty","","",94,N],[12,"semi_token","","",94,N],[3,"ImplItemVerbatim","","Tokens within an impl block not interpreted by Syn.",N,N],[12,"tts","","",95,N],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",N,N],[12,"attrs","","",96,N],[12,"vis","","",96,N],[12,"const_token","","",96,N],[12,"ident","","",96,N],[12,"colon_token","","",96,N],[12,"ty","","",96,N],[12,"eq_token","","",96,N],[12,"expr","","",96,N],[12,"semi_token","","",96,N],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",N,N],[12,"attrs","","",97,N],[12,"vis","","",97,N],[12,"enum_token","","",97,N],[12,"ident","","",97,N],[12,"generics","","",97,N],[12,"brace_token","","",97,N],[12,"variants","","",97,N],[3,"ItemExistential","","An existential type: `existential type Iter: Iterator<Item…",N,N],[12,"attrs","","",98,N],[12,"vis","","",98,N],[12,"existential_token","","",98,N],[12,"type_token","","",98,N],[12,"ident","","",98,N],[12,"generics","","",98,N],[12,"colon_token","","",98,N],[12,"bounds","","",98,N],[12,"semi_token","","",98,N],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",N,N],[12,"attrs","","",99,N],[12,"vis","","",99,N],[12,"extern_token","","",99,N],[12,"crate_token","","",99,N],[12,"ident","","",99,N],[12,"rename","","",99,N],[12,"semi_token","","",99,N],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",N,N],[12,"attrs","","",100,N],[12,"vis","","",100,N],[12,"constness","","",100,N],[12,"unsafety","","",100,N],[12,"asyncness","","",100,N],[12,"abi","","",100,N],[12,"ident","","",100,N],[12,"decl","","",100,N],[12,"block","","",100,N],[3,"ItemForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",N,N],[12,"attrs","","",101,N],[12,"abi","","",101,N],[12,"brace_token","","",101,N],[12,"items","","",101,N],[3,"ItemImpl","","An impl block providing trait or associated items:…",N,N],[12,"attrs","","",102,N],[12,"defaultness","","",102,N],[12,"unsafety","","",102,N],[12,"impl_token","","",102,N],[12,"generics","","",102,N],[12,"trait_","","Trait this impl implements.",102,N],[12,"self_ty","","The Self type of the impl.",102,N],[12,"brace_token","","",102,N],[12,"items","","",102,N],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",N,N],[12,"attrs","","",103,N],[12,"ident","","The `example` in `macro_rules! example { ... }`.",103,N],[12,"mac","","",103,N],[12,"semi_token","","",103,N],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",N,N],[12,"attrs","","",104,N],[12,"vis","","",104,N],[12,"macro_token","","",104,N],[12,"ident","","",104,N],[12,"paren_token","","",104,N],[12,"args","","",104,N],[12,"brace_token","","",104,N],[12,"body","","",104,N],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",N,N],[12,"attrs","","",105,N],[12,"vis","","",105,N],[12,"mod_token","","",105,N],[12,"ident","","",105,N],[12,"content","","",105,N],[12,"semi","","",105,N],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",N,N],[12,"attrs","","",106,N],[12,"vis","","",106,N],[12,"static_token","","",106,N],[12,"mutability","","",106,N],[12,"ident","","",106,N],[12,"colon_token","","",106,N],[12,"ty","","",106,N],[12,"eq_token","","",106,N],[12,"expr","","",106,N],[12,"semi_token","","",106,N],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",N,N],[12,"attrs","","",107,N],[12,"vis","","",107,N],[12,"struct_token","","",107,N],[12,"ident","","",107,N],[12,"generics","","",107,N],[12,"fields","","",107,N],[12,"semi_token","","",107,N],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",N,N],[12,"attrs","","",108,N],[12,"vis","","",108,N],[12,"unsafety","","",108,N],[12,"auto_token","","",108,N],[12,"trait_token","","",108,N],[12,"ident","","",108,N],[12,"generics","","",108,N],[12,"colon_token","","",108,N],[12,"supertraits","","",108,N],[12,"brace_token","","",108,N],[12,"items","","",108,N],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",N,N],[12,"attrs","","",109,N],[12,"vis","","",109,N],[12,"trait_token","","",109,N],[12,"ident","","",109,N],[12,"generics","","",109,N],[12,"eq_token","","",109,N],[12,"bounds","","",109,N],[12,"semi_token","","",109,N],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",N,N],[12,"attrs","","",110,N],[12,"vis","","",110,N],[12,"type_token","","",110,N],[12,"ident","","",110,N],[12,"generics","","",110,N],[12,"eq_token","","",110,N],[12,"ty","","",110,N],[12,"semi_token","","",110,N],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",N,N],[12,"attrs","","",111,N],[12,"vis","","",111,N],[12,"union_token","","",111,N],[12,"ident","","",111,N],[12,"generics","","",111,N],[12,"fields","","",111,N],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",N,N],[12,"attrs","","",112,N],[12,"vis","","",112,N],[12,"use_token","","",112,N],[12,"leading_colon","","",112,N],[12,"tree","","",112,N],[12,"semi_token","","",112,N],[3,"ItemVerbatim","","Tokens forming an item not interpreted by Syn.",N,N],[12,"tts","","",113,N],[3,"MethodSig","","A method's signature in a trait or implementation: `unsafe…",N,N],[12,"constness","","",114,N],[12,"unsafety","","",114,N],[12,"asyncness","","",114,N],[12,"abi","","",114,N],[12,"ident","","",114,N],[12,"decl","","",114,N],[3,"TraitItemConst","","An associated constant within the definition of a trait.",N,N],[12,"attrs","","",115,N],[12,"const_token","","",115,N],[12,"ident","","",115,N],[12,"colon_token","","",115,N],[12,"ty","","",115,N],[12,"default","","",115,N],[12,"semi_token","","",115,N],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",N,N],[12,"attrs","","",116,N],[12,"mac","","",116,N],[12,"semi_token","","",116,N],[3,"TraitItemMethod","","A trait method within the definition of a trait.",N,N],[12,"attrs","","",117,N],[12,"sig","","",117,N],[12,"default","","",117,N],[12,"semi_token","","",117,N],[3,"TraitItemType","","An associated type within the definition of a trait.",N,N],[12,"attrs","","",118,N],[12,"type_token","","",118,N],[12,"ident","","",118,N],[12,"generics","","",118,N],[12,"colon_token","","",118,N],[12,"bounds","","",118,N],[12,"default","","",118,N],[12,"semi_token","","",118,N],[3,"TraitItemVerbatim","","Tokens within the definition of a trait not interpreted by…",N,N],[12,"tts","","",119,N],[3,"UseGlob","","A glob import in a `use` item: `*`.",N,N],[12,"star_token","","",120,N],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",N,N],[12,"brace_token","","",121,N],[12,"items","","",121,N],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",N,N],[12,"ident","","",122,N],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",N,N],[12,"ident","","",123,N],[12,"colon2_token","","",123,N],[12,"tree","","",123,N],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",N,N],[12,"ident","","",124,N],[12,"as_token","","",124,N],[12,"rename","","",124,N],[3,"File","","A complete file of Rust source code.",N,N],[12,"shebang","","",125,N],[12,"attrs","","",125,N],[12,"items","","",125,N],[3,"Lifetime","","A Rust lifetime: `'a`.",N,N],[12,"apostrophe","","",126,N],[12,"ident","","",126,N],[3,"LitBool","","A boolean literal: `true` or `false`.",N,N],[12,"value","","",127,N],[12,"span","","",127,N],[3,"LitByte","","A byte literal: `b'f'`.",N,N],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",N,N],[3,"LitChar","","A character literal: `'a'`.",N,N],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",N,N],[3,"LitInt","","An integer literal: `1` or `1u16`.",N,N],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",N,N],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly…",N,N],[12,"token","","",128,N],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path","","",129,N],[12,"bang_token","","",129,N],[12,"delimiter","","",129,N],[12,"tts","","",129,N],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",N,N],[12,"enum_token","","",130,N],[12,"brace_token","","",130,N],[12,"variants","","",130,N],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",N,N],[12,"struct_token","","",131,N],[12,"fields","","",131,N],[12,"semi_token","","",131,N],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",N,N],[12,"union_token","","",132,N],[12,"fields","","",132,N],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",133,N],[12,"vis","","Visibility of the struct or enum.",133,N],[12,"ident","","Name of the struct or enum.",133,N],[12,"generics","","Generics required to complete the definition.",133,N],[12,"data","","Data within the struct or enum.",133,N],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token","","",134,N],[12,"name","","",134,N],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"name","","",135,N],[12,"ty","","",135,N],[3,"TypeArray","","A fixed size array type: `[T; n]`.",N,N],[12,"bracket_token","","",136,N],[12,"elem","","",136,N],[12,"semi_token","","",136,N],[12,"len","","",136,N],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",N,N],[12,"lifetimes","","",137,N],[12,"unsafety","","",137,N],[12,"abi","","",137,N],[12,"fn_token","","",137,N],[12,"paren_token","","",137,N],[12,"inputs","","",137,N],[12,"variadic","","",137,N],[12,"output","","",137,N],[3,"TypeGroup","","A type contained within invisible delimiters.",N,N],[12,"group_token","","",138,N],[12,"elem","","",138,N],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",N,N],[12,"impl_token","","",139,N],[12,"bounds","","",139,N],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",N,N],[12,"underscore_token","","",140,N],[3,"TypeMacro","","A macro in the type position.",N,N],[12,"mac","","",141,N],[3,"TypeNever","","The never type: `!`.",N,N],[12,"bang_token","","",142,N],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",N,N],[12,"paren_token","","",143,N],[12,"elem","","",143,N],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",N,N],[12,"qself","","",144,N],[12,"path","","",144,N],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",N,N],[12,"star_token","","",145,N],[12,"const_token","","",145,N],[12,"mutability","","",145,N],[12,"elem","","",145,N],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",N,N],[12,"and_token","","",146,N],[12,"lifetime","","",146,N],[12,"mutability","","",146,N],[12,"elem","","",146,N],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",N,N],[12,"bracket_token","","",147,N],[12,"elem","","",147,N],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",N,N],[12,"dyn_token","","",148,N],[12,"bounds","","",148,N],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",N,N],[12,"paren_token","","",149,N],[12,"elems","","",149,N],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",N,N],[12,"tts","","",150,N],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,"colon2_token","","",151,N],[12,"lt_token","","",151,N],[12,"args","","",151,N],[12,"gt_token","","",151,N],[3,"Binding","","A binding (equality constraint) on an associated type:…",N,N],[12,"ident","","",152,N],[12,"eq_token","","",152,N],[12,"ty","","",152,N],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",N,N],[12,"ident","","",153,N],[12,"colon_token","","",153,N],[12,"bounds","","",153,N],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,"paren_token","","",154,N],[12,"inputs","","`(A, B)`",154,N],[12,"output","","`C`",154,N],[3,"Path","","A path at which a named item is exported:…",N,N],[12,"leading_colon","","",155,N],[12,"segments","","",155,N],[3,"PathSegment","","A segment of a path together with any path arguments on…",N,N],[12,"ident","","",156,N],[12,"arguments","","",156,N],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,"lt_token","","",157,N],[12,"ty","","",157,N],[12,"position","","",157,N],[12,"as_token","","",157,N],[12,"gt_token","","",157,N],[3,"Error","","Error returned when a Syn parser cannot parse the input…",N,N],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer","","",158,N],[13,"Inner","","",158,N],[4,"Meta","","Content of a compile-time structured attribute.",N,N],[13,"Word","","",159,N],[13,"List","","A structured list within an attribute, like `derive(Copy,…",159,N],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",159,N],[4,"NestedMeta","","Element of a compile-time attribute list.",N,N],[13,"Meta","","A structured meta item, like the `Copy` in…",160,N],[13,"Literal","","A Rust literal, like the `\"new_name\"` in…",160,N],[4,"Fields","","Data stored within an enum variant or struct.",N,N],[13,"Named","","Named fields of a struct or struct variant such as `Point…",161,N],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",161,N],[13,"Unit","","Unit struct or unit variant such as `None`.",161,N],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public","","A public visibility level: `pub`.",162,N],[13,"Crate","","A crate-level visibility: `crate`.",162,N],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",162,N],[13,"Inherited","","An inherited visibility, which usually means private.",162,N],[4,"Expr","","A Rust expression.",N,N],[13,"Box","","A box expression: `box f`.",163,N],[13,"InPlace","","A placement expression: `place <- value`.",163,N],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",163,N],[13,"Call","","A function call expression: `invoke(a, b)`.",163,N],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",163,N],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",163,N],[13,"Binary","","A binary operation: `a + b`, `a * b`.",163,N],[13,"Unary","","A unary operation: `!x`, `*x`.",163,N],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",163,N],[13,"Cast","","A cast expression: `foo as f64`.",163,N],[13,"Type","","A type ascription expression: `foo: f64`.",163,N],[13,"Let","","A `let` guard: `let Some(x) = opt`.",163,N],[13,"If","","An `if` expression with an optional `else` block: `if expr…",163,N],[13,"While","","A while loop: `while expr { ... }`.",163,N],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",163,N],[13,"Loop","","Conditionless loop: `loop { ... }`.",163,N],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",163,N],[13,"Closure","","A closure expression: `|a, b| a + b`.",163,N],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",163,N],[13,"Block","","A blocked scope: `{ ... }`.",163,N],[13,"Assign","","An assignment expression: `a = compute()`.",163,N],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",163,N],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",163,N],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",163,N],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",163,N],[13,"Path","","A path like `std::mem::replace` possibly containing…",163,N],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",163,N],[13,"Break","","A `break`, with an optional label to break and an optional…",163,N],[13,"Continue","","A `continue`, with an optional label.",163,N],[13,"Return","","A `return`, with an optional value to be returned.",163,N],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",163,N],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",163,N],[13,"Repeat","","An array literal constructed from one repeated element:…",163,N],[13,"Paren","","A parenthesized expression: `(a + b)`.",163,N],[13,"Group","","An expression contained within invisible delimiters.",163,N],[13,"Try","","A try-expression: `expr?`.",163,N],[13,"Async","","An async block: `async { ... }`.",163,N],[13,"TryBlock","","A try block: `try { ... }`.",163,N],[13,"Yield","","A yield expression: `yield expr`.",163,N],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",163,N],[4,"Member","","A struct or tuple struct field accessed in a struct…",N,N],[13,"Named","","A named field like `self.x`.",164,N],[13,"Unnamed","","An unnamed field like `self.0`.",164,N],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",N,N],[13,"Type","","A type argument.",165,N],[13,"Const","","A const expression. Must be inside of a block.",165,N],[4,"Pat","","A pattern in a local binding, function signature, match…",N,N],[13,"Wild","","A pattern that matches any value: `_`.",166,N],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",166,N],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",166,N],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",166,N],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",166,N],[13,"Tuple","","A tuple pattern: `(a, b)`.",166,N],[13,"Box","","A box pattern: `box v`.",166,N],[13,"Ref","","A reference pattern: `&mut (first, second)`.",166,N],[13,"Lit","","A literal pattern: `0`.",166,N],[13,"Range","","A range pattern: `1..=2`.",166,N],[13,"Slice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",166,N],[13,"Macro","","A macro in expression position.",166,N],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",166,N],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",N,N],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",167,N],[13,"Closed","","Inclusive at the beginning and end.",167,N],[4,"Stmt","","A statement, usually ending in a semicolon.",N,N],[13,"Local","","A local (let) binding.",168,N],[13,"Item","","An item definition.",168,N],[13,"Expr","","Expr without trailing semicolon.",168,N],[13,"Semi","","Expression with trailing semicolon.",168,N],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type","","A generic type parameter: `T: Into<String>`.",169,N],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",169,N],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",169,N],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",N,N],[13,"None","","",170,N],[13,"Maybe","","",170,N],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait","","",171,N],[13,"Lifetime","","",171,N],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",N,N],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",172,N],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",172,N],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",172,N],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",N,N],[13,"SelfRef","","Self captured by reference in a function signature:…",173,N],[13,"SelfValue","","Self captured by value in a function signature: `self` or…",173,N],[13,"Captured","","An explicitly typed pattern captured by a function…",173,N],[13,"Inferred","","A pattern whose type is inferred captured by a function…",173,N],[13,"Ignored","","A type not bound to any pattern in a function signature.",173,N],[4,"ForeignItem","","An item within an `extern` block.",N,N],[13,"Fn","","A foreign function in an `extern` block.",174,N],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",174,N],[13,"Type","","A foreign type in an `extern` block: `type void`.",174,N],[13,"Macro","","A macro invocation within an extern block.",174,N],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",174,N],[4,"ImplItem","","An item within an impl block.",N,N],[13,"Const","","An associated constant within an impl block.",175,N],[13,"Method","","A method within an impl block.",175,N],[13,"Type","","An associated type within an impl block.",175,N],[13,"Existential","","An existential type within an impl block.",175,N],[13,"Macro","","A macro invocation within an impl block.",175,N],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",175,N],[4,"Item","","Things that can appear directly inside of a module or scope.",N,N],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",176,N],[13,"Use","","A use declaration: `use std::collections::HashMap`.",176,N],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",176,N],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",176,N],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",176,N],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",176,N],[13,"ForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",176,N],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",176,N],[13,"Existential","","An existential type: `existential type Iter: Iterator<Item…",176,N],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",176,N],[13,"Enum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",176,N],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",176,N],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",176,N],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",176,N],[13,"Impl","","An impl block providing trait or associated items:…",176,N],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",176,N],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",176,N],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",176,N],[4,"TraitItem","","An item declaration within the definition of a trait.",N,N],[13,"Const","","An associated constant within the definition of a trait.",177,N],[13,"Method","","A trait method within the definition of a trait.",177,N],[13,"Type","","An associated type within the definition of a trait.",177,N],[13,"Macro","","A macro invocation within the definition of a trait.",177,N],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",177,N],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",N,N],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",178,N],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",178,N],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",178,N],[13,"Glob","","A glob import in a `use` item: `*`.",178,N],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",178,N],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the…",N,N],[13,"F32","","",179,N],[13,"F64","","",179,N],[13,"None","","",179,N],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in…",N,N],[13,"I8","","",180,N],[13,"I16","","",180,N],[13,"I32","","",180,N],[13,"I64","","",180,N],[13,"I128","","",180,N],[13,"Isize","","",180,N],[13,"U8","","",180,N],[13,"U16","","",180,N],[13,"U32","","",180,N],[13,"U64","","",180,N],[13,"U128","","",180,N],[13,"Usize","","",180,N],[13,"None","","",180,N],[4,"Lit","","A Rust literal such as a string or integer or boolean.",N,N],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",181,N],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",181,N],[13,"Byte","","A byte literal: `b'f'`.",181,N],[13,"Char","","A character literal: `'a'`.",181,N],[13,"Int","","An integer literal: `1` or `1u16`.",181,N],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",181,N],[13,"Bool","","A boolean literal: `true` or `false`.",181,N],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly…",181,N],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked","","An ordinary string like `\"data\"`.",182,N],[13,"Raw","","A raw string like `r##\"data\"##`.",182,N],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren","","",183,N],[13,"Brace","","",183,N],[13,"Bracket","","",183,N],[4,"Data","","The storage of a struct, enum or union data structure.",N,N],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",184,N],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",184,N],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",184,N],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add","","The `+` operator (addition)",185,N],[13,"Sub","","The `-` operator (subtraction)",185,N],[13,"Mul","","The `*` operator (multiplication)",185,N],[13,"Div","","The `/` operator (division)",185,N],[13,"Rem","","The `%` operator (modulus)",185,N],[13,"And","","The `&&` operator (logical and)",185,N],[13,"Or","","The `||` operator (logical or)",185,N],[13,"BitXor","","The `^` operator (bitwise xor)",185,N],[13,"BitAnd","","The `&` operator (bitwise and)",185,N],[13,"BitOr","","The `|` operator (bitwise or)",185,N],[13,"Shl","","The `<<` operator (shift left)",185,N],[13,"Shr","","The `>>` operator (shift right)",185,N],[13,"Eq","","The `==` operator (equality)",185,N],[13,"Lt","","The `<` operator (less than)",185,N],[13,"Le","","The `<=` operator (less than or equal to)",185,N],[13,"Ne","","The `!=` operator (not equal to)",185,N],[13,"Ge","","The `>=` operator (greater than or equal to)",185,N],[13,"Gt","","The `>` operator (greater than)",185,N],[13,"AddEq","","The `+=` operator",185,N],[13,"SubEq","","The `-=` operator",185,N],[13,"MulEq","","The `*=` operator",185,N],[13,"DivEq","","The `/=` operator",185,N],[13,"RemEq","","The `%=` operator",185,N],[13,"BitXorEq","","The `^=` operator",185,N],[13,"BitAndEq","","The `&=` operator",185,N],[13,"BitOrEq","","The `|=` operator",185,N],[13,"ShlEq","","The `<<=` operator",185,N],[13,"ShrEq","","The `>>=` operator",185,N],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref","","The `*` operator for dereferencing",186,N],[13,"Not","","The `!` operator for logical inversion",186,N],[13,"Neg","","The `-` operator for negation",186,N],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n:…",N,N],[13,"Named","","Argument given a name.",187,N],[13,"Wild","","Argument not given a name, matched with `_`.",187,N],[4,"ReturnType","","Return type of a function signature.",N,N],[13,"Default","","Return type is not specified.",188,N],[13,"Type","","A particular type is returned.",188,N],[4,"Type","","The possible types that a Rust value could have.",N,N],[13,"Slice","","A dynamically sized slice type: `[T]`.",189,N],[13,"Array","","A fixed size array type: `[T; n]`.",189,N],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",189,N],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",189,N],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",189,N],[13,"Never","","The never type: `!`.",189,N],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",189,N],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",189,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",189,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",189,N],[13,"Paren","","A parenthesized type equivalent to the inner type.",189,N],[13,"Group","","A type contained within invisible delimiters.",189,N],[13,"Infer","","Indication that a type should be inferred by the compiler:…",189,N],[13,"Macro","","A macro in the type position.",189,N],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",189,N],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,"Lifetime","","A lifetime argument.",190,N],[13,"Type","","A type argument.",190,N],[13,"Binding","","A binding (equality constraint) on an associated type: the…",190,N],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",190,N],[13,"Const","","A const expression. Must be inside of a block.",190,N],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None","","",191,N],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",191,N],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",191,N],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",N,[[["tokenstream"]],["result"]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",N,[[["tokenstream"]],["result"]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",N,[[["str"]],["result"]]],[5,"parse_file","","Parse the content of a file of Rust code.",N,[[["str"]],["result",["file"]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",N,N],[3,"Underscore","syn::token","`_`",N,N],[12,"spans","","",192,N],[3,"Abstract","","`abstract`",N,N],[12,"span","","",193,N],[3,"As","","`as`",N,N],[12,"span","","",194,N],[3,"Async","","`async`",N,N],[12,"span","","",195,N],[3,"Auto","","`auto`",N,N],[12,"span","","",196,N],[3,"Become","","`become`",N,N],[12,"span","","",197,N],[3,"Box","","`box`",N,N],[12,"span","","",198,N],[3,"Break","","`break`",N,N],[12,"span","","",199,N],[3,"Const","","`const`",N,N],[12,"span","","",200,N],[3,"Continue","","`continue`",N,N],[12,"span","","",201,N],[3,"Crate","","`crate`",N,N],[12,"span","","",202,N],[3,"Default","","`default`",N,N],[12,"span","","",203,N],[3,"Do","","`do`",N,N],[12,"span","","",204,N],[3,"Dyn","","`dyn`",N,N],[12,"span","","",205,N],[3,"Else","","`else`",N,N],[12,"span","","",206,N],[3,"Enum","","`enum`",N,N],[12,"span","","",207,N],[3,"Existential","","`existential`",N,N],[12,"span","","",208,N],[3,"Extern","","`extern`",N,N],[12,"span","","",209,N],[3,"Final","","`final`",N,N],[12,"span","","",210,N],[3,"Fn","","`fn`",N,N],[12,"span","","",211,N],[3,"For","","`for`",N,N],[12,"span","","",212,N],[3,"If","","`if`",N,N],[12,"span","","",213,N],[3,"Impl","","`impl`",N,N],[12,"span","","",214,N],[3,"In","","`in`",N,N],[12,"span","","",215,N],[3,"Let","","`let`",N,N],[12,"span","","",216,N],[3,"Loop","","`loop`",N,N],[12,"span","","",217,N],[3,"Macro","","`macro`",N,N],[12,"span","","",218,N],[3,"Match","","`match`",N,N],[12,"span","","",219,N],[3,"Mod","","`mod`",N,N],[12,"span","","",220,N],[3,"Move","","`move`",N,N],[12,"span","","",221,N],[3,"Mut","","`mut`",N,N],[12,"span","","",222,N],[3,"Override","","`override`",N,N],[12,"span","","",223,N],[3,"Priv","","`priv`",N,N],[12,"span","","",224,N],[3,"Pub","","`pub`",N,N],[12,"span","","",225,N],[3,"Ref","","`ref`",N,N],[12,"span","","",226,N],[3,"Return","","`return`",N,N],[12,"span","","",227,N],[3,"SelfType","","`Self`",N,N],[12,"span","","",228,N],[3,"SelfValue","","`self`",N,N],[12,"span","","",229,N],[3,"Static","","`static`",N,N],[12,"span","","",230,N],[3,"Struct","","`struct`",N,N],[12,"span","","",231,N],[3,"Super","","`super`",N,N],[12,"span","","",232,N],[3,"Trait","","`trait`",N,N],[12,"span","","",233,N],[3,"Try","","`try`",N,N],[12,"span","","",234,N],[3,"Type","","`type`",N,N],[12,"span","","",235,N],[3,"Typeof","","`typeof`",N,N],[12,"span","","",236,N],[3,"Union","","`union`",N,N],[12,"span","","",237,N],[3,"Unsafe","","`unsafe`",N,N],[12,"span","","",238,N],[3,"Unsized","","`unsized`",N,N],[12,"span","","",239,N],[3,"Use","","`use`",N,N],[12,"span","","",240,N],[3,"Virtual","","`virtual`",N,N],[12,"span","","",241,N],[3,"Where","","`where`",N,N],[12,"span","","",242,N],[3,"While","","`while`",N,N],[12,"span","","",243,N],[3,"Yield","","`yield`",N,N],[12,"span","","",244,N],[3,"Add","","`+`",N,N],[12,"spans","","",245,N],[3,"AddEq","","`+=`",N,N],[12,"spans","","",246,N],[3,"And","","`&`",N,N],[12,"spans","","",247,N],[3,"AndAnd","","`&&`",N,N],[12,"spans","","",248,N],[3,"AndEq","","`&=`",N,N],[12,"spans","","",249,N],[3,"At","","`@`",N,N],[12,"spans","","",250,N],[3,"Bang","","`!`",N,N],[12,"spans","","",251,N],[3,"Caret","","`^`",N,N],[12,"spans","","",252,N],[3,"CaretEq","","`^=`",N,N],[12,"spans","","",253,N],[3,"Colon","","`:`",N,N],[12,"spans","","",254,N],[3,"Colon2","","`::`",N,N],[12,"spans","","",255,N],[3,"Comma","","`,`",N,N],[12,"spans","","",256,N],[3,"Div","","`/`",N,N],[12,"spans","","",257,N],[3,"DivEq","","`/=`",N,N],[12,"spans","","",258,N],[3,"Dollar","","`$`",N,N],[12,"spans","","",259,N],[3,"Dot","","`.`",N,N],[12,"spans","","",260,N],[3,"Dot2","","`..`",N,N],[12,"spans","","",261,N],[3,"Dot3","","`...`",N,N],[12,"spans","","",262,N],[3,"DotDotEq","","`..=`",N,N],[12,"spans","","",263,N],[3,"Eq","","`=`",N,N],[12,"spans","","",264,N],[3,"EqEq","","`==`",N,N],[12,"spans","","",265,N],[3,"Ge","","`>=`",N,N],[12,"spans","","",266,N],[3,"Gt","","`>`",N,N],[12,"spans","","",267,N],[3,"Le","","`<=`",N,N],[12,"spans","","",268,N],[3,"Lt","","`<`",N,N],[12,"spans","","",269,N],[3,"MulEq","","`*=`",N,N],[12,"spans","","",270,N],[3,"Ne","","`!=`",N,N],[12,"spans","","",271,N],[3,"Or","","`|`",N,N],[12,"spans","","",272,N],[3,"OrEq","","`|=`",N,N],[12,"spans","","",273,N],[3,"OrOr","","`||`",N,N],[12,"spans","","",274,N],[3,"Pound","","`#`",N,N],[12,"spans","","",275,N],[3,"Question","","`?`",N,N],[12,"spans","","",276,N],[3,"RArrow","","`->`",N,N],[12,"spans","","",277,N],[3,"LArrow","","`<-`",N,N],[12,"spans","","",278,N],[3,"Rem","","`%`",N,N],[12,"spans","","",279,N],[3,"RemEq","","`%=`",N,N],[12,"spans","","",280,N],[3,"FatArrow","","`=>`",N,N],[12,"spans","","",281,N],[3,"Semi","","`;`",N,N],[12,"spans","","",282,N],[3,"Shl","","`<<`",N,N],[12,"spans","","",283,N],[3,"ShlEq","","`<<=`",N,N],[12,"spans","","",284,N],[3,"Shr","","`>>`",N,N],[12,"spans","","",285,N],[3,"ShrEq","","`>>=`",N,N],[12,"spans","","",286,N],[3,"Star","","`*`",N,N],[12,"spans","","",287,N],[3,"Sub","","`-`",N,N],[12,"spans","","",288,N],[3,"SubEq","","`-=`",N,N],[12,"spans","","",289,N],[3,"Tilde","","`~`",N,N],[12,"spans","","",290,N],[3,"Brace","","`{...}`",N,N],[12,"span","","",291,N],[3,"Bracket","","`[...]`",N,N],[12,"span","","",292,N],[3,"Paren","","`(...)`",N,N],[12,"span","","",293,N],[3,"Group","","None-delimited group",N,N],[12,"span","","",294,N],[8,"Token","","Marker trait for types that represent single tokens.",N,N],[11,"surround","","",291,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",292,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",293,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",294,[[["self"],["tokenstream"],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],["result",["meta"]]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"name","","Returns the identifier that begins this structured meta…",159,[[["self"]],["ident"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",161,[[["self"]],["iter",["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",161,[[["self"]],["itermut",["field"]]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",52,[[["parsestream"]],["result",["vec"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",73,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",73,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",73,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",73,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",73,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",73,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",73,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",73,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",295,[[["self"]],["turbofish"]]],[11,"new","","",74,[[["lifetime"]],["self"]]],[11,"new","","Panics",126,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",181,[[["literal"]],["self"]]],[11,"new","","",296,[[["str"],["span"]],["self"]]],[11,"value","","",296,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",296,[[["self"]],["result"]]],[11,"parse_with","","Invoke parser on the content of this string literal.",296,[[["self"],["f"]],["result"]]],[11,"span","","",296,[[["self"]],["span"]]],[11,"set_span","","",296,[[["self"],["span"]]]],[11,"new","","",297,N],[11,"value","","",297,[[["self"]],["vec",["u8"]]]],[11,"span","","",297,[[["self"]],["span"]]],[11,"set_span","","",297,[[["self"],["span"]]]],[11,"new","","",298,[[["u8"],["span"]],["self"]]],[11,"value","","",298,[[["self"]],["u8"]]],[11,"span","","",298,[[["self"]],["span"]]],[11,"set_span","","",298,[[["self"],["span"]]]],[11,"new","","",299,[[["char"],["span"]],["self"]]],[11,"value","","",299,[[["self"]],["char"]]],[11,"span","","",299,[[["self"]],["span"]]],[11,"set_span","","",299,[[["self"],["span"]]]],[11,"new","","",300,[[["u64"],["intsuffix"],["span"]],["self"]]],[11,"value","","",300,[[["self"]],["u64"]]],[11,"suffix","","",300,[[["self"]],["intsuffix"]]],[11,"span","","",300,[[["self"]],["span"]]],[11,"set_span","","",300,[[["self"],["span"]]]],[11,"new","","",301,[[["f64"],["floatsuffix"],["span"]],["self"]]],[11,"value","","",301,[[["self"]],["f64"]]],[11,"suffix","","",301,[[["self"]],["floatsuffix"]]],[11,"span","","",301,[[["self"]],["span"]]],[11,"set_span","","",301,[[["self"],["span"]]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"set_span","","",128,[[["self"],["span"]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",189,[[["parsestream"]],["result"]]],[11,"without_plus","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"],["bool"]],["result"]]],[11,"without_plus","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"],["bool"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",155,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",155,[[["self"],["i"]],["bool"]]],[11,"is_empty","","",191,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",N,N],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",302,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",302,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",302,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",303,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",303,[[["self"]],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",303,[[["self"],["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",303,[[["self"]],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",303,[[["self"]],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",303,[[["self"]],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",303,[[["self"]],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",303,[[["self"]],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",303,[[["self"]],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",303,[[["self"]],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",N,N],[10,"parse_any","","Parses any identifier including keywords.",304,[[["parsestream"]],["result"]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",304,N],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",304,[[["self"]],["ident"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,"IntoIter","","An iterator over owned values of type `T`.",N,N],[3,"Iter","","An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair","","A single syntax tree node of type `T` followed by its…",N,N],[13,"Punctuated","","",305,N],[13,"End","","",305,N],[11,"new","","Creates an empty punctuated sequence.",306,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",306,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",306,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",306,[[["self"]],["option",["pair"]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",306,[[["self"]],["option",["pair"]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",306,[[["self"]],["option",["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",306,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",306,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",306,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",306,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",306,[[["self"]],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",306,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",306,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",306,[[["self"]],["option",["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",306,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",306,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",306,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",306,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",306,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",306,N],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",306,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",306,N],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",305,[[["self"]],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",305,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",305,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",305,[[["self"]],["option"]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",305,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",305,N],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",N,N],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",N,N],[10,"span","","Returns a `Span` covering the complete contents of this…",307,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[5,"visit_abi","syn::visit","",N,[[["v"],["abi"]]]],[5,"visit_angle_bracketed_generic_arguments","","",N,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_arg_captured","","",N,[[["v"],["argcaptured"]]]],[5,"visit_arg_self","","",N,[[["v"],["argself"]]]],[5,"visit_arg_self_ref","","",N,[[["v"],["argselfref"]]]],[5,"visit_arm","","",N,[[["v"],["arm"]]]],[5,"visit_attr_style","","",N,[[["v"],["attrstyle"]]]],[5,"visit_attribute","","",N,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg","","",N,[[["v"],["barefnarg"]]]],[5,"visit_bare_fn_arg_name","","",N,[[["v"],["barefnargname"]]]],[5,"visit_bin_op","","",N,[[["v"],["binop"]]]],[5,"visit_binding","","",N,[[["v"],["binding"]]]],[5,"visit_block","","",N,[[["v"],["block"]]]],[5,"visit_bound_lifetimes","","",N,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",N,[[["v"],["constparam"]]]],[5,"visit_constraint","","",N,[[["v"],["constraint"]]]],[5,"visit_data","","",N,[[["v"],["data"]]]],[5,"visit_data_enum","","",N,[[["v"],["dataenum"]]]],[5,"visit_data_struct","","",N,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",N,[[["v"],["dataunion"]]]],[5,"visit_derive_input","","",N,[[["v"],["deriveinput"]]]],[5,"visit_expr","","",N,[[["v"],["expr"]]]],[5,"visit_expr_array","","",N,[[["v"],["exprarray"]]]],[5,"visit_expr_assign","","",N,[[["v"],["exprassign"]]]],[5,"visit_expr_assign_op","","",N,[[["v"],["exprassignop"]]]],[5,"visit_expr_async","","",N,[[["v"],["exprasync"]]]],[5,"visit_expr_binary","","",N,[[["v"],["exprbinary"]]]],[5,"visit_expr_block","","",N,[[["v"],["exprblock"]]]],[5,"visit_expr_box","","",N,[[["v"],["exprbox"]]]],[5,"visit_expr_break","","",N,[[["v"],["exprbreak"]]]],[5,"visit_expr_call","","",N,[[["v"],["exprcall"]]]],[5,"visit_expr_cast","","",N,[[["v"],["exprcast"]]]],[5,"visit_expr_closure","","",N,[[["v"],["exprclosure"]]]],[5,"visit_expr_continue","","",N,[[["v"],["exprcontinue"]]]],[5,"visit_expr_field","","",N,[[["v"],["exprfield"]]]],[5,"visit_expr_for_loop","","",N,[[["v"],["exprforloop"]]]],[5,"visit_expr_group","","",N,[[["v"],["exprgroup"]]]],[5,"visit_expr_if","","",N,[[["v"],["exprif"]]]],[5,"visit_expr_in_place","","",N,[[["v"],["exprinplace"]]]],[5,"visit_expr_index","","",N,[[["v"],["exprindex"]]]],[5,"visit_expr_let","","",N,[[["v"],["exprlet"]]]],[5,"visit_expr_lit","","",N,[[["v"],["exprlit"]]]],[5,"visit_expr_loop","","",N,[[["v"],["exprloop"]]]],[5,"visit_expr_macro","","",N,[[["v"],["exprmacro"]]]],[5,"visit_expr_match","","",N,[[["v"],["exprmatch"]]]],[5,"visit_expr_method_call","","",N,[[["v"],["exprmethodcall"]]]],[5,"visit_expr_paren","","",N,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",N,[[["v"],["exprpath"]]]],[5,"visit_expr_range","","",N,[[["v"],["exprrange"]]]],[5,"visit_expr_reference","","",N,[[["v"],["exprreference"]]]],[5,"visit_expr_repeat","","",N,[[["v"],["exprrepeat"]]]],[5,"visit_expr_return","","",N,[[["v"],["exprreturn"]]]],[5,"visit_expr_struct","","",N,[[["v"],["exprstruct"]]]],[5,"visit_expr_try","","",N,[[["v"],["exprtry"]]]],[5,"visit_expr_try_block","","",N,[[["v"],["exprtryblock"]]]],[5,"visit_expr_tuple","","",N,[[["v"],["exprtuple"]]]],[5,"visit_expr_type","","",N,[[["v"],["exprtype"]]]],[5,"visit_expr_unary","","",N,[[["v"],["exprunary"]]]],[5,"visit_expr_unsafe","","",N,[[["v"],["exprunsafe"]]]],[5,"visit_expr_verbatim","","",N,[[["v"],["exprverbatim"]]]],[5,"visit_expr_while","","",N,[[["v"],["exprwhile"]]]],[5,"visit_expr_yield","","",N,[[["v"],["expryield"]]]],[5,"visit_field","","",N,[[["v"],["field"]]]],[5,"visit_field_pat","","",N,[[["v"],["fieldpat"]]]],[5,"visit_field_value","","",N,[[["v"],["fieldvalue"]]]],[5,"visit_fields","","",N,[[["v"],["fields"]]]],[5,"visit_fields_named","","",N,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",N,[[["v"],["fieldsunnamed"]]]],[5,"visit_file","","",N,[[["v"],["file"]]]],[5,"visit_fn_arg","","",N,[[["v"],["fnarg"]]]],[5,"visit_fn_decl","","",N,[[["v"],["fndecl"]]]],[5,"visit_foreign_item","","",N,[[["v"],["foreignitem"]]]],[5,"visit_foreign_item_fn","","",N,[[["v"],["foreignitemfn"]]]],[5,"visit_foreign_item_macro","","",N,[[["v"],["foreignitemmacro"]]]],[5,"visit_foreign_item_static","","",N,[[["v"],["foreignitemstatic"]]]],[5,"visit_foreign_item_type","","",N,[[["v"],["foreignitemtype"]]]],[5,"visit_foreign_item_verbatim","","",N,[[["v"],["foreignitemverbatim"]]]],[5,"visit_generic_argument","","",N,[[["v"],["genericargument"]]]],[5,"visit_generic_method_argument","","",N,[[["v"],["genericmethodargument"]]]],[5,"visit_generic_param","","",N,[[["v"],["genericparam"]]]],[5,"visit_generics","","",N,[[["v"],["generics"]]]],[5,"visit_impl_item","","",N,[[["v"],["implitem"]]]],[5,"visit_impl_item_const","","",N,[[["v"],["implitemconst"]]]],[5,"visit_impl_item_existential","","",N,[[["v"],["implitemexistential"]]]],[5,"visit_impl_item_macro","","",N,[[["v"],["implitemmacro"]]]],[5,"visit_impl_item_method","","",N,[[["v"],["implitemmethod"]]]],[5,"visit_impl_item_type","","",N,[[["v"],["implitemtype"]]]],[5,"visit_impl_item_verbatim","","",N,[[["v"],["implitemverbatim"]]]],[5,"visit_index","","",N,[[["v"],["index"]]]],[5,"visit_item","","",N,[[["v"],["item"]]]],[5,"visit_item_const","","",N,[[["v"],["itemconst"]]]],[5,"visit_item_enum","","",N,[[["v"],["itemenum"]]]],[5,"visit_item_existential","","",N,[[["v"],["itemexistential"]]]],[5,"visit_item_extern_crate","","",N,[[["v"],["itemexterncrate"]]]],[5,"visit_item_fn","","",N,[[["v"],["itemfn"]]]],[5,"visit_item_foreign_mod","","",N,[[["v"],["itemforeignmod"]]]],[5,"visit_item_impl","","",N,[[["v"],["itemimpl"]]]],[5,"visit_item_macro","","",N,[[["v"],["itemmacro"]]]],[5,"visit_item_macro2","","",N,[[["v"],["itemmacro2"]]]],[5,"visit_item_mod","","",N,[[["v"],["itemmod"]]]],[5,"visit_item_static","","",N,[[["v"],["itemstatic"]]]],[5,"visit_item_struct","","",N,[[["v"],["itemstruct"]]]],[5,"visit_item_trait","","",N,[[["v"],["itemtrait"]]]],[5,"visit_item_trait_alias","","",N,[[["v"],["itemtraitalias"]]]],[5,"visit_item_type","","",N,[[["v"],["itemtype"]]]],[5,"visit_item_union","","",N,[[["v"],["itemunion"]]]],[5,"visit_item_use","","",N,[[["v"],["itemuse"]]]],[5,"visit_item_verbatim","","",N,[[["v"],["itemverbatim"]]]],[5,"visit_label","","",N,[[["v"],["label"]]]],[5,"visit_lifetime","","",N,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def","","",N,[[["v"],["lifetimedef"]]]],[5,"visit_lit","","",N,[[["v"],["lit"]]]],[5,"visit_lit_bool","","",N,[[["v"],["litbool"]]]],[5,"visit_lit_byte","","",N,[[["v"],["litbyte"]]]],[5,"visit_lit_byte_str","","",N,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",N,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",N,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",N,[[["v"],["litint"]]]],[5,"visit_lit_str","","",N,[[["v"],["litstr"]]]],[5,"visit_lit_verbatim","","",N,[[["v"],["litverbatim"]]]],[5,"visit_local","","",N,[[["v"],["local"]]]],[5,"visit_macro","","",N,[[["v"],["macro"]]]],[5,"visit_macro_delimiter","","",N,[[["v"],["macrodelimiter"]]]],[5,"visit_member","","",N,[[["v"],["member"]]]],[5,"visit_meta","","",N,[[["v"],["meta"]]]],[5,"visit_meta_list","","",N,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",N,[[["v"],["metanamevalue"]]]],[5,"visit_method_sig","","",N,[[["v"],["methodsig"]]]],[5,"visit_method_turbofish","","",N,[[["v"],["methodturbofish"]]]],[5,"visit_nested_meta","","",N,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments","","",N,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_pat","","",N,[[["v"],["pat"]]]],[5,"visit_pat_box","","",N,[[["v"],["patbox"]]]],[5,"visit_pat_ident","","",N,[[["v"],["patident"]]]],[5,"visit_pat_lit","","",N,[[["v"],["patlit"]]]],[5,"visit_pat_macro","","",N,[[["v"],["patmacro"]]]],[5,"visit_pat_path","","",N,[[["v"],["patpath"]]]],[5,"visit_pat_range","","",N,[[["v"],["patrange"]]]],[5,"visit_pat_ref","","",N,[[["v"],["patref"]]]],[5,"visit_pat_slice","","",N,[[["v"],["patslice"]]]],[5,"visit_pat_struct","","",N,[[["v"],["patstruct"]]]],[5,"visit_pat_tuple","","",N,[[["v"],["pattuple"]]]],[5,"visit_pat_tuple_struct","","",N,[[["v"],["pattuplestruct"]]]],[5,"visit_pat_verbatim","","",N,[[["v"],["patverbatim"]]]],[5,"visit_pat_wild","","",N,[[["v"],["patwild"]]]],[5,"visit_path","","",N,[[["v"],["path"]]]],[5,"visit_path_arguments","","",N,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",N,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",N,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",N,[[["v"],["predicatelifetime"]]]],[5,"visit_predicate_type","","",N,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",N,[[["v"],["qself"]]]],[5,"visit_range_limits","","",N,[[["v"],["rangelimits"]]]],[5,"visit_return_type","","",N,[[["v"],["returntype"]]]],[5,"visit_stmt","","",N,[[["v"],["stmt"]]]],[5,"visit_trait_bound","","",N,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",N,[[["v"],["traitboundmodifier"]]]],[5,"visit_trait_item","","",N,[[["v"],["traititem"]]]],[5,"visit_trait_item_const","","",N,[[["v"],["traititemconst"]]]],[5,"visit_trait_item_macro","","",N,[[["v"],["traititemmacro"]]]],[5,"visit_trait_item_method","","",N,[[["v"],["traititemmethod"]]]],[5,"visit_trait_item_type","","",N,[[["v"],["traititemtype"]]]],[5,"visit_trait_item_verbatim","","",N,[[["v"],["traititemverbatim"]]]],[5,"visit_type","","",N,[[["v"],["type"]]]],[5,"visit_type_array","","",N,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",N,[[["v"],["typebarefn"]]]],[5,"visit_type_group","","",N,[[["v"],["typegroup"]]]],[5,"visit_type_impl_trait","","",N,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer","","",N,[[["v"],["typeinfer"]]]],[5,"visit_type_macro","","",N,[[["v"],["typemacro"]]]],[5,"visit_type_never","","",N,[[["v"],["typenever"]]]],[5,"visit_type_param","","",N,[[["v"],["typeparam"]]]],[5,"visit_type_param_bound","","",N,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",N,[[["v"],["typeparen"]]]],[5,"visit_type_path","","",N,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",N,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",N,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",N,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",N,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",N,[[["v"],["typetuple"]]]],[5,"visit_type_verbatim","","",N,[[["v"],["typeverbatim"]]]],[5,"visit_un_op","","",N,[[["v"],["unop"]]]],[5,"visit_use_glob","","",N,[[["v"],["useglob"]]]],[5,"visit_use_group","","",N,[[["v"],["usegroup"]]]],[5,"visit_use_name","","",N,[[["v"],["usename"]]]],[5,"visit_use_path","","",N,[[["v"],["usepath"]]]],[5,"visit_use_rename","","",N,[[["v"],["userename"]]]],[5,"visit_use_tree","","",N,[[["v"],["usetree"]]]],[5,"visit_variant","","",N,[[["v"],["variant"]]]],[5,"visit_vis_crate","","",N,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",N,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",N,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",N,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",N,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",N,[[["v"],["wherepredicate"]]]],[5,"visit_span","","",N,[[["v"],["span"]]]],[5,"visit_ident","","",N,[[["v"],["ident"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[11,"visit_abi","","",308,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",308,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arg_captured","","",308,[[["self"],["argcaptured"]]]],[11,"visit_arg_self","","",308,[[["self"],["argself"]]]],[11,"visit_arg_self_ref","","",308,[[["self"],["argselfref"]]]],[11,"visit_arm","","",308,[[["self"],["arm"]]]],[11,"visit_attr_style","","",308,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",308,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",308,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",308,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",308,[[["self"],["binop"]]]],[11,"visit_binding","","",308,[[["self"],["binding"]]]],[11,"visit_block","","",308,[[["self"],["block"]]]],[11,"visit_bound_lifetimes","","",308,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",308,[[["self"],["constparam"]]]],[11,"visit_constraint","","",308,[[["self"],["constraint"]]]],[11,"visit_data","","",308,[[["self"],["data"]]]],[11,"visit_data_enum","","",308,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",308,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",308,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",308,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",308,[[["self"],["expr"]]]],[11,"visit_expr_array","","",308,[[["self"],["exprarray"]]]],[11,"visit_expr_assign","","",308,[[["self"],["exprassign"]]]],[11,"visit_expr_assign_op","","",308,[[["self"],["exprassignop"]]]],[11,"visit_expr_async","","",308,[[["self"],["exprasync"]]]],[11,"visit_expr_binary","","",308,[[["self"],["exprbinary"]]]],[11,"visit_expr_block","","",308,[[["self"],["exprblock"]]]],[11,"visit_expr_box","","",308,[[["self"],["exprbox"]]]],[11,"visit_expr_break","","",308,[[["self"],["exprbreak"]]]],[11,"visit_expr_call","","",308,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",308,[[["self"],["exprcast"]]]],[11,"visit_expr_closure","","",308,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",308,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",308,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop","","",308,[[["self"],["exprforloop"]]]],[11,"visit_expr_group","","",308,[[["self"],["exprgroup"]]]],[11,"visit_expr_if","","",308,[[["self"],["exprif"]]]],[11,"visit_expr_in_place","","",308,[[["self"],["exprinplace"]]]],[11,"visit_expr_index","","",308,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",308,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",308,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",308,[[["self"],["exprloop"]]]],[11,"visit_expr_macro","","",308,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",308,[[["self"],["exprmatch"]]]],[11,"visit_expr_method_call","","",308,[[["self"],["exprmethodcall"]]]],[11,"visit_expr_paren","","",308,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",308,[[["self"],["exprpath"]]]],[11,"visit_expr_range","","",308,[[["self"],["exprrange"]]]],[11,"visit_expr_reference","","",308,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat","","",308,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return","","",308,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",308,[[["self"],["exprstruct"]]]],[11,"visit_expr_try","","",308,[[["self"],["exprtry"]]]],[11,"visit_expr_try_block","","",308,[[["self"],["exprtryblock"]]]],[11,"visit_expr_tuple","","",308,[[["self"],["exprtuple"]]]],[11,"visit_expr_type","","",308,[[["self"],["exprtype"]]]],[11,"visit_expr_unary","","",308,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",308,[[["self"],["exprunsafe"]]]],[11,"visit_expr_verbatim","","",308,[[["self"],["exprverbatim"]]]],[11,"visit_expr_while","","",308,[[["self"],["exprwhile"]]]],[11,"visit_expr_yield","","",308,[[["self"],["expryield"]]]],[11,"visit_field","","",308,[[["self"],["field"]]]],[11,"visit_field_pat","","",308,[[["self"],["fieldpat"]]]],[11,"visit_field_value","","",308,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",308,[[["self"],["fields"]]]],[11,"visit_fields_named","","",308,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",308,[[["self"],["fieldsunnamed"]]]],[11,"visit_file","","",308,[[["self"],["file"]]]],[11,"visit_fn_arg","","",308,[[["self"],["fnarg"]]]],[11,"visit_fn_decl","","",308,[[["self"],["fndecl"]]]],[11,"visit_foreign_item","","",308,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn","","",308,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",308,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",308,[[["self"],["foreignitemstatic"]]]],[11,"visit_foreign_item_type","","",308,[[["self"],["foreignitemtype"]]]],[11,"visit_foreign_item_verbatim","","",308,[[["self"],["foreignitemverbatim"]]]],[11,"visit_generic_argument","","",308,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",308,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",308,[[["self"],["genericparam"]]]],[11,"visit_generics","","",308,[[["self"],["generics"]]]],[11,"visit_impl_item","","",308,[[["self"],["implitem"]]]],[11,"visit_impl_item_const","","",308,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_existential","","",308,[[["self"],["implitemexistential"]]]],[11,"visit_impl_item_macro","","",308,[[["self"],["implitemmacro"]]]],[11,"visit_impl_item_method","","",308,[[["self"],["implitemmethod"]]]],[11,"visit_impl_item_type","","",308,[[["self"],["implitemtype"]]]],[11,"visit_impl_item_verbatim","","",308,[[["self"],["implitemverbatim"]]]],[11,"visit_index","","",308,[[["self"],["index"]]]],[11,"visit_item","","",308,[[["self"],["item"]]]],[11,"visit_item_const","","",308,[[["self"],["itemconst"]]]],[11,"visit_item_enum","","",308,[[["self"],["itemenum"]]]],[11,"visit_item_existential","","",308,[[["self"],["itemexistential"]]]],[11,"visit_item_extern_crate","","",308,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",308,[[["self"],["itemfn"]]]],[11,"visit_item_foreign_mod","","",308,[[["self"],["itemforeignmod"]]]],[11,"visit_item_impl","","",308,[[["self"],["itemimpl"]]]],[11,"visit_item_macro","","",308,[[["self"],["itemmacro"]]]],[11,"visit_item_macro2","","",308,[[["self"],["itemmacro2"]]]],[11,"visit_item_mod","","",308,[[["self"],["itemmod"]]]],[11,"visit_item_static","","",308,[[["self"],["itemstatic"]]]],[11,"visit_item_struct","","",308,[[["self"],["itemstruct"]]]],[11,"visit_item_trait","","",308,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias","","",308,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type","","",308,[[["self"],["itemtype"]]]],[11,"visit_item_union","","",308,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",308,[[["self"],["itemuse"]]]],[11,"visit_item_verbatim","","",308,[[["self"],["itemverbatim"]]]],[11,"visit_label","","",308,[[["self"],["label"]]]],[11,"visit_lifetime","","",308,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",308,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",308,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",308,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",308,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",308,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",308,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",308,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",308,[[["self"],["litint"]]]],[11,"visit_lit_str","","",308,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",308,[[["self"],["litverbatim"]]]],[11,"visit_local","","",308,[[["self"],["local"]]]],[11,"visit_macro","","",308,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",308,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",308,[[["self"],["member"]]]],[11,"visit_meta","","",308,[[["self"],["meta"]]]],[11,"visit_meta_list","","",308,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",308,[[["self"],["metanamevalue"]]]],[11,"visit_method_sig","","",308,[[["self"],["methodsig"]]]],[11,"visit_method_turbofish","","",308,[[["self"],["methodturbofish"]]]],[11,"visit_nested_meta","","",308,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",308,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",308,[[["self"],["pat"]]]],[11,"visit_pat_box","","",308,[[["self"],["patbox"]]]],[11,"visit_pat_ident","","",308,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",308,[[["self"],["patlit"]]]],[11,"visit_pat_macro","","",308,[[["self"],["patmacro"]]]],[11,"visit_pat_path","","",308,[[["self"],["patpath"]]]],[11,"visit_pat_range","","",308,[[["self"],["patrange"]]]],[11,"visit_pat_ref","","",308,[[["self"],["patref"]]]],[11,"visit_pat_slice","","",308,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",308,[[["self"],["patstruct"]]]],[11,"visit_pat_tuple","","",308,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct","","",308,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_verbatim","","",308,[[["self"],["patverbatim"]]]],[11,"visit_pat_wild","","",308,[[["self"],["patwild"]]]],[11,"visit_path","","",308,[[["self"],["path"]]]],[11,"visit_path_arguments","","",308,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",308,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",308,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",308,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",308,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",308,[[["self"],["qself"]]]],[11,"visit_range_limits","","",308,[[["self"],["rangelimits"]]]],[11,"visit_return_type","","",308,[[["self"],["returntype"]]]],[11,"visit_stmt","","",308,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",308,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",308,[[["self"],["traitboundmodifier"]]]],[11,"visit_trait_item","","",308,[[["self"],["traititem"]]]],[11,"visit_trait_item_const","","",308,[[["self"],["traititemconst"]]]],[11,"visit_trait_item_macro","","",308,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",308,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",308,[[["self"],["traititemtype"]]]],[11,"visit_trait_item_verbatim","","",308,[[["self"],["traititemverbatim"]]]],[11,"visit_type","","",308,[[["self"],["type"]]]],[11,"visit_type_array","","",308,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",308,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",308,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",308,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",308,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",308,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",308,[[["self"],["typenever"]]]],[11,"visit_type_param","","",308,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",308,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",308,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",308,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",308,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",308,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",308,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",308,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",308,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",308,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",308,[[["self"],["unop"]]]],[11,"visit_use_glob","","",308,[[["self"],["useglob"]]]],[11,"visit_use_group","","",308,[[["self"],["usegroup"]]]],[11,"visit_use_name","","",308,[[["self"],["usename"]]]],[11,"visit_use_path","","",308,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",308,[[["self"],["userename"]]]],[11,"visit_use_tree","","",308,[[["self"],["usetree"]]]],[11,"visit_variant","","",308,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",308,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",308,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",308,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",308,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",308,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",308,[[["self"],["wherepredicate"]]]],[11,"visit_span","","",308,[[["self"],["span"]]]],[11,"visit_ident","","",308,[[["self"],["ident"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",N,N],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",N,N],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",N,N],[3,"ParseBuffer","","Cursor position within a buffered token stream.",N,N],[3,"StepCursor","","Cursor state associated with speculative parsing.",N,N],[6,"Result","","The result of a Syn parser.",N,N],[6,"ParseStream","","Input to a Syn parser function.",N,N],[8,"Peek","","Types that can be parsed by looking at just one token.",N,N],[8,"Parse","","Parsing interface implemented by all types that can be…",N,N],[10,"parse","","",309,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output","","",310,N],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",310,[[["self"],["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",310,[[["self"],["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",310,[[["self"],["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",311,[[["self"],["t"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",312,[[["self"]],["result"]]],[11,"call","","Calls the given parser function to parse a syntax tree…",312,N],[11,"peek","","Looks at the next token in the parse stream to determine…",312,[[["self"],["t"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",312,[[["self"],["t"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",312,[[["self"],["t"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",312,N],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",312,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",312,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",312,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",312,[[["self"],["t"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",312,[[["self"],["f"]],["result"]]],[11,"cursor","","Provides low-level access to the token representation…",312,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",313,[[["span"],["t"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",313,[[["t"],["u"]],["self"]]],[11,"span","","The source location of the error.",313,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",313,[[["self"]],["tokenstream"]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",N,N],[6,"Result","","The result of a Syn parser.",N,N],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",N,N],[14,"braced","","Parse a set of curly braces and expose their content to…",N,N],[14,"bracketed","","Parse a set of square brackets and expose their content to…",N,N],[14,"Token","","A type-macro that expands to the name of the Rust type…",N,N],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",N,N],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",N,N],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",N,N],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",N,N],[11,"peek","","",314,[[["cursor"]],["bool"]]],[11,"display","","",314,[[],["str"]]],[11,"span","","",314,[[["self"]],["span"]]],[11,"into","","",314,[[["self"]],["u"]]],[11,"to_owned","","",314,[[["self"]],["t"]]],[11,"clone_into","","",314,N],[11,"from","","",314,[[["t"]],["t"]]],[11,"to_string","","",314,[[["self"]],["string"]]],[11,"try_from","","",314,[[["u"]],["result"]]],[11,"borrow","","",314,[[["self"]],["t"]]],[11,"borrow_mut","","",314,[[["self"]],["t"]]],[11,"try_into","","",314,[[["self"]],["result"]]],[11,"get_type_id","","",314,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"span","","",35,[[["self"]],["span"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"span","","",74,[[["self"]],["span"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"span","","",75,[[["self"]],["span"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",315,[[["self"]],["span"]]],[11,"into","","",315,[[["self"]],["u"]]],[11,"to_owned","","",315,[[["self"]],["t"]]],[11,"clone_into","","",315,N],[11,"from","","",315,[[["t"]],["t"]]],[11,"try_from","","",315,[[["u"]],["result"]]],[11,"borrow","","",315,[[["self"]],["t"]]],[11,"borrow_mut","","",315,[[["self"]],["t"]]],[11,"try_into","","",315,[[["self"]],["result"]]],[11,"get_type_id","","",315,[[["self"]],["typeid"]]],[11,"span","","",316,[[["self"]],["span"]]],[11,"into","","",316,[[["self"]],["u"]]],[11,"to_owned","","",316,[[["self"]],["t"]]],[11,"clone_into","","",316,N],[11,"from","","",316,[[["t"]],["t"]]],[11,"try_from","","",316,[[["u"]],["result"]]],[11,"borrow","","",316,[[["self"]],["t"]]],[11,"borrow_mut","","",316,[[["self"]],["t"]]],[11,"try_into","","",316,[[["self"]],["result"]]],[11,"get_type_id","","",316,[[["self"]],["typeid"]]],[11,"span","","",295,[[["self"]],["span"]]],[11,"into","","",295,[[["self"]],["u"]]],[11,"to_owned","","",295,[[["self"]],["t"]]],[11,"clone_into","","",295,N],[11,"from","","",295,[[["t"]],["t"]]],[11,"try_from","","",295,[[["u"]],["result"]]],[11,"borrow","","",295,[[["self"]],["t"]]],[11,"borrow_mut","","",295,[[["self"]],["t"]]],[11,"try_into","","",295,[[["self"]],["result"]]],[11,"get_type_id","","",295,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"to_string","","",126,[[["self"]],["string"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"peek","","",298,[[["cursor"]],["bool"]]],[11,"display","","",298,[[],["str"]]],[11,"span","","",298,[[["self"]],["span"]]],[11,"into","","",298,[[["self"]],["u"]]],[11,"to_owned","","",298,[[["self"]],["t"]]],[11,"clone_into","","",298,N],[11,"from","","",298,[[["t"]],["t"]]],[11,"try_from","","",298,[[["u"]],["result"]]],[11,"borrow","","",298,[[["self"]],["t"]]],[11,"borrow_mut","","",298,[[["self"]],["t"]]],[11,"try_into","","",298,[[["self"]],["result"]]],[11,"get_type_id","","",298,[[["self"]],["typeid"]]],[11,"peek","","",297,[[["cursor"]],["bool"]]],[11,"display","","",297,[[],["str"]]],[11,"span","","",297,[[["self"]],["span"]]],[11,"into","","",297,[[["self"]],["u"]]],[11,"to_owned","","",297,[[["self"]],["t"]]],[11,"clone_into","","",297,N],[11,"from","","",297,[[["t"]],["t"]]],[11,"try_from","","",297,[[["u"]],["result"]]],[11,"borrow","","",297,[[["self"]],["t"]]],[11,"borrow_mut","","",297,[[["self"]],["t"]]],[11,"try_into","","",297,[[["self"]],["result"]]],[11,"get_type_id","","",297,[[["self"]],["typeid"]]],[11,"peek","","",299,[[["cursor"]],["bool"]]],[11,"display","","",299,[[],["str"]]],[11,"span","","",299,[[["self"]],["span"]]],[11,"into","","",299,[[["self"]],["u"]]],[11,"to_owned","","",299,[[["self"]],["t"]]],[11,"clone_into","","",299,N],[11,"from","","",299,[[["t"]],["t"]]],[11,"try_from","","",299,[[["u"]],["result"]]],[11,"borrow","","",299,[[["self"]],["t"]]],[11,"borrow_mut","","",299,[[["self"]],["t"]]],[11,"try_into","","",299,[[["self"]],["result"]]],[11,"get_type_id","","",299,[[["self"]],["typeid"]]],[11,"peek","","",301,[[["cursor"]],["bool"]]],[11,"display","","",301,[[],["str"]]],[11,"span","","",301,[[["self"]],["span"]]],[11,"into","","",301,[[["self"]],["u"]]],[11,"to_owned","","",301,[[["self"]],["t"]]],[11,"clone_into","","",301,N],[11,"from","","",301,[[["t"]],["t"]]],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"try_into","","",301,[[["self"]],["result"]]],[11,"get_type_id","","",301,[[["self"]],["typeid"]]],[11,"peek","","",300,[[["cursor"]],["bool"]]],[11,"display","","",300,[[],["str"]]],[11,"span","","",300,[[["self"]],["span"]]],[11,"into","","",300,[[["self"]],["u"]]],[11,"to_owned","","",300,[[["self"]],["t"]]],[11,"clone_into","","",300,N],[11,"from","","",300,[[["t"]],["t"]]],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"try_into","","",300,[[["self"]],["result"]]],[11,"get_type_id","","",300,[[["self"]],["typeid"]]],[11,"peek","","",296,[[["cursor"]],["bool"]]],[11,"display","","",296,[[],["str"]]],[11,"span","","",296,[[["self"]],["span"]]],[11,"into","","",296,[[["self"]],["u"]]],[11,"to_owned","","",296,[[["self"]],["t"]]],[11,"clone_into","","",296,N],[11,"from","","",296,[[["t"]],["t"]]],[11,"try_from","","",296,[[["u"]],["result"]]],[11,"borrow","","",296,[[["self"]],["t"]]],[11,"borrow_mut","","",296,[[["self"]],["t"]]],[11,"try_into","","",296,[[["self"]],["result"]]],[11,"get_type_id","","",296,[[["self"]],["typeid"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"into","","",313,[[["self"]],["u"]]],[11,"to_owned","","",313,[[["self"]],["t"]]],[11,"clone_into","","",313,N],[11,"from","","",313,[[["t"]],["t"]]],[11,"to_string","","",313,[[["self"]],["string"]]],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"try_into","","",313,[[["self"]],["result"]]],[11,"get_type_id","","",313,[[["self"]],["typeid"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"from","","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"from","","",162,[[["t"]],["t"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"from","","",163,[[["t"]],["t"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"from","","",164,[[["t"]],["t"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"from","","",165,[[["t"]],["t"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"from","","",166,[[["t"]],["t"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"from","","",167,[[["t"]],["t"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"from","","",168,[[["t"]],["t"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"from","","",169,[[["t"]],["t"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"from","","",170,[[["t"]],["t"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"from","","",171,[[["t"]],["t"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"from","","",172,[[["t"]],["t"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"from","","",173,[[["t"]],["t"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"from","","",174,[[["t"]],["t"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"from","","",175,[[["t"]],["t"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"from","","",176,[[["t"]],["t"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"from","","",177,[[["t"]],["t"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"from","","",178,[[["t"]],["t"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"from","","",179,[[["t"]],["t"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"from","","",180,[[["t"]],["t"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"from","","",181,[[["t"]],["t"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,N],[11,"from","","",182,[[["t"]],["t"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"from","","",183,[[["t"]],["t"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,N],[11,"from","","",184,[[["t"]],["t"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"from","","",185,[[["t"]],["t"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"from","","",186,[[["t"]],["t"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"from","","",187,[[["t"]],["t"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,N],[11,"from","","",188,[[["t"]],["t"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"from","","",189,[[["t"]],["t"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,N],[11,"from","","",190,[[["t"]],["t"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"from","","",191,[[["t"]],["t"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"peek","syn::token","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"from","","",192,[[["t"]],["t"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"from","","",193,[[["t"]],["t"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"from","","",194,[[["t"]],["t"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"from","","",195,[[["t"]],["t"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"from","","",196,[[["t"]],["t"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"span","","",197,[[["self"]],["span"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,N],[11,"from","","",197,[[["t"]],["t"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"span","","",198,[[["self"]],["span"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"from","","",198,[[["t"]],["t"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"span","","",199,[[["self"]],["span"]]],[11,"into","","",199,[[["self"]],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,N],[11,"from","","",199,[[["t"]],["t"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"try_into","","",199,[[["self"]],["result"]]],[11,"get_type_id","","",199,[[["self"]],["typeid"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,N],[11,"from","","",200,[[["t"]],["t"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"span","","",201,[[["self"]],["span"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"from","","",201,[[["t"]],["t"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"span","","",202,[[["self"]],["span"]]],[11,"into","","",202,[[["self"]],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,N],[11,"from","","",202,[[["t"]],["t"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"try_into","","",202,[[["self"]],["result"]]],[11,"get_type_id","","",202,[[["self"]],["typeid"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"span","","",203,[[["self"]],["span"]]],[11,"into","","",203,[[["self"]],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,N],[11,"from","","",203,[[["t"]],["t"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"try_into","","",203,[[["self"]],["result"]]],[11,"get_type_id","","",203,[[["self"]],["typeid"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"span","","",204,[[["self"]],["span"]]],[11,"into","","",204,[[["self"]],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,N],[11,"from","","",204,[[["t"]],["t"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"try_into","","",204,[[["self"]],["result"]]],[11,"get_type_id","","",204,[[["self"]],["typeid"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"into","","",205,[[["self"]],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,N],[11,"from","","",205,[[["t"]],["t"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"try_into","","",205,[[["self"]],["result"]]],[11,"get_type_id","","",205,[[["self"]],["typeid"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"from","","",206,[[["t"]],["t"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,N],[11,"from","","",207,[[["t"]],["t"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,N],[11,"from","","",208,[[["t"]],["t"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"from","","",209,[[["t"]],["t"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,N],[11,"from","","",210,[[["t"]],["t"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"from","","",211,[[["t"]],["t"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"from","","",212,[[["t"]],["t"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"from","","",213,[[["t"]],["t"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"from","","",214,[[["t"]],["t"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"from","","",215,[[["t"]],["t"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"from","","",216,[[["t"]],["t"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"from","","",217,[[["t"]],["t"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"from","","",218,[[["t"]],["t"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"from","","",219,[[["t"]],["t"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"from","","",220,[[["t"]],["t"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"from","","",221,[[["t"]],["t"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"from","","",222,[[["t"]],["t"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"from","","",223,[[["t"]],["t"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"from","","",224,[[["t"]],["t"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"from","","",225,[[["t"]],["t"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"from","","",226,[[["t"]],["t"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"from","","",227,[[["t"]],["t"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"from","","",228,[[["t"]],["t"]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"from","","",229,[[["t"]],["t"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,N],[11,"from","","",230,[[["t"]],["t"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,N],[11,"from","","",231,[[["t"]],["t"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,N],[11,"from","","",232,[[["t"]],["t"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"from","","",233,[[["t"]],["t"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,N],[11,"from","","",234,[[["t"]],["t"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"from","","",235,[[["t"]],["t"]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"span","","",236,[[["self"]],["span"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"from","","",236,[[["t"]],["t"]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"span","","",237,[[["self"]],["span"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"from","","",237,[[["t"]],["t"]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"span","","",238,[[["self"]],["span"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,N],[11,"from","","",238,[[["t"]],["t"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"span","","",239,[[["self"]],["span"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"from","","",239,[[["t"]],["t"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"from","","",240,[[["t"]],["t"]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"from","","",241,[[["t"]],["t"]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"span","","",242,[[["self"]],["span"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,N],[11,"from","","",242,[[["t"]],["t"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"span","","",243,[[["self"]],["span"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,N],[11,"from","","",243,[[["t"]],["t"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"span","","",244,[[["self"]],["span"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,N],[11,"from","","",244,[[["t"]],["t"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"span","","",245,[[["self"]],["span"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,N],[11,"from","","",245,[[["t"]],["t"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"span","","",246,[[["self"]],["span"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,N],[11,"from","","",246,[[["t"]],["t"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"span","","",247,[[["self"]],["span"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,N],[11,"from","","",247,[[["t"]],["t"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"span","","",248,[[["self"]],["span"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,N],[11,"from","","",248,[[["t"]],["t"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"span","","",249,[[["self"]],["span"]]],[11,"into","","",249,[[["self"]],["u"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,N],[11,"from","","",249,[[["t"]],["t"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"try_into","","",249,[[["self"]],["result"]]],[11,"get_type_id","","",249,[[["self"]],["typeid"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"span","","",250,[[["self"]],["span"]]],[11,"into","","",250,[[["self"]],["u"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,N],[11,"from","","",250,[[["t"]],["t"]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"try_into","","",250,[[["self"]],["result"]]],[11,"get_type_id","","",250,[[["self"]],["typeid"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"span","","",251,[[["self"]],["span"]]],[11,"into","","",251,[[["self"]],["u"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,N],[11,"from","","",251,[[["t"]],["t"]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"try_into","","",251,[[["self"]],["result"]]],[11,"get_type_id","","",251,[[["self"]],["typeid"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"span","","",252,[[["self"]],["span"]]],[11,"into","","",252,[[["self"]],["u"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,N],[11,"from","","",252,[[["t"]],["t"]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"try_into","","",252,[[["self"]],["result"]]],[11,"get_type_id","","",252,[[["self"]],["typeid"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"span","","",253,[[["self"]],["span"]]],[11,"into","","",253,[[["self"]],["u"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,N],[11,"from","","",253,[[["t"]],["t"]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"try_into","","",253,[[["self"]],["result"]]],[11,"get_type_id","","",253,[[["self"]],["typeid"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"span","","",254,[[["self"]],["span"]]],[11,"into","","",254,[[["self"]],["u"]]],[11,"to_owned","","",254,[[["self"]],["t"]]],[11,"clone_into","","",254,N],[11,"from","","",254,[[["t"]],["t"]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"try_into","","",254,[[["self"]],["result"]]],[11,"get_type_id","","",254,[[["self"]],["typeid"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"span","","",255,[[["self"]],["span"]]],[11,"into","","",255,[[["self"]],["u"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,N],[11,"from","","",255,[[["t"]],["t"]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"try_into","","",255,[[["self"]],["result"]]],[11,"get_type_id","","",255,[[["self"]],["typeid"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"span","","",256,[[["self"]],["span"]]],[11,"into","","",256,[[["self"]],["u"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,N],[11,"from","","",256,[[["t"]],["t"]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"try_into","","",256,[[["self"]],["result"]]],[11,"get_type_id","","",256,[[["self"]],["typeid"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"span","","",257,[[["self"]],["span"]]],[11,"into","","",257,[[["self"]],["u"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,N],[11,"from","","",257,[[["t"]],["t"]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"try_into","","",257,[[["self"]],["result"]]],[11,"get_type_id","","",257,[[["self"]],["typeid"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"span","","",258,[[["self"]],["span"]]],[11,"into","","",258,[[["self"]],["u"]]],[11,"to_owned","","",258,[[["self"]],["t"]]],[11,"clone_into","","",258,N],[11,"from","","",258,[[["t"]],["t"]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"try_into","","",258,[[["self"]],["result"]]],[11,"get_type_id","","",258,[[["self"]],["typeid"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"span","","",259,[[["self"]],["span"]]],[11,"into","","",259,[[["self"]],["u"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,N],[11,"from","","",259,[[["t"]],["t"]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"try_into","","",259,[[["self"]],["result"]]],[11,"get_type_id","","",259,[[["self"]],["typeid"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"span","","",260,[[["self"]],["span"]]],[11,"into","","",260,[[["self"]],["u"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,N],[11,"from","","",260,[[["t"]],["t"]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"try_into","","",260,[[["self"]],["result"]]],[11,"get_type_id","","",260,[[["self"]],["typeid"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"span","","",261,[[["self"]],["span"]]],[11,"into","","",261,[[["self"]],["u"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,N],[11,"from","","",261,[[["t"]],["t"]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"try_into","","",261,[[["self"]],["result"]]],[11,"get_type_id","","",261,[[["self"]],["typeid"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"span","","",262,[[["self"]],["span"]]],[11,"into","","",262,[[["self"]],["u"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,N],[11,"from","","",262,[[["t"]],["t"]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"try_into","","",262,[[["self"]],["result"]]],[11,"get_type_id","","",262,[[["self"]],["typeid"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"span","","",263,[[["self"]],["span"]]],[11,"into","","",263,[[["self"]],["u"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,N],[11,"from","","",263,[[["t"]],["t"]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"try_into","","",263,[[["self"]],["result"]]],[11,"get_type_id","","",263,[[["self"]],["typeid"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"span","","",264,[[["self"]],["span"]]],[11,"into","","",264,[[["self"]],["u"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,N],[11,"from","","",264,[[["t"]],["t"]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"try_into","","",264,[[["self"]],["result"]]],[11,"get_type_id","","",264,[[["self"]],["typeid"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"span","","",265,[[["self"]],["span"]]],[11,"into","","",265,[[["self"]],["u"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,N],[11,"from","","",265,[[["t"]],["t"]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"try_into","","",265,[[["self"]],["result"]]],[11,"get_type_id","","",265,[[["self"]],["typeid"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"span","","",266,[[["self"]],["span"]]],[11,"into","","",266,[[["self"]],["u"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,N],[11,"from","","",266,[[["t"]],["t"]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"try_into","","",266,[[["self"]],["result"]]],[11,"get_type_id","","",266,[[["self"]],["typeid"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"span","","",267,[[["self"]],["span"]]],[11,"into","","",267,[[["self"]],["u"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,N],[11,"from","","",267,[[["t"]],["t"]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"try_into","","",267,[[["self"]],["result"]]],[11,"get_type_id","","",267,[[["self"]],["typeid"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"span","","",268,[[["self"]],["span"]]],[11,"into","","",268,[[["self"]],["u"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,N],[11,"from","","",268,[[["t"]],["t"]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"try_into","","",268,[[["self"]],["result"]]],[11,"get_type_id","","",268,[[["self"]],["typeid"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"span","","",269,[[["self"]],["span"]]],[11,"into","","",269,[[["self"]],["u"]]],[11,"to_owned","","",269,[[["self"]],["t"]]],[11,"clone_into","","",269,N],[11,"from","","",269,[[["t"]],["t"]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"try_into","","",269,[[["self"]],["result"]]],[11,"get_type_id","","",269,[[["self"]],["typeid"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"span","","",270,[[["self"]],["span"]]],[11,"into","","",270,[[["self"]],["u"]]],[11,"to_owned","","",270,[[["self"]],["t"]]],[11,"clone_into","","",270,N],[11,"from","","",270,[[["t"]],["t"]]],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"try_into","","",270,[[["self"]],["result"]]],[11,"get_type_id","","",270,[[["self"]],["typeid"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"span","","",271,[[["self"]],["span"]]],[11,"into","","",271,[[["self"]],["u"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,N],[11,"from","","",271,[[["t"]],["t"]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"try_into","","",271,[[["self"]],["result"]]],[11,"get_type_id","","",271,[[["self"]],["typeid"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"span","","",272,[[["self"]],["span"]]],[11,"into","","",272,[[["self"]],["u"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,N],[11,"from","","",272,[[["t"]],["t"]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"try_into","","",272,[[["self"]],["result"]]],[11,"get_type_id","","",272,[[["self"]],["typeid"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"span","","",273,[[["self"]],["span"]]],[11,"into","","",273,[[["self"]],["u"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,N],[11,"from","","",273,[[["t"]],["t"]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"try_into","","",273,[[["self"]],["result"]]],[11,"get_type_id","","",273,[[["self"]],["typeid"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"span","","",274,[[["self"]],["span"]]],[11,"into","","",274,[[["self"]],["u"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,N],[11,"from","","",274,[[["t"]],["t"]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"try_into","","",274,[[["self"]],["result"]]],[11,"get_type_id","","",274,[[["self"]],["typeid"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"span","","",275,[[["self"]],["span"]]],[11,"into","","",275,[[["self"]],["u"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,N],[11,"from","","",275,[[["t"]],["t"]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"try_into","","",275,[[["self"]],["result"]]],[11,"get_type_id","","",275,[[["self"]],["typeid"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"span","","",276,[[["self"]],["span"]]],[11,"into","","",276,[[["self"]],["u"]]],[11,"to_owned","","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,N],[11,"from","","",276,[[["t"]],["t"]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"try_into","","",276,[[["self"]],["result"]]],[11,"get_type_id","","",276,[[["self"]],["typeid"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"span","","",277,[[["self"]],["span"]]],[11,"into","","",277,[[["self"]],["u"]]],[11,"to_owned","","",277,[[["self"]],["t"]]],[11,"clone_into","","",277,N],[11,"from","","",277,[[["t"]],["t"]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"try_into","","",277,[[["self"]],["result"]]],[11,"get_type_id","","",277,[[["self"]],["typeid"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"span","","",278,[[["self"]],["span"]]],[11,"into","","",278,[[["self"]],["u"]]],[11,"to_owned","","",278,[[["self"]],["t"]]],[11,"clone_into","","",278,N],[11,"from","","",278,[[["t"]],["t"]]],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"try_into","","",278,[[["self"]],["result"]]],[11,"get_type_id","","",278,[[["self"]],["typeid"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"span","","",279,[[["self"]],["span"]]],[11,"into","","",279,[[["self"]],["u"]]],[11,"to_owned","","",279,[[["self"]],["t"]]],[11,"clone_into","","",279,N],[11,"from","","",279,[[["t"]],["t"]]],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"try_into","","",279,[[["self"]],["result"]]],[11,"get_type_id","","",279,[[["self"]],["typeid"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"span","","",280,[[["self"]],["span"]]],[11,"into","","",280,[[["self"]],["u"]]],[11,"to_owned","","",280,[[["self"]],["t"]]],[11,"clone_into","","",280,N],[11,"from","","",280,[[["t"]],["t"]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"try_into","","",280,[[["self"]],["result"]]],[11,"get_type_id","","",280,[[["self"]],["typeid"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"span","","",281,[[["self"]],["span"]]],[11,"into","","",281,[[["self"]],["u"]]],[11,"to_owned","","",281,[[["self"]],["t"]]],[11,"clone_into","","",281,N],[11,"from","","",281,[[["t"]],["t"]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"try_into","","",281,[[["self"]],["result"]]],[11,"get_type_id","","",281,[[["self"]],["typeid"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"span","","",282,[[["self"]],["span"]]],[11,"into","","",282,[[["self"]],["u"]]],[11,"to_owned","","",282,[[["self"]],["t"]]],[11,"clone_into","","",282,N],[11,"from","","",282,[[["t"]],["t"]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"try_into","","",282,[[["self"]],["result"]]],[11,"get_type_id","","",282,[[["self"]],["typeid"]]],[11,"peek","","",283,[[["cursor"]],["bool"]]],[11,"display","","",283,[[],["str"]]],[11,"span","","",283,[[["self"]],["span"]]],[11,"into","","",283,[[["self"]],["u"]]],[11,"to_owned","","",283,[[["self"]],["t"]]],[11,"clone_into","","",283,N],[11,"from","","",283,[[["t"]],["t"]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"try_into","","",283,[[["self"]],["result"]]],[11,"get_type_id","","",283,[[["self"]],["typeid"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"into","","",284,[[["self"]],["u"]]],[11,"to_owned","","",284,[[["self"]],["t"]]],[11,"clone_into","","",284,N],[11,"from","","",284,[[["t"]],["t"]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"try_into","","",284,[[["self"]],["result"]]],[11,"get_type_id","","",284,[[["self"]],["typeid"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"into","","",285,[[["self"]],["u"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,N],[11,"from","","",285,[[["t"]],["t"]]],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"try_into","","",285,[[["self"]],["result"]]],[11,"get_type_id","","",285,[[["self"]],["typeid"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"into","","",286,[[["self"]],["u"]]],[11,"to_owned","","",286,[[["self"]],["t"]]],[11,"clone_into","","",286,N],[11,"from","","",286,[[["t"]],["t"]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"try_into","","",286,[[["self"]],["result"]]],[11,"get_type_id","","",286,[[["self"]],["typeid"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"into","","",287,[[["self"]],["u"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,N],[11,"from","","",287,[[["t"]],["t"]]],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"try_into","","",287,[[["self"]],["result"]]],[11,"get_type_id","","",287,[[["self"]],["typeid"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"into","","",288,[[["self"]],["u"]]],[11,"to_owned","","",288,[[["self"]],["t"]]],[11,"clone_into","","",288,N],[11,"from","","",288,[[["t"]],["t"]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"try_into","","",288,[[["self"]],["result"]]],[11,"get_type_id","","",288,[[["self"]],["typeid"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"into","","",289,[[["self"]],["u"]]],[11,"to_owned","","",289,[[["self"]],["t"]]],[11,"clone_into","","",289,N],[11,"from","","",289,[[["t"]],["t"]]],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"try_into","","",289,[[["self"]],["result"]]],[11,"get_type_id","","",289,[[["self"]],["typeid"]]],[11,"peek","","",290,[[["cursor"]],["bool"]]],[11,"display","","",290,[[],["str"]]],[11,"span","","",290,[[["self"]],["span"]]],[11,"into","","",290,[[["self"]],["u"]]],[11,"to_owned","","",290,[[["self"]],["t"]]],[11,"clone_into","","",290,N],[11,"from","","",290,[[["t"]],["t"]]],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"try_into","","",290,[[["self"]],["result"]]],[11,"get_type_id","","",290,[[["self"]],["typeid"]]],[11,"peek","","",291,[[["cursor"]],["bool"]]],[11,"display","","",291,[[],["str"]]],[11,"into","","",291,[[["self"]],["u"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,N],[11,"from","","",291,[[["t"]],["t"]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"try_into","","",291,[[["self"]],["result"]]],[11,"get_type_id","","",291,[[["self"]],["typeid"]]],[11,"peek","","",292,[[["cursor"]],["bool"]]],[11,"display","","",292,[[],["str"]]],[11,"into","","",292,[[["self"]],["u"]]],[11,"to_owned","","",292,[[["self"]],["t"]]],[11,"clone_into","","",292,N],[11,"from","","",292,[[["t"]],["t"]]],[11,"try_from","","",292,[[["u"]],["result"]]],[11,"borrow","","",292,[[["self"]],["t"]]],[11,"borrow_mut","","",292,[[["self"]],["t"]]],[11,"try_into","","",292,[[["self"]],["result"]]],[11,"get_type_id","","",292,[[["self"]],["typeid"]]],[11,"peek","","",293,[[["cursor"]],["bool"]]],[11,"display","","",293,[[],["str"]]],[11,"into","","",293,[[["self"]],["u"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,N],[11,"from","","",293,[[["t"]],["t"]]],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"try_into","","",293,[[["self"]],["result"]]],[11,"get_type_id","","",293,[[["self"]],["typeid"]]],[11,"peek","","",294,[[["cursor"]],["bool"]]],[11,"display","","",294,[[],["str"]]],[11,"into","","",294,[[["self"]],["u"]]],[11,"to_owned","","",294,[[["self"]],["t"]]],[11,"clone_into","","",294,N],[11,"from","","",294,[[["t"]],["t"]]],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"try_into","","",294,[[["self"]],["result"]]],[11,"get_type_id","","",294,[[["self"]],["typeid"]]],[11,"into","syn::buffer","",302,[[["self"]],["u"]]],[11,"from","","",302,[[["t"]],["t"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"try_into","","",302,[[["self"]],["result"]]],[11,"get_type_id","","",302,[[["self"]],["typeid"]]],[11,"into","","",303,[[["self"]],["u"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,N],[11,"from","","",303,[[["t"]],["t"]]],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"try_into","","",303,[[["self"]],["result"]]],[11,"get_type_id","","",303,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",306,[[["self"]],["span"]]],[11,"into","","",306,[[["self"]],["u"]]],[11,"to_owned","","",306,[[["self"]],["t"]]],[11,"clone_into","","",306,N],[11,"from","","",306,[[["t"]],["t"]]],[11,"into_iter","","",306,[[["self"]],["i"]]],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"try_into","","",306,[[["self"]],["result"]]],[11,"get_type_id","","",306,[[["self"]],["typeid"]]],[11,"into","","",317,[[["self"]],["u"]]],[11,"to_owned","","",317,[[["self"]],["t"]]],[11,"clone_into","","",317,N],[11,"from","","",317,[[["t"]],["t"]]],[11,"into_iter","","",317,[[["self"]],["i"]]],[11,"try_from","","",317,[[["u"]],["result"]]],[11,"borrow","","",317,[[["self"]],["t"]]],[11,"borrow_mut","","",317,[[["self"]],["t"]]],[11,"try_into","","",317,[[["self"]],["result"]]],[11,"get_type_id","","",317,[[["self"]],["typeid"]]],[11,"into","","",318,[[["self"]],["u"]]],[11,"from","","",318,[[["t"]],["t"]]],[11,"into_iter","","",318,[[["self"]],["i"]]],[11,"try_from","","",318,[[["u"]],["result"]]],[11,"borrow","","",318,[[["self"]],["t"]]],[11,"borrow_mut","","",318,[[["self"]],["t"]]],[11,"try_into","","",318,[[["self"]],["result"]]],[11,"get_type_id","","",318,[[["self"]],["typeid"]]],[11,"into","","",319,[[["self"]],["u"]]],[11,"to_owned","","",319,[[["self"]],["t"]]],[11,"clone_into","","",319,N],[11,"from","","",319,[[["t"]],["t"]]],[11,"into_iter","","",319,[[["self"]],["i"]]],[11,"try_from","","",319,[[["u"]],["result"]]],[11,"borrow","","",319,[[["self"]],["t"]]],[11,"borrow_mut","","",319,[[["self"]],["t"]]],[11,"try_into","","",319,[[["self"]],["result"]]],[11,"get_type_id","","",319,[[["self"]],["typeid"]]],[11,"into","","",320,[[["self"]],["u"]]],[11,"to_owned","","",320,[[["self"]],["t"]]],[11,"clone_into","","",320,N],[11,"from","","",320,[[["t"]],["t"]]],[11,"into_iter","","",320,[[["self"]],["i"]]],[11,"try_from","","",320,[[["u"]],["result"]]],[11,"borrow","","",320,[[["self"]],["t"]]],[11,"borrow_mut","","",320,[[["self"]],["t"]]],[11,"try_into","","",320,[[["self"]],["result"]]],[11,"get_type_id","","",320,[[["self"]],["typeid"]]],[11,"into","","",321,[[["self"]],["u"]]],[11,"to_owned","","",321,[[["self"]],["t"]]],[11,"clone_into","","",321,N],[11,"from","","",321,[[["t"]],["t"]]],[11,"into_iter","","",321,[[["self"]],["i"]]],[11,"try_from","","",321,[[["u"]],["result"]]],[11,"borrow","","",321,[[["self"]],["t"]]],[11,"borrow_mut","","",321,[[["self"]],["t"]]],[11,"try_into","","",321,[[["self"]],["result"]]],[11,"get_type_id","","",321,[[["self"]],["typeid"]]],[11,"into","","",322,[[["self"]],["u"]]],[11,"from","","",322,[[["t"]],["t"]]],[11,"into_iter","","",322,[[["self"]],["i"]]],[11,"try_from","","",322,[[["u"]],["result"]]],[11,"borrow","","",322,[[["self"]],["t"]]],[11,"borrow_mut","","",322,[[["self"]],["t"]]],[11,"try_into","","",322,[[["self"]],["result"]]],[11,"get_type_id","","",322,[[["self"]],["typeid"]]],[11,"span","","",305,[[["self"]],["span"]]],[11,"into","","",305,[[["self"]],["u"]]],[11,"to_owned","","",305,[[["self"]],["t"]]],[11,"clone_into","","",305,N],[11,"from","","",305,[[["t"]],["t"]]],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"try_into","","",305,[[["self"]],["result"]]],[11,"get_type_id","","",305,[[["self"]],["typeid"]]],[11,"into","syn::parse","",323,[[["self"]],["u"]]],[11,"from","","",323,[[["t"]],["t"]]],[11,"try_from","","",323,[[["u"]],["result"]]],[11,"borrow","","",323,[[["self"]],["t"]]],[11,"borrow_mut","","",323,[[["self"]],["t"]]],[11,"try_into","","",323,[[["self"]],["result"]]],[11,"get_type_id","","",323,[[["self"]],["typeid"]]],[11,"into","","",312,[[["self"]],["u"]]],[11,"from","","",312,[[["t"]],["t"]]],[11,"to_string","","",312,[[["self"]],["string"]]],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"try_into","","",312,[[["self"]],["result"]]],[11,"get_type_id","","",312,[[["self"]],["typeid"]]],[11,"into","","",311,[[["self"]],["u"]]],[11,"to_owned","","",311,[[["self"]],["t"]]],[11,"clone_into","","",311,N],[11,"from","","",311,[[["t"]],["t"]]],[11,"try_from","","",311,[[["u"]],["result"]]],[11,"borrow","","",311,[[["self"]],["t"]]],[11,"borrow_mut","","",311,[[["self"]],["t"]]],[11,"try_into","","",311,[[["self"]],["result"]]],[11,"get_type_id","","",311,[[["self"]],["typeid"]]],[11,"hash","syn","",314,N],[11,"fmt","","",314,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",314,[[["self"],["t"]],["bool"]]],[11,"eq","","",314,[[["self"],["ident"]],["bool"]]],[11,"clone","","",314,[[["self"]],["ident"]]],[11,"cmp","","",314,[[["self"],["ident"]],["ordering"]]],[11,"partial_cmp","","",314,[[["self"],["ident"]],["option",["ordering"]]]],[11,"fmt","","",314,[[["self"],["formatter"]],["result",["error"]]]],[11,"to_tokens","","",314,N],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",296,[[["cursor"]],["bool"]]],[11,"display","","",296,[[],["str"]]],[11,"peek","","",297,[[["cursor"]],["bool"]]],[11,"display","","",297,[[],["str"]]],[11,"peek","","",298,[[["cursor"]],["bool"]]],[11,"display","","",298,[[],["str"]]],[11,"peek","","",299,[[["cursor"]],["bool"]]],[11,"display","","",299,[[],["str"]]],[11,"peek","","",300,[[["cursor"]],["bool"]]],[11,"display","","",300,[[],["str"]]],[11,"peek","","",301,[[["cursor"]],["bool"]]],[11,"display","","",301,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"peek","syn::token","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",293,[[["cursor"]],["bool"]]],[11,"display","","",293,[[],["str"]]],[11,"peek","","",291,[[["cursor"]],["bool"]]],[11,"display","","",291,[[],["str"]]],[11,"peek","","",292,[[["cursor"]],["bool"]]],[11,"display","","",292,[[],["str"]]],[11,"peek","","",294,[[["cursor"]],["bool"]]],[11,"display","","",294,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"peek","","",283,[[["cursor"]],["bool"]]],[11,"display","","",283,[[],["str"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"peek","","",290,[[["cursor"]],["bool"]]],[11,"display","","",290,[[],["str"]]],[11,"peek","syn","",314,[[["cursor"]],["bool"]]],[11,"display","","",314,[[],["str"]]],[11,"parse_any","","",314,[[["parsestream"]],["result"]]],[11,"unraw","","",314,[[["self"]],["ident"]]],[11,"parse","syn::token","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",197,[[["parsestream"]],["result"]]],[11,"parse","","",198,[[["parsestream"]],["result"]]],[11,"parse","","",199,[[["parsestream"]],["result"]]],[11,"parse","","",200,[[["parsestream"]],["result"]]],[11,"parse","","",201,[[["parsestream"]],["result"]]],[11,"parse","","",202,[[["parsestream"]],["result"]]],[11,"parse","","",203,[[["parsestream"]],["result"]]],[11,"parse","","",204,[[["parsestream"]],["result"]]],[11,"parse","","",205,[[["parsestream"]],["result"]]],[11,"parse","","",206,[[["parsestream"]],["result"]]],[11,"parse","","",207,[[["parsestream"]],["result"]]],[11,"parse","","",208,[[["parsestream"]],["result"]]],[11,"parse","","",209,[[["parsestream"]],["result"]]],[11,"parse","","",210,[[["parsestream"]],["result"]]],[11,"parse","","",211,[[["parsestream"]],["result"]]],[11,"parse","","",212,[[["parsestream"]],["result"]]],[11,"parse","","",213,[[["parsestream"]],["result"]]],[11,"parse","","",214,[[["parsestream"]],["result"]]],[11,"parse","","",215,[[["parsestream"]],["result"]]],[11,"parse","","",216,[[["parsestream"]],["result"]]],[11,"parse","","",217,[[["parsestream"]],["result"]]],[11,"parse","","",218,[[["parsestream"]],["result"]]],[11,"parse","","",219,[[["parsestream"]],["result"]]],[11,"parse","","",220,[[["parsestream"]],["result"]]],[11,"parse","","",221,[[["parsestream"]],["result"]]],[11,"parse","","",222,[[["parsestream"]],["result"]]],[11,"parse","","",223,[[["parsestream"]],["result"]]],[11,"parse","","",224,[[["parsestream"]],["result"]]],[11,"parse","","",225,[[["parsestream"]],["result"]]],[11,"parse","","",226,[[["parsestream"]],["result"]]],[11,"parse","","",227,[[["parsestream"]],["result"]]],[11,"parse","","",228,[[["parsestream"]],["result"]]],[11,"parse","","",229,[[["parsestream"]],["result"]]],[11,"parse","","",230,[[["parsestream"]],["result"]]],[11,"parse","","",231,[[["parsestream"]],["result"]]],[11,"parse","","",232,[[["parsestream"]],["result"]]],[11,"parse","","",233,[[["parsestream"]],["result"]]],[11,"parse","","",234,[[["parsestream"]],["result"]]],[11,"parse","","",235,[[["parsestream"]],["result"]]],[11,"parse","","",236,[[["parsestream"]],["result"]]],[11,"parse","","",237,[[["parsestream"]],["result"]]],[11,"parse","","",238,[[["parsestream"]],["result"]]],[11,"parse","","",239,[[["parsestream"]],["result"]]],[11,"parse","","",240,[[["parsestream"]],["result"]]],[11,"parse","","",241,[[["parsestream"]],["result"]]],[11,"parse","","",242,[[["parsestream"]],["result"]]],[11,"parse","","",243,[[["parsestream"]],["result"]]],[11,"parse","","",244,[[["parsestream"]],["result"]]],[11,"parse","","",245,[[["parsestream"]],["result"]]],[11,"parse","","",246,[[["parsestream"]],["result"]]],[11,"parse","","",247,[[["parsestream"]],["result"]]],[11,"parse","","",248,[[["parsestream"]],["result"]]],[11,"parse","","",249,[[["parsestream"]],["result"]]],[11,"parse","","",250,[[["parsestream"]],["result"]]],[11,"parse","","",251,[[["parsestream"]],["result"]]],[11,"parse","","",252,[[["parsestream"]],["result"]]],[11,"parse","","",253,[[["parsestream"]],["result"]]],[11,"parse","","",254,[[["parsestream"]],["result"]]],[11,"parse","","",255,[[["parsestream"]],["result"]]],[11,"parse","","",256,[[["parsestream"]],["result"]]],[11,"parse","","",257,[[["parsestream"]],["result"]]],[11,"parse","","",258,[[["parsestream"]],["result"]]],[11,"parse","","",259,[[["parsestream"]],["result"]]],[11,"parse","","",260,[[["parsestream"]],["result"]]],[11,"parse","","",261,[[["parsestream"]],["result"]]],[11,"parse","","",262,[[["parsestream"]],["result"]]],[11,"parse","","",263,[[["parsestream"]],["result"]]],[11,"parse","","",264,[[["parsestream"]],["result"]]],[11,"parse","","",265,[[["parsestream"]],["result"]]],[11,"parse","","",266,[[["parsestream"]],["result"]]],[11,"parse","","",267,[[["parsestream"]],["result"]]],[11,"parse","","",268,[[["parsestream"]],["result"]]],[11,"parse","","",269,[[["parsestream"]],["result"]]],[11,"parse","","",270,[[["parsestream"]],["result"]]],[11,"parse","","",271,[[["parsestream"]],["result"]]],[11,"parse","","",272,[[["parsestream"]],["result"]]],[11,"parse","","",273,[[["parsestream"]],["result"]]],[11,"parse","","",274,[[["parsestream"]],["result"]]],[11,"parse","","",275,[[["parsestream"]],["result"]]],[11,"parse","","",276,[[["parsestream"]],["result"]]],[11,"parse","","",277,[[["parsestream"]],["result"]]],[11,"parse","","",278,[[["parsestream"]],["result"]]],[11,"parse","","",279,[[["parsestream"]],["result"]]],[11,"parse","","",280,[[["parsestream"]],["result"]]],[11,"parse","","",281,[[["parsestream"]],["result"]]],[11,"parse","","",282,[[["parsestream"]],["result"]]],[11,"parse","","",283,[[["parsestream"]],["result"]]],[11,"parse","","",284,[[["parsestream"]],["result"]]],[11,"parse","","",285,[[["parsestream"]],["result"]]],[11,"parse","","",286,[[["parsestream"]],["result"]]],[11,"parse","","",287,[[["parsestream"]],["result"]]],[11,"parse","","",288,[[["parsestream"]],["result"]]],[11,"parse","","",289,[[["parsestream"]],["result"]]],[11,"parse","","",290,[[["parsestream"]],["result"]]],[11,"parse","syn","",314,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",29,[[["parsestream"]],["result"]]],[11,"parse","","",25,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",16,[[["parsestream"]],["result"]]],[11,"parse","","",26,[[["parsestream"]],["result"]]],[11,"parse","","",10,[[["parsestream"]],["result"]]],[11,"parse","","",18,[[["parsestream"]],["result"]]],[11,"parse","","",33,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",14,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",19,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",15,[[["parsestream"]],["result"]]],[11,"parse","","",11,[[["parsestream"]],["result"]]],[11,"parse","","",12,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",27,[[["parsestream"]],["result"]]],[11,"parse","","",36,[[["parsestream"]],["result"]]],[11,"parse","","",37,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",13,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",55,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",35,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result",["arm"]]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",74,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",79,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result",["usetree"]]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",86,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",296,[[["parsestream"]],["result"]]],[11,"parse","","",297,[[["parsestream"]],["result"]]],[11,"parse","","",298,[[["parsestream"]],["result"]]],[11,"parse","","",299,[[["parsestream"]],["result"]]],[11,"parse","","",300,[[["parsestream"]],["result"]]],[11,"parse","","",301,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","","",186,[[["parsestream"]],["result"]]],[11,"parse","","",189,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",187,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",190,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"extend","syn::punctuated","",306,[[["self"],["i"]]]],[11,"extend","","",306,[[["self"],["i"]]]],[11,"next","","",317,[[["self"]],["option"]]],[11,"next","","",318,[[["self"]],["option"]]],[11,"next","","",319,[[["self"]],["option"]]],[11,"next","","",320,[[["self"]],["option"]]],[11,"next","","",321,[[["self"]],["option"]]],[11,"next","","",322,[[["self"]],["option"]]],[11,"len","","",317,[[["self"]],["usize"]]],[11,"len","","",318,[[["self"]],["usize"]]],[11,"len","","",319,[[["self"]],["usize"]]],[11,"len","","",320,[[["self"]],["usize"]]],[11,"len","","",321,[[["self"]],["usize"]]],[11,"len","","",322,[[["self"]],["usize"]]],[11,"partial_cmp","syn","",126,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"default","syn::token","",192,[[],["self"]]],[11,"default","","",193,[[],["self"]]],[11,"default","","",194,[[],["self"]]],[11,"default","","",195,[[],["self"]]],[11,"default","","",196,[[],["self"]]],[11,"default","","",197,[[],["self"]]],[11,"default","","",198,[[],["self"]]],[11,"default","","",199,[[],["self"]]],[11,"default","","",200,[[],["self"]]],[11,"default","","",201,[[],["self"]]],[11,"default","","",202,[[],["self"]]],[11,"default","","",203,[[],["self"]]],[11,"default","","",204,[[],["self"]]],[11,"default","","",205,[[],["self"]]],[11,"default","","",206,[[],["self"]]],[11,"default","","",207,[[],["self"]]],[11,"default","","",208,[[],["self"]]],[11,"default","","",209,[[],["self"]]],[11,"default","","",210,[[],["self"]]],[11,"default","","",211,[[],["self"]]],[11,"default","","",212,[[],["self"]]],[11,"default","","",213,[[],["self"]]],[11,"default","","",214,[[],["self"]]],[11,"default","","",215,[[],["self"]]],[11,"default","","",216,[[],["self"]]],[11,"default","","",217,[[],["self"]]],[11,"default","","",218,[[],["self"]]],[11,"default","","",219,[[],["self"]]],[11,"default","","",220,[[],["self"]]],[11,"default","","",221,[[],["self"]]],[11,"default","","",222,[[],["self"]]],[11,"default","","",223,[[],["self"]]],[11,"default","","",224,[[],["self"]]],[11,"default","","",225,[[],["self"]]],[11,"default","","",226,[[],["self"]]],[11,"default","","",227,[[],["self"]]],[11,"default","","",228,[[],["self"]]],[11,"default","","",229,[[],["self"]]],[11,"default","","",230,[[],["self"]]],[11,"default","","",231,[[],["self"]]],[11,"default","","",232,[[],["self"]]],[11,"default","","",233,[[],["self"]]],[11,"default","","",234,[[],["self"]]],[11,"default","","",235,[[],["self"]]],[11,"default","","",236,[[],["self"]]],[11,"default","","",237,[[],["self"]]],[11,"default","","",238,[[],["self"]]],[11,"default","","",239,[[],["self"]]],[11,"default","","",240,[[],["self"]]],[11,"default","","",241,[[],["self"]]],[11,"default","","",242,[[],["self"]]],[11,"default","","",243,[[],["self"]]],[11,"default","","",244,[[],["self"]]],[11,"default","","",245,[[],["self"]]],[11,"default","","",246,[[],["self"]]],[11,"default","","",247,[[],["self"]]],[11,"default","","",248,[[],["self"]]],[11,"default","","",249,[[],["self"]]],[11,"default","","",250,[[],["self"]]],[11,"default","","",251,[[],["self"]]],[11,"default","","",252,[[],["self"]]],[11,"default","","",253,[[],["self"]]],[11,"default","","",254,[[],["self"]]],[11,"default","","",255,[[],["self"]]],[11,"default","","",256,[[],["self"]]],[11,"default","","",257,[[],["self"]]],[11,"default","","",258,[[],["self"]]],[11,"default","","",259,[[],["self"]]],[11,"default","","",260,[[],["self"]]],[11,"default","","",261,[[],["self"]]],[11,"default","","",262,[[],["self"]]],[11,"default","","",263,[[],["self"]]],[11,"default","","",264,[[],["self"]]],[11,"default","","",265,[[],["self"]]],[11,"default","","",266,[[],["self"]]],[11,"default","","",267,[[],["self"]]],[11,"default","","",268,[[],["self"]]],[11,"default","","",269,[[],["self"]]],[11,"default","","",270,[[],["self"]]],[11,"default","","",271,[[],["self"]]],[11,"default","","",272,[[],["self"]]],[11,"default","","",273,[[],["self"]]],[11,"default","","",274,[[],["self"]]],[11,"default","","",275,[[],["self"]]],[11,"default","","",276,[[],["self"]]],[11,"default","","",277,[[],["self"]]],[11,"default","","",278,[[],["self"]]],[11,"default","","",279,[[],["self"]]],[11,"default","","",280,[[],["self"]]],[11,"default","","",281,[[],["self"]]],[11,"default","","",282,[[],["self"]]],[11,"default","","",283,[[],["self"]]],[11,"default","","",284,[[],["self"]]],[11,"default","","",285,[[],["self"]]],[11,"default","","",286,[[],["self"]]],[11,"default","","",287,[[],["self"]]],[11,"default","","",288,[[],["self"]]],[11,"default","","",289,[[],["self"]]],[11,"default","","",290,[[],["self"]]],[11,"default","","",291,[[],["self"]]],[11,"default","","",292,[[],["self"]]],[11,"default","","",293,[[],["self"]]],[11,"default","","",294,[[],["self"]]],[11,"default","syn","",73,[[],["generics"]]],[11,"default","","",71,[[],["boundlifetimes"]]],[11,"default","","",191,[[],["self"]]],[11,"default","syn::punctuated","",306,[[],["self"]]],[11,"eq","syn::token","",192,[[["self"],["underscore"]],["bool"]]],[11,"eq","","",193,[[["self"],["abstract"]],["bool"]]],[11,"eq","","",194,[[["self"],["as"]],["bool"]]],[11,"eq","","",195,[[["self"],["async"]],["bool"]]],[11,"eq","","",196,[[["self"],["auto"]],["bool"]]],[11,"eq","","",197,[[["self"],["become"]],["bool"]]],[11,"eq","","",198,[[["self"],["box"]],["bool"]]],[11,"eq","","",199,[[["self"],["break"]],["bool"]]],[11,"eq","","",200,[[["self"],["const"]],["bool"]]],[11,"eq","","",201,[[["self"],["continue"]],["bool"]]],[11,"eq","","",202,[[["self"],["crate"]],["bool"]]],[11,"eq","","",203,[[["self"],["default"]],["bool"]]],[11,"eq","","",204,[[["self"],["do"]],["bool"]]],[11,"eq","","",205,[[["self"],["dyn"]],["bool"]]],[11,"eq","","",206,[[["self"],["else"]],["bool"]]],[11,"eq","","",207,[[["self"],["enum"]],["bool"]]],[11,"eq","","",208,[[["self"],["existential"]],["bool"]]],[11,"eq","","",209,[[["self"],["extern"]],["bool"]]],[11,"eq","","",210,[[["self"],["final"]],["bool"]]],[11,"eq","","",211,[[["self"],["fn"]],["bool"]]],[11,"eq","","",212,[[["self"],["for"]],["bool"]]],[11,"eq","","",213,[[["self"],["if"]],["bool"]]],[11,"eq","","",214,[[["self"],["impl"]],["bool"]]],[11,"eq","","",215,[[["self"],["in"]],["bool"]]],[11,"eq","","",216,[[["self"],["let"]],["bool"]]],[11,"eq","","",217,[[["self"],["loop"]],["bool"]]],[11,"eq","","",218,[[["self"],["macro"]],["bool"]]],[11,"eq","","",219,[[["self"],["match"]],["bool"]]],[11,"eq","","",220,[[["self"],["mod"]],["bool"]]],[11,"eq","","",221,[[["self"],["move"]],["bool"]]],[11,"eq","","",222,[[["self"],["mut"]],["bool"]]],[11,"eq","","",223,[[["self"],["override"]],["bool"]]],[11,"eq","","",224,[[["self"],["priv"]],["bool"]]],[11,"eq","","",225,[[["self"],["pub"]],["bool"]]],[11,"eq","","",226,[[["self"],["ref"]],["bool"]]],[11,"eq","","",227,[[["self"],["return"]],["bool"]]],[11,"eq","","",228,[[["self"],["selftype"]],["bool"]]],[11,"eq","","",229,[[["self"],["selfvalue"]],["bool"]]],[11,"eq","","",230,[[["self"],["static"]],["bool"]]],[11,"eq","","",231,[[["self"],["struct"]],["bool"]]],[11,"eq","","",232,[[["self"],["super"]],["bool"]]],[11,"eq","","",233,[[["self"],["trait"]],["bool"]]],[11,"eq","","",234,[[["self"],["try"]],["bool"]]],[11,"eq","","",235,[[["self"],["type"]],["bool"]]],[11,"eq","","",236,[[["self"],["typeof"]],["bool"]]],[11,"eq","","",237,[[["self"],["union"]],["bool"]]],[11,"eq","","",238,[[["self"],["unsafe"]],["bool"]]],[11,"eq","","",239,[[["self"],["unsized"]],["bool"]]],[11,"eq","","",240,[[["self"],["use"]],["bool"]]],[11,"eq","","",241,[[["self"],["virtual"]],["bool"]]],[11,"eq","","",242,[[["self"],["where"]],["bool"]]],[11,"eq","","",243,[[["self"],["while"]],["bool"]]],[11,"eq","","",244,[[["self"],["yield"]],["bool"]]],[11,"eq","","",245,[[["self"],["add"]],["bool"]]],[11,"eq","","",246,[[["self"],["addeq"]],["bool"]]],[11,"eq","","",247,[[["self"],["and"]],["bool"]]],[11,"eq","","",248,[[["self"],["andand"]],["bool"]]],[11,"eq","","",249,[[["self"],["andeq"]],["bool"]]],[11,"eq","","",250,[[["self"],["at"]],["bool"]]],[11,"eq","","",251,[[["self"],["bang"]],["bool"]]],[11,"eq","","",252,[[["self"],["caret"]],["bool"]]],[11,"eq","","",253,[[["self"],["careteq"]],["bool"]]],[11,"eq","","",254,[[["self"],["colon"]],["bool"]]],[11,"eq","","",255,[[["self"],["colon2"]],["bool"]]],[11,"eq","","",256,[[["self"],["comma"]],["bool"]]],[11,"eq","","",257,[[["self"],["div"]],["bool"]]],[11,"eq","","",258,[[["self"],["diveq"]],["bool"]]],[11,"eq","","",259,[[["self"],["dollar"]],["bool"]]],[11,"eq","","",260,[[["self"],["dot"]],["bool"]]],[11,"eq","","",261,[[["self"],["dot2"]],["bool"]]],[11,"eq","","",262,[[["self"],["dot3"]],["bool"]]],[11,"eq","","",263,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq","","",264,[[["self"],["eq"]],["bool"]]],[11,"eq","","",265,[[["self"],["eqeq"]],["bool"]]],[11,"eq","","",266,[[["self"],["ge"]],["bool"]]],[11,"eq","","",267,[[["self"],["gt"]],["bool"]]],[11,"eq","","",268,[[["self"],["le"]],["bool"]]],[11,"eq","","",269,[[["self"],["lt"]],["bool"]]],[11,"eq","","",270,[[["self"],["muleq"]],["bool"]]],[11,"eq","","",271,[[["self"],["ne"]],["bool"]]],[11,"eq","","",272,[[["self"],["or"]],["bool"]]],[11,"eq","","",273,[[["self"],["oreq"]],["bool"]]],[11,"eq","","",274,[[["self"],["oror"]],["bool"]]],[11,"eq","","",275,[[["self"],["pound"]],["bool"]]],[11,"eq","","",276,[[["self"],["question"]],["bool"]]],[11,"eq","","",277,[[["self"],["rarrow"]],["bool"]]],[11,"eq","","",278,[[["self"],["larrow"]],["bool"]]],[11,"eq","","",279,[[["self"],["rem"]],["bool"]]],[11,"eq","","",280,[[["self"],["remeq"]],["bool"]]],[11,"eq","","",281,[[["self"],["fatarrow"]],["bool"]]],[11,"eq","","",282,[[["self"],["semi"]],["bool"]]],[11,"eq","","",283,[[["self"],["shl"]],["bool"]]],[11,"eq","","",284,[[["self"],["shleq"]],["bool"]]],[11,"eq","","",285,[[["self"],["shr"]],["bool"]]],[11,"eq","","",286,[[["self"],["shreq"]],["bool"]]],[11,"eq","","",287,[[["self"],["star"]],["bool"]]],[11,"eq","","",288,[[["self"],["sub"]],["bool"]]],[11,"eq","","",289,[[["self"],["subeq"]],["bool"]]],[11,"eq","","",290,[[["self"],["tilde"]],["bool"]]],[11,"eq","","",291,[[["self"],["brace"]],["bool"]]],[11,"eq","","",292,[[["self"],["bracket"]],["bool"]]],[11,"eq","","",293,[[["self"],["paren"]],["bool"]]],[11,"eq","","",294,[[["self"],["group"]],["bool"]]],[11,"eq","syn","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",158,[[["self"],["attrstyle"]],["bool"]]],[11,"ne","","",158,[[["self"],["attrstyle"]],["bool"]]],[11,"eq","","",159,[[["self"],["meta"]],["bool"]]],[11,"ne","","",159,[[["self"],["meta"]],["bool"]]],[11,"eq","","",1,[[["self"],["metalist"]],["bool"]]],[11,"ne","","",1,[[["self"],["metalist"]],["bool"]]],[11,"eq","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"ne","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"eq","","",160,[[["self"],["nestedmeta"]],["bool"]]],[11,"ne","","",160,[[["self"],["nestedmeta"]],["bool"]]],[11,"eq","","",6,[[["self"],["variant"]],["bool"]]],[11,"ne","","",6,[[["self"],["variant"]],["bool"]]],[11,"eq","","",161,[[["self"],["fields"]],["bool"]]],[11,"ne","","",161,[[["self"],["fields"]],["bool"]]],[11,"eq","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"ne","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"eq","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"ne","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"eq","","",3,[[["self"],["field"]],["bool"]]],[11,"ne","","",3,[[["self"],["field"]],["bool"]]],[11,"eq","","",162,[[["self"],["visibility"]],["bool"]]],[11,"ne","","",162,[[["self"],["visibility"]],["bool"]]],[11,"eq","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"ne","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"eq","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"ne","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"eq","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"ne","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"eq","","",163,[[["self"],["expr"]],["bool"]]],[11,"ne","","",163,[[["self"],["expr"]],["bool"]]],[11,"eq","","",16,[[["self"],["exprbox"]],["bool"]]],[11,"ne","","",16,[[["self"],["exprbox"]],["bool"]]],[11,"eq","","",26,[[["self"],["exprinplace"]],["bool"]]],[11,"ne","","",26,[[["self"],["exprinplace"]],["bool"]]],[11,"eq","","",10,[[["self"],["exprarray"]],["bool"]]],[11,"ne","","",10,[[["self"],["exprarray"]],["bool"]]],[11,"eq","","",18,[[["self"],["exprcall"]],["bool"]]],[11,"ne","","",18,[[["self"],["exprcall"]],["bool"]]],[11,"eq","","",33,[[["self"],["exprmethodcall"]],["bool"]]],[11,"ne","","",33,[[["self"],["exprmethodcall"]],["bool"]]],[11,"eq","","",43,[[["self"],["exprtuple"]],["bool"]]],[11,"ne","","",43,[[["self"],["exprtuple"]],["bool"]]],[11,"eq","","",14,[[["self"],["exprbinary"]],["bool"]]],[11,"ne","","",14,[[["self"],["exprbinary"]],["bool"]]],[11,"eq","","",45,[[["self"],["exprunary"]],["bool"]]],[11,"ne","","",45,[[["self"],["exprunary"]],["bool"]]],[11,"eq","","",29,[[["self"],["exprlit"]],["bool"]]],[11,"ne","","",29,[[["self"],["exprlit"]],["bool"]]],[11,"eq","","",19,[[["self"],["exprcast"]],["bool"]]],[11,"ne","","",19,[[["self"],["exprcast"]],["bool"]]],[11,"eq","","",44,[[["self"],["exprtype"]],["bool"]]],[11,"ne","","",44,[[["self"],["exprtype"]],["bool"]]],[11,"eq","","",28,[[["self"],["exprlet"]],["bool"]]],[11,"ne","","",28,[[["self"],["exprlet"]],["bool"]]],[11,"eq","","",25,[[["self"],["exprif"]],["bool"]]],[11,"ne","","",25,[[["self"],["exprif"]],["bool"]]],[11,"eq","","",48,[[["self"],["exprwhile"]],["bool"]]],[11,"ne","","",48,[[["self"],["exprwhile"]],["bool"]]],[11,"eq","","",23,[[["self"],["exprforloop"]],["bool"]]],[11,"ne","","",23,[[["self"],["exprforloop"]],["bool"]]],[11,"eq","","",30,[[["self"],["exprloop"]],["bool"]]],[11,"ne","","",30,[[["self"],["exprloop"]],["bool"]]],[11,"eq","","",32,[[["self"],["exprmatch"]],["bool"]]],[11,"ne","","",32,[[["self"],["exprmatch"]],["bool"]]],[11,"eq","","",20,[[["self"],["exprclosure"]],["bool"]]],[11,"ne","","",20,[[["self"],["exprclosure"]],["bool"]]],[11,"eq","","",46,[[["self"],["exprunsafe"]],["bool"]]],[11,"ne","","",46,[[["self"],["exprunsafe"]],["bool"]]],[11,"eq","","",15,[[["self"],["exprblock"]],["bool"]]],[11,"ne","","",15,[[["self"],["exprblock"]],["bool"]]],[11,"eq","","",11,[[["self"],["exprassign"]],["bool"]]],[11,"ne","","",11,[[["self"],["exprassign"]],["bool"]]],[11,"eq","","",12,[[["self"],["exprassignop"]],["bool"]]],[11,"ne","","",12,[[["self"],["exprassignop"]],["bool"]]],[11,"eq","","",22,[[["self"],["exprfield"]],["bool"]]],[11,"ne","","",22,[[["self"],["exprfield"]],["bool"]]],[11,"eq","","",27,[[["self"],["exprindex"]],["bool"]]],[11,"ne","","",27,[[["self"],["exprindex"]],["bool"]]],[11,"eq","","",36,[[["self"],["exprrange"]],["bool"]]],[11,"ne","","",36,[[["self"],["exprrange"]],["bool"]]],[11,"eq","","",35,[[["self"],["exprpath"]],["bool"]]],[11,"ne","","",35,[[["self"],["exprpath"]],["bool"]]],[11,"eq","","",37,[[["self"],["exprreference"]],["bool"]]],[11,"ne","","",37,[[["self"],["exprreference"]],["bool"]]],[11,"eq","","",17,[[["self"],["exprbreak"]],["bool"]]],[11,"ne","","",17,[[["self"],["exprbreak"]],["bool"]]],[11,"eq","","",21,[[["self"],["exprcontinue"]],["bool"]]],[11,"ne","","",21,[[["self"],["exprcontinue"]],["bool"]]],[11,"eq","","",39,[[["self"],["exprreturn"]],["bool"]]],[11,"ne","","",39,[[["self"],["exprreturn"]],["bool"]]],[11,"eq","","",31,[[["self"],["exprmacro"]],["bool"]]],[11,"ne","","",31,[[["self"],["exprmacro"]],["bool"]]],[11,"eq","","",40,[[["self"],["exprstruct"]],["bool"]]],[11,"ne","","",40,[[["self"],["exprstruct"]],["bool"]]],[11,"eq","","",38,[[["self"],["exprrepeat"]],["bool"]]],[11,"ne","","",38,[[["self"],["exprrepeat"]],["bool"]]],[11,"eq","","",34,[[["self"],["exprparen"]],["bool"]]],[11,"ne","","",34,[[["self"],["exprparen"]],["bool"]]],[11,"eq","","",24,[[["self"],["exprgroup"]],["bool"]]],[11,"ne","","",24,[[["self"],["exprgroup"]],["bool"]]],[11,"eq","","",41,[[["self"],["exprtry"]],["bool"]]],[11,"ne","","",41,[[["self"],["exprtry"]],["bool"]]],[11,"eq","","",13,[[["self"],["exprasync"]],["bool"]]],[11,"ne","","",13,[[["self"],["exprasync"]],["bool"]]],[11,"eq","","",42,[[["self"],["exprtryblock"]],["bool"]]],[11,"ne","","",42,[[["self"],["exprtryblock"]],["bool"]]],[11,"eq","","",49,[[["self"],["expryield"]],["bool"]]],[11,"ne","","",49,[[["self"],["expryield"]],["bool"]]],[11,"eq","","",47,[[["self"],["self"]],["bool"]]],[11,"eq","","",164,[[["self"],["member"]],["bool"]]],[11,"ne","","",164,[[["self"],["member"]],["bool"]]],[11,"eq","","",50,[[["self"],["self"]],["bool"]]],[11,"eq","","",57,[[["self"],["methodturbofish"]],["bool"]]],[11,"ne","","",57,[[["self"],["methodturbofish"]],["bool"]]],[11,"eq","","",165,[[["self"],["genericmethodargument"]],["bool"]]],[11,"ne","","",165,[[["self"],["genericmethodargument"]],["bool"]]],[11,"eq","","",54,[[["self"],["fieldvalue"]],["bool"]]],[11,"ne","","",54,[[["self"],["fieldvalue"]],["bool"]]],[11,"eq","","",55,[[["self"],["label"]],["bool"]]],[11,"ne","","",55,[[["self"],["label"]],["bool"]]],[11,"eq","","",52,[[["self"],["block"]],["bool"]]],[11,"ne","","",52,[[["self"],["block"]],["bool"]]],[11,"eq","","",168,[[["self"],["stmt"]],["bool"]]],[11,"ne","","",168,[[["self"],["stmt"]],["bool"]]],[11,"eq","","",56,[[["self"],["local"]],["bool"]]],[11,"ne","","",56,[[["self"],["local"]],["bool"]]],[11,"eq","","",166,[[["self"],["pat"]],["bool"]]],[11,"ne","","",166,[[["self"],["pat"]],["bool"]]],[11,"eq","","",70,[[["self"],["patwild"]],["bool"]]],[11,"ne","","",70,[[["self"],["patwild"]],["bool"]]],[11,"eq","","",59,[[["self"],["patident"]],["bool"]]],[11,"ne","","",59,[[["self"],["patident"]],["bool"]]],[11,"eq","","",66,[[["self"],["patstruct"]],["bool"]]],[11,"ne","","",66,[[["self"],["patstruct"]],["bool"]]],[11,"eq","","",68,[[["self"],["pattuplestruct"]],["bool"]]],[11,"ne","","",68,[[["self"],["pattuplestruct"]],["bool"]]],[11,"eq","","",62,[[["self"],["patpath"]],["bool"]]],[11,"ne","","",62,[[["self"],["patpath"]],["bool"]]],[11,"eq","","",67,[[["self"],["pattuple"]],["bool"]]],[11,"ne","","",67,[[["self"],["pattuple"]],["bool"]]],[11,"eq","","",58,[[["self"],["patbox"]],["bool"]]],[11,"ne","","",58,[[["self"],["patbox"]],["bool"]]],[11,"eq","","",64,[[["self"],["patref"]],["bool"]]],[11,"ne","","",64,[[["self"],["patref"]],["bool"]]],[11,"eq","","",60,[[["self"],["patlit"]],["bool"]]],[11,"ne","","",60,[[["self"],["patlit"]],["bool"]]],[11,"eq","","",63,[[["self"],["patrange"]],["bool"]]],[11,"ne","","",63,[[["self"],["patrange"]],["bool"]]],[11,"eq","","",65,[[["self"],["patslice"]],["bool"]]],[11,"ne","","",65,[[["self"],["patslice"]],["bool"]]],[11,"eq","","",61,[[["self"],["patmacro"]],["bool"]]],[11,"ne","","",61,[[["self"],["patmacro"]],["bool"]]],[11,"eq","","",69,[[["self"],["self"]],["bool"]]],[11,"eq","","",51,[[["self"],["arm"]],["bool"]]],[11,"ne","","",51,[[["self"],["arm"]],["bool"]]],[11,"eq","","",167,[[["self"],["rangelimits"]],["bool"]]],[11,"ne","","",167,[[["self"],["rangelimits"]],["bool"]]],[11,"eq","","",53,[[["self"],["fieldpat"]],["bool"]]],[11,"ne","","",53,[[["self"],["fieldpat"]],["bool"]]],[11,"eq","","",73,[[["self"],["generics"]],["bool"]]],[11,"ne","","",73,[[["self"],["generics"]],["bool"]]],[11,"eq","","",169,[[["self"],["genericparam"]],["bool"]]],[11,"ne","","",169,[[["self"],["genericparam"]],["bool"]]],[11,"eq","","",79,[[["self"],["typeparam"]],["bool"]]],[11,"ne","","",79,[[["self"],["typeparam"]],["bool"]]],[11,"eq","","",74,[[["self"],["lifetimedef"]],["bool"]]],[11,"ne","","",74,[[["self"],["lifetimedef"]],["bool"]]],[11,"eq","","",72,[[["self"],["constparam"]],["bool"]]],[11,"ne","","",72,[[["self"],["constparam"]],["bool"]]],[11,"eq","","",315,[[["self"],["implgenerics"]],["bool"]]],[11,"ne","","",315,[[["self"],["implgenerics"]],["bool"]]],[11,"eq","","",295,[[["self"],["typegenerics"]],["bool"]]],[11,"ne","","",295,[[["self"],["typegenerics"]],["bool"]]],[11,"eq","","",316,[[["self"],["turbofish"]],["bool"]]],[11,"ne","","",316,[[["self"],["turbofish"]],["bool"]]],[11,"eq","","",71,[[["self"],["boundlifetimes"]],["bool"]]],[11,"ne","","",71,[[["self"],["boundlifetimes"]],["bool"]]],[11,"eq","","",171,[[["self"],["typeparambound"]],["bool"]]],[11,"ne","","",171,[[["self"],["typeparambound"]],["bool"]]],[11,"eq","","",78,[[["self"],["traitbound"]],["bool"]]],[11,"ne","","",78,[[["self"],["traitbound"]],["bool"]]],[11,"eq","","",170,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"ne","","",170,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"eq","","",80,[[["self"],["whereclause"]],["bool"]]],[11,"ne","","",80,[[["self"],["whereclause"]],["bool"]]],[11,"eq","","",172,[[["self"],["wherepredicate"]],["bool"]]],[11,"ne","","",172,[[["self"],["wherepredicate"]],["bool"]]],[11,"eq","","",77,[[["self"],["predicatetype"]],["bool"]]],[11,"ne","","",77,[[["self"],["predicatetype"]],["bool"]]],[11,"eq","","",76,[[["self"],["predicatelifetime"]],["bool"]]],[11,"ne","","",76,[[["self"],["predicatelifetime"]],["bool"]]],[11,"eq","","",75,[[["self"],["predicateeq"]],["bool"]]],[11,"ne","","",75,[[["self"],["predicateeq"]],["bool"]]],[11,"eq","","",176,[[["self"],["item"]],["bool"]]],[11,"ne","","",176,[[["self"],["item"]],["bool"]]],[11,"eq","","",99,[[["self"],["itemexterncrate"]],["bool"]]],[11,"ne","","",99,[[["self"],["itemexterncrate"]],["bool"]]],[11,"eq","","",112,[[["self"],["itemuse"]],["bool"]]],[11,"ne","","",112,[[["self"],["itemuse"]],["bool"]]],[11,"eq","","",106,[[["self"],["itemstatic"]],["bool"]]],[11,"ne","","",106,[[["self"],["itemstatic"]],["bool"]]],[11,"eq","","",96,[[["self"],["itemconst"]],["bool"]]],[11,"ne","","",96,[[["self"],["itemconst"]],["bool"]]],[11,"eq","","",100,[[["self"],["itemfn"]],["bool"]]],[11,"ne","","",100,[[["self"],["itemfn"]],["bool"]]],[11,"eq","","",105,[[["self"],["itemmod"]],["bool"]]],[11,"ne","","",105,[[["self"],["itemmod"]],["bool"]]],[11,"eq","","",101,[[["self"],["itemforeignmod"]],["bool"]]],[11,"ne","","",101,[[["self"],["itemforeignmod"]],["bool"]]],[11,"eq","","",110,[[["self"],["itemtype"]],["bool"]]],[11,"ne","","",110,[[["self"],["itemtype"]],["bool"]]],[11,"eq","","",98,[[["self"],["itemexistential"]],["bool"]]],[11,"ne","","",98,[[["self"],["itemexistential"]],["bool"]]],[11,"eq","","",107,[[["self"],["itemstruct"]],["bool"]]],[11,"ne","","",107,[[["self"],["itemstruct"]],["bool"]]],[11,"eq","","",97,[[["self"],["itemenum"]],["bool"]]],[11,"ne","","",97,[[["self"],["itemenum"]],["bool"]]],[11,"eq","","",111,[[["self"],["itemunion"]],["bool"]]],[11,"ne","","",111,[[["self"],["itemunion"]],["bool"]]],[11,"eq","","",108,[[["self"],["itemtrait"]],["bool"]]],[11,"ne","","",108,[[["self"],["itemtrait"]],["bool"]]],[11,"eq","","",109,[[["self"],["itemtraitalias"]],["bool"]]],[11,"ne","","",109,[[["self"],["itemtraitalias"]],["bool"]]],[11,"eq","","",102,[[["self"],["itemimpl"]],["bool"]]],[11,"ne","","",102,[[["self"],["itemimpl"]],["bool"]]],[11,"eq","","",103,[[["self"],["itemmacro"]],["bool"]]],[11,"ne","","",103,[[["self"],["itemmacro"]],["bool"]]],[11,"eq","","",104,[[["self"],["self"]],["bool"]]],[11,"eq","","",113,[[["self"],["self"]],["bool"]]],[11,"eq","","",178,[[["self"],["usetree"]],["bool"]]],[11,"ne","","",178,[[["self"],["usetree"]],["bool"]]],[11,"eq","","",123,[[["self"],["usepath"]],["bool"]]],[11,"ne","","",123,[[["self"],["usepath"]],["bool"]]],[11,"eq","","",122,[[["self"],["usename"]],["bool"]]],[11,"ne","","",122,[[["self"],["usename"]],["bool"]]],[11,"eq","","",124,[[["self"],["userename"]],["bool"]]],[11,"ne","","",124,[[["self"],["userename"]],["bool"]]],[11,"eq","","",120,[[["self"],["useglob"]],["bool"]]],[11,"ne","","",120,[[["self"],["useglob"]],["bool"]]],[11,"eq","","",121,[[["self"],["usegroup"]],["bool"]]],[11,"ne","","",121,[[["self"],["usegroup"]],["bool"]]],[11,"eq","","",174,[[["self"],["foreignitem"]],["bool"]]],[11,"ne","","",174,[[["self"],["foreignitem"]],["bool"]]],[11,"eq","","",85,[[["self"],["foreignitemfn"]],["bool"]]],[11,"ne","","",85,[[["self"],["foreignitemfn"]],["bool"]]],[11,"eq","","",87,[[["self"],["foreignitemstatic"]],["bool"]]],[11,"ne","","",87,[[["self"],["foreignitemstatic"]],["bool"]]],[11,"eq","","",88,[[["self"],["foreignitemtype"]],["bool"]]],[11,"ne","","",88,[[["self"],["foreignitemtype"]],["bool"]]],[11,"eq","","",86,[[["self"],["foreignitemmacro"]],["bool"]]],[11,"ne","","",86,[[["self"],["foreignitemmacro"]],["bool"]]],[11,"eq","","",89,[[["self"],["self"]],["bool"]]],[11,"eq","","",177,[[["self"],["traititem"]],["bool"]]],[11,"ne","","",177,[[["self"],["traititem"]],["bool"]]],[11,"eq","","",115,[[["self"],["traititemconst"]],["bool"]]],[11,"ne","","",115,[[["self"],["traititemconst"]],["bool"]]],[11,"eq","","",117,[[["self"],["traititemmethod"]],["bool"]]],[11,"ne","","",117,[[["self"],["traititemmethod"]],["bool"]]],[11,"eq","","",118,[[["self"],["traititemtype"]],["bool"]]],[11,"ne","","",118,[[["self"],["traititemtype"]],["bool"]]],[11,"eq","","",116,[[["self"],["traititemmacro"]],["bool"]]],[11,"ne","","",116,[[["self"],["traititemmacro"]],["bool"]]],[11,"eq","","",119,[[["self"],["self"]],["bool"]]],[11,"eq","","",175,[[["self"],["implitem"]],["bool"]]],[11,"ne","","",175,[[["self"],["implitem"]],["bool"]]],[11,"eq","","",90,[[["self"],["implitemconst"]],["bool"]]],[11,"ne","","",90,[[["self"],["implitemconst"]],["bool"]]],[11,"eq","","",93,[[["self"],["implitemmethod"]],["bool"]]],[11,"ne","","",93,[[["self"],["implitemmethod"]],["bool"]]],[11,"eq","","",94,[[["self"],["implitemtype"]],["bool"]]],[11,"ne","","",94,[[["self"],["implitemtype"]],["bool"]]],[11,"eq","","",91,[[["self"],["implitemexistential"]],["bool"]]],[11,"ne","","",91,[[["self"],["implitemexistential"]],["bool"]]],[11,"eq","","",92,[[["self"],["implitemmacro"]],["bool"]]],[11,"ne","","",92,[[["self"],["implitemmacro"]],["bool"]]],[11,"eq","","",95,[[["self"],["self"]],["bool"]]],[11,"eq","","",114,[[["self"],["methodsig"]],["bool"]]],[11,"ne","","",114,[[["self"],["methodsig"]],["bool"]]],[11,"eq","","",84,[[["self"],["fndecl"]],["bool"]]],[11,"ne","","",84,[[["self"],["fndecl"]],["bool"]]],[11,"eq","","",173,[[["self"],["fnarg"]],["bool"]]],[11,"ne","","",173,[[["self"],["fnarg"]],["bool"]]],[11,"eq","","",83,[[["self"],["argselfref"]],["bool"]]],[11,"ne","","",83,[[["self"],["argselfref"]],["bool"]]],[11,"eq","","",82,[[["self"],["argself"]],["bool"]]],[11,"ne","","",82,[[["self"],["argself"]],["bool"]]],[11,"eq","","",81,[[["self"],["argcaptured"]],["bool"]]],[11,"ne","","",81,[[["self"],["argcaptured"]],["bool"]]],[11,"eq","","",125,[[["self"],["file"]],["bool"]]],[11,"ne","","",125,[[["self"],["file"]],["bool"]]],[11,"eq","","",126,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",181,[[["self"],["lit"]],["bool"]]],[11,"ne","","",181,[[["self"],["lit"]],["bool"]]],[11,"eq","","",296,[[["self"],["self"]],["bool"]]],[11,"eq","","",297,[[["self"],["self"]],["bool"]]],[11,"eq","","",298,[[["self"],["self"]],["bool"]]],[11,"eq","","",299,[[["self"],["self"]],["bool"]]],[11,"eq","","",300,[[["self"],["self"]],["bool"]]],[11,"eq","","",301,[[["self"],["self"]],["bool"]]],[11,"eq","","",127,[[["self"],["self"]],["bool"]]],[11,"eq","","",128,[[["self"],["self"]],["bool"]]],[11,"eq","","",182,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",182,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",180,[[["self"],["intsuffix"]],["bool"]]],[11,"eq","","",179,[[["self"],["floatsuffix"]],["bool"]]],[11,"eq","","",183,[[["self"],["macrodelimiter"]],["bool"]]],[11,"ne","","",183,[[["self"],["macrodelimiter"]],["bool"]]],[11,"eq","","",129,[[["self"],["self"]],["bool"]]],[11,"eq","","",133,[[["self"],["deriveinput"]],["bool"]]],[11,"ne","","",133,[[["self"],["deriveinput"]],["bool"]]],[11,"eq","","",184,[[["self"],["data"]],["bool"]]],[11,"ne","","",184,[[["self"],["data"]],["bool"]]],[11,"eq","","",131,[[["self"],["datastruct"]],["bool"]]],[11,"ne","","",131,[[["self"],["datastruct"]],["bool"]]],[11,"eq","","",130,[[["self"],["dataenum"]],["bool"]]],[11,"ne","","",130,[[["self"],["dataenum"]],["bool"]]],[11,"eq","","",132,[[["self"],["dataunion"]],["bool"]]],[11,"ne","","",132,[[["self"],["dataunion"]],["bool"]]],[11,"eq","","",185,[[["self"],["binop"]],["bool"]]],[11,"ne","","",185,[[["self"],["binop"]],["bool"]]],[11,"eq","","",186,[[["self"],["unop"]],["bool"]]],[11,"ne","","",186,[[["self"],["unop"]],["bool"]]],[11,"eq","","",189,[[["self"],["type"]],["bool"]]],[11,"ne","","",189,[[["self"],["type"]],["bool"]]],[11,"eq","","",147,[[["self"],["typeslice"]],["bool"]]],[11,"ne","","",147,[[["self"],["typeslice"]],["bool"]]],[11,"eq","","",136,[[["self"],["typearray"]],["bool"]]],[11,"ne","","",136,[[["self"],["typearray"]],["bool"]]],[11,"eq","","",145,[[["self"],["typeptr"]],["bool"]]],[11,"ne","","",145,[[["self"],["typeptr"]],["bool"]]],[11,"eq","","",146,[[["self"],["typereference"]],["bool"]]],[11,"ne","","",146,[[["self"],["typereference"]],["bool"]]],[11,"eq","","",137,[[["self"],["typebarefn"]],["bool"]]],[11,"ne","","",137,[[["self"],["typebarefn"]],["bool"]]],[11,"eq","","",142,[[["self"],["typenever"]],["bool"]]],[11,"ne","","",142,[[["self"],["typenever"]],["bool"]]],[11,"eq","","",149,[[["self"],["typetuple"]],["bool"]]],[11,"ne","","",149,[[["self"],["typetuple"]],["bool"]]],[11,"eq","","",144,[[["self"],["typepath"]],["bool"]]],[11,"ne","","",144,[[["self"],["typepath"]],["bool"]]],[11,"eq","","",148,[[["self"],["typetraitobject"]],["bool"]]],[11,"ne","","",148,[[["self"],["typetraitobject"]],["bool"]]],[11,"eq","","",139,[[["self"],["typeimpltrait"]],["bool"]]],[11,"ne","","",139,[[["self"],["typeimpltrait"]],["bool"]]],[11,"eq","","",143,[[["self"],["typeparen"]],["bool"]]],[11,"ne","","",143,[[["self"],["typeparen"]],["bool"]]],[11,"eq","","",138,[[["self"],["typegroup"]],["bool"]]],[11,"ne","","",138,[[["self"],["typegroup"]],["bool"]]],[11,"eq","","",140,[[["self"],["typeinfer"]],["bool"]]],[11,"ne","","",140,[[["self"],["typeinfer"]],["bool"]]],[11,"eq","","",141,[[["self"],["typemacro"]],["bool"]]],[11,"ne","","",141,[[["self"],["typemacro"]],["bool"]]],[11,"eq","","",150,[[["self"],["self"]],["bool"]]],[11,"eq","","",134,[[["self"],["abi"]],["bool"]]],[11,"ne","","",134,[[["self"],["abi"]],["bool"]]],[11,"eq","","",135,[[["self"],["barefnarg"]],["bool"]]],[11,"ne","","",135,[[["self"],["barefnarg"]],["bool"]]],[11,"eq","","",187,[[["self"],["barefnargname"]],["bool"]]],[11,"ne","","",187,[[["self"],["barefnargname"]],["bool"]]],[11,"eq","","",188,[[["self"],["returntype"]],["bool"]]],[11,"ne","","",188,[[["self"],["returntype"]],["bool"]]],[11,"eq","","",155,[[["self"],["path"]],["bool"]]],[11,"ne","","",155,[[["self"],["path"]],["bool"]]],[11,"eq","","",156,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",156,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",191,[[["self"],["patharguments"]],["bool"]]],[11,"ne","","",191,[[["self"],["patharguments"]],["bool"]]],[11,"eq","","",190,[[["self"],["genericargument"]],["bool"]]],[11,"ne","","",190,[[["self"],["genericargument"]],["bool"]]],[11,"eq","","",151,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"ne","","",151,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"eq","","",152,[[["self"],["binding"]],["bool"]]],[11,"ne","","",152,[[["self"],["binding"]],["bool"]]],[11,"eq","","",153,[[["self"],["constraint"]],["bool"]]],[11,"ne","","",153,[[["self"],["constraint"]],["bool"]]],[11,"eq","","",154,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"ne","","",154,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"eq","","",157,[[["self"],["qself"]],["bool"]]],[11,"ne","","",157,[[["self"],["qself"]],["bool"]]],[11,"eq","syn::buffer","",303,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",303,[[["self"],["cursor"]],["bool"]]],[11,"eq","syn::punctuated","",306,[[["self"],["punctuated"]],["bool"]]],[11,"ne","","",306,[[["self"],["punctuated"]],["bool"]]],[11,"from","syn","",314,[[["selfvalue"]],["ident"]]],[11,"from","","",314,[[["selftype"]],["ident"]]],[11,"from","","",314,[[["super"]],["ident"]]],[11,"from","","",314,[[["crate"]],["ident"]]],[11,"from","","",314,[[["extern"]],["ident"]]],[11,"from","","",314,[[["underscore"]],["ident"]]],[11,"from","","",159,[[["ident"]],["meta"]]],[11,"from","","",159,[[["metalist"]],["meta"]]],[11,"from","","",159,[[["metanamevalue"]],["meta"]]],[11,"from","","",160,[[["meta"]],["nestedmeta"]]],[11,"from","","",160,[[["lit"]],["nestedmeta"]]],[11,"from","","",161,[[["fieldsnamed"]],["fields"]]],[11,"from","","",161,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",162,[[["vispublic"]],["visibility"]]],[11,"from","","",162,[[["viscrate"]],["visibility"]]],[11,"from","","",162,[[["visrestricted"]],["visibility"]]],[11,"from","","",163,[[["exprbox"]],["expr"]]],[11,"from","","",163,[[["exprinplace"]],["expr"]]],[11,"from","","",163,[[["exprarray"]],["expr"]]],[11,"from","","",163,[[["exprcall"]],["expr"]]],[11,"from","","",163,[[["exprmethodcall"]],["expr"]]],[11,"from","","",163,[[["exprtuple"]],["expr"]]],[11,"from","","",163,[[["exprbinary"]],["expr"]]],[11,"from","","",163,[[["exprunary"]],["expr"]]],[11,"from","","",163,[[["exprlit"]],["expr"]]],[11,"from","","",163,[[["exprcast"]],["expr"]]],[11,"from","","",163,[[["exprtype"]],["expr"]]],[11,"from","","",163,[[["exprlet"]],["expr"]]],[11,"from","","",163,[[["exprif"]],["expr"]]],[11,"from","","",163,[[["exprwhile"]],["expr"]]],[11,"from","","",163,[[["exprforloop"]],["expr"]]],[11,"from","","",163,[[["exprloop"]],["expr"]]],[11,"from","","",163,[[["exprmatch"]],["expr"]]],[11,"from","","",163,[[["exprclosure"]],["expr"]]],[11,"from","","",163,[[["exprunsafe"]],["expr"]]],[11,"from","","",163,[[["exprblock"]],["expr"]]],[11,"from","","",163,[[["exprassign"]],["expr"]]],[11,"from","","",163,[[["exprassignop"]],["expr"]]],[11,"from","","",163,[[["exprfield"]],["expr"]]],[11,"from","","",163,[[["exprindex"]],["expr"]]],[11,"from","","",163,[[["exprrange"]],["expr"]]],[11,"from","","",163,[[["exprpath"]],["expr"]]],[11,"from","","",163,[[["exprreference"]],["expr"]]],[11,"from","","",163,[[["exprbreak"]],["expr"]]],[11,"from","","",163,[[["exprcontinue"]],["expr"]]],[11,"from","","",163,[[["exprreturn"]],["expr"]]],[11,"from","","",163,[[["exprmacro"]],["expr"]]],[11,"from","","",163,[[["exprstruct"]],["expr"]]],[11,"from","","",163,[[["exprrepeat"]],["expr"]]],[11,"from","","",163,[[["exprparen"]],["expr"]]],[11,"from","","",163,[[["exprgroup"]],["expr"]]],[11,"from","","",163,[[["exprtry"]],["expr"]]],[11,"from","","",163,[[["exprasync"]],["expr"]]],[11,"from","","",163,[[["exprtryblock"]],["expr"]]],[11,"from","","",163,[[["expryield"]],["expr"]]],[11,"from","","",163,[[["exprverbatim"]],["expr"]]],[11,"from","","",50,[[["usize"]],["index"]]],[11,"from","","",166,[[["patwild"]],["pat"]]],[11,"from","","",166,[[["patident"]],["pat"]]],[11,"from","","",166,[[["patstruct"]],["pat"]]],[11,"from","","",166,[[["pattuplestruct"]],["pat"]]],[11,"from","","",166,[[["patpath"]],["pat"]]],[11,"from","","",166,[[["pattuple"]],["pat"]]],[11,"from","","",166,[[["patbox"]],["pat"]]],[11,"from","","",166,[[["patref"]],["pat"]]],[11,"from","","",166,[[["patlit"]],["pat"]]],[11,"from","","",166,[[["patrange"]],["pat"]]],[11,"from","","",166,[[["patslice"]],["pat"]]],[11,"from","","",166,[[["patmacro"]],["pat"]]],[11,"from","","",166,[[["patverbatim"]],["pat"]]],[11,"from","","",169,[[["typeparam"]],["genericparam"]]],[11,"from","","",169,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",169,[[["constparam"]],["genericparam"]]],[11,"from","","",79,[[["ident"]],["self"]]],[11,"from","","",171,[[["traitbound"]],["typeparambound"]]],[11,"from","","",171,[[["lifetime"]],["typeparambound"]]],[11,"from","","",172,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",172,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",172,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",176,[[["itemexterncrate"]],["item"]]],[11,"from","","",176,[[["itemuse"]],["item"]]],[11,"from","","",176,[[["itemstatic"]],["item"]]],[11,"from","","",176,[[["itemconst"]],["item"]]],[11,"from","","",176,[[["itemfn"]],["item"]]],[11,"from","","",176,[[["itemmod"]],["item"]]],[11,"from","","",176,[[["itemforeignmod"]],["item"]]],[11,"from","","",176,[[["itemtype"]],["item"]]],[11,"from","","",176,[[["itemexistential"]],["item"]]],[11,"from","","",176,[[["itemstruct"]],["item"]]],[11,"from","","",176,[[["itemenum"]],["item"]]],[11,"from","","",176,[[["itemunion"]],["item"]]],[11,"from","","",176,[[["itemtrait"]],["item"]]],[11,"from","","",176,[[["itemtraitalias"]],["item"]]],[11,"from","","",176,[[["itemimpl"]],["item"]]],[11,"from","","",176,[[["itemmacro"]],["item"]]],[11,"from","","",176,[[["itemmacro2"]],["item"]]],[11,"from","","",176,[[["itemverbatim"]],["item"]]],[11,"from","","",176,[[["deriveinput"]],["item"]]],[11,"from","","",178,[[["usepath"]],["usetree"]]],[11,"from","","",178,[[["usename"]],["usetree"]]],[11,"from","","",178,[[["userename"]],["usetree"]]],[11,"from","","",178,[[["useglob"]],["usetree"]]],[11,"from","","",178,[[["usegroup"]],["usetree"]]],[11,"from","","",174,[[["foreignitemfn"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemstatic"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemtype"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemmacro"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemverbatim"]],["foreignitem"]]],[11,"from","","",177,[[["traititemconst"]],["traititem"]]],[11,"from","","",177,[[["traititemmethod"]],["traititem"]]],[11,"from","","",177,[[["traititemtype"]],["traititem"]]],[11,"from","","",177,[[["traititemmacro"]],["traititem"]]],[11,"from","","",177,[[["traititemverbatim"]],["traititem"]]],[11,"from","","",175,[[["implitemconst"]],["implitem"]]],[11,"from","","",175,[[["implitemmethod"]],["implitem"]]],[11,"from","","",175,[[["implitemtype"]],["implitem"]]],[11,"from","","",175,[[["implitemexistential"]],["implitem"]]],[11,"from","","",175,[[["implitemmacro"]],["implitem"]]],[11,"from","","",175,[[["implitemverbatim"]],["implitem"]]],[11,"from","","",173,[[["argselfref"]],["fnarg"]]],[11,"from","","",173,[[["argself"]],["fnarg"]]],[11,"from","","",173,[[["argcaptured"]],["fnarg"]]],[11,"from","","",173,[[["pat"]],["fnarg"]]],[11,"from","","",173,[[["type"]],["fnarg"]]],[11,"from","","",181,[[["litstr"]],["lit"]]],[11,"from","","",181,[[["litbytestr"]],["lit"]]],[11,"from","","",181,[[["litbyte"]],["lit"]]],[11,"from","","",181,[[["litchar"]],["lit"]]],[11,"from","","",181,[[["litint"]],["lit"]]],[11,"from","","",181,[[["litfloat"]],["lit"]]],[11,"from","","",181,[[["litbool"]],["lit"]]],[11,"from","","",181,[[["litverbatim"]],["lit"]]],[11,"from","","",184,[[["datastruct"]],["data"]]],[11,"from","","",184,[[["dataenum"]],["data"]]],[11,"from","","",184,[[["dataunion"]],["data"]]],[11,"from","","",189,[[["typeslice"]],["type"]]],[11,"from","","",189,[[["typearray"]],["type"]]],[11,"from","","",189,[[["typeptr"]],["type"]]],[11,"from","","",189,[[["typereference"]],["type"]]],[11,"from","","",189,[[["typebarefn"]],["type"]]],[11,"from","","",189,[[["typenever"]],["type"]]],[11,"from","","",189,[[["typetuple"]],["type"]]],[11,"from","","",189,[[["typepath"]],["type"]]],[11,"from","","",189,[[["typetraitobject"]],["type"]]],[11,"from","","",189,[[["typeimpltrait"]],["type"]]],[11,"from","","",189,[[["typeparen"]],["type"]]],[11,"from","","",189,[[["typegroup"]],["type"]]],[11,"from","","",189,[[["typeinfer"]],["type"]]],[11,"from","","",189,[[["typemacro"]],["type"]]],[11,"from","","",189,[[["typeverbatim"]],["type"]]],[11,"from","","",155,[[["t"]],["self"]]],[11,"from","","",156,[[["t"]],["self"]]],[11,"from","","",313,[[["lexerror"]],["self"]]],[11,"into_iter","syn::punctuated","",306,N],[11,"cmp","syn","",126,[[["self"],["lifetime"]],["ordering"]]],[11,"clone","syn::token","",192,[[["self"]],["underscore"]]],[11,"clone","","",193,[[["self"]],["abstract"]]],[11,"clone","","",194,[[["self"]],["as"]]],[11,"clone","","",195,[[["self"]],["async"]]],[11,"clone","","",196,[[["self"]],["auto"]]],[11,"clone","","",197,[[["self"]],["become"]]],[11,"clone","","",198,[[["self"]],["box"]]],[11,"clone","","",199,[[["self"]],["break"]]],[11,"clone","","",200,[[["self"]],["const"]]],[11,"clone","","",201,[[["self"]],["continue"]]],[11,"clone","","",202,[[["self"]],["crate"]]],[11,"clone","","",203,[[["self"]],["default"]]],[11,"clone","","",204,[[["self"]],["do"]]],[11,"clone","","",205,[[["self"]],["dyn"]]],[11,"clone","","",206,[[["self"]],["else"]]],[11,"clone","","",207,[[["self"]],["enum"]]],[11,"clone","","",208,[[["self"]],["existential"]]],[11,"clone","","",209,[[["self"]],["extern"]]],[11,"clone","","",210,[[["self"]],["final"]]],[11,"clone","","",211,[[["self"]],["fn"]]],[11,"clone","","",212,[[["self"]],["for"]]],[11,"clone","","",213,[[["self"]],["if"]]],[11,"clone","","",214,[[["self"]],["impl"]]],[11,"clone","","",215,[[["self"]],["in"]]],[11,"clone","","",216,[[["self"]],["let"]]],[11,"clone","","",217,[[["self"]],["loop"]]],[11,"clone","","",218,[[["self"]],["macro"]]],[11,"clone","","",219,[[["self"]],["match"]]],[11,"clone","","",220,[[["self"]],["mod"]]],[11,"clone","","",221,[[["self"]],["move"]]],[11,"clone","","",222,[[["self"]],["mut"]]],[11,"clone","","",223,[[["self"]],["override"]]],[11,"clone","","",224,[[["self"]],["priv"]]],[11,"clone","","",225,[[["self"]],["pub"]]],[11,"clone","","",226,[[["self"]],["ref"]]],[11,"clone","","",227,[[["self"]],["return"]]],[11,"clone","","",228,[[["self"]],["selftype"]]],[11,"clone","","",229,[[["self"]],["selfvalue"]]],[11,"clone","","",230,[[["self"]],["static"]]],[11,"clone","","",231,[[["self"]],["struct"]]],[11,"clone","","",232,[[["self"]],["super"]]],[11,"clone","","",233,[[["self"]],["trait"]]],[11,"clone","","",234,[[["self"]],["try"]]],[11,"clone","","",235,[[["self"]],["type"]]],[11,"clone","","",236,[[["self"]],["typeof"]]],[11,"clone","","",237,[[["self"]],["union"]]],[11,"clone","","",238,[[["self"]],["unsafe"]]],[11,"clone","","",239,[[["self"]],["unsized"]]],[11,"clone","","",240,[[["self"]],["use"]]],[11,"clone","","",241,[[["self"]],["virtual"]]],[11,"clone","","",242,[[["self"]],["where"]]],[11,"clone","","",243,[[["self"]],["while"]]],[11,"clone","","",244,[[["self"]],["yield"]]],[11,"clone","","",245,[[["self"]],["add"]]],[11,"clone","","",246,[[["self"]],["addeq"]]],[11,"clone","","",247,[[["self"]],["and"]]],[11,"clone","","",248,[[["self"]],["andand"]]],[11,"clone","","",249,[[["self"]],["andeq"]]],[11,"clone","","",250,[[["self"]],["at"]]],[11,"clone","","",251,[[["self"]],["bang"]]],[11,"clone","","",252,[[["self"]],["caret"]]],[11,"clone","","",253,[[["self"]],["careteq"]]],[11,"clone","","",254,[[["self"]],["colon"]]],[11,"clone","","",255,[[["self"]],["colon2"]]],[11,"clone","","",256,[[["self"]],["comma"]]],[11,"clone","","",257,[[["self"]],["div"]]],[11,"clone","","",258,[[["self"]],["diveq"]]],[11,"clone","","",259,[[["self"]],["dollar"]]],[11,"clone","","",260,[[["self"]],["dot"]]],[11,"clone","","",261,[[["self"]],["dot2"]]],[11,"clone","","",262,[[["self"]],["dot3"]]],[11,"clone","","",263,[[["self"]],["dotdoteq"]]],[11,"clone","","",264,[[["self"]],["eq"]]],[11,"clone","","",265,[[["self"]],["eqeq"]]],[11,"clone","","",266,[[["self"]],["ge"]]],[11,"clone","","",267,[[["self"]],["gt"]]],[11,"clone","","",268,[[["self"]],["le"]]],[11,"clone","","",269,[[["self"]],["lt"]]],[11,"clone","","",270,[[["self"]],["muleq"]]],[11,"clone","","",271,[[["self"]],["ne"]]],[11,"clone","","",272,[[["self"]],["or"]]],[11,"clone","","",273,[[["self"]],["oreq"]]],[11,"clone","","",274,[[["self"]],["oror"]]],[11,"clone","","",275,[[["self"]],["pound"]]],[11,"clone","","",276,[[["self"]],["question"]]],[11,"clone","","",277,[[["self"]],["rarrow"]]],[11,"clone","","",278,[[["self"]],["larrow"]]],[11,"clone","","",279,[[["self"]],["rem"]]],[11,"clone","","",280,[[["self"]],["remeq"]]],[11,"clone","","",281,[[["self"]],["fatarrow"]]],[11,"clone","","",282,[[["self"]],["semi"]]],[11,"clone","","",283,[[["self"]],["shl"]]],[11,"clone","","",284,[[["self"]],["shleq"]]],[11,"clone","","",285,[[["self"]],["shr"]]],[11,"clone","","",286,[[["self"]],["shreq"]]],[11,"clone","","",287,[[["self"]],["star"]]],[11,"clone","","",288,[[["self"]],["sub"]]],[11,"clone","","",289,[[["self"]],["subeq"]]],[11,"clone","","",290,[[["self"]],["tilde"]]],[11,"clone","","",291,[[["self"]],["brace"]]],[11,"clone","","",292,[[["self"]],["bracket"]]],[11,"clone","","",293,[[["self"]],["paren"]]],[11,"clone","","",294,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",158,[[["self"]],["attrstyle"]]],[11,"clone","","",159,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",160,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",161,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",162,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",163,[[["self"]],["expr"]]],[11,"clone","","",16,[[["self"]],["exprbox"]]],[11,"clone","","",26,[[["self"]],["exprinplace"]]],[11,"clone","","",10,[[["self"]],["exprarray"]]],[11,"clone","","",18,[[["self"]],["exprcall"]]],[11,"clone","","",33,[[["self"]],["exprmethodcall"]]],[11,"clone","","",43,[[["self"]],["exprtuple"]]],[11,"clone","","",14,[[["self"]],["exprbinary"]]],[11,"clone","","",45,[[["self"]],["exprunary"]]],[11,"clone","","",29,[[["self"]],["exprlit"]]],[11,"clone","","",19,[[["self"]],["exprcast"]]],[11,"clone","","",44,[[["self"]],["exprtype"]]],[11,"clone","","",28,[[["self"]],["exprlet"]]],[11,"clone","","",25,[[["self"]],["exprif"]]],[11,"clone","","",48,[[["self"]],["exprwhile"]]],[11,"clone","","",23,[[["self"]],["exprforloop"]]],[11,"clone","","",30,[[["self"]],["exprloop"]]],[11,"clone","","",32,[[["self"]],["exprmatch"]]],[11,"clone","","",20,[[["self"]],["exprclosure"]]],[11,"clone","","",46,[[["self"]],["exprunsafe"]]],[11,"clone","","",15,[[["self"]],["exprblock"]]],[11,"clone","","",11,[[["self"]],["exprassign"]]],[11,"clone","","",12,[[["self"]],["exprassignop"]]],[11,"clone","","",22,[[["self"]],["exprfield"]]],[11,"clone","","",27,[[["self"]],["exprindex"]]],[11,"clone","","",36,[[["self"]],["exprrange"]]],[11,"clone","","",35,[[["self"]],["exprpath"]]],[11,"clone","","",37,[[["self"]],["exprreference"]]],[11,"clone","","",17,[[["self"]],["exprbreak"]]],[11,"clone","","",21,[[["self"]],["exprcontinue"]]],[11,"clone","","",39,[[["self"]],["exprreturn"]]],[11,"clone","","",31,[[["self"]],["exprmacro"]]],[11,"clone","","",40,[[["self"]],["exprstruct"]]],[11,"clone","","",38,[[["self"]],["exprrepeat"]]],[11,"clone","","",34,[[["self"]],["exprparen"]]],[11,"clone","","",24,[[["self"]],["exprgroup"]]],[11,"clone","","",41,[[["self"]],["exprtry"]]],[11,"clone","","",13,[[["self"]],["exprasync"]]],[11,"clone","","",42,[[["self"]],["exprtryblock"]]],[11,"clone","","",49,[[["self"]],["expryield"]]],[11,"clone","","",47,[[["self"]],["exprverbatim"]]],[11,"clone","","",164,[[["self"]],["member"]]],[11,"clone","","",50,[[["self"]],["index"]]],[11,"clone","","",57,[[["self"]],["methodturbofish"]]],[11,"clone","","",165,[[["self"]],["genericmethodargument"]]],[11,"clone","","",54,[[["self"]],["fieldvalue"]]],[11,"clone","","",55,[[["self"]],["label"]]],[11,"clone","","",52,[[["self"]],["block"]]],[11,"clone","","",168,[[["self"]],["stmt"]]],[11,"clone","","",56,[[["self"]],["local"]]],[11,"clone","","",166,[[["self"]],["pat"]]],[11,"clone","","",70,[[["self"]],["patwild"]]],[11,"clone","","",59,[[["self"]],["patident"]]],[11,"clone","","",66,[[["self"]],["patstruct"]]],[11,"clone","","",68,[[["self"]],["pattuplestruct"]]],[11,"clone","","",62,[[["self"]],["patpath"]]],[11,"clone","","",67,[[["self"]],["pattuple"]]],[11,"clone","","",58,[[["self"]],["patbox"]]],[11,"clone","","",64,[[["self"]],["patref"]]],[11,"clone","","",60,[[["self"]],["patlit"]]],[11,"clone","","",63,[[["self"]],["patrange"]]],[11,"clone","","",65,[[["self"]],["patslice"]]],[11,"clone","","",61,[[["self"]],["patmacro"]]],[11,"clone","","",69,[[["self"]],["patverbatim"]]],[11,"clone","","",51,[[["self"]],["arm"]]],[11,"clone","","",167,[[["self"]],["rangelimits"]]],[11,"clone","","",53,[[["self"]],["fieldpat"]]],[11,"clone","","",73,[[["self"]],["generics"]]],[11,"clone","","",169,[[["self"]],["genericparam"]]],[11,"clone","","",79,[[["self"]],["typeparam"]]],[11,"clone","","",74,[[["self"]],["lifetimedef"]]],[11,"clone","","",72,[[["self"]],["constparam"]]],[11,"clone","","",315,[[["self"]],["implgenerics"]]],[11,"clone","","",295,[[["self"]],["typegenerics"]]],[11,"clone","","",316,[[["self"]],["turbofish"]]],[11,"clone","","",71,[[["self"]],["boundlifetimes"]]],[11,"clone","","",171,[[["self"]],["typeparambound"]]],[11,"clone","","",78,[[["self"]],["traitbound"]]],[11,"clone","","",170,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",80,[[["self"]],["whereclause"]]],[11,"clone","","",172,[[["self"]],["wherepredicate"]]],[11,"clone","","",77,[[["self"]],["predicatetype"]]],[11,"clone","","",76,[[["self"]],["predicatelifetime"]]],[11,"clone","","",75,[[["self"]],["predicateeq"]]],[11,"clone","","",176,[[["self"]],["item"]]],[11,"clone","","",99,[[["self"]],["itemexterncrate"]]],[11,"clone","","",112,[[["self"]],["itemuse"]]],[11,"clone","","",106,[[["self"]],["itemstatic"]]],[11,"clone","","",96,[[["self"]],["itemconst"]]],[11,"clone","","",100,[[["self"]],["itemfn"]]],[11,"clone","","",105,[[["self"]],["itemmod"]]],[11,"clone","","",101,[[["self"]],["itemforeignmod"]]],[11,"clone","","",110,[[["self"]],["itemtype"]]],[11,"clone","","",98,[[["self"]],["itemexistential"]]],[11,"clone","","",107,[[["self"]],["itemstruct"]]],[11,"clone","","",97,[[["self"]],["itemenum"]]],[11,"clone","","",111,[[["self"]],["itemunion"]]],[11,"clone","","",108,[[["self"]],["itemtrait"]]],[11,"clone","","",109,[[["self"]],["itemtraitalias"]]],[11,"clone","","",102,[[["self"]],["itemimpl"]]],[11,"clone","","",103,[[["self"]],["itemmacro"]]],[11,"clone","","",104,[[["self"]],["itemmacro2"]]],[11,"clone","","",113,[[["self"]],["itemverbatim"]]],[11,"clone","","",178,[[["self"]],["usetree"]]],[11,"clone","","",123,[[["self"]],["usepath"]]],[11,"clone","","",122,[[["self"]],["usename"]]],[11,"clone","","",124,[[["self"]],["userename"]]],[11,"clone","","",120,[[["self"]],["useglob"]]],[11,"clone","","",121,[[["self"]],["usegroup"]]],[11,"clone","","",174,[[["self"]],["foreignitem"]]],[11,"clone","","",85,[[["self"]],["foreignitemfn"]]],[11,"clone","","",87,[[["self"]],["foreignitemstatic"]]],[11,"clone","","",88,[[["self"]],["foreignitemtype"]]],[11,"clone","","",86,[[["self"]],["foreignitemmacro"]]],[11,"clone","","",89,[[["self"]],["foreignitemverbatim"]]],[11,"clone","","",177,[[["self"]],["traititem"]]],[11,"clone","","",115,[[["self"]],["traititemconst"]]],[11,"clone","","",117,[[["self"]],["traititemmethod"]]],[11,"clone","","",118,[[["self"]],["traititemtype"]]],[11,"clone","","",116,[[["self"]],["traititemmacro"]]],[11,"clone","","",119,[[["self"]],["traititemverbatim"]]],[11,"clone","","",175,[[["self"]],["implitem"]]],[11,"clone","","",90,[[["self"]],["implitemconst"]]],[11,"clone","","",93,[[["self"]],["implitemmethod"]]],[11,"clone","","",94,[[["self"]],["implitemtype"]]],[11,"clone","","",91,[[["self"]],["implitemexistential"]]],[11,"clone","","",92,[[["self"]],["implitemmacro"]]],[11,"clone","","",95,[[["self"]],["implitemverbatim"]]],[11,"clone","","",114,[[["self"]],["methodsig"]]],[11,"clone","","",84,[[["self"]],["fndecl"]]],[11,"clone","","",173,[[["self"]],["fnarg"]]],[11,"clone","","",83,[[["self"]],["argselfref"]]],[11,"clone","","",82,[[["self"]],["argself"]]],[11,"clone","","",81,[[["self"]],["argcaptured"]]],[11,"clone","","",125,[[["self"]],["file"]]],[11,"clone","","",126,[[["self"]],["lifetime"]]],[11,"clone","","",181,[[["self"]],["lit"]]],[11,"clone","","",296,[[["self"]],["litstr"]]],[11,"clone","","",297,[[["self"]],["litbytestr"]]],[11,"clone","","",298,[[["self"]],["litbyte"]]],[11,"clone","","",299,[[["self"]],["litchar"]]],[11,"clone","","",300,[[["self"]],["litint"]]],[11,"clone","","",301,[[["self"]],["litfloat"]]],[11,"clone","","",127,[[["self"]],["litbool"]]],[11,"clone","","",128,[[["self"]],["litverbatim"]]],[11,"clone","","",182,[[["self"]],["strstyle"]]],[11,"clone","","",180,[[["self"]],["intsuffix"]]],[11,"clone","","",179,[[["self"]],["floatsuffix"]]],[11,"clone","","",129,[[["self"]],["macro"]]],[11,"clone","","",183,[[["self"]],["macrodelimiter"]]],[11,"clone","","",133,[[["self"]],["deriveinput"]]],[11,"clone","","",184,[[["self"]],["data"]]],[11,"clone","","",131,[[["self"]],["datastruct"]]],[11,"clone","","",130,[[["self"]],["dataenum"]]],[11,"clone","","",132,[[["self"]],["dataunion"]]],[11,"clone","","",185,[[["self"]],["binop"]]],[11,"clone","","",186,[[["self"]],["unop"]]],[11,"clone","","",189,[[["self"]],["type"]]],[11,"clone","","",147,[[["self"]],["typeslice"]]],[11,"clone","","",136,[[["self"]],["typearray"]]],[11,"clone","","",145,[[["self"]],["typeptr"]]],[11,"clone","","",146,[[["self"]],["typereference"]]],[11,"clone","","",137,[[["self"]],["typebarefn"]]],[11,"clone","","",142,[[["self"]],["typenever"]]],[11,"clone","","",149,[[["self"]],["typetuple"]]],[11,"clone","","",144,[[["self"]],["typepath"]]],[11,"clone","","",148,[[["self"]],["typetraitobject"]]],[11,"clone","","",139,[[["self"]],["typeimpltrait"]]],[11,"clone","","",143,[[["self"]],["typeparen"]]],[11,"clone","","",138,[[["self"]],["typegroup"]]],[11,"clone","","",140,[[["self"]],["typeinfer"]]],[11,"clone","","",141,[[["self"]],["typemacro"]]],[11,"clone","","",150,[[["self"]],["typeverbatim"]]],[11,"clone","","",134,[[["self"]],["abi"]]],[11,"clone","","",135,[[["self"]],["barefnarg"]]],[11,"clone","","",187,[[["self"]],["barefnargname"]]],[11,"clone","","",188,[[["self"]],["returntype"]]],[11,"clone","","",155,[[["self"]],["path"]]],[11,"clone","","",156,[[["self"]],["pathsegment"]]],[11,"clone","","",191,[[["self"]],["patharguments"]]],[11,"clone","","",190,[[["self"]],["genericargument"]]],[11,"clone","","",151,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",152,[[["self"]],["binding"]]],[11,"clone","","",153,[[["self"]],["constraint"]]],[11,"clone","","",154,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",157,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",303,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",306,[[["self"]],["punctuated"]]],[11,"clone","","",317,[[["self"]],["self"]]],[11,"clone","","",319,[[["self"]],["intopairs"]]],[11,"clone","","",320,[[["self"]],["intoiter"]]],[11,"clone","","",321,[[["self"]],["self"]]],[11,"clone","","",305,[[["self"]],["pair"]]],[11,"clone","syn::parse","",311,[[["self"]],["stepcursor"]]],[11,"clone","syn","",313,[[["self"]],["self"]]],[11,"drop","syn::parse","",312,[[["self"]]]],[11,"deref","syn::token","",192,N],[11,"deref","","",245,N],[11,"deref","","",247,N],[11,"deref","","",250,N],[11,"deref","","",251,N],[11,"deref","","",252,N],[11,"deref","","",254,N],[11,"deref","","",256,N],[11,"deref","","",257,N],[11,"deref","","",259,N],[11,"deref","","",260,N],[11,"deref","","",264,N],[11,"deref","","",267,N],[11,"deref","","",269,N],[11,"deref","","",272,N],[11,"deref","","",275,N],[11,"deref","","",276,N],[11,"deref","","",279,N],[11,"deref","","",282,N],[11,"deref","","",287,N],[11,"deref","","",288,N],[11,"deref","","",290,N],[11,"deref","syn::parse","",311,N],[11,"fmt","syn","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::parse","",312,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",313,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::token","",192,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",193,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",195,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",197,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",198,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",199,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",200,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",201,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",202,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",203,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",204,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",205,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",206,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",207,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",208,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",209,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",210,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",211,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",212,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",213,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",214,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",215,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",216,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",217,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",218,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",219,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",220,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",221,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",222,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",223,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",224,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",225,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",226,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",227,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",228,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",229,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",230,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",231,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",232,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",233,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",234,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",235,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",237,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",238,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",239,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",240,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",242,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",243,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",244,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",245,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",246,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",247,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",248,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",249,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",250,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",251,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",252,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",253,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",254,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",255,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",256,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",257,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",258,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",259,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",260,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",261,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",262,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",263,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",264,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",265,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",266,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",267,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",268,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",269,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",270,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",271,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",272,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",273,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",274,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",275,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",276,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",277,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",278,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",279,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",280,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",281,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",282,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",283,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",284,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",285,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",286,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",287,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",288,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",289,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",290,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",291,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",292,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",293,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",294,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",159,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",164,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",165,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",167,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",169,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",315,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",295,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",316,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",171,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",172,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",176,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",178,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",174,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",177,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",175,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",173,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",181,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",296,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",297,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",298,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",299,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",300,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",301,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",182,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",180,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",179,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",183,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",184,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",185,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",186,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",189,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",187,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",188,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",156,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",191,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",190,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",157,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::punctuated","",306,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::parse","",312,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",313,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","syn::token","",192,N],[11,"deref_mut","","",245,N],[11,"deref_mut","","",247,N],[11,"deref_mut","","",250,N],[11,"deref_mut","","",251,N],[11,"deref_mut","","",252,N],[11,"deref_mut","","",254,N],[11,"deref_mut","","",256,N],[11,"deref_mut","","",257,N],[11,"deref_mut","","",259,N],[11,"deref_mut","","",260,N],[11,"deref_mut","","",264,N],[11,"deref_mut","","",267,N],[11,"deref_mut","","",269,N],[11,"deref_mut","","",272,N],[11,"deref_mut","","",275,N],[11,"deref_mut","","",276,N],[11,"deref_mut","","",279,N],[11,"deref_mut","","",282,N],[11,"deref_mut","","",287,N],[11,"deref_mut","","",288,N],[11,"deref_mut","","",290,N],[11,"index","syn::punctuated","",306,N],[11,"index_mut","","",306,N],[11,"hash","syn::token","",192,[[["self"],["h"]]]],[11,"hash","","",193,[[["self"],["h"]]]],[11,"hash","","",194,[[["self"],["h"]]]],[11,"hash","","",195,[[["self"],["h"]]]],[11,"hash","","",196,[[["self"],["h"]]]],[11,"hash","","",197,[[["self"],["h"]]]],[11,"hash","","",198,[[["self"],["h"]]]],[11,"hash","","",199,[[["self"],["h"]]]],[11,"hash","","",200,[[["self"],["h"]]]],[11,"hash","","",201,[[["self"],["h"]]]],[11,"hash","","",202,[[["self"],["h"]]]],[11,"hash","","",203,[[["self"],["h"]]]],[11,"hash","","",204,[[["self"],["h"]]]],[11,"hash","","",205,[[["self"],["h"]]]],[11,"hash","","",206,[[["self"],["h"]]]],[11,"hash","","",207,[[["self"],["h"]]]],[11,"hash","","",208,[[["self"],["h"]]]],[11,"hash","","",209,[[["self"],["h"]]]],[11,"hash","","",210,[[["self"],["h"]]]],[11,"hash","","",211,[[["self"],["h"]]]],[11,"hash","","",212,[[["self"],["h"]]]],[11,"hash","","",213,[[["self"],["h"]]]],[11,"hash","","",214,[[["self"],["h"]]]],[11,"hash","","",215,[[["self"],["h"]]]],[11,"hash","","",216,[[["self"],["h"]]]],[11,"hash","","",217,[[["self"],["h"]]]],[11,"hash","","",218,[[["self"],["h"]]]],[11,"hash","","",219,[[["self"],["h"]]]],[11,"hash","","",220,[[["self"],["h"]]]],[11,"hash","","",221,[[["self"],["h"]]]],[11,"hash","","",222,[[["self"],["h"]]]],[11,"hash","","",223,[[["self"],["h"]]]],[11,"hash","","",224,[[["self"],["h"]]]],[11,"hash","","",225,[[["self"],["h"]]]],[11,"hash","","",226,[[["self"],["h"]]]],[11,"hash","","",227,[[["self"],["h"]]]],[11,"hash","","",228,[[["self"],["h"]]]],[11,"hash","","",229,[[["self"],["h"]]]],[11,"hash","","",230,[[["self"],["h"]]]],[11,"hash","","",231,[[["self"],["h"]]]],[11,"hash","","",232,[[["self"],["h"]]]],[11,"hash","","",233,[[["self"],["h"]]]],[11,"hash","","",234,[[["self"],["h"]]]],[11,"hash","","",235,[[["self"],["h"]]]],[11,"hash","","",236,[[["self"],["h"]]]],[11,"hash","","",237,[[["self"],["h"]]]],[11,"hash","","",238,[[["self"],["h"]]]],[11,"hash","","",239,[[["self"],["h"]]]],[11,"hash","","",240,[[["self"],["h"]]]],[11,"hash","","",241,[[["self"],["h"]]]],[11,"hash","","",242,[[["self"],["h"]]]],[11,"hash","","",243,[[["self"],["h"]]]],[11,"hash","","",244,[[["self"],["h"]]]],[11,"hash","","",245,[[["self"],["h"]]]],[11,"hash","","",246,[[["self"],["h"]]]],[11,"hash","","",247,[[["self"],["h"]]]],[11,"hash","","",248,[[["self"],["h"]]]],[11,"hash","","",249,[[["self"],["h"]]]],[11,"hash","","",250,[[["self"],["h"]]]],[11,"hash","","",251,[[["self"],["h"]]]],[11,"hash","","",252,[[["self"],["h"]]]],[11,"hash","","",253,[[["self"],["h"]]]],[11,"hash","","",254,[[["self"],["h"]]]],[11,"hash","","",255,[[["self"],["h"]]]],[11,"hash","","",256,[[["self"],["h"]]]],[11,"hash","","",257,[[["self"],["h"]]]],[11,"hash","","",258,[[["self"],["h"]]]],[11,"hash","","",259,[[["self"],["h"]]]],[11,"hash","","",260,[[["self"],["h"]]]],[11,"hash","","",261,[[["self"],["h"]]]],[11,"hash","","",262,[[["self"],["h"]]]],[11,"hash","","",263,[[["self"],["h"]]]],[11,"hash","","",264,[[["self"],["h"]]]],[11,"hash","","",265,[[["self"],["h"]]]],[11,"hash","","",266,[[["self"],["h"]]]],[11,"hash","","",267,[[["self"],["h"]]]],[11,"hash","","",268,[[["self"],["h"]]]],[11,"hash","","",269,[[["self"],["h"]]]],[11,"hash","","",270,[[["self"],["h"]]]],[11,"hash","","",271,[[["self"],["h"]]]],[11,"hash","","",272,[[["self"],["h"]]]],[11,"hash","","",273,[[["self"],["h"]]]],[11,"hash","","",274,[[["self"],["h"]]]],[11,"hash","","",275,[[["self"],["h"]]]],[11,"hash","","",276,[[["self"],["h"]]]],[11,"hash","","",277,[[["self"],["h"]]]],[11,"hash","","",278,[[["self"],["h"]]]],[11,"hash","","",279,[[["self"],["h"]]]],[11,"hash","","",280,[[["self"],["h"]]]],[11,"hash","","",281,[[["self"],["h"]]]],[11,"hash","","",282,[[["self"],["h"]]]],[11,"hash","","",283,[[["self"],["h"]]]],[11,"hash","","",284,[[["self"],["h"]]]],[11,"hash","","",285,[[["self"],["h"]]]],[11,"hash","","",286,[[["self"],["h"]]]],[11,"hash","","",287,[[["self"],["h"]]]],[11,"hash","","",288,[[["self"],["h"]]]],[11,"hash","","",289,[[["self"],["h"]]]],[11,"hash","","",290,[[["self"],["h"]]]],[11,"hash","","",291,[[["self"],["h"]]]],[11,"hash","","",292,[[["self"],["h"]]]],[11,"hash","","",293,[[["self"],["h"]]]],[11,"hash","","",294,[[["self"],["h"]]]],[11,"hash","syn","",0,[[["self"],["h"]]]],[11,"hash","","",158,N],[11,"hash","","",159,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",160,N],[11,"hash","","",6,N],[11,"hash","","",161,N],[11,"hash","","",4,N],[11,"hash","","",5,N],[11,"hash","","",3,N],[11,"hash","","",162,N],[11,"hash","","",8,N],[11,"hash","","",7,N],[11,"hash","","",9,N],[11,"hash","","",163,N],[11,"hash","","",16,N],[11,"hash","","",26,N],[11,"hash","","",10,N],[11,"hash","","",18,N],[11,"hash","","",33,N],[11,"hash","","",43,N],[11,"hash","","",14,N],[11,"hash","","",45,N],[11,"hash","","",29,N],[11,"hash","","",19,N],[11,"hash","","",44,N],[11,"hash","","",28,N],[11,"hash","","",25,N],[11,"hash","","",48,N],[11,"hash","","",23,N],[11,"hash","","",30,N],[11,"hash","","",32,N],[11,"hash","","",20,N],[11,"hash","","",46,N],[11,"hash","","",15,N],[11,"hash","","",11,N],[11,"hash","","",12,N],[11,"hash","","",22,N],[11,"hash","","",27,N],[11,"hash","","",36,N],[11,"hash","","",35,N],[11,"hash","","",37,N],[11,"hash","","",17,N],[11,"hash","","",21,N],[11,"hash","","",39,N],[11,"hash","","",31,N],[11,"hash","","",40,N],[11,"hash","","",38,N],[11,"hash","","",34,N],[11,"hash","","",24,N],[11,"hash","","",41,N],[11,"hash","","",13,N],[11,"hash","","",42,N],[11,"hash","","",49,N],[11,"hash","","",47,[[["self"],["h"]]]],[11,"hash","","",164,N],[11,"hash","","",50,[[["self"],["h"]]]],[11,"hash","","",57,N],[11,"hash","","",165,N],[11,"hash","","",54,N],[11,"hash","","",55,N],[11,"hash","","",52,N],[11,"hash","","",168,N],[11,"hash","","",56,N],[11,"hash","","",166,N],[11,"hash","","",70,N],[11,"hash","","",59,N],[11,"hash","","",66,N],[11,"hash","","",68,N],[11,"hash","","",62,N],[11,"hash","","",67,N],[11,"hash","","",58,N],[11,"hash","","",64,N],[11,"hash","","",60,N],[11,"hash","","",63,N],[11,"hash","","",65,N],[11,"hash","","",61,N],[11,"hash","","",69,[[["self"],["h"]]]],[11,"hash","","",51,N],[11,"hash","","",167,N],[11,"hash","","",53,N],[11,"hash","","",73,N],[11,"hash","","",169,N],[11,"hash","","",79,N],[11,"hash","","",74,N],[11,"hash","","",72,N],[11,"hash","","",315,N],[11,"hash","","",295,N],[11,"hash","","",316,N],[11,"hash","","",71,N],[11,"hash","","",171,N],[11,"hash","","",78,N],[11,"hash","","",170,N],[11,"hash","","",80,N],[11,"hash","","",172,N],[11,"hash","","",77,N],[11,"hash","","",76,N],[11,"hash","","",75,N],[11,"hash","","",176,N],[11,"hash","","",99,N],[11,"hash","","",112,N],[11,"hash","","",106,N],[11,"hash","","",96,N],[11,"hash","","",100,N],[11,"hash","","",105,N],[11,"hash","","",101,N],[11,"hash","","",110,N],[11,"hash","","",98,N],[11,"hash","","",107,N],[11,"hash","","",97,N],[11,"hash","","",111,N],[11,"hash","","",108,N],[11,"hash","","",109,N],[11,"hash","","",102,N],[11,"hash","","",103,N],[11,"hash","","",104,[[["self"],["h"]]]],[11,"hash","","",113,[[["self"],["h"]]]],[11,"hash","","",178,N],[11,"hash","","",123,N],[11,"hash","","",122,N],[11,"hash","","",124,N],[11,"hash","","",120,N],[11,"hash","","",121,N],[11,"hash","","",174,N],[11,"hash","","",85,N],[11,"hash","","",87,N],[11,"hash","","",88,N],[11,"hash","","",86,N],[11,"hash","","",89,[[["self"],["h"]]]],[11,"hash","","",177,N],[11,"hash","","",115,N],[11,"hash","","",117,N],[11,"hash","","",118,N],[11,"hash","","",116,N],[11,"hash","","",119,[[["self"],["h"]]]],[11,"hash","","",175,N],[11,"hash","","",90,N],[11,"hash","","",93,N],[11,"hash","","",94,N],[11,"hash","","",91,N],[11,"hash","","",92,N],[11,"hash","","",95,[[["self"],["h"]]]],[11,"hash","","",114,N],[11,"hash","","",84,N],[11,"hash","","",173,N],[11,"hash","","",83,N],[11,"hash","","",82,N],[11,"hash","","",81,N],[11,"hash","","",125,N],[11,"hash","","",126,[[["self"],["h"]]]],[11,"hash","","",181,N],[11,"hash","","",296,[[["self"],["h"]]]],[11,"hash","","",297,[[["self"],["h"]]]],[11,"hash","","",298,[[["self"],["h"]]]],[11,"hash","","",299,[[["self"],["h"]]]],[11,"hash","","",300,[[["self"],["h"]]]],[11,"hash","","",301,[[["self"],["h"]]]],[11,"hash","","",127,[[["self"],["h"]]]],[11,"hash","","",128,[[["self"],["h"]]]],[11,"hash","","",182,N],[11,"hash","","",180,N],[11,"hash","","",179,N],[11,"hash","","",183,N],[11,"hash","","",129,[[["self"],["h"]]]],[11,"hash","","",133,N],[11,"hash","","",184,N],[11,"hash","","",131,N],[11,"hash","","",130,N],[11,"hash","","",132,N],[11,"hash","","",185,N],[11,"hash","","",186,N],[11,"hash","","",189,N],[11,"hash","","",147,N],[11,"hash","","",136,N],[11,"hash","","",145,N],[11,"hash","","",146,N],[11,"hash","","",137,N],[11,"hash","","",142,N],[11,"hash","","",149,N],[11,"hash","","",144,N],[11,"hash","","",148,N],[11,"hash","","",139,N],[11,"hash","","",143,N],[11,"hash","","",138,N],[11,"hash","","",140,N],[11,"hash","","",141,N],[11,"hash","","",150,[[["self"],["h"]]]],[11,"hash","","",134,N],[11,"hash","","",135,N],[11,"hash","","",187,N],[11,"hash","","",188,N],[11,"hash","","",155,N],[11,"hash","","",156,N],[11,"hash","","",191,N],[11,"hash","","",190,N],[11,"hash","","",151,N],[11,"hash","","",152,N],[11,"hash","","",153,N],[11,"hash","","",154,N],[11,"hash","","",157,N],[11,"hash","syn::punctuated","",306,N],[11,"from_iter","","",306,[[["i"]],["self"]]],[11,"from_iter","","",306,[[["i"]],["self"]]],[11,"description","syn","",313,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",192,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",193,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",194,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",195,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",196,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",197,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",198,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",199,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",200,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",201,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",202,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",203,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",204,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",205,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",206,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",207,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",208,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",209,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",210,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",211,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",212,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",213,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",214,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",215,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",216,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",217,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",218,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",219,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",220,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",221,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",222,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",223,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",224,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",225,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",226,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",227,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",228,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",229,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",230,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",231,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",232,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",233,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",234,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",235,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",236,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",237,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",238,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",239,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",240,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",241,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",242,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",243,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",244,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",245,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",246,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",247,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",248,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",249,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",250,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",251,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",252,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",253,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",254,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",255,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",256,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",257,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",258,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",259,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",260,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",261,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",262,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",263,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",264,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",265,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",266,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",267,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",268,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",269,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",270,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",271,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",272,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",273,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",274,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",275,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",276,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",277,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",278,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",279,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",280,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",281,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",282,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",283,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",284,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",285,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",286,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",287,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",288,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",289,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",290,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn","",159,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",1,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",2,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",6,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",5,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",8,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",7,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",9,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",16,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",26,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",10,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",18,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",33,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",57,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",165,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",43,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",14,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",45,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",29,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",19,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",44,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",28,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",25,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",48,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",23,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",30,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",32,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",13,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",42,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",49,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",20,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",46,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",15,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",11,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",12,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",22,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",164,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",50,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",27,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",36,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",35,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",37,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",17,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",21,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",39,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",31,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",40,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",38,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",24,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",34,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",41,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",47,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",55,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",54,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",51,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",70,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",59,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",66,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",68,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",62,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",67,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",58,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",64,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",60,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",63,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",65,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",61,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",69,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",53,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",52,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",168,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",56,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",169,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",171,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",172,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",73,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",315,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",295,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",316,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",71,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",74,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",79,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",78,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",170,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",72,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",80,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",77,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",76,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",75,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",178,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",174,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",175,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",173,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",99,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",112,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",106,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",96,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",100,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",105,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",101,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",110,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",98,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",97,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",107,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",111,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",108,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",109,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",102,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",103,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",104,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",113,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",123,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",122,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",124,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",120,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",121,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",115,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",117,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",118,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",116,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",119,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",90,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",93,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",94,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",91,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",92,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",95,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",85,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",87,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",88,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",86,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",89,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",114,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",83,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",82,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",81,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",125,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",126,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",181,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",296,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",297,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",298,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",299,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",300,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",301,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",127,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",128,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",129,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",133,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",185,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",186,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",189,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",147,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",136,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",145,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",146,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",137,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",142,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",149,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",144,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",148,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",139,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",138,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",143,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",140,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",141,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",150,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",188,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",135,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",187,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",134,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",155,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",156,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",191,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",190,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",151,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",152,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",153,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",154,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn::punctuated","",306,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",305,[[["self"],["tokenstream"]]]],[11,"new","syn","Creates a new `Ident` with the given `string` as well as…",314,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",314,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",314,N],[11,"visit_abi","syn::visit","",308,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",308,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arg_captured","","",308,[[["self"],["argcaptured"]]]],[11,"visit_arg_self","","",308,[[["self"],["argself"]]]],[11,"visit_arg_self_ref","","",308,[[["self"],["argselfref"]]]],[11,"visit_arm","","",308,[[["self"],["arm"]]]],[11,"visit_attr_style","","",308,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",308,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",308,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",308,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",308,[[["self"],["binop"]]]],[11,"visit_binding","","",308,[[["self"],["binding"]]]],[11,"visit_block","","",308,[[["self"],["block"]]]],[11,"visit_bound_lifetimes","","",308,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",308,[[["self"],["constparam"]]]],[11,"visit_constraint","","",308,[[["self"],["constraint"]]]],[11,"visit_data","","",308,[[["self"],["data"]]]],[11,"visit_data_enum","","",308,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",308,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",308,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",308,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",308,[[["self"],["expr"]]]],[11,"visit_expr_array","","",308,[[["self"],["exprarray"]]]],[11,"visit_expr_assign","","",308,[[["self"],["exprassign"]]]],[11,"visit_expr_assign_op","","",308,[[["self"],["exprassignop"]]]],[11,"visit_expr_async","","",308,[[["self"],["exprasync"]]]],[11,"visit_expr_binary","","",308,[[["self"],["exprbinary"]]]],[11,"visit_expr_block","","",308,[[["self"],["exprblock"]]]],[11,"visit_expr_box","","",308,[[["self"],["exprbox"]]]],[11,"visit_expr_break","","",308,[[["self"],["exprbreak"]]]],[11,"visit_expr_call","","",308,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",308,[[["self"],["exprcast"]]]],[11,"visit_expr_closure","","",308,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",308,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",308,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop","","",308,[[["self"],["exprforloop"]]]],[11,"visit_expr_group","","",308,[[["self"],["exprgroup"]]]],[11,"visit_expr_if","","",308,[[["self"],["exprif"]]]],[11,"visit_expr_in_place","","",308,[[["self"],["exprinplace"]]]],[11,"visit_expr_index","","",308,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",308,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",308,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",308,[[["self"],["exprloop"]]]],[11,"visit_expr_macro","","",308,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",308,[[["self"],["exprmatch"]]]],[11,"visit_expr_method_call","","",308,[[["self"],["exprmethodcall"]]]],[11,"visit_expr_paren","","",308,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",308,[[["self"],["exprpath"]]]],[11,"visit_expr_range","","",308,[[["self"],["exprrange"]]]],[11,"visit_expr_reference","","",308,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat","","",308,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return","","",308,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",308,[[["self"],["exprstruct"]]]],[11,"visit_expr_try","","",308,[[["self"],["exprtry"]]]],[11,"visit_expr_try_block","","",308,[[["self"],["exprtryblock"]]]],[11,"visit_expr_tuple","","",308,[[["self"],["exprtuple"]]]],[11,"visit_expr_type","","",308,[[["self"],["exprtype"]]]],[11,"visit_expr_unary","","",308,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",308,[[["self"],["exprunsafe"]]]],[11,"visit_expr_verbatim","","",308,[[["self"],["exprverbatim"]]]],[11,"visit_expr_while","","",308,[[["self"],["exprwhile"]]]],[11,"visit_expr_yield","","",308,[[["self"],["expryield"]]]],[11,"visit_field","","",308,[[["self"],["field"]]]],[11,"visit_field_pat","","",308,[[["self"],["fieldpat"]]]],[11,"visit_field_value","","",308,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",308,[[["self"],["fields"]]]],[11,"visit_fields_named","","",308,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",308,[[["self"],["fieldsunnamed"]]]],[11,"visit_file","","",308,[[["self"],["file"]]]],[11,"visit_fn_arg","","",308,[[["self"],["fnarg"]]]],[11,"visit_fn_decl","","",308,[[["self"],["fndecl"]]]],[11,"visit_foreign_item","","",308,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn","","",308,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",308,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",308,[[["self"],["foreignitemstatic"]]]],[11,"visit_foreign_item_type","","",308,[[["self"],["foreignitemtype"]]]],[11,"visit_foreign_item_verbatim","","",308,[[["self"],["foreignitemverbatim"]]]],[11,"visit_generic_argument","","",308,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",308,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",308,[[["self"],["genericparam"]]]],[11,"visit_generics","","",308,[[["self"],["generics"]]]],[11,"visit_impl_item","","",308,[[["self"],["implitem"]]]],[11,"visit_impl_item_const","","",308,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_existential","","",308,[[["self"],["implitemexistential"]]]],[11,"visit_impl_item_macro","","",308,[[["self"],["implitemmacro"]]]],[11,"visit_impl_item_method","","",308,[[["self"],["implitemmethod"]]]],[11,"visit_impl_item_type","","",308,[[["self"],["implitemtype"]]]],[11,"visit_impl_item_verbatim","","",308,[[["self"],["implitemverbatim"]]]],[11,"visit_index","","",308,[[["self"],["index"]]]],[11,"visit_item","","",308,[[["self"],["item"]]]],[11,"visit_item_const","","",308,[[["self"],["itemconst"]]]],[11,"visit_item_enum","","",308,[[["self"],["itemenum"]]]],[11,"visit_item_existential","","",308,[[["self"],["itemexistential"]]]],[11,"visit_item_extern_crate","","",308,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",308,[[["self"],["itemfn"]]]],[11,"visit_item_foreign_mod","","",308,[[["self"],["itemforeignmod"]]]],[11,"visit_item_impl","","",308,[[["self"],["itemimpl"]]]],[11,"visit_item_macro","","",308,[[["self"],["itemmacro"]]]],[11,"visit_item_macro2","","",308,[[["self"],["itemmacro2"]]]],[11,"visit_item_mod","","",308,[[["self"],["itemmod"]]]],[11,"visit_item_static","","",308,[[["self"],["itemstatic"]]]],[11,"visit_item_struct","","",308,[[["self"],["itemstruct"]]]],[11,"visit_item_trait","","",308,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias","","",308,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type","","",308,[[["self"],["itemtype"]]]],[11,"visit_item_union","","",308,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",308,[[["self"],["itemuse"]]]],[11,"visit_item_verbatim","","",308,[[["self"],["itemverbatim"]]]],[11,"visit_label","","",308,[[["self"],["label"]]]],[11,"visit_lifetime","","",308,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",308,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",308,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",308,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",308,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",308,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",308,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",308,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",308,[[["self"],["litint"]]]],[11,"visit_lit_str","","",308,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",308,[[["self"],["litverbatim"]]]],[11,"visit_local","","",308,[[["self"],["local"]]]],[11,"visit_macro","","",308,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",308,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",308,[[["self"],["member"]]]],[11,"visit_meta","","",308,[[["self"],["meta"]]]],[11,"visit_meta_list","","",308,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",308,[[["self"],["metanamevalue"]]]],[11,"visit_method_sig","","",308,[[["self"],["methodsig"]]]],[11,"visit_method_turbofish","","",308,[[["self"],["methodturbofish"]]]],[11,"visit_nested_meta","","",308,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",308,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",308,[[["self"],["pat"]]]],[11,"visit_pat_box","","",308,[[["self"],["patbox"]]]],[11,"visit_pat_ident","","",308,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",308,[[["self"],["patlit"]]]],[11,"visit_pat_macro","","",308,[[["self"],["patmacro"]]]],[11,"visit_pat_path","","",308,[[["self"],["patpath"]]]],[11,"visit_pat_range","","",308,[[["self"],["patrange"]]]],[11,"visit_pat_ref","","",308,[[["self"],["patref"]]]],[11,"visit_pat_slice","","",308,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",308,[[["self"],["patstruct"]]]],[11,"visit_pat_tuple","","",308,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct","","",308,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_verbatim","","",308,[[["self"],["patverbatim"]]]],[11,"visit_pat_wild","","",308,[[["self"],["patwild"]]]],[11,"visit_path","","",308,[[["self"],["path"]]]],[11,"visit_path_arguments","","",308,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",308,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",308,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",308,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",308,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",308,[[["self"],["qself"]]]],[11,"visit_range_limits","","",308,[[["self"],["rangelimits"]]]],[11,"visit_return_type","","",308,[[["self"],["returntype"]]]],[11,"visit_stmt","","",308,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",308,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",308,[[["self"],["traitboundmodifier"]]]],[11,"visit_trait_item","","",308,[[["self"],["traititem"]]]],[11,"visit_trait_item_const","","",308,[[["self"],["traititemconst"]]]],[11,"visit_trait_item_macro","","",308,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",308,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",308,[[["self"],["traititemtype"]]]],[11,"visit_trait_item_verbatim","","",308,[[["self"],["traititemverbatim"]]]],[11,"visit_type","","",308,[[["self"],["type"]]]],[11,"visit_type_array","","",308,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",308,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",308,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",308,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",308,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",308,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",308,[[["self"],["typenever"]]]],[11,"visit_type_param","","",308,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",308,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",308,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",308,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",308,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",308,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",308,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",308,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",308,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",308,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",308,[[["self"],["unop"]]]],[11,"visit_use_glob","","",308,[[["self"],["useglob"]]]],[11,"visit_use_group","","",308,[[["self"],["usegroup"]]]],[11,"visit_use_name","","",308,[[["self"],["usename"]]]],[11,"visit_use_path","","",308,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",308,[[["self"],["userename"]]]],[11,"visit_use_tree","","",308,[[["self"],["usetree"]]]],[11,"visit_variant","","",308,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",308,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",308,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",308,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",308,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",308,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",308,[[["self"],["wherepredicate"]]]],[11,"visit_span","","",308,[[["self"],["span"]]]],[11,"visit_ident","","",308,[[["self"],["ident"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",323,[[["self"],["t"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",323,[[["self"]],["error"]]]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprInPlace"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprVerbatim"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"Arm"],[3,"Block"],[3,"FieldPat"],[3,"FieldValue"],[3,"Label"],[3,"Local"],[3,"MethodTurbofish"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatPath"],[3,"PatRange"],[3,"PatRef"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatVerbatim"],[3,"PatWild"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ArgCaptured"],[3,"ArgSelf"],[3,"ArgSelfRef"],[3,"FnDecl"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemVerbatim"],[3,"ImplItemConst"],[3,"ImplItemExistential"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ImplItemVerbatim"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExistential"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"ItemVerbatim"],[3,"MethodSig"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"TraitItemVerbatim"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericMethodArgument"],[4,"Pat"],[4,"RangeLimits"],[4,"Stmt"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Existential"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["tiff"]={"doc":"Decoding and Encoding of TIFF Images","items":[[4,"TiffError","tiff","Tiff error kinds.",N,N],[13,"FormatError","","The Image is not formatted properly",0,N],[13,"UnsupportedError","","The Decoder does not support this image format",0,N],[13,"IoError","","An I/O Error occurred while decoding the image",0,N],[4,"TiffFormatError","","",N,N],[13,"TiffSignatureNotFound","","",1,N],[13,"TiffSignatureInvalid","","",1,N],[13,"ImageFileDirectoryNotFound","","",1,N],[13,"InconsistentSizesEncountered","","",1,N],[13,"InvalidTag","","",1,N],[13,"RequiredTagNotFound","","",1,N],[13,"UnknownPredictor","","",1,N],[13,"UnsignedIntegerExpected","","",1,N],[4,"TiffUnsupportedError","","",N,N],[13,"HorizontalPredictor","","",2,N],[13,"InterpretationWithBits","","",2,N],[13,"UnknownInterpretation","","",2,N],[13,"UnknownCompressionMethod","","",2,N],[13,"UnsupportedCompressionMethod","","",2,N],[13,"UnsupportedSampleDepth","","",2,N],[13,"UnsupportedColorType","","",2,N],[13,"UnsupportedBitsPerChannel","","",2,N],[13,"UnsupportedPlanarConfig","","",2,N],[13,"UnsupportedDataType","","",2,N],[4,"ColorType","","An enumeration over supported color types and their bit…",N,N],[13,"Gray","","Pixel is grayscale",3,N],[13,"RGB","","Pixel contains R, G and B channels",3,N],[13,"Palette","","Pixel is an index into a color palette",3,N],[13,"GrayA","","Pixel is grayscale with an alpha channel",3,N],[13,"RGBA","","Pixel is RGB with an alpha channel",3,N],[13,"CMYK","","Pixel is CMYK",3,N],[0,"decoder","","",N,N],[3,"Decoder","tiff::decoder","The representation of a TIFF decoder",N,N],[4,"DecodingResult","","Result of a decoding process",N,N],[13,"U8","","A vector of unsigned bytes",4,N],[13,"U16","","A vector of unsigned words",4,N],[4,"PhotometricInterpretation","","",N,N],[13,"WhiteIsZero","","",5,N],[13,"BlackIsZero","","",5,N],[13,"RGB","","",5,N],[13,"RGBPalette","","",5,N],[13,"TransparencyMask","","",5,N],[13,"CMYK","","",5,N],[13,"YCbCr","","",5,N],[13,"CIELab","","",5,N],[4,"CompressionMethod","","",N,N],[13,"None","","",6,N],[13,"Huffman","","",6,N],[13,"Fax3","","",6,N],[13,"Fax4","","",6,N],[13,"LZW","","",6,N],[13,"JPEG","","",6,N],[13,"PackBits","","",6,N],[4,"PlanarConfiguration","","",N,N],[13,"Chunky","","",7,N],[13,"Planar","","",7,N],[0,"ifd","","Function for reading TIFF tags",N,N],[3,"Entry","tiff::decoder::ifd","",N,N],[4,"Tag","","TIFF tag",N,N],[13,"Artist","","",8,N],[13,"BitsPerSample","","",8,N],[13,"CellLength","","",8,N],[13,"CellWidth","","",8,N],[13,"ColorMap","","",8,N],[13,"Compression","","",8,N],[13,"Copyright","","",8,N],[13,"DateTime","","",8,N],[13,"ExtraSamples","","",8,N],[13,"FillOrder","","",8,N],[13,"FreeByteCounts","","",8,N],[13,"FreeOffsets","","",8,N],[13,"GrayResponseCurve","","",8,N],[13,"GrayResponseUnit","","",8,N],[13,"HostComputer","","",8,N],[13,"ImageDescription","","",8,N],[13,"ImageLength","","",8,N],[13,"ImageWidth","","",8,N],[13,"Make","","",8,N],[13,"MaxSampleValue","","",8,N],[13,"MinSampleValue","","",8,N],[13,"Model","","",8,N],[13,"NewSubfileType","","",8,N],[13,"Orientation","","",8,N],[13,"PhotometricInterpretation","","",8,N],[13,"PlanarConfiguration","","",8,N],[13,"ResolutionUnit","","",8,N],[13,"RowsPerStrip","","",8,N],[13,"SamplesPerPixel","","",8,N],[13,"Software","","",8,N],[13,"StripByteCounts","","",8,N],[13,"StripOffsets","","",8,N],[13,"SubfileType","","",8,N],[13,"Threshholding","","",8,N],[13,"XResolution","","",8,N],[13,"YResolution","","",8,N],[13,"Predictor","","",8,N],[13,"Unknown","","",8,N],[4,"Type","","",N,N],[13,"BYTE","","",9,N],[13,"ASCII","","",9,N],[13,"SHORT","","",9,N],[13,"LONG","","",9,N],[13,"RATIONAL","","",9,N],[4,"Value","","",N,N],[13,"Unsigned","","",10,N],[13,"List","","",10,N],[13,"Rational","","",10,N],[13,"Ascii","","",10,N],[6,"Directory","","Type representing an Image File Directory",N,N],[11,"from_u16","","",8,[[["u16"]],["tag"]]],[11,"into_u32","","",10,[[["self"]],["tiffresult",["u32"]]]],[11,"into_u32_vec","","",10,[[["self"]],["tiffresult",["vec"]]]],[11,"new","","",11,N],[11,"val","","",11,[[["self"],["decoder"]],["tiffresult",["value"]]]],[11,"new","tiff::decoder","Create a new decoder that decodes from the stream `r`",12,[[["r"]],["tiffresult",["decoder"]]]],[11,"dimensions","","",12,[[["self"]],["tiffresult"]]],[11,"colortype","","",12,[[["self"]],["tiffresult",["colortype"]]]],[11,"init","","Initializes the decoder.",12,[[["self"]],["tiffresult",["decoder"]]]],[11,"next_image","","Reads in the next image. If there is no further image in…",12,[[["self"]],["tiffresult",["decoder"]]]],[11,"more_images","","Returns `true` if there is at least one more image…",12,[[["self"]],["bool"]]],[11,"byte_order","","Returns the byte_order",12,[[["self"]],["byteorder"]]],[11,"read_short","","Reads a TIFF short value",12,[[["self"]],["result",["u16","error"]]]],[11,"read_long","","Reads a TIFF long value",12,[[["self"]],["result",["u32","error"]]]],[11,"read_string","","Reads a string",12,[[["self"],["usize"]],["result",["string","fromutf8error"]]]],[11,"read_offset","","Reads a TIFF IFA offset/value field",12,[[["self"]],["result",["error"]]]],[11,"goto_offset","","Moves the cursor to the specified offset",12,[[["self"],["u32"]],["result"]]],[11,"find_tag","","Tries to retrieve a tag. Return `Ok(None)` if the tag is…",12,[[["self"],["tag"]],["tiffresult",["option"]]]],[11,"find_tag_u32","","Tries to retrieve a tag and convert it to the desired type.",12,[[["self"],["tag"]],["tiffresult",["option"]]]],[11,"find_tag_u32_vec","","Tries to retrieve a tag and convert it to the desired type.",12,[[["self"],["tag"]],["tiffresult",["option"]]]],[11,"get_tag","","Tries to retrieve a tag. Returns an error if the tag is…",12,[[["self"],["tag"]],["tiffresult",["value"]]]],[11,"get_tag_u32","","Tries to retrieve a tag and convert it to the desired type.",12,[[["self"],["tag"]],["tiffresult",["u32"]]]],[11,"get_tag_u32_vec","","Tries to retrieve a tag and convert it to the desired type.",12,[[["self"],["tag"]],["tiffresult",["vec"]]]],[11,"read_image","","Decodes the entire image and return it as a Vector",12,[[["self"]],["tiffresult",["decodingresult"]]]],[6,"TiffResult","tiff","Result of an image decoding/encoding process",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","tiff::decoder","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","tiff::decoder::ifd","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"eq","","",8,[[["self"],["tag"]],["bool"]]],[11,"ne","","",8,[[["self"],["tag"]],["bool"]]],[11,"eq","","",10,[[["self"],["value"]],["bool"]]],[11,"ne","","",10,[[["self"],["value"]],["bool"]]],[11,"eq","tiff::decoder","",5,[[["self"],["photometricinterpretation"]],["bool"]]],[11,"eq","","",6,[[["self"],["compressionmethod"]],["bool"]]],[11,"eq","","",7,[[["self"],["planarconfiguration"]],["bool"]]],[11,"eq","tiff","",1,[[["self"],["tiffformaterror"]],["bool"]]],[11,"ne","","",1,[[["self"],["tiffformaterror"]],["bool"]]],[11,"eq","","",2,[[["self"],["tiffunsupportederror"]],["bool"]]],[11,"ne","","",2,[[["self"],["tiffunsupportederror"]],["bool"]]],[11,"eq","","",3,[[["self"],["colortype"]],["bool"]]],[11,"ne","","",3,[[["self"],["colortype"]],["bool"]]],[11,"from","","",0,[[["error"]],["tifferror"]]],[11,"from","","",0,[[["fromutf8error"]],["tifferror"]]],[11,"clone","tiff::decoder::ifd","",8,[[["self"]],["tag"]]],[11,"clone","","",9,[[["self"]],["type"]]],[11,"clone","","",10,[[["self"]],["value"]]],[11,"clone","","",11,[[["self"]],["entry"]]],[11,"clone","tiff::decoder","",5,[[["self"]],["photometricinterpretation"]]],[11,"clone","","",6,[[["self"]],["compressionmethod"]]],[11,"clone","","",7,[[["self"]],["planarconfiguration"]]],[11,"clone","tiff","",1,[[["self"]],["tiffformaterror"]]],[11,"clone","","",2,[[["self"]],["tiffunsupportederror"]]],[11,"clone","","",3,[[["self"]],["colortype"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tiff::decoder::ifd","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tiff::decoder","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","tiff","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"hash","tiff::decoder::ifd","",8,N],[11,"hash","","",10,N],[11,"hash","tiff::decoder","",5,N],[11,"hash","","",6,N],[11,"hash","","",7,N],[11,"hash","tiff","",1,N],[11,"hash","","",2,N],[11,"hash","","",3,N],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"from_i64","tiff::decoder::ifd","",9,[[["i64"]],["option"]]],[11,"from_u64","","",9,[[["u64"]],["option"]]],[11,"from_i64","tiff::decoder","",5,[[["i64"]],["option"]]],[11,"from_u64","","",5,[[["u64"]],["option"]]],[11,"from_i64","","",6,[[["i64"]],["option"]]],[11,"from_u64","","",6,[[["u64"]],["option"]]],[11,"from_i64","","",7,[[["i64"]],["option"]]],[11,"from_u64","","",7,[[["u64"]],["option"]]]],"paths":[[4,"TiffError"],[4,"TiffFormatError"],[4,"TiffUnsupportedError"],[4,"ColorType"],[4,"DecodingResult"],[4,"PhotometricInterpretation"],[4,"CompressionMethod"],[4,"PlanarConfiguration"],[4,"Tag"],[4,"Type"],[4,"Value"],[3,"Entry"],[3,"Decoder"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,"UnicodeXID","","Methods for determining if a character is a valid…",N,N],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[["self"]],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[["self"]],["bool"]]]],"paths":[[8,"UnicodeXID"]]};
searchIndex["viewport"]={"doc":"A library for storing viewport information","items":[[3,"Viewport","viewport","Stores viewport information.",N,N],[12,"rect","","Viewport in pixels. `[x, y, width height]` where `(x, y)`…",0,N],[12,"draw_size","","The size of frame buffer in pixels.",0,N],[12,"window_size","","The size of window in points.",0,N],[11,"abs_transform","","Computes absolute transform for 2D graphics, which uses a…",0,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["viewport"]],["bool"]]],[11,"ne","","",0,[[["self"],["viewport"]],["bool"]]],[11,"clone","","",0,[[["self"]],["viewport"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Viewport"]]};
searchIndex["winit"]={"doc":"Winit allows you to build a window on as many platforms as…","items":[[3,"KeyboardInput","winit","Describes a keyboard input event.",N,N],[12,"scancode","","Identifies the physical key pressed",0,N],[12,"state","","",0,N],[12,"virtual_keycode","","Identifies the semantic meaning of the key",0,N],[12,"modifiers","","Modifier keys active at the time of this input.",0,N],[3,"Touch","","Represents touch event",N,N],[12,"device_id","","",1,N],[12,"phase","","",1,N],[12,"location","","",1,N],[12,"id","","unique identifier of a finger.",1,N],[3,"ModifiersState","","Represents the current state of the keyboard modifiers",N,N],[12,"shift","","The \"shift\" key",2,N],[12,"ctrl","","The \"control\" key",2,N],[12,"alt","","The \"alt\" key",2,N],[12,"logo","","The \"logo\" key",2,N],[3,"AvailableMonitorsIter","","An iterator for the list of available monitors.",N,N],[3,"MonitorId","","Identifier for a monitor.",N,N],[3,"Icon","","An icon used for the window titlebar, taskbar, etc.",N,N],[3,"Window","","Represents a window.",N,N],[3,"WindowId","","Identifier of a window. Unique for each window.",N,N],[3,"DeviceId","","Identifier of an input device.",N,N],[3,"EventsLoop","","Provides a way to retrieve events from the system and from…",N,N],[3,"EventsLoopProxy","","Used to wake up the `EventsLoop` from another thread.",N,N],[3,"EventsLoopClosed","","The error that is returned when an `EventsLoopProxy`…",N,N],[3,"WindowBuilder","","Object that allows you to build windows.",N,N],[12,"window","","The attributes to use to create the window.",3,N],[3,"WindowAttributes","","Attributes to use when creating a window.",N,N],[12,"dimensions","","The dimensions of the window. If this is `None`, some…",4,N],[12,"min_dimensions","","The minimum dimensions a window can be, If this is `None`,…",4,N],[12,"max_dimensions","","The maximum dimensions a window can be, If this is `None`,…",4,N],[12,"resizable","","Whether the window is resizable or not.",4,N],[12,"fullscreen","","Whether the window should be set as fullscreen upon…",4,N],[12,"title","","The title of the window in the title bar.",4,N],[12,"maximized","","Whether the window should be maximized upon creation.",4,N],[12,"visible","","Whether the window should be immediately visible upon…",4,N],[12,"transparent","","Whether the the window should be transparent. If this is…",4,N],[12,"decorations","","Whether the window should have borders and bars.",4,N],[12,"always_on_top","","Whether the window should always be on top of other windows.",4,N],[12,"window_icon","","The window icon.",4,N],[12,"multitouch","","[iOS only] Enable multitouch, see multipleTouchEnabled",4,N],[4,"Event","","Describes a generic event.",N,N],[13,"WindowEvent","","",5,N],[12,"window_id","winit::Event","",5,N],[12,"event","","",5,N],[13,"DeviceEvent","winit","",5,N],[12,"device_id","winit::Event","",5,N],[12,"event","","",5,N],[13,"Awakened","winit","",5,N],[13,"Suspended","","The application has been suspended or resumed.",5,N],[4,"WindowEvent","","Describes an event from a `Window`.",N,N],[13,"Resized","","The size of the window has changed. Contains the client…",6,N],[13,"Moved","","The position of the window has changed. Contains the…",6,N],[13,"CloseRequested","","The window has been requested to close.",6,N],[13,"Destroyed","","The window has been destroyed.",6,N],[13,"DroppedFile","","A file has been dropped into the window.",6,N],[13,"HoveredFile","","A file is being hovered over the window.",6,N],[13,"HoveredFileCancelled","","A file was hovered, but has exited the window.",6,N],[13,"ReceivedCharacter","","The window received a unicode character.",6,N],[13,"Focused","","The window gained or lost focus.",6,N],[13,"KeyboardInput","","An event from the keyboard has been received.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[12,"input","","",6,N],[13,"CursorMoved","winit","The cursor has moved on the window.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[12,"position","","(x,y) coords in pixels relative to the top-left corner of…",6,N],[12,"modifiers","","",6,N],[13,"CursorEntered","winit","The cursor has entered the window.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[13,"CursorLeft","winit","The cursor has left the window.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[13,"MouseWheel","winit","A mouse wheel movement or touchpad scroll occurred.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[12,"delta","","",6,N],[12,"phase","","",6,N],[12,"modifiers","","",6,N],[13,"MouseInput","winit","An mouse button press has been received.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[12,"state","","",6,N],[12,"button","","",6,N],[12,"modifiers","","",6,N],[13,"TouchpadPressure","winit","Touchpad pressure event.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[12,"pressure","","",6,N],[12,"stage","","",6,N],[13,"AxisMotion","winit","Motion on some analog axis. May report data redundant to…",6,N],[12,"device_id","winit::WindowEvent","",6,N],[12,"axis","","",6,N],[12,"value","","",6,N],[13,"Refresh","winit","The window needs to be redrawn.",6,N],[13,"Touch","","Touch event has been received",6,N],[13,"HiDpiFactorChanged","","The DPI factor of the window has changed.",6,N],[4,"DeviceEvent","","Represents raw hardware events that are not associated…",N,N],[13,"Added","","",7,N],[13,"Removed","","",7,N],[13,"MouseMotion","","Change in physical position of a pointing device.",7,N],[12,"delta","winit::DeviceEvent","(x, y) change in position in unspecified units.",7,N],[13,"MouseWheel","winit","Physical scroll event",7,N],[12,"delta","winit::DeviceEvent","",7,N],[13,"Motion","winit","Motion on some analog axis. This event will be reported…",7,N],[12,"axis","winit::DeviceEvent","",7,N],[12,"value","","",7,N],[13,"Button","winit","",7,N],[12,"button","winit::DeviceEvent","",7,N],[12,"state","","",7,N],[13,"Key","winit","",7,N],[13,"Text","","",7,N],[12,"codepoint","winit::DeviceEvent","",7,N],[4,"TouchPhase","winit","Describes touch-screen input state.",N,N],[13,"Started","","",8,N],[13,"Moved","","",8,N],[13,"Ended","","",8,N],[13,"Cancelled","","",8,N],[4,"ElementState","","Describes the input state of a key.",N,N],[13,"Pressed","","",9,N],[13,"Released","","",9,N],[4,"MouseButton","","Describes a button of a mouse controller.",N,N],[13,"Left","","",10,N],[13,"Right","","",10,N],[13,"Middle","","",10,N],[13,"Other","","",10,N],[4,"MouseScrollDelta","","Describes a difference in the mouse scroll wheel state.",N,N],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal and…",11,N],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and vertical…",11,N],[4,"VirtualKeyCode","","Symbolic name for a keyboard key.",N,N],[13,"Key1","","The '1' key over the letters.",12,N],[13,"Key2","","The '2' key over the letters.",12,N],[13,"Key3","","The '3' key over the letters.",12,N],[13,"Key4","","The '4' key over the letters.",12,N],[13,"Key5","","The '5' key over the letters.",12,N],[13,"Key6","","The '6' key over the letters.",12,N],[13,"Key7","","The '7' key over the letters.",12,N],[13,"Key8","","The '8' key over the letters.",12,N],[13,"Key9","","The '9' key over the letters.",12,N],[13,"Key0","","The '0' key over the 'O' and 'P' keys.",12,N],[13,"A","","",12,N],[13,"B","","",12,N],[13,"C","","",12,N],[13,"D","","",12,N],[13,"E","","",12,N],[13,"F","","",12,N],[13,"G","","",12,N],[13,"H","","",12,N],[13,"I","","",12,N],[13,"J","","",12,N],[13,"K","","",12,N],[13,"L","","",12,N],[13,"M","","",12,N],[13,"N","","",12,N],[13,"O","","",12,N],[13,"P","","",12,N],[13,"Q","","",12,N],[13,"R","","",12,N],[13,"S","","",12,N],[13,"T","","",12,N],[13,"U","","",12,N],[13,"V","","",12,N],[13,"W","","",12,N],[13,"X","","",12,N],[13,"Y","","",12,N],[13,"Z","","",12,N],[13,"Escape","","The Escape key, next to F1.",12,N],[13,"F1","","",12,N],[13,"F2","","",12,N],[13,"F3","","",12,N],[13,"F4","","",12,N],[13,"F5","","",12,N],[13,"F6","","",12,N],[13,"F7","","",12,N],[13,"F8","","",12,N],[13,"F9","","",12,N],[13,"F10","","",12,N],[13,"F11","","",12,N],[13,"F12","","",12,N],[13,"F13","","",12,N],[13,"F14","","",12,N],[13,"F15","","",12,N],[13,"F16","","",12,N],[13,"F17","","",12,N],[13,"F18","","",12,N],[13,"F19","","",12,N],[13,"F20","","",12,N],[13,"F21","","",12,N],[13,"F22","","",12,N],[13,"F23","","",12,N],[13,"F24","","",12,N],[13,"Snapshot","","Print Screen/SysRq.",12,N],[13,"Scroll","","Scroll Lock.",12,N],[13,"Pause","","Pause/Break key, next to Scroll lock.",12,N],[13,"Insert","","`Insert`, next to Backspace.",12,N],[13,"Home","","",12,N],[13,"Delete","","",12,N],[13,"End","","",12,N],[13,"PageDown","","",12,N],[13,"PageUp","","",12,N],[13,"Left","","",12,N],[13,"Up","","",12,N],[13,"Right","","",12,N],[13,"Down","","",12,N],[13,"Back","","The Backspace key, right over Enter.",12,N],[13,"Return","","The Enter key.",12,N],[13,"Space","","The space bar.",12,N],[13,"Compose","","The \"Compose\" key on Linux.",12,N],[13,"Caret","","",12,N],[13,"Numlock","","",12,N],[13,"Numpad0","","",12,N],[13,"Numpad1","","",12,N],[13,"Numpad2","","",12,N],[13,"Numpad3","","",12,N],[13,"Numpad4","","",12,N],[13,"Numpad5","","",12,N],[13,"Numpad6","","",12,N],[13,"Numpad7","","",12,N],[13,"Numpad8","","",12,N],[13,"Numpad9","","",12,N],[13,"AbntC1","","",12,N],[13,"AbntC2","","",12,N],[13,"Add","","",12,N],[13,"Apostrophe","","",12,N],[13,"Apps","","",12,N],[13,"At","","",12,N],[13,"Ax","","",12,N],[13,"Backslash","","",12,N],[13,"Calculator","","",12,N],[13,"Capital","","",12,N],[13,"Colon","","",12,N],[13,"Comma","","",12,N],[13,"Convert","","",12,N],[13,"Decimal","","",12,N],[13,"Divide","","",12,N],[13,"Equals","","",12,N],[13,"Grave","","",12,N],[13,"Kana","","",12,N],[13,"Kanji","","",12,N],[13,"LAlt","","",12,N],[13,"LBracket","","",12,N],[13,"LControl","","",12,N],[13,"LShift","","",12,N],[13,"LWin","","",12,N],[13,"Mail","","",12,N],[13,"MediaSelect","","",12,N],[13,"MediaStop","","",12,N],[13,"Minus","","",12,N],[13,"Multiply","","",12,N],[13,"Mute","","",12,N],[13,"MyComputer","","",12,N],[13,"NavigateForward","","",12,N],[13,"NavigateBackward","","",12,N],[13,"NextTrack","","",12,N],[13,"NoConvert","","",12,N],[13,"NumpadComma","","",12,N],[13,"NumpadEnter","","",12,N],[13,"NumpadEquals","","",12,N],[13,"OEM102","","",12,N],[13,"Period","","",12,N],[13,"PlayPause","","",12,N],[13,"Power","","",12,N],[13,"PrevTrack","","",12,N],[13,"RAlt","","",12,N],[13,"RBracket","","",12,N],[13,"RControl","","",12,N],[13,"RShift","","",12,N],[13,"RWin","","",12,N],[13,"Semicolon","","",12,N],[13,"Slash","","",12,N],[13,"Sleep","","",12,N],[13,"Stop","","",12,N],[13,"Subtract","","",12,N],[13,"Sysrq","","",12,N],[13,"Tab","","",12,N],[13,"Underline","","",12,N],[13,"Unlabeled","","",12,N],[13,"VolumeDown","","",12,N],[13,"VolumeUp","","",12,N],[13,"Wake","","",12,N],[13,"WebBack","","",12,N],[13,"WebFavorites","","",12,N],[13,"WebForward","","",12,N],[13,"WebHome","","",12,N],[13,"WebRefresh","","",12,N],[13,"WebSearch","","",12,N],[13,"WebStop","","",12,N],[13,"Yen","","",12,N],[13,"Copy","","",12,N],[13,"Paste","","",12,N],[13,"Cut","","",12,N],[4,"BadIcon","","An error produced when using `Icon::from_rgba` with…",N,N],[13,"ByteCountNotDivisibleBy4","","Produced when the length of the `rgba` argument isn't…",13,N],[12,"byte_count","winit::BadIcon","",13,N],[13,"DimensionsVsPixelCount","winit","Produced when the number of pixels (`rgba.len() / 4`)…",13,N],[12,"width","winit::BadIcon","",13,N],[12,"height","","",13,N],[12,"width_x_height","","",13,N],[12,"pixel_count","","",13,N],[4,"ControlFlow","winit","Returned by the user callback given to the…",N,N],[13,"Continue","","Continue looping and waiting for events.",14,N],[13,"Break","","Break from the event loop.",14,N],[4,"CreationError","","Error that can happen while creating a window or a…",N,N],[13,"OsError","","",15,N],[13,"NotSupported","","TODO: remove this error",15,N],[4,"MouseCursor","","Describes the appearance of the mouse cursor.",N,N],[13,"Default","","The platform-dependent default cursor.",16,N],[13,"Crosshair","","A simple crosshair.",16,N],[13,"Hand","","A hand (often used to indicate links in web browsers).",16,N],[13,"Arrow","","Self explanatory.",16,N],[13,"Move","","Indicates something is to be moved.",16,N],[13,"Text","","Indicates text that may be selected or edited.",16,N],[13,"Wait","","Program busy indicator.",16,N],[13,"Help","","Help indicator (often rendered as a \"?\")",16,N],[13,"Progress","","Progress indicator. Shows that processing is being done.…",16,N],[13,"NotAllowed","","Cursor showing that something cannot be done.",16,N],[13,"ContextMenu","","",16,N],[13,"Cell","","",16,N],[13,"VerticalText","","",16,N],[13,"Alias","","",16,N],[13,"Copy","","",16,N],[13,"NoDrop","","",16,N],[13,"Grab","","",16,N],[13,"Grabbing","","",16,N],[13,"AllScroll","","",16,N],[13,"ZoomIn","","",16,N],[13,"ZoomOut","","",16,N],[13,"EResize","","Indicate that some edge is to be moved. For example, the…",16,N],[13,"NResize","","",16,N],[13,"NeResize","","",16,N],[13,"NwResize","","",16,N],[13,"SResize","","",16,N],[13,"SeResize","","",16,N],[13,"SwResize","","",16,N],[13,"WResize","","",16,N],[13,"EwResize","","",16,N],[13,"NsResize","","",16,N],[13,"NeswResize","","",16,N],[13,"NwseResize","","",16,N],[13,"ColResize","","",16,N],[13,"RowResize","","",16,N],[0,"dpi","","DPI is important, so read the docs for this module if you…",N,N],[3,"LogicalPosition","winit::dpi","A position represented in logical pixels.",N,N],[12,"x","","",17,N],[12,"y","","",17,N],[3,"PhysicalPosition","","A position represented in physical pixels.",N,N],[12,"x","","",18,N],[12,"y","","",18,N],[3,"LogicalSize","","A size represented in logical pixels.",N,N],[12,"width","","",19,N],[12,"height","","",19,N],[3,"PhysicalSize","","A size represented in physical pixels.",N,N],[12,"width","","",20,N],[12,"height","","",20,N],[5,"validate_hidpi_factor","","Checks that the DPI factor is a normal positive `f64`.",N,[[["f64"]],["bool"]]],[11,"new","","",17,[[["f64"],["f64"]],["self"]]],[11,"from_physical","","",17,[[["t"],["f64"]],["self"]]],[11,"to_physical","","",17,[[["self"],["f64"]],["physicalposition"]]],[11,"new","","",18,[[["f64"],["f64"]],["self"]]],[11,"from_logical","","",18,[[["t"],["f64"]],["self"]]],[11,"to_logical","","",18,[[["self"],["f64"]],["logicalposition"]]],[11,"new","","",19,[[["f64"],["f64"]],["self"]]],[11,"from_physical","","",19,[[["t"],["f64"]],["self"]]],[11,"to_physical","","",19,[[["self"],["f64"]],["physicalsize"]]],[11,"new","","",20,[[["f64"],["f64"]],["self"]]],[11,"from_logical","","",20,[[["t"],["f64"]],["self"]]],[11,"to_logical","","",20,[[["self"],["f64"]],["logicalsize"]]],[11,"from_rgba","winit","Creates an `Icon` from 32bpp RGBA data.",21,[[["vec",["u8"]],["u32"],["u32"]],["result",["badicon"]]]],[11,"new","","Initializes a new `WindowBuilder` with default values.",3,[[],["windowbuilder"]]],[11,"with_dimensions","","Requests the window to be of specific dimensions.",3,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_min_dimensions","","Sets a minimum dimension size for the window",3,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_max_dimensions","","Sets a maximum dimension size for the window",3,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_resizable","","Sets whether the window is resizable or not",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_title","","Requests a specific title for the window.",3,[[["self"],["t"]],["windowbuilder"]]],[11,"with_fullscreen","","Sets the window fullscreen state. None means a normal…",3,[[["self"],["option",["monitorid"]]],["windowbuilder"]]],[11,"with_maximized","","Requests maximized mode.",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_transparency","","Sets whether the background of the window should be…",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_decorations","","Sets whether the window should have a border, a title bar,…",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_always_on_top","","Sets whether or not the window will always be on top of…",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_window_icon","","Sets the window icon. On Windows and X11, this is…",3,[[["self"],["option",["icon"]]],["windowbuilder"]]],[11,"with_multitouch","","Enables multitouch.",3,[[["self"]],["windowbuilder"]]],[11,"build","","Builds the window.",3,[[["self"],["eventsloop"]],["result",["window","creationerror"]]]],[11,"new","","Creates a new Window for platforms where this is…",22,[[["eventsloop"]],["result",["window","creationerror"]]]],[11,"set_title","","Modifies the title of the window.",22,[[["self"],["str"]]]],[11,"show","","Shows the window if it was hidden.",22,[[["self"]]]],[11,"hide","","Hides the window if it was visible.",22,[[["self"]]]],[11,"get_position","","Returns the position of the top-left hand corner of the…",22,[[["self"]],["option",["logicalposition"]]]],[11,"get_inner_position","","Returns the position of the top-left hand corner of the…",22,[[["self"]],["option",["logicalposition"]]]],[11,"set_position","","Modifies the position of the window.",22,[[["self"],["logicalposition"]]]],[11,"get_inner_size","","Returns the logical size of the window's client area.",22,[[["self"]],["option",["logicalsize"]]]],[11,"get_outer_size","","Returns the logical size of the entire window.",22,[[["self"]],["option",["logicalsize"]]]],[11,"set_inner_size","","Modifies the inner size of the window.",22,[[["self"],["logicalsize"]]]],[11,"set_min_dimensions","","Sets a minimum dimension size for the window.",22,[[["self"],["option",["logicalsize"]]]]],[11,"set_max_dimensions","","Sets a maximum dimension size for the window.",22,[[["self"],["option",["logicalsize"]]]]],[11,"set_resizable","","Sets whether the window is resizable or not.",22,[[["self"],["bool"]]]],[11,"get_hidpi_factor","","Returns the DPI factor that can be used to map logical…",22,[[["self"]],["f64"]]],[11,"set_cursor","","Modifies the mouse cursor of the window. Has no effect on…",22,[[["self"],["mousecursor"]]]],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",22,[[["self"],["logicalposition"]],["result",["string"]]]],[11,"grab_cursor","","Grabs the cursor, preventing it from leaving the window.",22,[[["self"],["bool"]],["result",["string"]]]],[11,"hide_cursor","","Hides the cursor, making it invisible but still usable.",22,[[["self"],["bool"]]]],[11,"set_maximized","","Sets the window to maximized or back",22,[[["self"],["bool"]]]],[11,"set_fullscreen","","Sets the window to fullscreen or back",22,[[["self"],["option",["monitorid"]]]]],[11,"set_decorations","","Turn window decorations on or off.",22,[[["self"],["bool"]]]],[11,"set_always_on_top","","Change whether or not the window will always be on top of…",22,[[["self"],["bool"]]]],[11,"set_window_icon","","Sets the window icon. On Windows and X11, this is…",22,[[["self"],["option",["icon"]]]]],[11,"set_ime_spot","","Sets location of IME candidate box in client area…",22,[[["self"],["logicalposition"]]]],[11,"get_current_monitor","","Returns the monitor on which the window currently resides",22,[[["self"]],["monitorid"]]],[11,"get_available_monitors","","Returns the list of all the monitors available on the…",22,[[["self"]],["availablemonitorsiter"]]],[11,"get_primary_monitor","","Returns the primary monitor of the system.",22,[[["self"]],["monitorid"]]],[11,"id","","",22,[[["self"]],["windowid"]]],[11,"get_name","","Returns a human-readable name of the monitor.",23,[[["self"]],["option",["string"]]]],[11,"get_dimensions","","Returns the monitor's resolution.",23,[[["self"]],["physicalsize"]]],[11,"get_position","","Returns the top-left corner position of the monitor…",23,[[["self"]],["physicalposition"]]],[11,"get_hidpi_factor","","Returns the DPI factor that can be used to map logical…",23,[[["self"]],["f64"]]],[0,"os","","Contains traits with platform-specific methods in them.",N,N],[0,"macos","winit::os","",N,N],[4,"ActivationPolicy","winit::os::macos","Corresponds to `NSApplicationActivationPolicy`.",N,N],[13,"Regular","","Corresponds to `NSApplicationActivationPolicyRegular`.",24,N],[13,"Accessory","","Corresponds to `NSApplicationActivationPolicyAccessory`.",24,N],[13,"Prohibited","","Corresponds to `NSApplicationActivationPolicyProhibited`.",24,N],[8,"WindowExt","","Additional methods on `Window` that are specific to MacOS.",N,N],[10,"get_nswindow","","Returns a pointer to the cocoa `NSWindow` that is used by…",25,N],[10,"get_nsview","","Returns a pointer to the cocoa `NSView` that is used by…",25,N],[10,"request_user_attention","","Request user attention, causing the application's dock…",25,[[["self"],["bool"]]]],[10,"set_simple_fullscreen","","Toggles a fullscreen mode that doesn't require a new macOS…",25,[[["self"],["bool"]],["bool"]]],[8,"WindowBuilderExt","","Additional methods on `WindowBuilder` that are specific to…",N,N],[10,"with_activation_policy","","Sets the activation policy for the window being built.",26,[[["self"],["activationpolicy"]],["windowbuilder"]]],[10,"with_movable_by_window_background","","Enables click-and-drag behavior for the entire window, not…",26,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_titlebar_transparent","","Makes the titlebar transparent and allows the content to…",26,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_title_hidden","","Hides the window title.",26,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_titlebar_hidden","","Hides the window titlebar.",26,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_titlebar_buttons_hidden","","Hides the window titlebar buttons.",26,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_fullsize_content_view","","Makes the window content appear behind the titlebar.",26,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_resize_increments","","Build window with `resizeIncrements` property. Values must…",26,[[["self"],["logicalsize"]],["windowbuilder"]]],[8,"MonitorIdExt","","Additional methods on `MonitorId` that are specific to…",N,N],[10,"native_id","","Returns the identifier of the monitor for Cocoa.",27,[[["self"]],["u32"]]],[10,"get_nsscreen","","Returns a pointer to the NSScreen representing this monitor.",27,[[["self"]],["option"]]],[6,"ScanCode","winit","Hardware-dependent keyboard scan code.",N,N],[6,"AxisId","","Identifier for a specific analog axis on some device.",N,N],[6,"ButtonId","","Identifier for a specific button on some device.",N,N],[11,"dummy","","Returns a dummy `WindowId`, useful for unit testing. The…",28,[[],["self"]]],[11,"dummy","","Returns a dummy `DeviceId`, useful for unit testing. The…",29,[[],["self"]]],[11,"new","","Builds a new events loop.",30,[[],["eventsloop"]]],[11,"get_available_monitors","","Returns the list of all the monitors available on the…",30,[[["self"]],["availablemonitorsiter"]]],[11,"get_primary_monitor","","Returns the primary monitor of the system.",30,[[["self"]],["monitorid"]]],[11,"poll_events","","Fetches all the events that are pending, calls the…",30,[[["self"],["f"]]]],[11,"run_forever","","Calls `callback` every time an event is received. If no…",30,[[["self"],["f"]]]],[11,"create_proxy","","Creates an `EventsLoopProxy` that can be used to wake up…",30,[[["self"]],["eventsloopproxy"]]],[11,"wakeup","","Wake up the `EventsLoop` from which this proxy was created.",31,[[["self"]],["result",["eventsloopclosed"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into_iter","","",32,[[["self"]],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","winit::dpi","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","winit::os::macos","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"get_nswindow","winit","",22,N],[11,"get_nsview","","",22,N],[11,"request_user_attention","","",22,[[["self"],["bool"]]]],[11,"set_simple_fullscreen","","",22,[[["self"],["bool"]],["bool"]]],[11,"with_activation_policy","","",3,[[["self"],["activationpolicy"]],["windowbuilder"]]],[11,"with_movable_by_window_background","","",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_titlebar_transparent","","",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_titlebar_hidden","","",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_titlebar_buttons_hidden","","",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_title_hidden","","",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_fullsize_content_view","","",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_resize_increments","","",3,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"native_id","","",23,[[["self"]],["u32"]]],[11,"get_nsscreen","","",23,[[["self"]],["option"]]],[11,"into","winit::dpi","",17,N],[11,"into","","Note that this rounds instead of truncating.",17,N],[11,"into","","",18,N],[11,"into","","Note that this rounds instead of truncating.",18,N],[11,"into","","",19,N],[11,"into","","Note that this rounds instead of truncating.",19,N],[11,"into","","",20,N],[11,"into","","Note that this rounds instead of truncating.",20,N],[11,"next","winit","",32,[[["self"]],["option",["monitorid"]]]],[11,"size_hint","","",32,N],[11,"partial_cmp","","",12,[[["self"],["virtualkeycode"]],["option",["ordering"]]]],[11,"partial_cmp","","",28,[[["self"],["windowid"]],["option",["ordering"]]]],[11,"lt","","",28,[[["self"],["windowid"]],["bool"]]],[11,"le","","",28,[[["self"],["windowid"]],["bool"]]],[11,"gt","","",28,[[["self"],["windowid"]],["bool"]]],[11,"ge","","",28,[[["self"],["windowid"]],["bool"]]],[11,"partial_cmp","","",29,[[["self"],["deviceid"]],["option",["ordering"]]]],[11,"lt","","",29,[[["self"],["deviceid"]],["bool"]]],[11,"le","","",29,[[["self"],["deviceid"]],["bool"]]],[11,"gt","","",29,[[["self"],["deviceid"]],["bool"]]],[11,"ge","","",29,[[["self"],["deviceid"]],["bool"]]],[11,"default","","",2,[[],["modifiersstate"]]],[11,"default","winit::os::macos","",24,[[],["self"]]],[11,"default","winit","",16,[[],["self"]]],[11,"default","","",4,[[],["windowattributes"]]],[11,"eq","winit::dpi","",17,[[["self"],["logicalposition"]],["bool"]]],[11,"ne","","",17,[[["self"],["logicalposition"]],["bool"]]],[11,"eq","","",18,[[["self"],["physicalposition"]],["bool"]]],[11,"ne","","",18,[[["self"],["physicalposition"]],["bool"]]],[11,"eq","","",19,[[["self"],["logicalsize"]],["bool"]]],[11,"ne","","",19,[[["self"],["logicalsize"]],["bool"]]],[11,"eq","","",20,[[["self"],["physicalsize"]],["bool"]]],[11,"ne","","",20,[[["self"],["physicalsize"]],["bool"]]],[11,"eq","winit","",5,[[["self"],["event"]],["bool"]]],[11,"ne","","",5,[[["self"],["event"]],["bool"]]],[11,"eq","","",6,[[["self"],["windowevent"]],["bool"]]],[11,"ne","","",6,[[["self"],["windowevent"]],["bool"]]],[11,"eq","","",7,[[["self"],["deviceevent"]],["bool"]]],[11,"ne","","",7,[[["self"],["deviceevent"]],["bool"]]],[11,"eq","","",0,[[["self"],["keyboardinput"]],["bool"]]],[11,"ne","","",0,[[["self"],["keyboardinput"]],["bool"]]],[11,"eq","","",8,[[["self"],["touchphase"]],["bool"]]],[11,"eq","","",1,[[["self"],["touch"]],["bool"]]],[11,"ne","","",1,[[["self"],["touch"]],["bool"]]],[11,"eq","","",9,[[["self"],["elementstate"]],["bool"]]],[11,"eq","","",10,[[["self"],["mousebutton"]],["bool"]]],[11,"ne","","",10,[[["self"],["mousebutton"]],["bool"]]],[11,"eq","","",11,[[["self"],["mousescrolldelta"]],["bool"]]],[11,"ne","","",11,[[["self"],["mousescrolldelta"]],["bool"]]],[11,"eq","","",12,[[["self"],["virtualkeycode"]],["bool"]]],[11,"eq","","",2,[[["self"],["modifiersstate"]],["bool"]]],[11,"ne","","",2,[[["self"],["modifiersstate"]],["bool"]]],[11,"eq","","",13,[[["self"],["badicon"]],["bool"]]],[11,"ne","","",13,[[["self"],["badicon"]],["bool"]]],[11,"eq","","",21,[[["self"],["icon"]],["bool"]]],[11,"ne","","",21,[[["self"],["icon"]],["bool"]]],[11,"eq","winit::os::macos","",24,[[["self"],["activationpolicy"]],["bool"]]],[11,"eq","winit","",28,[[["self"],["windowid"]],["bool"]]],[11,"ne","","",28,[[["self"],["windowid"]],["bool"]]],[11,"eq","","",29,[[["self"],["deviceid"]],["bool"]]],[11,"ne","","",29,[[["self"],["deviceid"]],["bool"]]],[11,"eq","","",14,[[["self"],["controlflow"]],["bool"]]],[11,"eq","","",33,[[["self"],["eventsloopclosed"]],["bool"]]],[11,"eq","","",16,[[["self"],["mousecursor"]],["bool"]]],[11,"from","winit::dpi","",17,N],[11,"from","","",17,N],[11,"from","","",18,N],[11,"from","","",18,N],[11,"from","","",19,N],[11,"from","","",19,N],[11,"from","","",20,N],[11,"from","","",20,N],[11,"cmp","winit","",12,[[["self"],["virtualkeycode"]],["ordering"]]],[11,"cmp","","",28,[[["self"],["windowid"]],["ordering"]]],[11,"cmp","","",29,[[["self"],["deviceid"]],["ordering"]]],[11,"clone","winit::dpi","",17,[[["self"]],["logicalposition"]]],[11,"clone","","",18,[[["self"]],["physicalposition"]]],[11,"clone","","",19,[[["self"]],["logicalsize"]]],[11,"clone","","",20,[[["self"]],["physicalsize"]]],[11,"clone","winit","",5,[[["self"]],["event"]]],[11,"clone","","",6,[[["self"]],["windowevent"]]],[11,"clone","","",7,[[["self"]],["deviceevent"]]],[11,"clone","","",0,[[["self"]],["keyboardinput"]]],[11,"clone","","",8,[[["self"]],["touchphase"]]],[11,"clone","","",1,[[["self"]],["touch"]]],[11,"clone","","",9,[[["self"]],["elementstate"]]],[11,"clone","","",10,[[["self"]],["mousebutton"]]],[11,"clone","","",11,[[["self"]],["mousescrolldelta"]]],[11,"clone","","",12,[[["self"]],["virtualkeycode"]]],[11,"clone","","",2,[[["self"]],["modifiersstate"]]],[11,"clone","","",13,[[["self"]],["badicon"]]],[11,"clone","","",21,[[["self"]],["icon"]]],[11,"clone","","",23,[[["self"]],["monitorid"]]],[11,"clone","winit::os::macos","",24,[[["self"]],["activationpolicy"]]],[11,"clone","winit","",28,[[["self"]],["windowid"]]],[11,"clone","","",29,[[["self"]],["deviceid"]]],[11,"clone","","",14,[[["self"]],["controlflow"]]],[11,"clone","","",31,[[["self"]],["eventsloopproxy"]]],[11,"clone","","",33,[[["self"]],["eventsloopclosed"]]],[11,"clone","","",3,[[["self"]],["windowbuilder"]]],[11,"clone","","",15,[[["self"]],["creationerror"]]],[11,"clone","","",16,[[["self"]],["mousecursor"]]],[11,"clone","","",4,[[["self"]],["windowattributes"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","winit::dpi","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","winit","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","winit::os::macos","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","winit","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"hash","","",8,N],[11,"hash","","",9,N],[11,"hash","","",10,N],[11,"hash","","",12,N],[11,"hash","","",2,N],[11,"hash","","",28,N],[11,"hash","","",29,N],[11,"hash","","",14,N],[11,"hash","","",33,N],[11,"hash","","",16,N],[11,"description","","",13,[[["self"]],["str"]]],[11,"cause","","",13,[[["self"]],["option",["error"]]]],[11,"description","","",33,[[["self"]],["str"]]],[11,"description","","",15,[[["self"]],["str"]]]],"paths":[[3,"KeyboardInput"],[3,"Touch"],[3,"ModifiersState"],[3,"WindowBuilder"],[3,"WindowAttributes"],[4,"Event"],[4,"WindowEvent"],[4,"DeviceEvent"],[4,"TouchPhase"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[4,"BadIcon"],[4,"ControlFlow"],[4,"CreationError"],[4,"MouseCursor"],[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[3,"PhysicalSize"],[3,"Icon"],[3,"Window"],[3,"MonitorId"],[4,"ActivationPolicy"],[8,"WindowExt"],[8,"WindowBuilderExt"],[8,"MonitorIdExt"],[3,"WindowId"],[3,"DeviceId"],[3,"EventsLoop"],[3,"EventsLoopProxy"],[3,"AvailableMonitorsIter"],[3,"EventsLoopClosed"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
